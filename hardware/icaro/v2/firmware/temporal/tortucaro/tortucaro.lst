gplink-1.4.2 #1169 (Jun 26 2016)
Copyright (c) 1998-2015 gputils project
Listing File Generated: 6-16-2017  11:34:41
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_i
                                           	global	_hidRxLen
                                           	global	_hidProtocol
                                           	global	_hidIdleRate
                                           	global	_HIDPostProcess
                                           	global	_deviceAddress
                                           	global	_loopvar
                                           	global	_EnableUSBModule
                                           	global	_ProcessUSBTransactions
                                           	global	_ProcessCDCRequest
                                           	global	_CDCgets
                                           	global	_CDCInitEndpoint
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timingindex
                                           	global	_timedivision
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	__pr2_plus1
                                           	global	__t2con
                                           	global	_CONTROL_LINE
                                           	global	_deviceState
                                           	global	_remoteWakeup
                                           	global	_selfPowered
                                           	global	_currentConfiguration
                                           	global	_ctrlTransferStage
                                           	global	_requestHandled
                                           	global	_outPtr
                                           	global	_inPtr
                                           	global	_wCount
                                           	global	_ep_bdt
                                           	global	_SetupPacket
                                           	global	_controlTransferBuffer
                                           	global	_CDCControlBuffer
                                           	global	_CDCRxBuffer
                                           	global	_CDCTxBuffer
                                           	global	_line_config
                                           	global	_zlp
                                           	global	_receivedbyte
                                           	global	_receivedbyte2
                                           	global	_rxstr
                                           	global	_rxstr2
                                           	global	_valor
                                           	global	_caracter
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_pinmode
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogReference
                                           	global	_analogread
                                           	global	_Delayms
                                           	global	_Delayus
                                           	global	_PWM_set_frequency
                                           	global	_PWM_set_dutycycle
                                           	global	_PWM_set_percent_dutycycle
                                           	global	_init_PWM11
                                           	global	_init_PWM12
                                           	global	_set_PWM
                                           	global	_epap_in
                                           	global	_epap_out
                                           	global	_epapin_init
                                           	global	_epapout_init
                                           	global	_ProcessStandardRequest
                                           	global	_InDataStage
                                           	global	_OutDataStage
                                           	global	_SetupStage
                                           	global	_WaitForSetupStage
                                           	global	_ProcessControlTransfer
                                           	global	_UnSuspend
                                           	global	_StartOfFrame
                                           	global	_Stall
                                           	global	_Suspend
                                           	global	_BusReset
                                           	global	_CDCputs
                                           	global	_init_CDC
                                           	global	_env_cdc
                                           	global	_digital
                                           	global	_l293d
                                           	global	_leo_puerto
                                           	global	_analogico
                                           	global	_puertob
                                           	global	_servos
                                           	global	_setup
                                           	global	_comparo
                                           	global	_loop
                                           	global	_pinguino_main
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_servomasks
                                           	global	_libdevice_descriptor
                                           	global	_libconfiguration_descriptor
                                           	global	_libstring_descriptor
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	__gptrput1
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_usb_device_state
                                           	extern	_usb_active_cfg
                                           	extern	_usb_active_alt_setting
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_delay10ktcy
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	__divuint
                                           	extern	_itoa
                                           	extern	_x_ftoa
                                           	extern	_strcat
                                           	extern	_strlen
                                           	extern	___uint2fs
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           __pr2_plus1	db	0x00, 0x01
                                           _CONTROL_LINE	db	0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_tortucaro_0	udata
                                           _loopvar	res	1
                                           
                                           udata_tortucaro_1	udata
                                           _deviceAddress	res	1
                                           
                                           udata_tortucaro_2	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_tortucaro_3	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_tortucaro_4	udata
                                           _hidProtocol	res	1
                                           
                                           udata_tortucaro_5	udata
                                           _hidRxLen	res	1
                                           
                                           udata_tortucaro_6	udata
                                           _i	res	1
                                           
                                           udata_tortucaro_7	udata
                                           _servovalues	res	18
                                           
                                           udata_tortucaro_8	udata
                                           _timingindex	res	1
                                           
                                           udata_tortucaro_9	udata
                                           _timings	res	72
                                           
                                           udata_tortucaro_10	udata
                                           _SortServoTimings_mascaratotal_1_27	res	3
                                           
                                           udata_tortucaro_11	udata
                                           __t2con	res	1
                                           
                                           udata_tortucaro_12	udata
                                           _requestHandled	res	1
                                           
                                           udata_tortucaro_13	udata
                                           _outPtr	res	3
                                           
                                           udata_tortucaro_14	udata
                                           _wCount	res	2
                                           
                                           udata_tortucaro_15	udata
                                           _inPtr	res	3
                                           
                                           udata_tortucaro_16	udata
                                           _selfPowered	res	1
                                           
                                           udata_tortucaro_17	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_tortucaro_18	udata
                                           _deviceState	res	1
                                           
                                           udata_tortucaro_19	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_tortucaro_20	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_tortucaro_21	udata
                                           _line_config	res	5
                                           
                                           udata_tortucaro_22	udata
                                           _zlp	res	8
                                           
                                           udata_tortucaro_23	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_tortucaro_24	udata
                                           _env_cdc_chaine_1_250	res	0
                                           
                                           udata_tortucaro_25	udata
                                           _receivedbyte	res	1
                                           
                                           udata_tortucaro_26	udata
                                           _caracter	res	2
                                           
                                           udata_tortucaro_27	udata
                                           _receivedbyte2	res	1
                                           
                                           udata_tortucaro_28	udata
                                           _analogico_chaine_1_256	res	0
                                           
                                           
                                           ustat_tortucaro_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_tortucaro__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	95; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	void high_priority_isr(void) __interrupt
002020   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002022   ffe5
002024   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002026   ffe5
002028   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00202a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00202c   ffe5
00202e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002030   ffe5
002032   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002034   ffe5
002036   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002038   ffe5
00203a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00203c   ffe5
00203e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002040   ffe5
                                           ;	.line	98; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	if(PIR2bits.USBIF)
002042   aaa1     btfss   0xa1, 0x5, 0x0   	BTFSS	_PIR2bits, 5
002044   d006     bra     0x002052         	BRA	_01808_DS_
                                           ;	.line	100; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	ProcessUSBTransactions();
002046   ec92     call    0x005f24, 0x0call    0x005f24, 0x0 	CALL	_ProcessUSBTransactions
002048   f02f
                                           ;	.line	101; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	UIRbits.SOFIF = 0;
00204a   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
                                           ;	.line	102; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	UIRbits.URSTIF = 0;
00204c   9068     bcf     0x68, 0x0, 0x0   	BCF	_UIRbits, 0
                                           ;	.line	103; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	PIR2bits.USBIF = 0;
00204e   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	104; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	UEIR = 0;
002050   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           _01808_DS_:
                                           ;	.line	131; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	servos_interrupt();
002052   ec6d     call    0x0062da, 0x0call    0x0062da, 0x0 	CALL	_servos_interrupt
002054   f031
002056   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002058   fffb
00205a   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00205c   fffa
00205e   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002060   ffea
002062   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002064   ffe9
002066   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002068   fff4
00206a   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00206c   fff3
00206e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002070   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002072   ffe0
002074   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002076   ffd8
002078   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	139; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	void low_priority_isr(void) __interrupt
004000   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004002   ffe5
004004   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004006   ffe5
004008   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00400a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00400c   ffe5
00400e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004010   ffe5
004012   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004014   ffe5
004016   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004018   ffe5
00401a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00401c   ffe5
00401e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004020   ffe5
                                           ;	.line	141; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	}
004022   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004024   fffb
004026   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004028   fffa
00402a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00402c   ffea
00402e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004030   ffe9
004032   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004034   fff4
004036   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004038   fff3
00403a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00403c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004042   ffd8
004044   0010     retfie  0x0              	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_tortucaro__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	51; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	PIE1=0;
0064a0   6a9d     clrf    0x9d, 0x0        	CLRF	_PIE1
                                           ;	.line	52; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	PIE2=0;
0064a2   6aa0     clrf    0xa0, 0x0        	CLRF	_PIE2
                                           ;	.line	53; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	ADCON1=0x0F;
0064a4   0e0f     movlw   0x0f             	MOVLW	0x0f
0064a6   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	58; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	setup();
0064a8   ec2d     call    0x00545a, 0x0call    0x00545a, 0x0 	CALL	_setup
0064aa   f02a
                                           ;	.line	60; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	analog_init();
0064ac   ecdb     call    0x0065b6, 0x0call    0x0065b6, 0x0 	CALL	_analog_init
0064ae   f032
                                           ;	.line	66; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	servos_init();
0064b0   ec49     call    0x006292, 0x0call    0x006292, 0x0 	CALL	_servos_init
0064b2   f031
                                           ;	.line	69; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	init_CDC();
0064b4   ec63     call    0x0060c6, 0x0call    0x0060c6, 0x0 	CALL	_init_CDC
0064b6   f030
                                           ;	.line	70; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	PIE2bits.USBIE = 1;
0064b8   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	71; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	INTCON = 0xC0;      
0064ba   0ec0     movlw   0xc0             	MOVLW	0xc0
0064bc   6ef2     movwf   0xf2, 0x0        	MOVWF	_INTCON
                                           ;	.line	82; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	INTCONbits.PEIE=1;
0064be   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	83; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	INTCONbits.GIE=1;
0064c0   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           _01800_DS_:
                                           ;	.line	88; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	loop();
0064c2   ec1a     call    0x006434, 0x0call    0x006434, 0x0 	CALL	_loop
0064c4   f032
0064c6   d7fd     bra     0x0064c2         	BRA	_01800_DS_
0064c8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__loop	code
                                           _loop:
                                           ;	.line	234; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	void loop()
006434   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006436   ffe5
                                           _01783_DS_:
006438   0102     movlb   0x2              	BANKSEL	_valor
                                           ;	.line	246; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	PORTD=valor;
00643a   518a     movf    0x8a, 0x0, 0x1   	MOVF	_valor, W, B
00643c   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	247; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
00643e   ec94     call    0x006128, 0x0call    0x006128, 0x0 	CALL	_leo_puerto
006440   f030
006442   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
006444   f001
006446   0a01     xorlw   0x01             	XORLW	0x01
006448   e102     bnz     0x00644e         	BNZ	_01793_DS_
00644a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00644c   e001     bz      0x006450         	BZ	_01794_DS_
                                           _01793_DS_:
00644e   d009     bra     0x006462         	BRA	_01781_DS_
                                           _01794_DS_:
                                           ;	.line	249; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	comparo();
006450   ec9a     call    0x005d34, 0x0call    0x005d34, 0x0 	CALL	_comparo
006452   f02e
                                           ;	.line	250; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	Delayus(10);
006454   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
006456   0e0a     movlw   0x0a             	MOVLW	0x0a
006458   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00645a   ecc3     call    0x006186, 0x0call    0x006186, 0x0 	CALL	_Delayus
00645c   f030
00645e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
006460   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           _01781_DS_:
006462   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	252; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
006464   6b36     clrf    0x36, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
006466   6b37     clrf    0x37, 0x1        	CLRF	(_caracter + 1), B
006468   0103     movlb   0x3              	BANKSEL	_receivedbyte
                                           ;	.line	253; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
00646a   6b47     clrf    0x47, 0x1        	CLRF	_receivedbyte, B
00646c   d7e5     bra     0x006438         	BRA	_01783_DS_
00646e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006470   f001
006472   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__leo_puerto	code
                                           _leo_puerto:
                                           ;	.line	223; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	int leo_puerto()
006128   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00612a   ffe5
00612c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00612e   ffe5
                                           _01770_DS_:
                                           ;	.line	225; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	while ((receivedbyte=CDCgets(rxstr))==0);
006130   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
006132   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006134   0e02     movlw   0x02             	MOVLW	HIGH(_rxstr)
006136   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
006138   0e0a     movlw   0x0a             	MOVLW	LOW(_rxstr)
00613a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00613c   ec70     call    0x0048e0, 0x0call    0x0048e0, 0x0 	CALL	_CDCgets
00613e   f024
006140   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006142   0e03     movlw   0x03             	MOVLW	0x03
006144   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
006146   c000     movff   0x000, 0x347     	MOVFF	r0x00, _receivedbyte
006148   f347
00614a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00614c   e0f1     bz      0x006130         	BZ	_01770_DS_
                                           ;	.line	226; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	rxstr[receivedbyte]=0;
00614e   0e0a     movlw   0x0a             	MOVLW	LOW(_rxstr)
006150   0103     movlb   0x3              	BANKSEL	_receivedbyte
006152   2547     addwf   0x47, 0x0, 0x1   	ADDWF	_receivedbyte, W, B
006154   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
006156   6a01     clrf    0x01, 0x0        	CLRF	r0x01
006158   0e02     movlw   0x02             	MOVLW	HIGH(_rxstr)
00615a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00615c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00615e   ffe9
006160   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
006162   ffea
006164   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	227; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte>0)
006166   5147     movf    0x47, 0x0, 0x1   	MOVF	_receivedbyte, W, B
006168   e007     bz      0x006178         	BZ	_01774_DS_
                                           ;	.line	229; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	caracter=rxstr[0];
00616a   c20a     movff   0x20a, 0x336     	MOVFF	_rxstr, _caracter
00616c   f336
00616e   0103     movlb   0x3              	BANKSEL	(_caracter + 1)
006170   6b37     clrf    0x37, 0x1        	CLRF	(_caracter + 1), B
                                           ;	.line	230; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	return 1;
006172   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
006174   0e01     movlw   0x01             	MOVLW	0x01
006176   d002     bra     0x00617c         	BRA	_01775_DS_
                                           _01774_DS_:
                                           ;	.line	232; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	return 0;
006178   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00617a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _01775_DS_:
00617c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00617e   f001
006180   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006182   f000
006184   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__comparo	code
                                           _comparo:
005d34   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	197; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='b')
005d36   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
005d38   0a62     xorlw   0x62             	XORLW	0x62
005d3a   e102     bnz     0x005d40         	BNZ	_01754_DS_
                                           ; removed redundant BANKSEL
005d3c   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005d3e   e001     bz      0x005d42         	BZ	_01755_DS_
                                           _01754_DS_:
005d40   d00c     bra     0x005d5a         	BRA	_01723_DS_
                                           _01755_DS_:
                                           ;	.line	199; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	CDCputs("icaro USB 02 \n",14);
005d42   0e0e     movlw   0x0e             	MOVLW	0x0e
005d44   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005d46   0e00     movlw   0x00             	MOVLW	UPPER(___str_4)
005d48   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005d4a   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_4)
005d4c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005d4e   0ebe     movlw   0xbe             	MOVLW	LOW(___str_4)
005d50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005d52   ecff     call    0x0049fe, 0x0call    0x0049fe, 0x0 	CALL	_CDCputs
005d54   f024
005d56   0e04     movlw   0x04             	MOVLW	0x04
005d58   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01723_DS_:
005d5a   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	201; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='m')
005d5c   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
005d5e   0a6d     xorlw   0x6d             	XORLW	0x6d
005d60   e102     bnz     0x005d66         	BNZ	_01756_DS_
                                           ; removed redundant BANKSEL
005d62   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005d64   e001     bz      0x005d68         	BZ	_01757_DS_
                                           _01756_DS_:
005d66   d002     bra     0x005d6c         	BRA	_01725_DS_
                                           _01757_DS_:
                                           ;	.line	203; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	servos();
005d68   ec0e     call    0x00501c, 0x0call    0x00501c, 0x0 	CALL	_servos
005d6a   f028
                                           _01725_DS_:
005d6c   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	205; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='e')
005d6e   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
005d70   0a65     xorlw   0x65             	XORLW	0x65
005d72   e102     bnz     0x005d78         	BNZ	_01758_DS_
                                           ; removed redundant BANKSEL
005d74   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005d76   e001     bz      0x005d7a         	BZ	_01759_DS_
                                           _01758_DS_:
005d78   d002     bra     0x005d7e         	BRA	_01727_DS_
                                           _01759_DS_:
                                           ;	.line	207; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	analogico();
005d7a   ecde     call    0x0041bc, 0x0call    0x0041bc, 0x0 	CALL	_analogico
005d7c   f020
                                           _01727_DS_:
005d7e   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	209; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='l')
005d80   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
005d82   0a6c     xorlw   0x6c             	XORLW	0x6c
005d84   e102     bnz     0x005d8a         	BNZ	_01760_DS_
                                           ; removed redundant BANKSEL
005d86   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005d88   e001     bz      0x005d8c         	BZ	_01761_DS_
                                           _01760_DS_:
005d8a   d002     bra     0x005d90         	BRA	_01729_DS_
                                           _01761_DS_:
                                           ;	.line	211; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	l293d();
005d8c   ec62     call    0x0056c4, 0x0call    0x0056c4, 0x0 	CALL	_l293d
005d8e   f02b
                                           _01729_DS_:
005d90   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	213; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='d')
005d92   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
005d94   0a64     xorlw   0x64             	XORLW	0x64
005d96   e102     bnz     0x005d9c         	BNZ	_01762_DS_
                                           ; removed redundant BANKSEL
005d98   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005d9a   e001     bz      0x005d9e         	BZ	_01763_DS_
                                           _01762_DS_:
005d9c   d002     bra     0x005da2         	BRA	_01731_DS_
                                           _01763_DS_:
                                           ;	.line	215; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	digital();
005d9e   ec9d     call    0x004d3a, 0x0call    0x004d3a, 0x0 	CALL	_digital
005da0   f026
                                           _01731_DS_:
005da2   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	217; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='s')
005da4   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
005da6   0a73     xorlw   0x73             	XORLW	0x73
005da8   e102     bnz     0x005dae         	BNZ	_01764_DS_
                                           ; removed redundant BANKSEL
005daa   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005dac   e001     bz      0x005db0         	BZ	_01765_DS_
                                           _01764_DS_:
005dae   d002     bra     0x005db4         	BRA	_01734_DS_
                                           _01765_DS_:
                                           ;	.line	219; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	puertob();
005db0   ec65     call    0x0064ca, 0x0call    0x0064ca, 0x0 	CALL	_puertob
005db2   f032
                                           _01734_DS_:
005db4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__setup	code
                                           _setup:
                                           ;	.line	175; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	TRISB=0;
00545a   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	176; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(21,INPUT);
00545c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00545e   0e01     movlw   0x01             	MOVLW	0x01
005460   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005462   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005464   0e15     movlw   0x15             	MOVLW	0x15
005466   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005468   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
00546a   f017
00546c   0e04     movlw   0x04             	MOVLW	0x04
00546e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	177; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(22,INPUT);
005470   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005472   0e01     movlw   0x01             	MOVLW	0x01
005474   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005476   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005478   0e16     movlw   0x16             	MOVLW	0x16
00547a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00547c   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
00547e   f017
005480   0e04     movlw   0x04             	MOVLW	0x04
005482   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	178; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(23,INPUT);
005484   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005486   0e01     movlw   0x01             	MOVLW	0x01
005488   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00548a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00548c   0e17     movlw   0x17             	MOVLW	0x17
00548e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005490   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
005492   f017
005494   0e04     movlw   0x04             	MOVLW	0x04
005496   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	179; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(24,INPUT);
005498   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00549a   0e01     movlw   0x01             	MOVLW	0x01
00549c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00549e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054a0   0e18     movlw   0x18             	MOVLW	0x18
0054a2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0054a4   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
0054a6   f017
0054a8   0e04     movlw   0x04             	MOVLW	0x04
0054aa   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	180; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(25,OUTPUT);
0054ac   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054ae   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054b0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054b2   0e19     movlw   0x19             	MOVLW	0x19
0054b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0054b6   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
0054b8   f017
0054ba   0e04     movlw   0x04             	MOVLW	0x04
0054bc   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	181; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(26,OUTPUT);
0054be   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054c0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054c2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054c4   0e1a     movlw   0x1a             	MOVLW	0x1a
0054c6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0054c8   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
0054ca   f017
0054cc   0e04     movlw   0x04             	MOVLW	0x04
0054ce   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	182; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(27,OUTPUT);
0054d0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054d2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054d4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054d6   0e1b     movlw   0x1b             	MOVLW	0x1b
0054d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0054da   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
0054dc   f017
0054de   0e04     movlw   0x04             	MOVLW	0x04
0054e0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	183; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	pinmode(28,OUTPUT);
0054e2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054e4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054e6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0054e8   0e1c     movlw   0x1c             	MOVLW	0x1c
0054ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0054ec   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
0054ee   f017
0054f0   0e04     movlw   0x04             	MOVLW	0x04
0054f2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	184; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(8);
0054f4   0e08     movlw   0x08             	MOVLW	0x08
0054f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0054f8   ec4e     call    0x00469c, 0x0call    0x00469c, 0x0 	CALL	_ServoAttach
0054fa   f023
0054fc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	185; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(9);
0054fe   0e09     movlw   0x09             	MOVLW	0x09
005500   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005502   ec4e     call    0x00469c, 0x0call    0x00469c, 0x0 	CALL	_ServoAttach
005504   f023
005506   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	186; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(10);
005508   0e0a     movlw   0x0a             	MOVLW	0x0a
00550a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00550c   ec4e     call    0x00469c, 0x0call    0x00469c, 0x0 	CALL	_ServoAttach
00550e   f023
005510   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	187; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(11);
005512   0e0b     movlw   0x0b             	MOVLW	0x0b
005514   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005516   ec4e     call    0x00469c, 0x0call    0x00469c, 0x0 	CALL	_ServoAttach
005518   f023
00551a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	188; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(12);
00551c   0e0c     movlw   0x0c             	MOVLW	0x0c
00551e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005520   ec4e     call    0x00469c, 0x0call    0x00469c, 0x0 	CALL	_ServoAttach
005522   f023
005524   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	189; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	PORTD=0;
005526   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	190; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	PORTB=0;
005528   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
00552a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos	code
                                           _servos:
                                           ;	.line	134; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	void servos()
00501c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00501e   ffe5
005020   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005022   ffe5
005024   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005026   ffe5
                                           ;	.line	139; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	int val=0;
005028   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	140; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
00502a   ec94     call    0x006128, 0x0call    0x006128, 0x0 	CALL	_leo_puerto
00502c   f030
00502e   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
005030   f003
005032   0a01     xorlw   0x01             	XORLW	0x01
005034   e102     bnz     0x00503a         	BNZ	_01706_DS_
005036   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005038   e001     bz      0x00503c         	BZ	_01707_DS_
                                           _01706_DS_:
00503a   d03b     bra     0x0050b2         	BRA	_01689_DS_
                                           _01707_DS_:
00503c   0103     movlb   0x3              	BANKSEL	(_caracter + 1)
                                           ;	.line	142; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
00503e   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005040   0f80     addlw   0x80             	ADDLW	0x80
005042   0f80     addlw   0x80             	ADDLW	0x80
005044   e102     bnz     0x00504a         	BNZ	_01708_DS_
005046   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
005048   5d36     subwf   0x36, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01708_DS_:
00504a   e333     bnc     0x0050b2         	BNC	_01689_DS_
00504c   0103     movlb   0x3              	BANKSEL	(_caracter + 1)
00504e   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005050   0f80     addlw   0x80             	ADDLW	0x80
005052   0f80     addlw   0x80             	ADDLW	0x80
005054   e102     bnz     0x00505a         	BNZ	_01709_DS_
005056   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
005058   5d36     subwf   0x36, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01709_DS_:
00505a   e22b     bc      0x0050b2         	BC	_01689_DS_
00505c   0ecf     movlw   0xcf             	MOVLW	0xcf
00505e   0103     movlb   0x3              	BANKSEL	_caracter
005060   2536     addwf   0x36, 0x0, 0x1   	ADDWF	_caracter, W, B
005062   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
005064   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
005066   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
005068   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00506a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00506c   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00506e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
005070   0bfc     andlw   0xfc             	ANDLW	0xfc
005072   0f82     addlw   0x82             	ADDLW	LOW(_01710_DS_)
005074   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005076   0e50     movlw   0x50             	MOVLW	HIGH(_01710_DS_)
005078   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00507a   0e00     movlw   0x00             	MOVLW	UPPER(_01710_DS_)
00507c   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00507e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
005080   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01710_DS_:
005082   ef4b     goto    0x005096         	GOTO	_01682_DS_
005084   f028
005086   ef4e     goto    0x00509c         	GOTO	_01683_DS_
005088   f028
00508a   ef51     goto    0x0050a2         	GOTO	_01684_DS_
00508c   f028
00508e   ef54     goto    0x0050a8         	GOTO	_01685_DS_
005090   f028
005092   ef57     goto    0x0050ae         	GOTO	_01686_DS_
005094   f028
                                           _01682_DS_:
                                           ;	.line	145; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV1;
005096   0e0a     movlw   0x0a             	MOVLW	0x0a
005098   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	146; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
00509a   d00b     bra     0x0050b2         	BRA	_01689_DS_
                                           _01683_DS_:
                                           ;	.line	148; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV2;
00509c   0e0b     movlw   0x0b             	MOVLW	0x0b
00509e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	149; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
0050a0   d008     bra     0x0050b2         	BRA	_01689_DS_
                                           _01684_DS_:
                                           ;	.line	151; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV3;
0050a2   0e0c     movlw   0x0c             	MOVLW	0x0c
0050a4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	152; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
0050a6   d005     bra     0x0050b2         	BRA	_01689_DS_
                                           _01685_DS_:
                                           ;	.line	154; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV4;
0050a8   0e09     movlw   0x09             	MOVLW	0x09
0050aa   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	155; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
0050ac   d002     bra     0x0050b2         	BRA	_01689_DS_
                                           _01686_DS_:
                                           ;	.line	157; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV5;
0050ae   0e08     movlw   0x08             	MOVLW	0x08
0050b0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01689_DS_:
0050b2   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	161; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0050b4   6b36     clrf    0x36, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0050b6   6b37     clrf    0x37, 0x1        	CLRF	(_caracter + 1), B
0050b8   0103     movlb   0x3              	BANKSEL	_receivedbyte
                                           ;	.line	162; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0050ba   6b47     clrf    0x47, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	163; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
0050bc   ec94     call    0x006128, 0x0call    0x006128, 0x0 	CALL	_leo_puerto
0050be   f030
0050c0   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0050c2   f003
0050c4   0a01     xorlw   0x01             	XORLW	0x01
0050c6   e102     bnz     0x0050cc         	BNZ	_01711_DS_
0050c8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0050ca   e001     bz      0x0050ce         	BZ	_01712_DS_
                                           _01711_DS_:
0050cc   d00f     bra     0x0050ec         	BRA	_01691_DS_
                                           _01712_DS_:
                                           ;	.line	165; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	resultado = caracter;
0050ce   c336     movff   0x336, 0x002     	MOVFF	_caracter, r0x02
0050d0   f002
0050d2   c337     movff   0x337, 0x003     	MOVFF	(_caracter + 1), r0x03
0050d4   f003
                                           ;	.line	166; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	ServoWrite(val,resultado);
0050d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0050d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0050dc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050de   ecfd     call    0x005ffa, 0x0call    0x005ffa, 0x0 	CALL	_ServoWrite
0050e0   f02f
0050e2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0050e4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0050e6   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	167; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0050e8   6b36     clrf    0x36, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0050ea   6b37     clrf    0x37, 0x1        	CLRF	(_caracter + 1), B
                                           _01691_DS_:
0050ec   0103     movlb   0x3              	BANKSEL	_receivedbyte
                                           ;	.line	169; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0050ee   6b47     clrf    0x47, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	170; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	return;
0050f0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0050f2   f003
0050f4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0050f6   f002
0050f8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0050fa   f000
0050fc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__puertob	code
                                           _puertob:
                                           ;	.line	120; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	void puertob()
0064ca   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0064cc   ffe5
                                           ;	.line	126; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
0064ce   ec94     call    0x006128, 0x0call    0x006128, 0x0 	CALL	_leo_puerto
0064d0   f030
0064d2   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0064d4   f001
0064d6   0a01     xorlw   0x01             	XORLW	0x01
0064d8   e102     bnz     0x0064de         	BNZ	_01676_DS_
0064da   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0064dc   e001     bz      0x0064e0         	BZ	_01677_DS_
                                           _01676_DS_:
0064de   d007     bra     0x0064ee         	BRA	_01671_DS_
                                           _01677_DS_:
0064e0   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	129; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	PORTB=caracter;
0064e2   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
0064e4   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
                                           ; removed redundant BANKSEL
                                           ;	.line	130; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0064e6   6b36     clrf    0x36, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0064e8   6b37     clrf    0x37, 0x1        	CLRF	(_caracter + 1), B
0064ea   0103     movlb   0x3              	BANKSEL	_receivedbyte
                                           ;	.line	131; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0064ec   6b47     clrf    0x47, 0x1        	CLRF	_receivedbyte, B
                                           _01671_DS_:
0064ee   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0064f0   f001
0064f2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogico	code
                                           _analogico:
                                           ;	.line	65; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	void analogico()
0041bc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0041be   ffe5
0041c0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0041c2   ffe5
0041c4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0041c6   ffe5
0041c8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0041ca   ffe5
                                           ;	.line	69; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	unsigned int val=0;
0041cc   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01615_DS_:
                                           ;	.line	74; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=CDCgets(rxstr2);
0041ce   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0041d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0041d2   0e02     movlw   0x02             	MOVLW	HIGH(_rxstr2)
0041d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0041d6   0e4a     movlw   0x4a             	MOVLW	LOW(_rxstr2)
0041d8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0041da   ec70     call    0x0048e0, 0x0call    0x0048e0, 0x0 	CALL	_CDCgets
0041dc   f024
0041de   0103     movlb   0x3              	BANKSEL	_receivedbyte2
0041e0   6f48     movwf   0x48, 0x1        	MOVWF	_receivedbyte2, B
0041e2   0e03     movlw   0x03             	MOVLW	0x03
0041e4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	75; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte2>0)
0041e6   5148     movf    0x48, 0x0, 0x1   	MOVF	_receivedbyte2, W, B
0041e8   e0f2     bz      0x0041ce         	BZ	_01615_DS_
                                           ;	.line	77; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='1')
0041ea   c24a     movff   0x24a, 0x002     	MOVFF	_rxstr2, r0x02
0041ec   f002
0041ee   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0041f0   0a31     xorlw   0x31             	XORLW	0x31
0041f2   e102     bnz     0x0041f8         	BNZ	_01597_DS_
                                           ;	.line	79; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=13;
0041f4   0e0d     movlw   0x0d             	MOVLW	0x0d
0041f6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01597_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='2')
0041f8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0041fa   0a32     xorlw   0x32             	XORLW	0x32
0041fc   e102     bnz     0x004202         	BNZ	_01599_DS_
                                           ;	.line	83; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=14;
0041fe   0e0e     movlw   0x0e             	MOVLW	0x0e
004200   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01599_DS_:
                                           ;	.line	85; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='3')
004202   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004204   0a33     xorlw   0x33             	XORLW	0x33
004206   e102     bnz     0x00420c         	BNZ	_01601_DS_
                                           ;	.line	87; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=15;
004208   0e0f     movlw   0x0f             	MOVLW	0x0f
00420a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01601_DS_:
                                           ;	.line	89; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='4')
00420c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00420e   0a34     xorlw   0x34             	XORLW	0x34
004210   e102     bnz     0x004216         	BNZ	_01603_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=16;
004212   0e10     movlw   0x10             	MOVLW	0x10
004214   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01603_DS_:
                                           ;	.line	93; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='5')
004216   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004218   0a35     xorlw   0x35             	XORLW	0x35
00421a   e102     bnz     0x004220         	BNZ	_01605_DS_
                                           ;	.line	95; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=17;
00421c   0e11     movlw   0x11             	MOVLW	0x11
00421e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01605_DS_:
                                           ;	.line	97; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='6')
004220   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004222   0a36     xorlw   0x36             	XORLW	0x36
004224   e102     bnz     0x00422a         	BNZ	_01607_DS_
                                           ;	.line	99; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=18;
004226   0e12     movlw   0x12             	MOVLW	0x12
004228   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01607_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='7')
00422a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00422c   0a37     xorlw   0x37             	XORLW	0x37
00422e   e102     bnz     0x004234         	BNZ	_01609_DS_
                                           ;	.line	103; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=19;
004230   0e13     movlw   0x13             	MOVLW	0x13
004232   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01609_DS_:
                                           ;	.line	105; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='8')
004234   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004236   0a38     xorlw   0x38             	XORLW	0x38
004238   e102     bnz     0x00423e         	BNZ	_01611_DS_
                                           ;	.line	107; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=20;
00423a   0e14     movlw   0x14             	MOVLW	0x14
00423c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01611_DS_:
00423e   0103     movlb   0x3              	BANKSEL	_receivedbyte2
                                           ;	.line	109; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=0;
004240   6b48     clrf    0x48, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	113; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	valor=analogread(val);
004242   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004244   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004246   ecdb     call    0x005db6, 0x0call    0x005db6, 0x0 	CALL	_analogread
004248   f02e
00424a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00424c   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
00424e   f001
004250   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004252   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004254   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004256   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004258   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00425a   ecc8     call    0x005f90, 0x0call    0x005f90, 0x0 	CALL	___uint2fs
00425c   f02f
00425e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004260   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004262   f001
004264   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
004266   f002
004268   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
00426a   f003
00426c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00426e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	114; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	x_ftoa(valor,chaine,2,2);
004270   0e02     movlw   0x02             	MOVLW	0x02
004272   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004274   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004276   0e03     movlw   0x03             	MOVLW	HIGH(_analogico_chaine_1_256)
004278   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00427a   0e49     movlw   0x49             	MOVLW	LOW(_analogico_chaine_1_256)
00427c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00427e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004280   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004282   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004284   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004286   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004288   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00428a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00428c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00428e   ece6     call    0x0037cc, 0x0call    0x0037cc, 0x0 	CALL	_x_ftoa
004290   f01b
004292   0e08     movlw   0x08             	MOVLW	0x08
004294   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	115; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	strcat(chaine,"f\n");
004296   0e00     movlw   0x00             	MOVLW	UPPER(___str_3)
004298   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00429a   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_3)
00429c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00429e   0eba     movlw   0xba             	MOVLW	LOW(___str_3)
0042a0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042a2   0e80     movlw   0x80             	MOVLW	0x80
0042a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042a6   0e03     movlw   0x03             	MOVLW	HIGH(_analogico_chaine_1_256)
0042a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042aa   0e49     movlw   0x49             	MOVLW	LOW(_analogico_chaine_1_256)
0042ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042ae   ec98     call    0x004f30, 0x0call    0x004f30, 0x0 	CALL	_strcat
0042b0   f027
0042b2   0e06     movlw   0x06             	MOVLW	0x06
0042b4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	116; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	tam=strlen(chaine);
0042b6   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0042b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042ba   0e03     movlw   0x03             	MOVLW	HIGH(_analogico_chaine_1_256)
0042bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042be   0e49     movlw   0x49             	MOVLW	LOW(_analogico_chaine_1_256)
0042c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042c2   ec1a     call    0x005e34, 0x0call    0x005e34, 0x0 	CALL	_strlen
0042c4   f02f
0042c6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0042c8   0e03     movlw   0x03             	MOVLW	0x03
0042ca   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	117; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	CDCputs(chaine,tam);
0042cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0042ce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042d0   0e80     movlw   0x80             	MOVLW	0x80
0042d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042d4   0e03     movlw   0x03             	MOVLW	HIGH(_analogico_chaine_1_256)
0042d6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042d8   0e49     movlw   0x49             	MOVLW	LOW(_analogico_chaine_1_256)
0042da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042dc   ecff     call    0x0049fe, 0x0call    0x0049fe, 0x0 	CALL	_CDCputs
0042de   f024
0042e0   0e04     movlw   0x04             	MOVLW	0x04
0042e2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0042e4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0042e6   f003
0042e8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0042ea   f002
0042ec   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0042ee   f001
0042f0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0042f2   f000
0042f4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__l293d	code
                                           _l293d:
                                           ;	.line	37; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	void l293d()
0056c4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0056c6   ffe5
0056c8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0056ca   ffe5
0056cc   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0056ce   ffe5
0056d0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0056d2   ffe5
                                           ;	.line	39; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	int val=0;
0056d4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0056d6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	40; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
0056d8   ec94     call    0x006128, 0x0call    0x006128, 0x0 	CALL	_leo_puerto
0056da   f030
0056dc   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0056de   f003
0056e0   0a01     xorlw   0x01             	XORLW	0x01
0056e2   e102     bnz     0x0056e8         	BNZ	_01587_DS_
0056e4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0056e6   e001     bz      0x0056ea         	BZ	_01588_DS_
                                           _01587_DS_:
0056e8   d042     bra     0x00576e         	BRA	_01575_DS_
                                           _01588_DS_:
0056ea   0103     movlb   0x3              	BANKSEL	(_caracter + 1)
                                           ;	.line	42; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
0056ec   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0056ee   0f80     addlw   0x80             	ADDLW	0x80
0056f0   0f80     addlw   0x80             	ADDLW	0x80
0056f2   e102     bnz     0x0056f8         	BNZ	_01589_DS_
0056f4   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
0056f6   5d36     subwf   0x36, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01589_DS_:
0056f8   e338     bnc     0x00576a         	BNC	_01572_DS_
0056fa   0103     movlb   0x3              	BANKSEL	(_caracter + 1)
0056fc   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0056fe   0f80     addlw   0x80             	ADDLW	0x80
005700   0f80     addlw   0x80             	ADDLW	0x80
005702   e102     bnz     0x005708         	BNZ	_01590_DS_
005704   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
005706   5d36     subwf   0x36, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01590_DS_:
005708   e230     bc      0x00576a         	BC	_01572_DS_
00570a   0ecf     movlw   0xcf             	MOVLW	0xcf
00570c   0103     movlb   0x3              	BANKSEL	_caracter
00570e   2536     addwf   0x36, 0x0, 0x1   	ADDWF	_caracter, W, B
005710   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
005712   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
005714   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
005716   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005718   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00571a   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00571c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00571e   0bfc     andlw   0xfc             	ANDLW	0xfc
005720   0f30     addlw   0x30             	ADDLW	LOW(_01591_DS_)
005722   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005724   0e57     movlw   0x57             	MOVLW	HIGH(_01591_DS_)
005726   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
005728   0e00     movlw   0x00             	MOVLW	UPPER(_01591_DS_)
00572a   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00572c   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00572e   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01591_DS_:
005730   efa2     goto    0x005744         	GOTO	_01567_DS_
005732   f02b
005734   efa6     goto    0x00574c         	GOTO	_01568_DS_
005736   f02b
005738   efaa     goto    0x005754         	GOTO	_01569_DS_
00573a   f02b
00573c   efae     goto    0x00575c         	GOTO	_01570_DS_
00573e   f02b
005740   efb2     goto    0x005764         	GOTO	_01571_DS_
005742   f02b
                                           _01567_DS_:
                                           ;	.line	45; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AD;
005744   0e60     movlw   0x60             	MOVLW	0x60
005746   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005748   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	46; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
00574a   d011     bra     0x00576e         	BRA	_01575_DS_
                                           _01568_DS_:
                                           ;	.line	48; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AT;
00574c   0e90     movlw   0x90             	MOVLW	0x90
00574e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005750   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	49; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
005752   d00d     bra     0x00576e         	BRA	_01575_DS_
                                           _01569_DS_:
                                           ;	.line	51; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_IZ;
005754   0e40     movlw   0x40             	MOVLW	0x40
005756   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005758   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	52; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
00575a   d009     bra     0x00576e         	BRA	_01575_DS_
                                           _01570_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_DE;
00575c   0e20     movlw   0x20             	MOVLW	0x20
00575e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005760   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	55; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
005762   d005     bra     0x00576e         	BRA	_01575_DS_
                                           _01571_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=0;
005764   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	58; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	break;
005768   d002     bra     0x00576e         	BRA	_01575_DS_
                                           _01572_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	val=0;
00576a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00576c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01575_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	valor=val;
00576e   c000     movff   0x000, 0x28a     	MOVFF	r0x00, _valor
005770   f28a
005772   c001     movff   0x001, 0x28b     	MOVFF	r0x01, (_valor + 1)
005774   f28b
005776   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005778   f003
00577a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00577c   f002
00577e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005780   f001
005782   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005784   f000
005786   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digital	code
                                           _digital:
                                           ;	.line	13; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	void digital()
004d3a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004d3c   ffe5
004d3e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004d40   ffe5
004d42   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004d44   ffe5
004d46   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004d48   ffe5
                                           ;	.line	15; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	int sens=0;
004d4a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004d4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01513_DS_:
                                           ;	.line	16; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	while ((receivedbyte=CDCgets(rxstr))==0);
004d4e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
004d50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d52   0e02     movlw   0x02             	MOVLW	HIGH(_rxstr)
004d54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d56   0e0a     movlw   0x0a             	MOVLW	LOW(_rxstr)
004d58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d5a   ec70     call    0x0048e0, 0x0call    0x0048e0, 0x0 	CALL	_CDCgets
004d5c   f024
004d5e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004d60   0e03     movlw   0x03             	MOVLW	0x03
004d62   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004d64   c002     movff   0x002, 0x347     	MOVFF	r0x02, _receivedbyte
004d66   f347
004d68   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004d6a   e0f1     bz      0x004d4e         	BZ	_01513_DS_
                                           ;	.line	17; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	rxstr[receivedbyte]=0;
004d6c   0e0a     movlw   0x0a             	MOVLW	LOW(_rxstr)
004d6e   0103     movlb   0x3              	BANKSEL	_receivedbyte
004d70   2547     addwf   0x47, 0x0, 0x1   	ADDWF	_receivedbyte, W, B
004d72   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004d74   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004d76   0e02     movlw   0x02             	MOVLW	HIGH(_rxstr)
004d78   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004d7a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
004d7c   ffe9
004d7e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004d80   ffea
004d82   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	18; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte>0)
004d84   5147     movf    0x47, 0x0, 0x1   	MOVF	_receivedbyte, W, B
004d86   e028     bz      0x004dd8         	BZ	_01525_DS_
004d88   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	20; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='4')
004d8a   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
004d8c   0a34     xorlw   0x34             	XORLW	0x34
004d8e   e102     bnz     0x004d94         	BNZ	_01555_DS_
                                           ; removed redundant BANKSEL
004d90   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004d92   e001     bz      0x004d96         	BZ	_01556_DS_
                                           _01555_DS_:
004d94   d003     bra     0x004d9c         	BRA	_01517_DS_
                                           _01556_DS_:
                                           ;	.line	21; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	sens=21;
004d96   0e15     movlw   0x15             	MOVLW	0x15
004d98   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004d9a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01517_DS_:
004d9c   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	22; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='3')
004d9e   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
004da0   0a33     xorlw   0x33             	XORLW	0x33
004da2   e102     bnz     0x004da8         	BNZ	_01557_DS_
                                           ; removed redundant BANKSEL
004da4   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004da6   e001     bz      0x004daa         	BZ	_01558_DS_
                                           _01557_DS_:
004da8   d003     bra     0x004db0         	BRA	_01519_DS_
                                           _01558_DS_:
                                           ;	.line	23; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	sens=22;
004daa   0e16     movlw   0x16             	MOVLW	0x16
004dac   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004dae   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01519_DS_:
004db0   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	24; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='2')
004db2   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
004db4   0a32     xorlw   0x32             	XORLW	0x32
004db6   e102     bnz     0x004dbc         	BNZ	_01559_DS_
                                           ; removed redundant BANKSEL
004db8   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004dba   e001     bz      0x004dbe         	BZ	_01560_DS_
                                           _01559_DS_:
004dbc   d003     bra     0x004dc4         	BRA	_01521_DS_
                                           _01560_DS_:
                                           ;	.line	25; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	sens=23;
004dbe   0e17     movlw   0x17             	MOVLW	0x17
004dc0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004dc2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01521_DS_:
004dc4   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	26; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='1')
004dc6   5136     movf    0x36, 0x0, 0x1   	MOVF	_caracter, W, B
004dc8   0a31     xorlw   0x31             	XORLW	0x31
004dca   e102     bnz     0x004dd0         	BNZ	_01561_DS_
                                           ; removed redundant BANKSEL
004dcc   5137     movf    0x37, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004dce   e001     bz      0x004dd2         	BZ	_01562_DS_
                                           _01561_DS_:
004dd0   d003     bra     0x004dd8         	BRA	_01525_DS_
                                           _01562_DS_:
                                           ;	.line	27; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	sens=24;
004dd2   0e18     movlw   0x18             	MOVLW	0x18
004dd4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004dd6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01525_DS_:
004dd8   0103     movlb   0x3              	BANKSEL	_caracter
                                           ;	.line	29; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
004dda   6b36     clrf    0x36, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
004ddc   6b37     clrf    0x37, 0x1        	CLRF	(_caracter + 1), B
004dde   0103     movlb   0x3              	BANKSEL	_receivedbyte
                                           ;	.line	30; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
004de0   6b47     clrf    0x47, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	31; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	if (digitalread(sens)) 
004de2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004de4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004de6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004de8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004dea   ecf4     call    0x0039e8, 0x0call    0x0039e8, 0x0 	CALL	_digitalread
004dec   f01c
004dee   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004df0   f001
004df2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004df4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004df6   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
004df8   e00d     bz      0x004e14         	BZ	_01527_DS_
                                           ;	.line	32; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	CDCputs("0",1);
004dfa   0e01     movlw   0x01             	MOVLW	0x01
004dfc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004dfe   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
004e00   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e02   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_1)
004e04   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e06   0eb6     movlw   0xb6             	MOVLW	LOW(___str_1)
004e08   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e0a   ecff     call    0x0049fe, 0x0call    0x0049fe, 0x0 	CALL	_CDCputs
004e0c   f024
004e0e   0e04     movlw   0x04             	MOVLW	0x04
004e10   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004e12   d00c     bra     0x004e2c         	BRA	_01529_DS_
                                           _01527_DS_:
                                           ;	.line	34; /home/vbasel/.icaro/v2/firmware/source/tortucaro/user-tortucaro.c	CDCputs("1",1);
004e14   0e01     movlw   0x01             	MOVLW	0x01
004e16   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e18   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
004e1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e1c   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_2)
004e1e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e20   0eb8     movlw   0xb8             	MOVLW	LOW(___str_2)
004e22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004e24   ecff     call    0x0049fe, 0x0call    0x0049fe, 0x0 	CALL	_CDCputs
004e26   f024
004e28   0e04     movlw   0x04             	MOVLW	0x04
004e2a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01529_DS_:
004e2c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004e2e   f003
004e30   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004e32   f002
004e34   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004e36   f001
004e38   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004e3a   f000
004e3c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__env_cdc	code
                                           _env_cdc:
                                           ;	.line	40; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	void env_cdc(int valor)
003f30   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f32   ffe5
003f34   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f36   ffd9
003f38   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003f3a   ffe5
003f3c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003f3e   ffe5
003f40   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003f42   ffe5
003f44   0e02     movlw   0x02             	MOVLW	0x02
003f46   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003f48   f000
003f4a   0e03     movlw   0x03             	MOVLW	0x03
003f4c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003f4e   f001
                                           ;	.line	43; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	int tam=0;
003f50   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	44; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	itoa(valor,chaine,10);
003f52   0e0a     movlw   0x0a             	MOVLW	0x0a
003f54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003f56   0e03     movlw   0x03             	MOVLW	HIGH(_env_cdc_chaine_1_250)
003f58   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003f5a   0e49     movlw   0x49             	MOVLW	LOW(_env_cdc_chaine_1_250)
003f5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003f5e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f60   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003f62   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f64   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003f66   ec0b     call    0x005c16, 0x0call    0x005c16, 0x0 	CALL	_itoa
003f68   f02e
003f6a   0e05     movlw   0x05             	MOVLW	0x05
003f6c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	45; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	if (valor<1000) tam=4;
003f6e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f70   0f80     addlw   0x80             	ADDLW	0x80
003f72   0f7d     addlw   0x7d             	ADDLW	0x7d
003f74   e102     bnz     0x003f7a         	BNZ	_01506_DS_
003f76   0ee8     movlw   0xe8             	MOVLW	0xe8
003f78   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01506_DS_:
003f7a   e202     bc      0x003f80         	BC	_01490_DS_
003f7c   0e04     movlw   0x04             	MOVLW	0x04
003f7e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _01490_DS_:
                                           ;	.line	46; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	if (valor<100) tam=3;
003f80   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f82   0f80     addlw   0x80             	ADDLW	0x80
003f84   0f80     addlw   0x80             	ADDLW	0x80
003f86   e102     bnz     0x003f8c         	BNZ	_01507_DS_
003f88   0e64     movlw   0x64             	MOVLW	0x64
003f8a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01507_DS_:
003f8c   e202     bc      0x003f92         	BC	_01492_DS_
003f8e   0e03     movlw   0x03             	MOVLW	0x03
003f90   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _01492_DS_:
                                           ;	.line	47; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	if (valor<10) tam=2;
003f92   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003f94   0f80     addlw   0x80             	ADDLW	0x80
003f96   0f80     addlw   0x80             	ADDLW	0x80
003f98   e102     bnz     0x003f9e         	BNZ	_01508_DS_
003f9a   0e0a     movlw   0x0a             	MOVLW	0x0a
003f9c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           _01508_DS_:
003f9e   e202     bc      0x003fa4         	BC	_01494_DS_
003fa0   0e02     movlw   0x02             	MOVLW	0x02
003fa2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _01494_DS_:
                                           ;	.line	48; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	strcat(chaine,"\n");
003fa4   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
003fa6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fa8   0e2b     movlw   0x2b             	MOVLW	HIGH(___str_0)
003faa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fac   0eb4     movlw   0xb4             	MOVLW	LOW(___str_0)
003fae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fb0   0e80     movlw   0x80             	MOVLW	0x80
003fb2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fb4   0e03     movlw   0x03             	MOVLW	HIGH(_env_cdc_chaine_1_250)
003fb6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fb8   0e49     movlw   0x49             	MOVLW	LOW(_env_cdc_chaine_1_250)
003fba   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fbc   ec98     call    0x004f30, 0x0call    0x004f30, 0x0 	CALL	_strcat
003fbe   f027
003fc0   0e06     movlw   0x06             	MOVLW	0x06
003fc2   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	49; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	CDCputs(chaine,tam);
003fc4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003fc6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fc8   0e80     movlw   0x80             	MOVLW	0x80
003fca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fcc   0e03     movlw   0x03             	MOVLW	HIGH(_env_cdc_chaine_1_250)
003fce   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fd0   0e49     movlw   0x49             	MOVLW	LOW(_env_cdc_chaine_1_250)
003fd2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fd4   ecff     call    0x0049fe, 0x0call    0x0049fe, 0x0 	CALL	_CDCputs
003fd6   f024
003fd8   0e04     movlw   0x04             	MOVLW	0x04
003fda   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	50; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	Delayms(10);
003fdc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003fde   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003fe0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003fe2   0e0a     movlw   0x0a             	MOVLW	0x0a
003fe4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003fe6   ec72     call    0x005ae4, 0x0call    0x005ae4, 0x0 	CALL	_Delayms
003fe8   f02d
003fea   0e04     movlw   0x04             	MOVLW	0x04
003fec   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003fee   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003ff0   f002
003ff2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003ff4   f001
003ff6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003ff8   f000
003ffa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003ffc   ffd9
003ffe   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__init_CDC	code
                                           _init_CDC:
                                           ;	.line	17; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	INTCON=0;
0060c6   6af2     clrf    0xf2, 0x0        	CLRF	_INTCON
                                           ;	.line	18; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	INTCON2=0xC0;
0060c8   0ec0     movlw   0xc0             	MOVLW	0xc0
0060ca   6ef1     movwf   0xf1, 0x0        	MOVWF	_INTCON2
                                           ;	.line	19; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	UCON=0;
0060cc   6a6d     clrf    0x6d, 0x0        	CLRF	_UCON
                                           ;	.line	20; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	UCFG=0;
0060ce   6a6f     clrf    0x6f, 0x0        	CLRF	_UCFG
                                           ;	.line	21; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	UEP0=0;UEP1=0;UEP2=0;UEP3=0;UEP4=0;UEP5=0;
0060d0   6a70     clrf    0x70, 0x0        	CLRF	_UEP0
0060d2   6a71     clrf    0x71, 0x0        	CLRF	_UEP1
0060d4   6a72     clrf    0x72, 0x0        	CLRF	_UEP2
0060d6   6a73     clrf    0x73, 0x0        	CLRF	_UEP3
0060d8   6a74     clrf    0x74, 0x0        	CLRF	_UEP4
0060da   6a75     clrf    0x75, 0x0        	CLRF	_UEP5
                                           ;	.line	22; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	UEP6=0;UEP7=0;UEP8=0;UEP9=0;UEP10=0;UEP11=0;
0060dc   6a76     clrf    0x76, 0x0        	CLRF	_UEP6
0060de   6a77     clrf    0x77, 0x0        	CLRF	_UEP7
0060e0   6a78     clrf    0x78, 0x0        	CLRF	_UEP8
0060e2   6a79     clrf    0x79, 0x0        	CLRF	_UEP9
0060e4   6a7a     clrf    0x7a, 0x0        	CLRF	_UEP10
0060e6   6a7b     clrf    0x7b, 0x0        	CLRF	_UEP11
                                           ;	.line	23; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	UEP12=0;UEP13=0;UEP14=0;UEP15=0;
0060e8   6a7c     clrf    0x7c, 0x0        	CLRF	_UEP12
0060ea   6a7d     clrf    0x7d, 0x0        	CLRF	_UEP13
0060ec   6a7e     clrf    0x7e, 0x0        	CLRF	_UEP14
0060ee   6a7f     clrf    0x7f, 0x0        	CLRF	_UEP15
                                           ;	.line	25; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	Delayms(2000);
0060f0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0060f2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0060f4   0e07     movlw   0x07             	MOVLW	0x07
0060f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0060f8   0ed0     movlw   0xd0             	MOVLW	0xd0
0060fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0060fc   ec72     call    0x005ae4, 0x0call    0x005ae4, 0x0 	CALL	_Delayms
0060fe   f02d
006100   0e04     movlw   0x04             	MOVLW	0x04
006102   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	27; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	UCFG = 0x14; 				// Enable pullup resistors; full speed mode
006104   0e14     movlw   0x14             	MOVLW	0x14
006106   6e6f     movwf   0x6f, 0x0        	MOVWF	_UCFG
006108   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	28; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	deviceState = DETACHED;
00610a   6b44     clrf    0x44, 0x1        	CLRF	_deviceState, B
00610c   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	29; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	remoteWakeup = 0x00;
00610e   6b43     clrf    0x43, 0x1        	CLRF	_remoteWakeup, B
006110   0103     movlb   0x3              	BANKSEL	_currentConfiguration
                                           ;	.line	30; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	currentConfiguration = 0x00;
006112   6b45     clrf    0x45, 0x1        	CLRF	_currentConfiguration, B
                                           _01472_DS_:
006114   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	32; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	while(deviceState != CONFIGURED)
006116   5144     movf    0x44, 0x0, 0x1   	MOVF	_deviceState, W, B
006118   0a05     xorlw   0x05             	XORLW	0x05
00611a   e005     bz      0x006126         	BZ	_01475_DS_
                                           ;	.line	34; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	EnableUSBModule();
00611c   ec3a     call    0x006474, 0x0call    0x006474, 0x0 	CALL	_EnableUSBModule
00611e   f032
                                           ;	.line	35; /home/vbasel/.icaro/v2/firmware/tmp/__cdc.c	ProcessUSBTransactions();
006120   ec92     call    0x005f24, 0x0call    0x005f24, 0x0 	CALL	_ProcessUSBTransactions
006122   f02f
006124   d7f7     bra     0x006114         	BRA	_01472_DS_
                                           _01475_DS_:
006126   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
0061e2   0103     movlb   0x3              	BANKSEL	_line_config
                                           ;	.line	167; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
0061e4   6b22     clrf    0x22, 0x1        	CLRF	_line_config, B
0061e6   0ec2     movlw   0xc2             	MOVLW	0xc2
                                           ; removed redundant BANKSEL
0061e8   6f23     movwf   0x23, 0x1        	MOVWF	(_line_config + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	168; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
0061ea   6b24     clrf    0x24, 0x1        	CLRF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	169; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
0061ec   6b25     clrf    0x25, 0x1        	CLRF	(_line_config + 3), B
                                           ;	.line	170; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
0061ee   0e08     movlw   0x08             	MOVLW	0x08
                                           ; removed redundant BANKSEL
0061f0   6f26     movwf   0x26, 0x1        	MOVWF	(_line_config + 4), B
0061f2   0102     movlb   0x2              	BANKSEL	_zlp
                                           ;	.line	171; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue0=0;
0061f4   6bf4     clrf    0xf4, 0x1        	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	172; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue1=0;
0061f6   6bf5     clrf    0xf5, 0x1        	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	173; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue2=0;
0061f8   6bf6     clrf    0xf6, 0x1        	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue3=0;
0061fa   6bf7     clrf    0xf7, 0x1        	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue4=0;
0061fc   6bf8     clrf    0xf8, 0x1        	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	176; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue5=0;
0061fe   6bf9     clrf    0xf9, 0x1        	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	177; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue6=0;
006200   6bfa     clrf    0xfa, 0x1        	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	178; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	zlp.wValue7=0;
006202   6bfb     clrf    0xfb, 0x1        	CLRF	(_zlp + 7), B
                                           ;	.line	183; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
006204   0e1a     movlw   0x1a             	MOVLW	0x1a
006206   6e72     movwf   0x72, 0x0        	MOVWF	_UEP2
                                           ;	.line	186; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
006208   0e1e     movlw   0x1e             	MOVLW	0x1e
00620a   6e73     movwf   0x73, 0x0        	MOVWF	_UEP3
                                           ;	.line	190; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
00620c   0e12     movlw   0x12             	MOVLW	LOW(_CDCControlBuffer)
00620e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 22)
006210   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
006212   0e03     movlw   0x03             	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
006214   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	191; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
006216   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
006218   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
00621a   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	195; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
00621c   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
00621e   6f1a     movwf   0x1a, 0x1        	MOVWF	(_ep_bdt + 26), B
006220   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
006222   6f1b     movwf   0x1b, 0x1        	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	196; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
006224   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
006226   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	198; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
006228   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
00622a   6f1e     movwf   0x1e, 0x1        	MOVWF	(_ep_bdt + 30), B
00622c   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
00622e   6f1f     movwf   0x1f, 0x1        	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	199; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
006230   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
006232   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	200; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	deviceState=CONFIGURED; 
006234   0e05     movlw   0x05             	MOVLW	0x05
006236   0103     movlb   0x3              	BANKSEL	_deviceState
006238   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
00623a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputs	code
                                           _CDCputs:
                                           ;	.line	131; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	u8 CDCputs(char *buffer, u8 length) {
0049fe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a00   ffe5
004a02   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a04   ffd9
004a06   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004a08   ffe5
004a0a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004a0c   ffe5
004a0e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004a10   ffe5
004a12   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004a14   ffe5
004a16   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004a18   ffe5
004a1a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004a1c   ffe5
004a1e   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004a20   ffe5
004a22   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004a24   ffe5
004a26   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004a28   ffe5
004a2a   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
004a2c   ffe5
004a2e   0e02     movlw   0x02             	MOVLW	0x02
004a30   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004a32   f000
004a34   0e03     movlw   0x03             	MOVLW	0x03
004a36   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004a38   f001
004a3a   0e04     movlw   0x04             	MOVLW	0x04
004a3c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004a3e   f002
004a40   0e05     movlw   0x05             	MOVLW	0x05
004a42   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
004a44   f003
                                           ;	.line	132; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	u8 i=0;
004a46   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004a48   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	134; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
004a4a   5144     movf    0x44, 0x0, 0x1   	MOVF	_deviceState, W, B
004a4c   0a05     xorlw   0x05             	XORLW	0x05
004a4e   e002     bz      0x004a54         	BZ	_01427_DS_
004a50   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004a52   d04c     bra     0x004aec         	BRA	_01438_DS_
                                           _01427_DS_:
004a54   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	135; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
004a56   5109     movf    0x09, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
004a58   e102     bnz     0x004a5e         	BNZ	_01429_DS_
004a5a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004a5c   d047     bra     0x004aec         	BRA	_01438_DS_
                                           _01429_DS_:
004a5e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	136; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
004a60   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
004a62   d043     bra     0x004aea         	BRA	_01434_DS_
                                           ;	.line	137; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE) length = CDC_BULK_IN_SIZE;
004a64   0e41     movlw   0x41             	MOVLW	0x41
004a66   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
004a68   e302     bnc     0x004a6e         	BNC	_01445_DS_
004a6a   0e40     movlw   0x40             	MOVLW	0x40
004a6c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           _01445_DS_:
                                           ;	.line	138; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	for (i=0; i < length; i++) {
004a6e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           _01436_DS_:
004a70   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004a72   5c05     subwf   0x05, 0x0, 0x0   	SUBWF	r0x05, W
004a74   e21d     bc      0x004ab0         	BC	_01446_DS_
                                           ;	.line	139; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
004a76   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
004a78   2405     addwf   0x05, 0x0, 0x0   	ADDWF	r0x05, W
004a7a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004a7c   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004a7e   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
004a80   2207     addwfc  0x07, 0x1, 0x0   	ADDWFC	r0x07, F
004a82   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004a84   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004a86   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
004a88   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004a8a   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
004a8c   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
004a8e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004a90   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
004a92   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
004a94   ffe9
004a96   c009     movff   0x009, 0xff3     	MOVFF	r0x09, PRODL
004a98   fff3
004a9a   ec29     call    0x000052, 0x0call    0x000052, 0x0 	CALL	__gptrget1
004a9c   f000
004a9e   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
004aa0   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
004aa2   ffe9
004aa4   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
004aa6   ffea
004aa8   c008     movff   0x008, 0xfef     	MOVFF	r0x08, INDF0
004aaa   ffef
                                           ;	.line	138; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	for (i=0; i < length; i++) {
004aac   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
004aae   d7e0     bra     0x004a70         	BRA	_01436_DS_
                                           _01446_DS_:
004ab0   c005     movff   0x005, 0x004     	MOVFF	r0x05, r0x04
004ab2   f004
                                           ;	.line	148; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
004ab4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004ab6   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
004ab8   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	150; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
004aba   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004abc   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004abe   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	151; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
004ac0   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
004ac2   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
004ac4   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004ac6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004ac8   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004aca   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004acc   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004ace   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004ad0   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
004ad2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004ad4   0b01     andlw   0x01             	ANDLW	0x01
004ad6   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004ad8   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004ada   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
004adc   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
004ade   0bbf     andlw   0xbf             	ANDLW	0xbf
004ae0   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
004ae2   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	153; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
004ae4   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004ae6   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004ae8   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01434_DS_:
                                           ;	.line	156; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	return i;
004aea   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           _01438_DS_:
004aec   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
004aee   f009
004af0   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
004af2   f008
004af4   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004af6   f007
004af8   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004afa   f006
004afc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004afe   f005
004b00   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004b02   f004
004b04   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004b06   f003
004b08   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004b0a   f002
004b0c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004b0e   f001
004b10   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004b12   f000
004b14   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b16   ffd9
004b18   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCgets	code
                                           _CDCgets:
                                           ;	.line	98; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	u8 CDCgets(char *buffer) {
0048e0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048e2   ffe5
0048e4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048e6   ffd9
0048e8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0048ea   ffe5
0048ec   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0048ee   ffe5
0048f0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0048f2   ffe5
0048f4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0048f6   ffe5
0048f8   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0048fa   ffe5
0048fc   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0048fe   ffe5
004900   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004902   ffe5
004904   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004906   ffe5
004908   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
00490a   ffe5
00490c   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
00490e   ffe5
004910   0e02     movlw   0x02             	MOVLW	0x02
004912   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004914   f000
004916   0e03     movlw   0x03             	MOVLW	0x03
004918   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00491a   f001
00491c   0e04     movlw   0x04             	MOVLW	0x04
00491e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004920   f002
                                           ;	.line	99; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	u8 i=0;
004922   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004924   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	101; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
004926   5144     movf    0x44, 0x0, 0x1   	MOVF	_deviceState, W, B
004928   0a05     xorlw   0x05             	XORLW	0x05
00492a   e002     bz      0x004930         	BZ	_01386_DS_
00492c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00492e   d050     bra     0x0049d0         	BRA	_01397_DS_
                                           _01386_DS_:
004930   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	103; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
004932   5109     movf    0x09, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
004934   e102     bnz     0x00493a         	BNZ	_01388_DS_
004936   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004938   d04b     bra     0x0049d0         	BRA	_01397_DS_
                                           _01388_DS_:
00493a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	105; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
00493c   bf18     btfsc   0x18, 0x7, 0x1   	BTFSC	(_ep_bdt + 24), 7, B
00493e   d047     bra     0x0049ce         	BRA	_01393_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt) length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
004940   0e40     movlw   0x40             	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01404_DS_
                                           ; #;;;!!! pic16_aopOp:1118 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	111; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
004942   5d19     subwf   0x19, 0x0, 0x1   	SUBWF	(_ep_bdt + 25), W, B
004944   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
004946   c419     movff   0x419, 0xfe8     	MOVFF	(_ep_bdt + 25), WREG
004948   ffe8
00494a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01395_DS_:
00494c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 25)
00494e   5119     movf    0x19, 0x0, 0x1   	MOVF	(_ep_bdt + 25), W, B
004950   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
004952   e220     bc      0x004994         	BC	_01405_DS_
                                           ;	.line	112; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
004954   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004956   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004958   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00495a   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
00495c   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00495e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004960   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004962   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
004964   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
004966   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
004968   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
00496a   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
00496c   6a09     clrf    0x09, 0x0        	CLRF	r0x09
00496e   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
004970   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
004972   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
004974   ffe9
004976   c009     movff   0x009, 0xfea     	MOVFF	r0x09, FSR0H
004978   ffea
00497a   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
00497c   f008
00497e   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004980   ffe5
004982   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
004984   ffe9
004986   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
004988   fff3
00498a   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
00498c   ec31     call    0x000062, 0x0call    0x000062, 0x0 	CALL	__gptrput1
00498e   f000
                                           ;	.line	111; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
004990   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
004992   d7dc     bra     0x00494c         	BRA	_01395_DS_
                                           _01405_DS_:
004994   c004     movff   0x004, 0x003     	MOVFF	r0x04, r0x03
004996   f003
                                           ;	.line	121; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
004998   0e40     movlw   0x40             	MOVLW	0x40
00499a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
00499c   1518     andwf   0x18, 0x0, 0x1   	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00499e   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	122; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
0049a0   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
0049a2   bd18     btfsc   0x18, 0x6, 0x1   	BTFSC	(_ep_bdt + 24), 6, B
0049a4   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0049a6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0049a8   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0049aa   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0049ac   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0049ae   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0049b0   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
0049b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0049b4   0b01     andlw   0x01             	ANDLW	0x01
0049b6   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0049b8   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0049ba   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0049bc   5118     movf    0x18, 0x0, 0x1   	MOVF	(_ep_bdt + 24), W, B
0049be   0bbf     andlw   0xbf             	ANDLW	0xbf
0049c0   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0049c2   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	124; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
0049c4   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0049c6   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	125; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
0049c8   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0049ca   1118     iorwf   0x18, 0x0, 0x1   	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0049cc   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           _01393_DS_:
                                           ;	.line	128; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	return i;
0049ce   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           _01397_DS_:
0049d0   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
0049d2   f009
0049d4   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
0049d6   f008
0049d8   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
0049da   f007
0049dc   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
0049de   f006
0049e0   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0049e2   f005
0049e4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0049e6   f004
0049e8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0049ea   f003
0049ec   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0049ee   f002
0049f0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0049f2   f001
0049f4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0049f6   f000
0049f8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049fa   ffd9
0049fc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	void ProcessCDCRequest(void)
0058fa   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0058fc   ffe5
                                           ;	.line	38; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
0058fe   0e60     movlw   0x60             	MOVLW	0x60
005900   0105     movlb   0x5              	BANKSEL	_SetupPacket
005902   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005904   0a20     xorlw   0x20             	XORLW	0x20
005906   e001     bz      0x00590a         	BZ	_01333_DS_
005908   d049     bra     0x00599c         	BRA	_01343_DS_
                                           _01333_DS_:
                                           ;	.line	42; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	switch(SetupPacket.bRequest)
00590a   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
00590c   f000
00590e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005910   e101     bnz     0x005914         	BNZ	_01370_DS_
005912   d044     bra     0x00599c         	BRA	_01343_DS_
                                           _01370_DS_:
005914   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005916   0a01     xorlw   0x01             	XORLW	0x01
005918   e101     bnz     0x00591c         	BNZ	_01372_DS_
00591a   d040     bra     0x00599c         	BRA	_01343_DS_
                                           _01372_DS_:
00591c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00591e   0a20     xorlw   0x20             	XORLW	0x20
005920   e007     bz      0x005930         	BZ	_01336_DS_
005922   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005924   0a21     xorlw   0x21             	XORLW	0x21
005926   e013     bz      0x00594e         	BZ	_01337_DS_
005928   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00592a   0a22     xorlw   0x22             	XORLW	0x22
00592c   e01f     bz      0x00596c         	BZ	_01338_DS_
00592e   d036     bra     0x00599c         	BRA	_01343_DS_
                                           _01336_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
005930   0e03     movlw   0x03             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
005932   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
005934   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
005936   0e22     movlw   0x22             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
005938   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
00593a   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00593c   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	63; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
00593e   0e05     movlw   0x05             	MOVLW	0x05
005940   0103     movlb   0x3              	BANKSEL	_wCount
005942   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
005944   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	64; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	requestHandled = 1;				
005946   0e01     movlw   0x01             	MOVLW	0x01
005948   0103     movlb   0x3              	BANKSEL	_requestHandled
00594a   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	65; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	break;
00594c   d027     bra     0x00599c         	BRA	_01343_DS_
                                           _01337_DS_:
                                           ;	.line	71; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
00594e   0e03     movlw   0x03             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
005950   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
005952   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
005954   0e22     movlw   0x22             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
005956   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
005958   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00595a   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	72; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
00595c   0e05     movlw   0x05             	MOVLW	0x05
00595e   0103     movlb   0x3              	BANKSEL	_wCount
005960   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
005962   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	73; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	requestHandled = 1;
005964   0e01     movlw   0x01             	MOVLW	0x01
005966   0103     movlb   0x3              	BANKSEL	_requestHandled
005968   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	74; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	break;
00596a   d018     bra     0x00599c         	BRA	_01343_DS_
                                           _01338_DS_:
00596c   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	82; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
00596e   5102     movf    0x02, 0x0, 0x1   	MOVF	(_SetupPacket + 2), W, B
005970   0a03     xorlw   0x03             	XORLW	0x03
005972   e104     bnz     0x00597c         	BNZ	_01340_DS_
005974   0e01     movlw   0x01             	MOVLW	0x01
005976   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
005978   6f09     movwf   0x09, 0x1        	MOVWF	_CONTROL_LINE, B
00597a   d002     bra     0x005980         	BRA	_01341_DS_
                                           _01340_DS_:
00597c   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	83; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	else CONTROL_LINE=0;		
00597e   6b09     clrf    0x09, 0x1        	CLRF	_CONTROL_LINE, B
                                           _01341_DS_:
                                           ;	.line	84; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	outPtr = (__data u8 *)&zlp;
005980   0e02     movlw   0x02             	MOVLW	HIGH(_zlp)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
005982   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
005984   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
005986   0ef4     movlw   0xf4             	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
005988   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
00598a   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00598c   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	85; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
00598e   0e08     movlw   0x08             	MOVLW	0x08
005990   0103     movlb   0x3              	BANKSEL	_wCount
005992   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
005994   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	86; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	requestHandled = 1;						
005996   0e01     movlw   0x01             	MOVLW	0x01
005998   0103     movlb   0x3              	BANKSEL	_requestHandled
00599a   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           _01343_DS_:
                                           ;	.line	88; /home/vbasel/.icaro/v2/firmware/tmp/usb/usb_cdc.c	}
00599c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00599e   f000
0059a0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	743; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void ProcessUSBTransactions(void) {
005f24   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005f26   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_01246_DS_
                                           ; #	GOTO	_01272_DS_
                                           ; #	BTFSS	_UIRbits, 2
005f28   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	745; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(deviceState == DETACHED)
005f2a   5144     movf    0x44, 0x0, 0x1   	MOVF	_deviceState, W, B
                                           ;	.line	746; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	return;
005f2c   e02e     bz      0x005f8a         	BZ	_01272_DS_
                                           ;	.line	749; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
005f2e   a468     btfss   0x68, 0x2, 0x0   	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_01248_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_01248_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	750; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UnSuspend();
005f30   d003     bra     0x005f38         	BRA	_01248_DS_
                                           ;	.line	754; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(UCONbits.SUSPND == 1)
005f32   b469     btfsc   0x69, 0x2, 0x0   	BTFSC	_UIEbits, 2
005f34   ecef     call    0x0065de, 0x0call    0x0065de, 0x0 	CALL	_UnSuspend
005f36   f032
                                           _01248_DS_:
005f38   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005f3a   b26d     btfsc   0x6d, 0x1, 0x0   	BTFSC	_UCONbits, 1
005f3c   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005f3e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005f40   0a01     xorlw   0x01             	XORLW	0x01
                                           ;	.line	755; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	return;
005f42   e023     bz      0x005f8a         	BZ	_01272_DS_
                                           ;	.line	758; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE) {
005f44   a068     btfss   0x68, 0x0, 0x0   	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_01253_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_01253_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	759; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	BusReset();
005f46   d003     bra     0x005f4e         	BRA	_01253_DS_
                                           ;	.line	762; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE) {
005f48   b069     btfsc   0x69, 0x0, 0x0   	BTFSC	_UIEbits, 0
005f4a   ecd6     call    0x0063ac, 0x0call    0x0063ac, 0x0 	CALL	_BusReset
005f4c   f031
                                           _01253_DS_:
005f4e   a868     btfss   0x68, 0x4, 0x0   	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_01256_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_01256_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	764; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	Suspend();
005f50   d003     bra     0x005f58         	BRA	_01256_DS_
                                           ;	.line	766; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE) {
005f52   b869     btfsc   0x69, 0x4, 0x0   	BTFSC	_UIEbits, 4
005f54   ec7a     call    0x0064f4, 0x0call    0x0064f4, 0x0 	CALL	_Suspend
005f56   f032
                                           _01256_DS_:
005f58   ac68     btfss   0x68, 0x6, 0x0   	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_01259_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_01259_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	767; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	StartOfFrame();
005f5a   d003     bra     0x005f62         	BRA	_01259_DS_
                                           ;	.line	769; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE) {
005f5c   bc69     btfsc   0x69, 0x6, 0x0   	BTFSC	_UIEbits, 6
005f5e   ecf3     call    0x0065e6, 0x0call    0x0065e6, 0x0 	CALL	_StartOfFrame
005f60   f032
                                           _01259_DS_:
005f62   aa68     btfss   0x68, 0x5, 0x0   	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_01262_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_01262_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	770; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	Stall();
005f64   d003     bra     0x005f6c         	BRA	_01262_DS_
                                           ;	.line	773; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE) {
005f66   ba69     btfsc   0x69, 0x5, 0x0   	BTFSC	_UIEbits, 5
005f68   eca3     call    0x006546, 0x0call    0x006546, 0x0 	CALL	_Stall
005f6a   f032
                                           _01262_DS_:
005f6c   a268     btfss   0x68, 0x1, 0x0   	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_01265_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_01265_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	777; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.UERRIF = 0;
005f6e   d002     bra     0x005f74         	BRA	_01265_DS_
                                           ;	.line	781; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (deviceState < DEFAULT)
005f70   b269     btfsc   0x69, 0x1, 0x0   	BTFSC	_UIEbits, 1
005f72   9268     bcf     0x68, 0x1, 0x0   	BCF	_UIRbits, 1
                                           _01265_DS_:
005f74   0e03     movlw   0x03             	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01268_DS_
                                           ; #	GOTO	_01272_DS_
                                           ; #	BTFSS	_UIRbits, 3
005f76   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	782; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	return;
005f78   5d44     subwf   0x44, 0x0, 0x1   	SUBWF	_deviceState, W, B
                                           ;	.line	785; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE) {
005f7a   e307     bnc     0x005f8a         	BNC	_01272_DS_
005f7c   a668     btfss   0x68, 0x3, 0x0   	BTFSS	_UIRbits, 3
005f7e   d005     bra     0x005f8a         	BRA	_01272_DS_
005f80   a669     btfss   0x69, 0x3, 0x0   	BTFSS	_UIEbits, 3
005f82   d003     bra     0x005f8a         	BRA	_01272_DS_
                                           ;	.line	786; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ProcessControlTransfer();
005f84   ecd1     call    0x0059a2, 0x0call    0x0059a2, 0x0 	CALL	_ProcessControlTransfer
005f86   f02c
                                           ;	.line	789; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.TRNIF = 0;
005f88   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
                                           _01272_DS_:
005f8a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005f8c   f000
005f8e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__BusReset	code
                                           _BusReset:
                                           ;	.line	715; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void BusReset() {
0063ac   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0063ae   ffe5
                                           ;	.line	716; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UEIR  = 0x00;
0063b0   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           ;	.line	717; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIR   = 0x00;
0063b2   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	718; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UEIE  = 0x9f;
0063b4   0e9f     movlw   0x9f             	MOVLW	0x9f
0063b6   6e6b     movwf   0x6b, 0x0        	MOVWF	_UEIE
                                           ;	.line	719; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIE   = 0x7b;
0063b8   0e7b     movlw   0x7b             	MOVLW	0x7b
0063ba   6e69     movwf   0x69, 0x0        	MOVWF	_UIE
                                           ;	.line	720; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UADDR = 0x00;
0063bc   6a6e     clrf    0x6e, 0x0        	CLRF	_UADDR
                                           ;	.line	723; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
0063be   0e16     movlw   0x16             	MOVLW	0x16
0063c0   6e70     movwf   0x70, 0x0        	MOVWF	_UEP0
                                           _01228_DS_:
                                           ;	.line	726; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	while (UIRbits.TRNIF == 1)
0063c2   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0063c4   b668     btfsc   0x68, 0x3, 0x0   	BTFSC	_UIRbits, 3
0063c6   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0063c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0063ca   0a01     xorlw   0x01             	XORLW	0x01
0063cc   e102     bnz     0x0063d2         	BNZ	_01230_DS_
                                           ;	.line	727; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.TRNIF = 0;
0063ce   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
0063d0   d7f8     bra     0x0063c2         	BRA	_01228_DS_
                                           _01230_DS_:
                                           ;	.line	730; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UCONbits.PKTDIS = 0;
0063d2   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
                                           ;	.line	733; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
0063d4   ecb2     call    0x006564, 0x0call    0x006564, 0x0 	CALL	_WaitForSetupStage
0063d6   f032
0063d8   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	735; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
0063da   6b43     clrf    0x43, 0x1        	CLRF	_remoteWakeup, B
0063dc   0103     movlb   0x3              	BANKSEL	_selfPowered
                                           ;	.line	736; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
0063de   6b42     clrf    0x42, 0x1        	CLRF	_selfPowered, B
0063e0   0103     movlb   0x3              	BANKSEL	_currentConfiguration
                                           ;	.line	737; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
0063e2   6b45     clrf    0x45, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	738; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = DEFAULT;
0063e4   0e03     movlw   0x03             	MOVLW	0x03
0063e6   0103     movlb   0x3              	BANKSEL	_deviceState
0063e8   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
0063ea   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0063ec   f000
0063ee   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Suspend	code
                                           _Suspend:
                                           ;	.line	685; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void Suspend(void) {
0064f4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0064f6   ffe5
0064f8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0064fa   ffd9
                                           ;	.line	690; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIEbits.ACTVIE = 1;
0064fc   8469     bsf     0x69, 0x2, 0x0   	BSF	_UIEbits, 2
                                           ;	.line	691; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.IDLEIF = 0;
0064fe   9868     bcf     0x68, 0x4, 0x0   	BCF	_UIRbits, 4
                                           ;	.line	692; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UCONbits.SUSPND = 1;
006500   826d     bsf     0x6d, 0x1, 0x0   	BSF	_UCONbits, 1
                                           ;	.line	694; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	PIR2bits.USBIF = 0;
006502   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	695; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	INTCONbits.RBIF = 0;
006504   90f2     bcf     0xf2, 0x0, 0x0   	BCF	_INTCONbits, 0
                                           ;	.line	696; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	PIE2bits.USBIE = 1;
006506   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	697; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	INTCONbits.RBIE = 1;
006508   86f2     bsf     0xf2, 0x3, 0x0   	BSF	_INTCONbits, 3
                                           ;	.line	700; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	RCSTAbits.CREN = 0;
00650a   98ab     bcf     0xab, 0x4, 0x0   	BCF	_RCSTAbits, 4
                                           ;	.line	701; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	TXSTAbits.TXEN = 0;
00650c   9aac     bcf     0xac, 0x5, 0x0   	BCF	_TXSTAbits, 5
00650e   0003     sleep                    	sleep	
                                           ;	.line	706; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	RCSTAbits.CREN = 1;
006510   88ab     bsf     0xab, 0x4, 0x0   	BSF	_RCSTAbits, 4
                                           ;	.line	707; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	TXSTAbits.TXEN = 1;
006512   8aac     bsf     0xac, 0x5, 0x0   	BSF	_TXSTAbits, 5
                                           ;	.line	709; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	PIE2bits.USBIE = 0;
006514   9aa0     bcf     0xa0, 0x5, 0x0   	BCF	_PIE2bits, 5
                                           ;	.line	710; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	INTCONbits.RBIE = 0;
006516   96f2     bcf     0xf2, 0x3, 0x0   	BCF	_INTCONbits, 3
006518   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00651a   ffd9
00651c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Stall	code
                                           _Stall:
                                           ;	.line	671; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void Stall(void) {
006546   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006548   ffe5
                                           ;	.line	675; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(UEP0bits.EPSTALL == 1) {
00654a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00654c   b070     btfsc   0x70, 0x0, 0x0   	BTFSC	_UEP0bits, 0
00654e   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
006550   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006552   0a01     xorlw   0x01             	XORLW	0x01
006554   e103     bnz     0x00655c         	BNZ	_01211_DS_
                                           ;	.line	677; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
006556   ecb2     call    0x006564, 0x0call    0x006564, 0x0 	CALL	_WaitForSetupStage
006558   f032
                                           ;	.line	678; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UEP0bits.EPSTALL = 0;
00655a   9070     bcf     0x70, 0x0, 0x0   	BCF	_UEP0bits, 0
                                           _01211_DS_:
                                           ;	.line	680; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.STALLIF = 0;
00655c   9a68     bcf     0x68, 0x5, 0x0   	BCF	_UIRbits, 5
00655e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
006560   f000
006562   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	666; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.SOFIF = 0;
0065e6   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
0065e8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	656; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UCONbits.SUSPND = 0;
0065de   926d     bcf     0x6d, 0x1, 0x0   	BCF	_UCONbits, 1
                                           ;	.line	657; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIEbits.ACTVIE = 0;
0065e0   9469     bcf     0x69, 0x2, 0x0   	BCF	_UIEbits, 2
                                           ;	.line	658; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIRbits.ACTVIF = 0;
0065e2   9468     bcf     0x68, 0x2, 0x0   	BCF	_UIRbits, 2
0065e4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	626; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(UCONbits.USBEN == 0) {
006474   b66d     btfsc   0x6d, 0x3, 0x0   	BTFSC	_UCONbits, 3
006476   d006     bra     0x006484         	BRA	_01179_DS_
                                           ;	.line	630; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UCON = 0;
006478   6a6d     clrf    0x6d, 0x0        	CLRF	_UCON
                                           ;	.line	631; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIE = 0;
00647a   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	632; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UCONbits.USBEN = 1;
00647c   866d     bsf     0x6d, 0x3, 0x0   	BSF	_UCONbits, 3
                                           ;	.line	633; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = ATTACHED;
00647e   0e01     movlw   0x01             	MOVLW	0x01
006480   0103     movlb   0x3              	BANKSEL	_deviceState
006482   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
                                           _01179_DS_:
006484   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	637; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0) {
006486   5144     movf    0x44, 0x0, 0x1   	MOVF	_deviceState, W, B
006488   0a01     xorlw   0x01             	XORLW	0x01
00648a   e109     bnz     0x00649e         	BNZ	_01183_DS_
00648c   ba6d     btfsc   0x6d, 0x5, 0x0   	BTFSC	_UCONbits, 5
00648e   d007     bra     0x00649e         	BRA	_01183_DS_
                                           ;	.line	638; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIR = 0;
006490   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	639; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIE = 0;
006492   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	640; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIEbits.URSTIE = 1;
006494   8069     bsf     0x69, 0x0, 0x0   	BSF	_UIEbits, 0
                                           ;	.line	641; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UIEbits.IDLEIE = 1;
006496   8869     bsf     0x69, 0x4, 0x0   	BSF	_UIEbits, 4
                                           ;	.line	642; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = POWERED;
006498   0e02     movlw   0x02             	MOVLW	0x02
00649a   0103     movlb   0x3              	BANKSEL	_deviceState
00649c   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
                                           _01183_DS_:
00649e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	536; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void ProcessControlTransfer(void) {
0059a2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0059a4   ffe5
                                           ;	.line	540; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (USTATbits.DIR == OUT) {
0059a6   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
0059a8   d022     bra     0x0059ee         	BRA	_01129_DS_
                                           ;	.line	543; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
0059aa   0e3c     movlw   0x3c             	MOVLW	0x3c
0059ac   0104     movlb   0x4              	BANKSEL	_ep_bdt
0059ae   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
0059b0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0059b2   4000     rrncf   0x00, 0x0, 0x0   	RRNCF	r0x00, W
0059b4   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0059b6   0b3f     andlw   0x3f             	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	544; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (PID == 0x0D)
0059b8   0a0d     xorlw   0x0d             	XORLW	0x0d
0059ba   e103     bnz     0x0059c2         	BNZ	_01113_DS_
                                           ;	.line	546; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	SetupStage();
0059bc   ecc4     call    0x005788, 0x0call    0x005788, 0x0 	CALL	_SetupStage
0059be   f02b
0059c0   d03e     bra     0x005a3e         	BRA	_01131_DS_
                                           _01113_DS_:
0059c2   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	547; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE) {
0059c4   5146     movf    0x46, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
0059c6   0a01     xorlw   0x01             	XORLW	0x01
0059c8   e10f     bnz     0x0059e8         	BNZ	_01110_DS_
                                           ;	.line	550; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	OutDataStage(0);
0059ca   0e00     movlw   0x00             	MOVLW	0x00
0059cc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0059ce   ec18     call    0x004430, 0x0call    0x004430, 0x0 	CALL	_OutDataStage
0059d0   f022
0059d2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0059d4   0104     movlb   0x4              	BANKSEL	_ep_bdt
                                           ;	.line	574; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
0059d6   ad00     btfss   0x00, 0x6, 0x1   	BTFSS	_ep_bdt, 6, B
0059d8   d003     bra     0x0059e0         	BRA	_01107_DS_
                                           ;	.line	575; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0059da   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0059dc   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
0059de   d02f     bra     0x005a3e         	BRA	_01131_DS_
                                           _01107_DS_:
                                           ;	.line	577; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0059e0   0ec8     movlw   0xc8             	MOVLW	0xc8
0059e2   0104     movlb   0x4              	BANKSEL	_ep_bdt
0059e4   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
0059e6   d02b     bra     0x005a3e         	BRA	_01131_DS_
                                           _01110_DS_:
                                           ;	.line	581; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
0059e8   ecb2     call    0x006564, 0x0call    0x006564, 0x0 	CALL	_WaitForSetupStage
0059ea   f032
0059ec   d028     bra     0x005a3e         	BRA	_01131_DS_
                                           _01129_DS_:
                                           ;	.line	584; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if(USTATbits.DIR == IN) {
0059ee   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0059f0   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
0059f2   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0059f4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0059f6   0a01     xorlw   0x01             	XORLW	0x01
0059f8   e122     bnz     0x005a3e         	BNZ	_01131_DS_
                                           ;	.line	586; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS)) {
0059fa   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
0059fc   e10b     bnz     0x005a14         	BNZ	_01118_DS_
0059fe   0103     movlb   0x3              	BANKSEL	_deviceState
005a00   5144     movf    0x44, 0x0, 0x1   	MOVF	_deviceState, W, B
005a02   0a04     xorlw   0x04             	XORLW	0x04
005a04   e107     bnz     0x005a14         	BNZ	_01118_DS_
                                           ;	.line	589; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UADDR = SetupPacket.wValue0;
005a06   c502     movff   0x502, 0xf6e     	MOVFF	(_SetupPacket + 2), _UADDR
005a08   ff6e
                                           ;	.line	593; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(UADDR == 0)
005a0a   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
005a0c   e103     bnz     0x005a14         	BNZ	_01118_DS_
                                           ;	.line	596; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = DEFAULT;
005a0e   0e03     movlw   0x03             	MOVLW	0x03
005a10   0103     movlb   0x3              	BANKSEL	_deviceState
005a12   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
                                           _01118_DS_:
005a14   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	599; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE) {
005a16   5146     movf    0x46, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
005a18   0a02     xorlw   0x02             	XORLW	0x02
005a1a   e10f     bnz     0x005a3a         	BNZ	_01124_DS_
                                           ;	.line	601; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	InDataStage(0);
005a1c   0e00     movlw   0x00             	MOVLW	0x00
005a1e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005a20   ecdc     call    0x003bb8, 0x0call    0x003bb8, 0x0 	CALL	_InDataStage
005a22   f01d
005a24   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
005a26   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	604; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
005a28   ad04     btfss   0x04, 0x6, 0x1   	BTFSS	(_ep_bdt + 4), 6, B
005a2a   d003     bra     0x005a32         	BRA	_01121_DS_
                                           ;	.line	605; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
005a2c   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
005a2e   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
005a30   d006     bra     0x005a3e         	BRA	_01131_DS_
                                           _01121_DS_:
                                           ;	.line	607; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
005a32   0ec8     movlw   0xc8             	MOVLW	0xc8
005a34   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
005a36   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
005a38   d002     bra     0x005a3e         	BRA	_01131_DS_
                                           _01124_DS_:
                                           ;	.line	611; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	WaitForSetupStage();
005a3a   ecb2     call    0x006564, 0x0call    0x006564, 0x0 	CALL	_WaitForSetupStage
005a3c   f032
                                           _01131_DS_:
005a3e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005a40   f000
005a42   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__WaitForSetupStage	code
                                           _WaitForSetupStage:
006564   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	523; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
006566   6b46     clrf    0x46, 0x1        	CLRF	_ctrlTransferStage, B
                                           ;	.line	524; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
006568   0e40     movlw   0x40             	MOVLW	0x40
00656a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
00656c   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	525; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
00656e   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
006570   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
006572   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
006574   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	527; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
006576   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
006578   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	528; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
00657a   6b04     clrf    0x04, 0x1        	CLRF	(_ep_bdt + 4), B
00657c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SetupStage	code
                                           _SetupStage:
                                           ;	.line	453; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
005788   0e7f     movlw   0x7f             	MOVLW	0x7f
00578a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
00578c   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_ep_bdt + 4), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00578e   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	454; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
005790   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
005792   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005794   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
005796   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	457; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
005798   6b46     clrf    0x46, 0x1        	CLRF	_ctrlTransferStage, B
00579a   0103     movlb   0x3              	BANKSEL	_requestHandled
                                           ;	.line	458; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
00579c   6b41     clrf    0x41, 0x1        	CLRF	_requestHandled, B
00579e   0103     movlb   0x3              	BANKSEL	_HIDPostProcess
                                           ;	.line	459; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
0057a0   6b3a     clrf    0x3a, 0x1        	CLRF	_HIDPostProcess, B
0057a2   0103     movlb   0x3              	BANKSEL	_wCount
                                           ;	.line	460; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = 0;                           // No u8s transferred
0057a4   6b34     clrf    0x34, 0x1        	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
0057a6   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	463; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ProcessStandardRequest();
0057a8   ec7f     call    0x0050fe, 0x0call    0x0050fe, 0x0 	CALL	_ProcessStandardRequest
0057aa   f028
                                           ;	.line	473; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
0057ac   0e1f     movlw   0x1f             	MOVLW	0x1f
0057ae   0105     movlb   0x5              	BANKSEL	_SetupPacket
0057b0   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0057b2   0a01     xorlw   0x01             	XORLW	0x01
0057b4   e102     bnz     0x0057ba         	BNZ	_01066_DS_
                                           ;	.line	474; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ProcessCDCRequest();
0057b6   ec7d     call    0x0058fa, 0x0call    0x0058fa, 0x0 	CALL	_ProcessCDCRequest
0057b8   f02c
                                           _01066_DS_:
0057ba   0103     movlb   0x3              	BANKSEL	_requestHandled
                                           ;	.line	477; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (!requestHandled) {
0057bc   5141     movf    0x41, 0x0, 0x1   	MOVF	_requestHandled, W, B
0057be   e10b     bnz     0x0057d6         	BNZ	_01073_DS_
                                           ;	.line	479; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0057c0   0e40     movlw   0x40             	MOVLW	0x40
0057c2   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
0057c4   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	480; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0057c6   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0057c8   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
0057ca   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0057cc   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	481; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
0057ce   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	482; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
0057d0   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
0057d2   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
0057d4   d038     bra     0x005846         	BRA	_01074_DS_
                                           _01073_DS_:
0057d6   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	484; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
0057d8   af00     btfss   0x00, 0x7, 0x1   	BTFSS	_SetupPacket, 7, B
0057da   d026     bra     0x005828         	BRA	_01070_DS_
0057dc   0103     movlb   0x3              	BANKSEL	(_wCount + 1)
                                           ;	.line	486; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(SetupPacket.wLength < wCount)
0057de   5135     movf    0x35, 0x0, 0x1   	MOVF	(_wCount + 1), W, B
0057e0   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 7)
0057e2   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	(_SetupPacket + 7), W, B
0057e4   e104     bnz     0x0057ee         	BNZ	_01096_DS_
0057e6   0103     movlb   0x3              	BANKSEL	_wCount
0057e8   5134     movf    0x34, 0x0, 0x1   	MOVF	_wCount, W, B
0057ea   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 6)
0057ec   5d06     subwf   0x06, 0x0, 0x1   	SUBWF	(_SetupPacket + 6), W, B
                                           _01096_DS_:
0057ee   e204     bc      0x0057f8         	BC	_01068_DS_
                                           ;	.line	487; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = SetupPacket.wLength;
0057f0   c506     movff   0x506, 0x334     	MOVFF	(_SetupPacket + 6), _wCount
0057f2   f334
0057f4   c507     movff   0x507, 0x335     	MOVFF	(_SetupPacket + 7), (_wCount + 1)
0057f6   f335
                                           _01068_DS_:
                                           ;	.line	488; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	InDataStage(0);
0057f8   0e00     movlw   0x00             	MOVLW	0x00
0057fa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0057fc   ecdc     call    0x003bb8, 0x0call    0x003bb8, 0x0 	CALL	_InDataStage
0057fe   f01d
005800   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	489; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
005802   0e02     movlw   0x02             	MOVLW	0x02
005804   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
005806   6f46     movwf   0x46, 0x1        	MOVWF	_ctrlTransferStage, B
                                           ;	.line	491; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
005808   0e40     movlw   0x40             	MOVLW	0x40
00580a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
00580c   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	492; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
00580e   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
005810   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
005812   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
005814   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	493; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
005816   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
005818   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ;	.line	496; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
00581a   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00581c   6f06     movwf   0x06, 0x1        	MOVWF	(_ep_bdt + 6), B
00581e   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
005820   6f07     movwf   0x07, 0x1        	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	498; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
005822   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
005824   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
005826   d00f     bra     0x005846         	BRA	_01074_DS_
                                           _01070_DS_:
                                           ;	.line	502; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
005828   0e01     movlw   0x01             	MOVLW	0x01
00582a   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
00582c   6f46     movwf   0x46, 0x1        	MOVWF	_ctrlTransferStage, B
00582e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	505; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
005830   6b05     clrf    0x05, 0x1        	CLRF	(_ep_bdt + 5), B
                                           ;	.line	506; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
005832   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
005834   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	509; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
005836   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
005838   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	510; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
00583a   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00583c   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
00583e   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
005840   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	512; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
005842   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
005844   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           _01074_DS_:
                                           ;	.line	516; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	UCONbits.PKTDIS = 0;
005846   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
005848   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	414; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void OutDataStage(unsigned char ep) {
004430   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004432   ffe5
004434   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004436   ffd9
004438   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00443a   ffe5
00443c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00443e   ffe5
004440   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004442   ffe5
004444   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004446   ffe5
004448   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00444a   ffe5
00444c   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00444e   ffe5
004450   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004452   ffe5
004454   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004456   ffe5
004458   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
00445a   ffe5
00445c   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
00445e   ffe5
004460   0e02     movlw   0x02             	MOVLW	0x02
004462   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004464   f000
                                           ;	.line	417; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
004466   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
004468   0bfe     andlw   0xfe             	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #	MOVF	r0x01, W
00446a   0d04     mullw   0x04             	MULLW	0x04
00446c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00446e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004470   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004472   f000
004474   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
004476   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004478   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00447a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
00447c   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
00447e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004480   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004482   ffe9
004484   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004486   ffea
004488   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00448a   f001
00448c   0e03     movlw   0x03             	MOVLW	0x03
00448e   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004490   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004492   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004494   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004496   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
004498   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00449a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
00449c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00449e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0044a0   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
0044a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0044a4   ffe9
0044a6   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0044a8   ffea
0044aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0044ac   f000
0044ae   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0044b0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0044b2   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0044b4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0044b6   1201     iorwf   0x01, 0x1, 0x0   	IORWF	r0x01, F
                                           ;	.line	424; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = wCount + bufferSize;
0044b8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0044ba   0103     movlb   0x3              	BANKSEL	_wCount
0044bc   2734     addwf   0x34, 0x1, 0x1   	ADDWF	_wCount, F, B
0044be   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0044c0   2335     addwfc  0x35, 0x1, 0x1   	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	426; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8*)&controlTransferBuffer;
0044c2   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
0044c4   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
0044c6   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
0044c8   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0044ca   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
0044cc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0044ce   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	430; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
0044d0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0044d2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01045_DS_:
0044d4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0044d6   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0044d8   e102     bnz     0x0044de         	BNZ	_01058_DS_
0044da   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0044dc   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01058_DS_:
0044de   e22c     bc      0x004538         	BC	_01047_DS_
                                           ;	.line	434; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	*inPtr++ = *outPtr++;
0044e0   c331     movff   0x331, 0x004     	MOVFF	_inPtr, r0x04
0044e2   f004
0044e4   c332     movff   0x332, 0x005     	MOVFF	(_inPtr + 1), r0x05
0044e6   f005
0044e8   c333     movff   0x333, 0x006     	MOVFF	(_inPtr + 2), r0x06
0044ea   f006
0044ec   c32e     movff   0x32e, 0x007     	MOVFF	_outPtr, r0x07
0044ee   f007
0044f0   c32f     movff   0x32f, 0x008     	MOVFF	(_outPtr + 1), r0x08
0044f2   f008
0044f4   c330     movff   0x330, 0x009     	MOVFF	(_outPtr + 2), r0x09
0044f6   f009
0044f8   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
0044fa   ffe9
0044fc   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
0044fe   fff3
004500   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
004502   ec29     call    0x000052, 0x0call    0x000052, 0x0 	CALL	__gptrget1
004504   f000
004506   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
004508   0103     movlb   0x3              	BANKSEL	_outPtr
00450a   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_outPtr, F, B
00450c   e303     bnc     0x004514         	BNC	_01059_DS_
                                           ; removed redundant BANKSEL
00450e   3f2f     incfsz  0x2f, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
004510   d001     bra     0x004514         	BRA	_11814_DS_
                                           ; removed redundant BANKSEL
004512   2b30     incf    0x30, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _11814_DS_:
                                           _01059_DS_:
004514   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004516   ffe5
004518   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
00451a   ffe9
00451c   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
00451e   fff3
004520   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
004522   ec31     call    0x000062, 0x0call    0x000062, 0x0 	CALL	__gptrput1
004524   f000
004526   0103     movlb   0x3              	BANKSEL	_inPtr
004528   2b31     incf    0x31, 0x1, 0x1   	INCF	_inPtr, F, B
00452a   e303     bnc     0x004532         	BNC	_01060_DS_
                                           ; removed redundant BANKSEL
00452c   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
00452e   d001     bra     0x004532         	BRA	_21815_DS_
                                           ; removed redundant BANKSEL
004530   2b33     incf    0x33, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _21815_DS_:
                                           _01060_DS_:
                                           ;	.line	430; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
004532   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004534   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
004536   d7ce     bra     0x0044d4         	BRA	_01045_DS_
                                           _01047_DS_:
004538   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
00453a   f009
00453c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00453e   f008
004540   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004542   f007
004544   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004546   f006
004548   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00454a   f005
00454c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00454e   f004
004550   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004552   f003
004554   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004556   f002
004558   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00455a   f001
00455c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00455e   f000
004560   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004562   ffd9
004564   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__InDataStage	code
                                           _InDataStage:
                                           ;	.line	367; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void InDataStage(unsigned char ep) {
003bb8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003bba   ffe5
003bbc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003bbe   ffd9
003bc0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003bc2   ffe5
003bc4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003bc6   ffe5
003bc8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003bca   ffe5
003bcc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003bce   ffe5
003bd0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003bd2   ffe5
003bd4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003bd6   ffe5
003bd8   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003bda   ffe5
003bdc   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003bde   ffe5
003be0   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003be2   ffe5
003be4   0e02     movlw   0x02             	MOVLW	0x02
003be6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003be8   f000
                                           ;	.line	374; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
003bea   0e00     movlw   0x00             	MOVLW	0x00
003bec   0103     movlb   0x3              	BANKSEL	(_wCount + 1)
003bee   5d35     subwf   0x35, 0x0, 0x1   	SUBWF	(_wCount + 1), W, B
003bf0   e102     bnz     0x003bf6         	BNZ	_01030_DS_
003bf2   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003bf4   5d34     subwf   0x34, 0x0, 0x1   	SUBWF	_wCount, W, B
                                           _01030_DS_:
003bf6   e205     bc      0x003c02         	BC	_01012_DS_
                                           ;	.line	375; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	bufferSize = wCount;
003bf8   c334     movff   0x334, 0x001     	MOVFF	_wCount, r0x01
003bfa   f001
003bfc   c335     movff   0x335, 0x002     	MOVFF	(_wCount + 1), r0x02
003bfe   f002
003c00   d003     bra     0x003c08         	BRA	_01013_DS_
                                           _01012_DS_:
                                           ;	.line	377; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
003c02   0e40     movlw   0x40             	MOVLW	0x40
003c04   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003c06   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           _01013_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
003c08   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
003c0a   0bfe     andlw   0xfe             	ANDLW	0xfe
003c0c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003c0e   2803     incf    0x03, 0x0, 0x0   	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #	MOVF	r0x00, W
003c10   0d04     mullw   0x04             	MULLW	0x04
003c12   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003c14   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003c16   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003c18   f000
003c1a   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c1c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c1e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003c20   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c22   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
003c24   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003c26   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c28   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c2a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003c2c   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c2e   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
003c30   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003c32   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003c34   ffe9
003c36   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
003c38   ffea
003c3a   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
003c3c   f006
003c3e   0efc     movlw   0xfc             	MOVLW	0xfc
003c40   1606     andwf   0x06, 0x1, 0x0   	ANDWF	r0x06, F
003c42   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
003c44   ffe9
003c46   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
003c48   ffea
003c4a   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
003c4c   ffef
                                           ;	.line	386; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (u8)((bufferSize & 0x0300) >> 8);
003c4e   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c50   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c52   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003c54   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c56   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
003c58   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003c5a   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c5c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c5e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003c60   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c62   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
003c64   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003c66   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003c68   ffe9
003c6a   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
003c6c   ffea
003c6e   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
003c70   f006
003c72   0e03     movlw   0x03             	MOVLW	0x03
003c74   1402     andwf   0x02, 0x0, 0x0   	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x08
                                           ; #	MOVF	r0x08, W
003c76   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
003c78   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
003c7a   ffe9
003c7c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
003c7e   ffea
003c80   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
003c82   ffef
                                           ;	.line	387; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).Cnt = (u8)(bufferSize & 0xFF);
003c84   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c86   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003c88   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003c8a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c8c   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
003c8e   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003c90   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
003c92   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
003c94   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c96   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003c98   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
003c9a   ffe9
003c9c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
003c9e   ffea
003ca0   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
003ca2   ffef
                                           ;	.line	388; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
003ca4   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003ca6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003ca8   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003caa   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003cac   0e02     movlw   0x02             	MOVLW	0x02
003cae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003cb0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003cb2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
003cb4   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
003cb6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003cb8   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
003cba   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003cbc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003cbe   ffe9
003cc0   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
003cc2   ffea
003cc4   c004     movff   0x004, 0xfee     	MOVFF	r0x04, POSTINC0
003cc6   ffee
003cc8   c005     movff   0x005, 0xfef     	MOVFF	r0x05, INDF0
003cca   ffef
                                           ;	.line	393; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = wCount - bufferSize;
003ccc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003cce   0103     movlb   0x3              	BANKSEL	_wCount
003cd0   5f34     subwf   0x34, 0x1, 0x1   	SUBWF	_wCount, F, B
003cd2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
003cd4   5b35     subwfb  0x35, 0x1, 0x1   	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	396; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	inPtr = (u8 *)&controlTransferBuffer;
003cd6   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
003cd8   0103     movlb   0x3              	BANKSEL	(_inPtr + 1)
003cda   6f32     movwf   0x32, 0x1        	MOVWF	(_inPtr + 1), B
003cdc   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003cde   6f31     movwf   0x31, 0x1        	MOVWF	_inPtr, B
003ce0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003ce2   6f33     movwf   0x33, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	401; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003ce4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01016_DS_:
003ce6   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
003ce8   f003
003cea   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003cec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cee   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
003cf0   e102     bnz     0x003cf6         	BNZ	_01036_DS_
003cf2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003cf4   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
                                           _01036_DS_:
003cf6   e22b     bc      0x003d4e         	BC	_01018_DS_
                                           ;	.line	405; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	*inPtr++ = *outPtr++;
003cf8   c331     movff   0x331, 0x003     	MOVFF	_inPtr, r0x03
003cfa   f003
003cfc   c332     movff   0x332, 0x004     	MOVFF	(_inPtr + 1), r0x04
003cfe   f004
003d00   c333     movff   0x333, 0x005     	MOVFF	(_inPtr + 2), r0x05
003d02   f005
003d04   c32e     movff   0x32e, 0x006     	MOVFF	_outPtr, r0x06
003d06   f006
003d08   c32f     movff   0x32f, 0x007     	MOVFF	(_outPtr + 1), r0x07
003d0a   f007
003d0c   c330     movff   0x330, 0x008     	MOVFF	(_outPtr + 2), r0x08
003d0e   f008
003d10   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003d12   ffe9
003d14   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
003d16   fff3
003d18   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003d1a   ec29     call    0x000052, 0x0call    0x000052, 0x0 	CALL	__gptrget1
003d1c   f000
003d1e   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003d20   0103     movlb   0x3              	BANKSEL	_outPtr
003d22   2b2e     incf    0x2e, 0x1, 0x1   	INCF	_outPtr, F, B
003d24   e303     bnc     0x003d2c         	BNC	_01037_DS_
                                           ; removed redundant BANKSEL
003d26   3f2f     incfsz  0x2f, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003d28   d001     bra     0x003d2c         	BRA	_31816_DS_
                                           ; removed redundant BANKSEL
003d2a   2b30     incf    0x30, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _31816_DS_:
                                           _01037_DS_:
003d2c   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003d2e   ffe5
003d30   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003d32   ffe9
003d34   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003d36   fff3
003d38   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003d3a   ec31     call    0x000062, 0x0call    0x000062, 0x0 	CALL	__gptrput1
003d3c   f000
003d3e   0103     movlb   0x3              	BANKSEL	_inPtr
003d40   2b31     incf    0x31, 0x1, 0x1   	INCF	_inPtr, F, B
003d42   e303     bnc     0x003d4a         	BNC	_01038_DS_
                                           ; removed redundant BANKSEL
003d44   3f32     incfsz  0x32, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003d46   d001     bra     0x003d4a         	BRA	_41817_DS_
                                           ; removed redundant BANKSEL
003d48   2b33     incf    0x33, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _41817_DS_:
                                           _01038_DS_:
                                           ;	.line	401; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003d4a   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
003d4c   d7cc     bra     0x003ce6         	BRA	_01016_DS_
                                           _01018_DS_:
003d4e   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003d50   f008
003d52   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003d54   f007
003d56   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003d58   f006
003d5a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003d5c   f005
003d5e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003d60   f004
003d62   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003d64   f003
003d66   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003d68   f002
003d6a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003d6c   f001
003d6e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003d70   f000
003d72   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d74   ffd9
003d76   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	256; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	void ProcessStandardRequest(void) {
0050fe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005100   ffe5
                                           ;	.line	257; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 request = SetupPacket.bRequest;
005102   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
005104   f000
005106   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	259; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
005108   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00925_DS_
                                           ; #	GOTO	_00957_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	262; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	return;
00510a   0b60     andlw   0x60             	ANDLW	0x60
                                           ;	.line	264; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (request == SET_ADDRESS) {
00510c   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00510e   d061     bra     0x0051d2         	BRA	_00957_DS_
005110   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005112   0a05     xorlw   0x05             	XORLW	0x05
005114   e109     bnz     0x005128         	BNZ	_00955_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
005116   0e01     movlw   0x01             	MOVLW	0x01
005118   0103     movlb   0x3              	BANKSEL	_requestHandled
00511a   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	273; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = ADDRESS;
00511c   0e04     movlw   0x04             	MOVLW	0x04
00511e   0103     movlb   0x3              	BANKSEL	_deviceState
005120   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	274; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
005122   c502     movff   0x502, 0x339     	MOVFF	(_SetupPacket + 2), _deviceAddress
005124   f339
005126   d055     bra     0x0051d2         	BRA	_00957_DS_
                                           _00955_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
005128   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00512a   0a06     xorlw   0x06             	XORLW	0x06
00512c   e103     bnz     0x005134         	BNZ	_00952_DS_
                                           ;	.line	277; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	GetDescriptor();
00512e   ec1f     call    0x004e3e, 0x0call    0x004e3e, 0x0 	CALL	_GetDescriptor
005130   f027
005132   d04f     bra     0x0051d2         	BRA	_00957_DS_
                                           _00952_DS_:
                                           ;	.line	279; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
005134   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005136   0a09     xorlw   0x09             	XORLW	0x09
005138   e112     bnz     0x00515e         	BNZ	_00949_DS_
                                           ;	.line	283; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
00513a   0e01     movlw   0x01             	MOVLW	0x01
00513c   0103     movlb   0x3              	BANKSEL	_requestHandled
00513e   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	284; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
005140   c502     movff   0x502, 0x345     	MOVFF	(_SetupPacket + 2), _currentConfiguration
005142   f345
005144   0103     movlb   0x3              	BANKSEL	_currentConfiguration
                                           ;	.line	287; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (currentConfiguration == 0)
005146   5145     movf    0x45, 0x0, 0x1   	MOVF	_currentConfiguration, W, B
005148   e104     bnz     0x005152         	BNZ	_00927_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = ADDRESS;
00514a   0e04     movlw   0x04             	MOVLW	0x04
00514c   0103     movlb   0x3              	BANKSEL	_deviceState
00514e   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
005150   d040     bra     0x0051d2         	BRA	_00957_DS_
                                           _00927_DS_:
                                           ;	.line	293; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	deviceState = CONFIGURED;
005152   0e05     movlw   0x05             	MOVLW	0x05
005154   0103     movlb   0x3              	BANKSEL	_deviceState
005156   6f44     movwf   0x44, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	303; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	CDCInitEndpoint();
005158   ecf1     call    0x0061e2, 0x0call    0x0061e2, 0x0 	CALL	_CDCInitEndpoint
00515a   f030
00515c   d03a     bra     0x0051d2         	BRA	_00957_DS_
                                           _00949_DS_:
                                           ;	.line	313; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
00515e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005160   0a08     xorlw   0x08             	XORLW	0x08
005162   e10f     bnz     0x005182         	BNZ	_00946_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
005164   0e01     movlw   0x01             	MOVLW	0x01
005166   0103     movlb   0x3              	BANKSEL	_requestHandled
005168   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	318; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8*)&currentConfiguration;
00516a   0e03     movlw   0x03             	MOVLW	HIGH(_currentConfiguration)
00516c   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
00516e   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
005170   0e45     movlw   0x45             	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
005172   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
005174   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
005176   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	319; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = 1;
005178   0e01     movlw   0x01             	MOVLW	0x01
00517a   0103     movlb   0x3              	BANKSEL	_wCount
00517c   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
00517e   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
005180   d028     bra     0x0051d2         	BRA	_00957_DS_
                                           _00946_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == GET_STATUS) {
005182   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005184   e103     bnz     0x00518c         	BNZ	_00943_DS_
                                           ;	.line	322; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	GetStatus();
005186   ec8d     call    0x004b1a, 0x0call    0x004b1a, 0x0 	CALL	_GetStatus
005188   f025
00518a   d023     bra     0x0051d2         	BRA	_00957_DS_
                                           _00943_DS_:
                                           ;	.line	324; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
00518c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00518e   0a01     xorlw   0x01             	XORLW	0x01
005190   e003     bz      0x005198         	BZ	_00938_DS_
                                           ;	.line	325; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	(request == SET_FEATURE)) {
005192   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005194   0a03     xorlw   0x03             	XORLW	0x03
005196   e103     bnz     0x00519e         	BNZ	_00939_DS_
                                           _00938_DS_:
                                           ;	.line	326; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	SetFeature();
005198   ecb3     call    0x004566, 0x0call    0x004566, 0x0 	CALL	_SetFeature
00519a   f022
00519c   d01a     bra     0x0051d2         	BRA	_00957_DS_
                                           _00939_DS_:
                                           ;	.line	328; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == GET_INTERFACE) {
00519e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0051a0   0a0a     xorlw   0x0a             	XORLW	0x0a
0051a2   e111     bnz     0x0051c6         	BNZ	_00936_DS_
                                           ;	.line	334; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
0051a4   0e01     movlw   0x01             	MOVLW	0x01
0051a6   0103     movlb   0x3              	BANKSEL	_requestHandled
0051a8   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
0051aa   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	335; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0;
0051ac   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ;	.line	336; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
0051ae   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
0051b0   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
0051b2   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
0051b4   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0051b6   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
0051b8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0051ba   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	337; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = 1;
0051bc   0e01     movlw   0x01             	MOVLW	0x01
0051be   0103     movlb   0x3              	BANKSEL	_wCount
0051c0   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0051c2   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
0051c4   d006     bra     0x0051d2         	BRA	_00957_DS_
                                           _00936_DS_:
                                           ;	.line	339; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == SET_INTERFACE) {
0051c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0051c8   0a0b     xorlw   0x0b             	XORLW	0x0b
0051ca   e103     bnz     0x0051d2         	BNZ	_00957_DS_
                                           ;	.line	344; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
0051cc   0e01     movlw   0x01             	MOVLW	0x01
0051ce   0103     movlb   0x3              	BANKSEL	_requestHandled
0051d0   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           _00957_DS_:
                                           ;	.line	351; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (request == SYNCH_FRAME) {
0051d2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0051d4   f000
0051d6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SetFeature	code
                                           _SetFeature:
                                           ;	.line	212; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	static void SetFeature(void) {
004566   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004568   ffe5
00456a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00456c   ffe5
00456e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004570   ffe5
004572   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004574   ffe5
004576   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004578   ffe5
00457a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00457c   ffe5
                                           ;	.line	213; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
00457e   0e1f     movlw   0x1f             	MOVLW	0x1f
004580   0105     movlb   0x5              	BANKSEL	_SetupPacket
004582   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
004584   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	214; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 feature = SetupPacket.wValue0;
004586   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
004588   f001
                                           ;	.line	219; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (recipient == 0x00) {
00458a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00458c   e112     bnz     0x0045b2         	BNZ	_00876_DS_
                                           ;	.line	221; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
00458e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004590   0a01     xorlw   0x01             	XORLW	0x01
004592   e001     bz      0x004596         	BZ	_00909_DS_
004594   d076     bra     0x004682         	BRA	_00878_DS_
                                           _00909_DS_:
                                           ;	.line	222; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004596   0e01     movlw   0x01             	MOVLW	0x01
004598   0103     movlb   0x3              	BANKSEL	_requestHandled
00459a   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
00459c   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	223; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
00459e   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
0045a0   0a03     xorlw   0x03             	XORLW	0x03
0045a2   e104     bnz     0x0045ac         	BNZ	_00858_DS_
                                           ;	.line	224; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	remoteWakeup = 1;
0045a4   0e01     movlw   0x01             	MOVLW	0x01
0045a6   0103     movlb   0x3              	BANKSEL	_remoteWakeup
0045a8   6f43     movwf   0x43, 0x1        	MOVWF	_remoteWakeup, B
0045aa   d06b     bra     0x004682         	BRA	_00878_DS_
                                           _00858_DS_:
0045ac   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	226; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	remoteWakeup = 0;
0045ae   6b43     clrf    0x43, 0x1        	CLRF	_remoteWakeup, B
0045b0   d068     bra     0x004682         	BRA	_00878_DS_
                                           _00876_DS_:
                                           ;	.line	230; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (recipient == 0x02) {
0045b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045b4   0a02     xorlw   0x02             	XORLW	0x02
0045b6   e001     bz      0x0045ba         	BZ	_00913_DS_
0045b8   d064     bra     0x004682         	BRA	_00878_DS_
                                           _00913_DS_:
                                           ;	.line	232; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
0045ba   0e0f     movlw   0x0f             	MOVLW	0x0f
0045bc   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
0045be   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
0045c0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	233; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
0045c2   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0045c4   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
0045c6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ;	.line	234; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
0045c8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0045ca   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0045cc   d05a     bra     0x004682         	BRA	_00878_DS_
0045ce   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045d0   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
0045d2   d057     bra     0x004682         	BRA	_00878_DS_
                                           ;	.line	236; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
0045d4   0e01     movlw   0x01             	MOVLW	0x01
0045d6   0103     movlb   0x3              	BANKSEL	_requestHandled
0045d8   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	239; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
0045da   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
0045dc   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0045de   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
0045e0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0045e2   0e80     movlw   0x80             	MOVLW	0x80
0045e4   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
0045e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045e8   0d08     mullw   0x08             	MULLW	0x08
0045ea   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0045ec   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0045ee   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0045f0   f000
0045f2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045f4   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
0045f6   0103     movlb   0x3              	BANKSEL	_inPtr
0045f8   6f31     movwf   0x31, 0x1        	MOVWF	_inPtr, B
0045fa   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0045fc   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
0045fe   6f32     movwf   0x32, 0x1        	MOVWF	(_inPtr + 1), B
004600   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004602   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
004604   68e8     setf    0xe8, 0x0        	SETF	WREG
004606   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
004608   6f33     movwf   0x33, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	240; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (endpointDir)
00460a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00460c   e005     bz      0x004618         	BZ	_00863_DS_
                                           ;	.line	241; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	inPtr += 4;
00460e   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
004610   2731     addwf   0x31, 0x1, 0x1   	ADDWF	_inPtr, F, B
004612   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
004614   2332     addwfc  0x32, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
004616   2333     addwfc  0x33, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00863_DS_:
004618   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	243; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
00461a   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
00461c   0a03     xorlw   0x03             	XORLW	0x03
00461e   e110     bnz     0x004640         	BNZ	_00868_DS_
                                           ;	.line	244; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	*inPtr = 0x84;
004620   c331     movff   0x331, 0x000     	MOVFF	_inPtr, r0x00
004622   f000
004624   c332     movff   0x332, 0x001     	MOVFF	(_inPtr + 1), r0x01
004626   f001
004628   c333     movff   0x333, 0x003     	MOVFF	(_inPtr + 2), r0x03
00462a   f003
00462c   0e84     movlw   0x84             	MOVLW	0x84
00462e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004630   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004632   ffe9
004634   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004636   fff3
004638   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00463a   ec31     call    0x000062, 0x0call    0x000062, 0x0 	CALL	__gptrput1
00463c   f000
00463e   d021     bra     0x004682         	BRA	_00878_DS_
                                           _00868_DS_:
                                           ;	.line	246; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(endpointDir == 1)
004640   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004642   0a01     xorlw   0x01             	XORLW	0x01
004644   e10f     bnz     0x004664         	BNZ	_00865_DS_
                                           ;	.line	247; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	*inPtr = 0x00;
004646   c331     movff   0x331, 0x000     	MOVFF	_inPtr, r0x00
004648   f000
00464a   c332     movff   0x332, 0x001     	MOVFF	(_inPtr + 1), r0x01
00464c   f001
00464e   c333     movff   0x333, 0x002     	MOVFF	(_inPtr + 2), r0x02
004650   f002
004652   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004654   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004656   ffe9
004658   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00465a   fff3
00465c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00465e   ec31     call    0x000062, 0x0call    0x000062, 0x0 	CALL	__gptrput1
004660   f000
004662   d00f     bra     0x004682         	BRA	_00878_DS_
                                           _00865_DS_:
                                           ;	.line	249; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	*inPtr = 0x88;
004664   c331     movff   0x331, 0x000     	MOVFF	_inPtr, r0x00
004666   f000
004668   c332     movff   0x332, 0x001     	MOVFF	(_inPtr + 1), r0x01
00466a   f001
00466c   c333     movff   0x333, 0x002     	MOVFF	(_inPtr + 2), r0x02
00466e   f002
004670   0e88     movlw   0x88             	MOVLW	0x88
004672   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004674   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004676   ffe9
004678   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
00467a   fff3
00467c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00467e   ec31     call    0x000062, 0x0call    0x000062, 0x0 	CALL	__gptrput1
004680   f000
                                           _00878_DS_:
004682   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004684   f005
004686   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004688   f004
00468a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00468c   f003
00468e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004690   f002
004692   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004694   f001
004696   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004698   f000
00469a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__GetStatus	code
                                           _GetStatus:
                                           ;	.line	167; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	static void GetStatus(void) {
004b1a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004b1c   ffe5
004b1e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004b20   ffe5
004b22   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004b24   ffe5
004b26   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004b28   ffe5
004b2a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004b2c   ffe5
004b2e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004b30   ffe5
                                           ;	.line	169; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
004b32   0e1f     movlw   0x1f             	MOVLW	0x1f
004b34   0105     movlb   0x5              	BANKSEL	_SetupPacket
004b36   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
004b38   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004b3a   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	173; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0;
004b3c   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	controlTransferBuffer[1] = 0;
004b3e   6b41     clrf    0x41, 0x1        	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	177; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (recipient == 0x00) {
004b40   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004b42   e113     bnz     0x004b6a         	BNZ	_00813_DS_
                                           ;	.line	179; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004b44   0e01     movlw   0x01             	MOVLW	0x01
004b46   0103     movlb   0x3              	BANKSEL	_requestHandled
004b48   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
004b4a   0103     movlb   0x3              	BANKSEL	_selfPowered
                                           ;	.line	181; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (selfPowered)
004b4c   5142     movf    0x42, 0x0, 0x1   	MOVF	_selfPowered, W, B
004b4e   e004     bz      0x004b58         	BZ	_00800_DS_
                                           ;	.line	182; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
004b50   0e01     movlw   0x01             	MOVLW	0x01
004b52   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
004b54   1140     iorwf   0x40, 0x0, 0x1   	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004b56   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00800_DS_:
004b58   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	183; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (remoteWakeup)
004b5a   5143     movf    0x43, 0x0, 0x1   	MOVF	_remoteWakeup, W, B
004b5c   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
004b5e   d04c     bra     0x004bf8         	BRA	_00814_DS_
                                           ;	.line	184; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
004b60   0e02     movlw   0x02             	MOVLW	0x02
004b62   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
004b64   1140     iorwf   0x40, 0x0, 0x1   	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004b66   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
004b68   d047     bra     0x004bf8         	BRA	_00814_DS_
                                           _00813_DS_:
                                           ;	.line	186; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (recipient == 0x01) {
004b6a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004b6c   0a01     xorlw   0x01             	XORLW	0x01
004b6e   e104     bnz     0x004b78         	BNZ	_00810_DS_
                                           ;	.line	188; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004b70   0e01     movlw   0x01             	MOVLW	0x01
004b72   0103     movlb   0x3              	BANKSEL	_requestHandled
004b74   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
004b76   d040     bra     0x004bf8         	BRA	_00814_DS_
                                           _00810_DS_:
                                           ;	.line	190; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (recipient == 0x02) {
004b78   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004b7a   0a02     xorlw   0x02             	XORLW	0x02
004b7c   e001     bz      0x004b80         	BZ	_00849_DS_
004b7e   d03c     bra     0x004bf8         	BRA	_00814_DS_
                                           _00849_DS_:
                                           ;	.line	192; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
004b80   0e0f     movlw   0x0f             	MOVLW	0x0f
004b82   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
004b84   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
004b86   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	193; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
004b88   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004b8a   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
004b8c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ;	.line	194; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004b8e   0e01     movlw   0x01             	MOVLW	0x01
004b90   0103     movlb   0x3              	BANKSEL	_requestHandled
004b92   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	197; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
004b94   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
004b96   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004b98   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
004b9a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004b9c   0e80     movlw   0x80             	MOVLW	0x80
004b9e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
004ba0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004ba2   0d08     mullw   0x08             	MULLW	0x08
004ba4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004ba6   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004ba8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
004baa   f000
004bac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004bae   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
004bb0   0103     movlb   0x3              	BANKSEL	_inPtr
004bb2   6f31     movwf   0x31, 0x1        	MOVWF	_inPtr, B
004bb4   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004bb6   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
004bb8   6f32     movwf   0x32, 0x1        	MOVWF	(_inPtr + 1), B
004bba   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
004bbc   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
004bbe   68e8     setf    0xe8, 0x0        	SETF	WREG
004bc0   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
004bc2   6f33     movwf   0x33, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	198; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (endpointDir)
004bc4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004bc6   e005     bz      0x004bd2         	BZ	_00804_DS_
                                           ;	.line	199; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	inPtr += 4;
004bc8   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
004bca   2731     addwf   0x31, 0x1, 0x1   	ADDWF	_inPtr, F, B
004bcc   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
004bce   2332     addwfc  0x32, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
004bd0   2333     addwfc  0x33, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00804_DS_:
                                           ;	.line	200; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
004bd2   c331     movff   0x331, 0x000     	MOVFF	_inPtr, r0x00
004bd4   f000
004bd6   c332     movff   0x332, 0x001     	MOVFF	(_inPtr + 1), r0x01
004bd8   f001
004bda   c333     movff   0x333, 0x002     	MOVFF	(_inPtr + 2), r0x02
004bdc   f002
004bde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004be0   ffe9
004be2   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004be4   fff3
004be6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004be8   ec29     call    0x000052, 0x0call    0x000052, 0x0 	CALL	__gptrget1
004bea   f000
004bec   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004bee   a400     btfss   0x00, 0x2, 0x0   	BTFSS	r0x00, 2
004bf0   d003     bra     0x004bf8         	BRA	_00814_DS_
                                           ;	.line	201; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
004bf2   0e01     movlw   0x01             	MOVLW	0x01
004bf4   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
004bf6   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00814_DS_:
004bf8   0103     movlb   0x3              	BANKSEL	_requestHandled
                                           ;	.line	204; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (requestHandled) {
004bfa   5141     movf    0x41, 0x0, 0x1   	MOVF	_requestHandled, W, B
004bfc   e00b     bz      0x004c14         	BZ	_00817_DS_
                                           ;	.line	205; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
004bfe   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
004c00   0103     movlb   0x3              	BANKSEL	(_outPtr + 1)
004c02   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
004c04   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004c06   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
004c08   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004c0a   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	206; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = 2;
004c0c   0e02     movlw   0x02             	MOVLW	0x02
004c0e   0103     movlb   0x3              	BANKSEL	_wCount
004c10   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004c12   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
                                           _00817_DS_:
004c14   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004c16   f005
004c18   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004c1a   f004
004c1c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004c1e   f003
004c20   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004c22   f002
004c24   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004c26   f001
004c28   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004c2a   f000
004c2c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	100; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	static void GetDescriptor(void) {
004e3e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004e40   ffe5
004e42   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004e44   ffe5
004e46   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004e48   ffe5
004e4a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004e4c   ffe5
004e4e   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	104; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80) {
004e50   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
004e52   0a80     xorlw   0x80             	XORLW	0x80
004e54   e001     bz      0x004e58         	BZ	_00786_DS_
004e56   d063     bra     0x004f1e         	BRA	_00768_DS_
                                           _00786_DS_:
                                           ;	.line	105; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 descriptorType  = SetupPacket.wValue1;
004e58   c503     movff   0x503, 0x000     	MOVFF	(_SetupPacket + 3), r0x00
004e5a   f000
                                           ;	.line	106; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	u8 descriptorIndex = SetupPacket.wValue0;
004e5c   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
004e5e   f001
                                           ;	.line	108; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR) {
004e60   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004e62   0a01     xorlw   0x01             	XORLW	0x01
004e64   e10f     bnz     0x004e84         	BNZ	_00764_DS_
                                           ;	.line	112; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004e66   0e01     movlw   0x01             	MOVLW	0x01
004e68   0103     movlb   0x3              	BANKSEL	_requestHandled
004e6a   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	113; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&libdevice_descriptor;
004e6c   0e00     movlw   0x00             	MOVLW	UPPER(_libdevice_descriptor)
004e6e   0103     movlb   0x3              	BANKSEL	(_outPtr + 2)
004e70   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
004e72   0e2a     movlw   0x2a             	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
004e74   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
004e76   0ee6     movlw   0xe6             	MOVLW	LOW(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
004e78   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	114; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
004e7a   0e12     movlw   0x12             	MOVLW	0x12
004e7c   0103     movlb   0x3              	BANKSEL	_wCount
004e7e   6f34     movwf   0x34, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004e80   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
004e82   d04d     bra     0x004f1e         	BRA	_00768_DS_
                                           _00764_DS_:
                                           ;	.line	116; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR) {
004e84   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004e86   0a02     xorlw   0x02             	XORLW	0x02
004e88   e117     bnz     0x004eb8         	BNZ	_00761_DS_
                                           ;	.line	120; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004e8a   0e01     movlw   0x01             	MOVLW	0x01
004e8c   0103     movlb   0x3              	BANKSEL	_requestHandled
004e8e   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	131; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&libconfiguration_descriptor;
004e90   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor)
004e92   0103     movlb   0x3              	BANKSEL	(_outPtr + 2)
004e94   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
004e96   0e2a     movlw   0x2a             	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
004e98   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
004e9a   0ef8     movlw   0xf8             	MOVLW	LOW(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
004e9c   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	133; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
004e9e   0efa     movlw   0xfa             	MOVLW	LOW(_libconfiguration_descriptor + 2)
004ea0   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
004ea2   0e2a     movlw   0x2a             	MOVLW	HIGH(_libconfiguration_descriptor + 2)
004ea4   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
004ea6   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor + 2)
004ea8   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
004eaa   0009     tblrd*+                  	TBLRD*+	
004eac   cff5     movff   0xff5, 0x334     	MOVFF	TABLAT, _wCount
004eae   f334
004eb0   0009     tblrd*+                  	TBLRD*+	
004eb2   cff5     movff   0xff5, 0x335     	MOVFF	TABLAT, (_wCount + 1)
004eb4   f335
004eb6   d033     bra     0x004f1e         	BRA	_00768_DS_
                                           _00761_DS_:
                                           ;	.line	139; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR) {
004eb8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004eba   0a03     xorlw   0x03             	XORLW	0x03
004ebc   e12a     bnz     0x004f12         	BNZ	_00758_DS_
                                           ;	.line	143; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004ebe   0e01     movlw   0x01             	MOVLW	0x01
004ec0   0103     movlb   0x3              	BANKSEL	_requestHandled
004ec2   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ;	.line	144; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	outPtr = (u8 *)&libstring_descriptor[descriptorIndex];
004ec4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004ec6   0d03     mullw   0x03             	MULLW	0x03
004ec8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004eca   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004ecc   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004ece   f001
004ed0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004ed2   0e3c     movlw   0x3c             	MOVLW	LOW(_libstring_descriptor)
004ed4   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004ed6   0e2b     movlw   0x2b             	MOVLW	HIGH(_libstring_descriptor)
004ed8   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004eda   0e00     movlw   0x00             	MOVLW	UPPER(_libstring_descriptor)
004edc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004ede   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004ee0   0103     movlb   0x3              	BANKSEL	(_outPtr + 2)
004ee2   6f30     movwf   0x30, 0x1        	MOVWF	(_outPtr + 2), B
004ee4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
004ee6   6f2f     movwf   0x2f, 0x1        	MOVWF	(_outPtr + 1), B
004ee8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004eea   6f2e     movwf   0x2e, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	145; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	wCount = *outPtr;
004eec   c32e     movff   0x32e, 0x001     	MOVFF	_outPtr, r0x01
004eee   f001
004ef0   c32f     movff   0x32f, 0x002     	MOVFF	(_outPtr + 1), r0x02
004ef2   f002
004ef4   c330     movff   0x330, 0x003     	MOVFF	(_outPtr + 2), r0x03
004ef6   f003
004ef8   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004efa   ffe9
004efc   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
004efe   fff3
004f00   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004f02   ec29     call    0x000052, 0x0call    0x000052, 0x0 	CALL	__gptrget1
004f04   f000
004f06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004f08   c001     movff   0x001, 0x334     	MOVFF	r0x01, _wCount
004f0a   f334
004f0c   0103     movlb   0x3              	BANKSEL	(_wCount + 1)
004f0e   6b35     clrf    0x35, 0x1        	CLRF	(_wCount + 1), B
004f10   d006     bra     0x004f1e         	BRA	_00768_DS_
                                           _00758_DS_:
                                           ;	.line	147; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR) {
004f12   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f14   0a06     xorlw   0x06             	XORLW	0x06
004f16   e103     bnz     0x004f1e         	BNZ	_00768_DS_
                                           ;	.line	151; /home/vbasel/.icaro/v2/firmware/tmp/usb/picUSB.c	requestHandled = 1;
004f18   0e01     movlw   0x01             	MOVLW	0x01
004f1a   0103     movlb   0x3              	BANKSEL	_requestHandled
004f1c   6f41     movwf   0x41, 0x1        	MOVWF	_requestHandled, B
                                           _00768_DS_:
004f1e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004f20   f003
004f22   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004f24   f002
004f26   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004f28   f001
004f2a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004f2c   f000
004f2e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__epapout_init	code
                                           _epapout_init:
                                           ;	.line	39; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	void epapout_init() { return; }
0065ea   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__epapin_init	code
                                           _epapin_init:
                                           ;	.line	38; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	void epapin_init() { return; }
0065ec   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__epap_out	code
                                           _epap_out:
                                           ;	.line	37; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	void epap_out() { return; }
0065ee   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__epap_in	code
                                           _epap_in:
                                           ;	.line	36; /home/vbasel/.icaro/v2/firmware/source/tortucaro/tortucaro.c	void epap_in() { return; }
0065f0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__set_PWM	code
                                           _set_PWM:
                                           ;	.line	188; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	void set_PWM(int input, int value)
00552c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00552e   ffe5
005530   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005532   ffd9
005534   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005536   ffe5
005538   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00553a   ffe5
00553c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00553e   ffe5
005540   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005542   ffe5
005544   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005546   ffe5
005548   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
00554a   ffe5
00554c   0e02     movlw   0x02             	MOVLW	0x02
00554e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005550   f000
005552   0e03     movlw   0x03             	MOVLW	0x03
005554   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005556   f001
005558   0e04     movlw   0x04             	MOVLW	0x04
00555a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00555c   f002
00555e   0e05     movlw   0x05             	MOVLW	0x05
005560   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005562   f003
                                           ;	.line	192; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (input==11)
005564   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005566   0a0b     xorlw   0x0b             	XORLW	0x0b
005568   e102     bnz     0x00556e         	BNZ	_00722_DS_
00556a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00556c   e001     bz      0x005570         	BZ	_00723_DS_
                                           _00722_DS_:
00556e   d018     bra     0x0055a0         	BRA	_00703_DS_
                                           _00723_DS_:
                                           ;	.line	195; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if ((CCP2CON & 0x0F)==0) init_PWM11();
005570   50ba     movf    0xba, 0x0, 0x0   	MOVF	_CCP2CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00701_DS_
                                           ; #	CALL	_init_PWM11
                                           ; #	MOVLW	0x03
                                           ;	.line	196; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
005572   0b0f     andlw   0x0f             	ANDLW	0x0f
005574   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
005576   ecd3     call    0x0065a6, 0x0call    0x0065a6, 0x0 	CALL	_init_PWM11
005578   f032
00557a   0e03     movlw   0x03             	MOVLW	0x03
00557c   1402     andwf   0x02, 0x0, 0x0   	ANDWF	r0x02, W
00557e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
005580   6a05     clrf    0x05, 0x0        	CLRF	r0x05
                                           ;	.line	197; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
005582   3804     swapf   0x04, 0x0, 0x0   	SWAPF	r0x04, W
005584   0bf0     andlw   0xf0             	ANDLW	0xf0
005586   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ;	.line	198; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP2CON&=0x0F;		// reset bit 4:5
005588   0e0f     movlw   0x0f             	MOVLW	0x0f
00558a   16ba     andwf   0xba, 0x1, 0x0   	ANDWF	_CCP2CON, F
                                           ;	.line	199; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP2CON|=octet;		// put in CCP2CON 4:5
00558c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00558e   12ba     iorwf   0xba, 0x1, 0x0   	IORWF	_CCP2CON, F
                                           ;	.line	200; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
005590   3403     rlcf    0x03, 0x0, 0x0   	RLCF	r0x03, W
005592   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
005594   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005596   3403     rlcf    0x03, 0x0, 0x0   	RLCF	r0x03, W
005598   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
00559a   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	201; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	octet=value;		// in octet
00559c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; =DF= MOVFF: SRC op r0x04 replaced by WREG
                                           ;	.line	202; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCPR2L=octet;		// put in CCPR2L
00559e   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           _00703_DS_:
                                           ;	.line	204; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (input==12)
0055a0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0055a2   0a0c     xorlw   0x0c             	XORLW	0x0c
0055a4   e102     bnz     0x0055aa         	BNZ	_00728_DS_
0055a6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0055a8   e001     bz      0x0055ac         	BZ	_00729_DS_
                                           _00728_DS_:
0055aa   d01a     bra     0x0055e0         	BRA	_00708_DS_
                                           _00729_DS_:
                                           ;	.line	207; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if ((CCP1CON & 0x0F)==0) init_PWM12();		
0055ac   50bd     movf    0xbd, 0x0, 0x0   	MOVF	_CCP1CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00705_DS_
                                           ; #	CALL	_init_PWM12
                                           ; #	MOVLW	0x03
                                           ;	.line	208; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
0055ae   0b0f     andlw   0x0f             	ANDLW	0x0f
0055b0   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
0055b2   eccb     call    0x006596, 0x0call    0x006596, 0x0 	CALL	_init_PWM12
0055b4   f032
0055b6   0e03     movlw   0x03             	MOVLW	0x03
0055b8   1402     andwf   0x02, 0x0, 0x0   	ANDWF	r0x02, W
0055ba   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0055bc   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0055be   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0055c0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ;	.line	209; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
0055c2   3804     swapf   0x04, 0x0, 0x0   	SWAPF	r0x04, W
0055c4   0bf0     andlw   0xf0             	ANDLW	0xf0
0055c6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ;	.line	210; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP1CON&=0x0F;		// reset bit 4:5
0055c8   0e0f     movlw   0x0f             	MOVLW	0x0f
0055ca   16bd     andwf   0xbd, 0x1, 0x0   	ANDWF	_CCP1CON, F
                                           ;	.line	211; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP1CON|=octet;		// put in CCP2CON 4:5
0055cc   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0055ce   12bd     iorwf   0xbd, 0x1, 0x0   	IORWF	_CCP1CON, F
                                           ;	.line	212; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
0055d0   3403     rlcf    0x03, 0x0, 0x0   	RLCF	r0x03, W
0055d2   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0055d4   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0055d6   3403     rlcf    0x03, 0x0, 0x0   	RLCF	r0x03, W
0055d8   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0055da   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	213; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	octet=value;		// in octet
0055dc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0055de   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           _00708_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCPR1L=octet;		// put in CCPR1L			
0055e0   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0055e2   f005
0055e4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0055e6   f004
0055e8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0055ea   f003
0055ec   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0055ee   f002
0055f0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0055f2   f001
0055f4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0055f6   f000
0055f8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0055fa   ffd9
0055fc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__init_PWM12	code
                                           _init_PWM12:
                                           ;	.line	181; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	TRISCbits.TRISC2=0;		// C2 is an output
006596   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	182; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
006598   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	183; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
00659a   0e05     movlw   0x05             	MOVLW	0x05
00659c   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
                                           ;	.line	184; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCPR1L=0;				// 8 bits MSB output = 0
00659e   6abe     clrf    0xbe, 0x0        	CLRF	_CCPR1L
                                           ;	.line	185; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP1CON=0x0F;			// configure for PWM 2 bits LSB = 0
0065a0   0e0f     movlw   0x0f             	MOVLW	0x0f
0065a2   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
0065a4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__init_PWM11	code
                                           _init_PWM11:
                                           ;	.line	172; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	TRISCbits.TRISC1=0;		// C1 is an output
0065a6   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	173; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
0065a8   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	174; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
0065aa   0e05     movlw   0x05             	MOVLW	0x05
0065ac   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
                                           ;	.line	175; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCPR2L=0;				// 8 bits MSB output = 0
0065ae   6abb     clrf    0xbb, 0x0        	CLRF	_CCPR2L
                                           ;	.line	176; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP2CON=0x0F;			// configure for PWM 2 bits LSB = 0	
0065b0   0e0f     movlw   0x0f             	MOVLW	0x0f
0065b2   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
0065b4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__PWM_set_percent_dutycycle	code
                                           _PWM_set_percent_dutycycle:
                                           ;	.line	151; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	void PWM_set_percent_dutycycle(u8 pin, u8 percent)
0051d8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051da   ffe5
0051dc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051de   ffd9
0051e0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0051e2   ffe5
0051e4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0051e6   ffe5
0051e8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0051ea   ffe5
0051ec   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0051ee   ffe5
0051f0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0051f2   ffe5
0051f4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0051f6   ffe5
0051f8   0e02     movlw   0x02             	MOVLW	0x02
0051fa   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0051fc   f000
0051fe   0e03     movlw   0x03             	MOVLW	0x03
005200   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005202   f001
                                           ;	.line	154; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (percent == 0)
005204   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005206   e103     bnz     0x00520e         	BNZ	_00675_DS_
                                           ;	.line	156; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	duty = 0;
005208   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00520a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00520c   d030     bra     0x00526e         	BRA	_00676_DS_
                                           _00675_DS_:
                                           ;	.line	158; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	else if (percent >= 100)
00520e   0e64     movlw   0x64             	MOVLW	0x64
005210   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
005212   e308     bnc     0x005224         	BNC	_00672_DS_
005214   0102     movlb   0x2              	BANKSEL	__pr2_plus1
                                           ;	.line	160; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	duty = _pr2_plus1 - 1;
005216   5107     movf    0x07, 0x0, 0x1   	MOVF	__pr2_plus1, W, B
005218   0fff     addlw   0xff             	ADDLW	0xff
00521a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00521c   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00521e   2108     addwfc  0x08, 0x0, 0x1   	ADDWFC	(__pr2_plus1 + 1), W, B
005220   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005222   d025     bra     0x00526e         	BRA	_00676_DS_
                                           _00672_DS_:
                                           ;	.line	164; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	duty = percent * (_pr2_plus1 / 4) / 25;	// (factor PR2/100)
005224   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005226   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
005228   3108     rrcf    0x08, 0x0, 0x1   	RRCF	(__pr2_plus1 + 1), W, B
00522a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ; removed redundant BANKSEL
00522c   3107     rrcf    0x07, 0x0, 0x1   	RRCF	__pr2_plus1, W, B
00522e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
005230   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005232   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
005234   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
005236   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
005238   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00523a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00523c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00523e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005240   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005242   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005244   ec27     call    0x00004e, 0x0call    0x00004e, 0x0 	CALL	__mulint
005246   f000
005248   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00524a   cff3     movff   0xff3, 0x004     	MOVFF	PRODL, r0x04
00524c   f004
00524e   0e04     movlw   0x04             	MOVLW	0x04
005250   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005252   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
005254   0e19     movlw   0x19             	MOVLW	0x19
005256   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005258   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00525a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00525c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00525e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005260   ec25     call    0x00584a, 0x0call    0x00584a, 0x0 	CALL	__divuint
005262   f02c
005264   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
005266   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
005268   f003
00526a   0e04     movlw   0x04             	MOVLW	0x04
00526c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00676_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	PWM_set_dutycycle(pin, duty << 2);
00526e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005270   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005272   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
005274   3403     rlcf    0x03, 0x0, 0x0   	RLCF	r0x03, W
005276   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
005278   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00527a   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
00527c   3604     rlcf    0x04, 0x1, 0x0   	RLCF	r0x04, F
00527e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
005280   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005282   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005284   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005286   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005288   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00528a   ec17     call    0x004c2e, 0x0call    0x004c2e, 0x0 	CALL	_PWM_set_dutycycle
00528c   f026
00528e   0e03     movlw   0x03             	MOVLW	0x03
005290   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
005292   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005294   f005
005296   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005298   f004
00529a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00529c   f003
00529e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0052a0   f002
0052a2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0052a4   f001
0052a6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0052a8   f000
0052aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052ac   ffd9
0052ae   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__PWM_set_dutycycle	code
                                           _PWM_set_dutycycle:
                                           ;	.line	98; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	void PWM_set_dutycycle(u8 pin, u16 duty)
004c2e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c30   ffe5
004c32   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c34   ffd9
004c36   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004c38   ffe5
004c3a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004c3c   ffe5
004c3e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004c40   ffe5
004c42   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004c44   ffe5
004c46   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004c48   ffe5
004c4a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004c4c   ffe5
004c4e   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004c50   ffe5
004c52   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004c54   ffe5
004c56   0e02     movlw   0x02             	MOVLW	0x02
004c58   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004c5a   f000
004c5c   0e03     movlw   0x03             	MOVLW	0x03
004c5e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004c60   f001
004c62   0e04     movlw   0x04             	MOVLW	0x04
004c64   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004c66   f002
                                           ;	.line	102; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (duty > 1023) duty = 1023;		// upper limit (10-bit)
004c68   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
004c6a   e102     bnz     0x004c70         	BNZ	_00660_DS_
004c6c   0e00     movlw   0x00             	MOVLW	0x00
004c6e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00660_DS_:
004c70   e303     bnc     0x004c78         	BNC	_00635_DS_
004c72   6801     setf    0x01, 0x0        	SETF	r0x01
004c74   0e03     movlw   0x03             	MOVLW	0x03
004c76   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00635_DS_:
                                           ;	.line	105; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	pinmode(pin, INPUT);				// PWM pin as INPUT
004c78   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
004c7a   f003
004c7c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
004c7e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004c80   0e01     movlw   0x01             	MOVLW	0x01
004c82   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c84   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004c86   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004c88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004c8a   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
004c8c   f017
004c8e   0e04     movlw   0x04             	MOVLW	0x04
004c90   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004c92   0102     movlb   0x2              	BANKSEL	__pr2_plus1
                                           ;	.line	107; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	PR2 = _pr2_plus1 - 1;				// set PR2
004c94   5107     movf    0x07, 0x0, 0x1   	MOVF	__pr2_plus1, W, B
004c96   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004c98   0405     decf    0x05, 0x0, 0x0   	DECF	r0x05, W
004c9a   6ecb     movwf   0xcb, 0x0        	MOVWF	_PR2
                                           ;	.line	109; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (pin == 11)
004c9c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004c9e   0a0b     xorlw   0x0b             	XORLW	0x0b
004ca0   e113     bnz     0x004cc8         	BNZ	_00637_DS_
                                           ;	.line	112; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP2CON = Bin(00001111);		// reset also 2 LSbits of duty cycle
004ca2   0e0f     movlw   0x0f             	MOVLW	0x0f
004ca4   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	114; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of duty
004ca6   0e03     movlw   0x03             	MOVLW	0x03
004ca8   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
004caa   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004cac   6a06     clrf    0x06, 0x0        	CLRF	r0x06
                                           ;	.line	115; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
004cae   3805     swapf   0x05, 0x0, 0x0   	SWAPF	r0x05, W
004cb0   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	116; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP2CON |= temp;				// put in CCP2CON 4:5  (DCBx1 and DCBx0)
004cb2   12ba     iorwf   0xba, 0x1, 0x0   	IORWF	_CCP2CON, F
                                           ;	.line	117; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCPR2L = duty >> 2;				// 8 MSbits of duty
004cb4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004cb6   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
004cb8   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
004cba   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
004cbc   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004cbe   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004cc0   3207     rrcf    0x07, 0x1, 0x0   	RRCF	r0x07, F
004cc2   3206     rrcf    0x06, 0x1, 0x0   	RRCF	r0x06, F
004cc4   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
004cc6   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           _00637_DS_:
                                           ;	.line	120; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (pin == 12)
004cc8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cca   0a0c     xorlw   0x0c             	XORLW	0x0c
004ccc   e113     bnz     0x004cf4         	BNZ	_00639_DS_
                                           ;	.line	123; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP1CON = Bin(00001111);
004cce   0e0f     movlw   0x0f             	MOVLW	0x0f
004cd0   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	125; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of the duty
004cd2   0e03     movlw   0x03             	MOVLW	0x03
004cd4   1401     andwf   0x01, 0x0, 0x0   	ANDWF	r0x01, W
004cd6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004cd8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
004cda   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cdc   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
                                           ;	.line	126; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
004cde   3805     swapf   0x05, 0x0, 0x0   	SWAPF	r0x05, W
004ce0   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	127; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCP1CON |= temp;				// put in CCP2CON 4:5
004ce2   12bd     iorwf   0xbd, 0x1, 0x0   	IORWF	_CCP1CON, F
                                           ;	.line	128; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	CCPR1L = duty >> 2;				// 8 MSbits of the duty
004ce4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004ce6   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004ce8   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004cea   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004cec   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004cee   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004cf0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004cf2   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           _00639_DS_:
                                           ;	.line	132; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	PIR1bits.TMR2IF = 0;				// reset this flag for the next test
004cf4   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
                                           ;	.line	133; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	T2CON = _t2con;						// Timer2 prescaler
004cf6   c340     movff   0x340, 0xfca     	MOVFF	__t2con, _T2CON
004cf8   ffca
                                           ;	.line	134; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	T2CONbits.TMR2ON = ON;				// enable Timer2
004cfa   84ca     bsf     0xca, 0x2, 0x0   	BSF	_T2CONbits, 2
                                           _00640_DS_:
                                           ;	.line	136; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	while (PIR1bits.TMR2IF == 0);		// Wait until TMR2 overflows
004cfc   a29e     btfss   0x9e, 0x1, 0x0   	BTFSS	_PIR1bits, 1
004cfe   d7fe     bra     0x004cfc         	BRA	_00640_DS_
                                           ;	.line	137; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	pinmode(pin, OUTPUT);				// PWM pin as OUTPUT
004d00   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004d02   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004d04   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004d06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d08   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004d0a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004d0c   ece2     call    0x002fc4, 0x0call    0x002fc4, 0x0 	CALL	_pinmode
004d0e   f017
004d10   0e04     movlw   0x04             	MOVLW	0x04
004d12   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004d14   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004d16   f007
004d18   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004d1a   f006
004d1c   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004d1e   f005
004d20   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004d22   f004
004d24   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004d26   f003
004d28   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004d2a   f002
004d2c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004d2e   f001
004d30   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004d32   f000
004d34   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d36   ffd9
004d38   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__PWM_set_frequency	code
                                           _PWM_set_frequency:
                                           ;	.line	55; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	void PWM_set_frequency(u32 freq)
0052b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0052b2   ffe5
0052b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0052b6   ffd9
0052b8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0052ba   ffe5
0052bc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0052be   ffe5
0052c0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0052c2   ffe5
0052c4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0052c6   ffe5
0052c8   0e02     movlw   0x02             	MOVLW	0x02
0052ca   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0052cc   f000
0052ce   0e03     movlw   0x03             	MOVLW	0x03
0052d0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0052d2   f001
0052d4   0e04     movlw   0x04             	MOVLW	0x04
0052d6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0052d8   f002
0052da   0e05     movlw   0x05             	MOVLW	0x05
0052dc   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0052de   f003
                                           ;	.line	58; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	_pr2_plus1 = MIPS / freq;				// FOSC / (4 * PWM Frequency)
0052e0   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0052e2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052e4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0052e6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052e8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0052ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052ec   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0052ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052f0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052f2   0eb7     movlw   0xb7             	MOVLW	0xb7
0052f4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052f6   0e1b     movlw   0x1b             	MOVLW	0x1b
0052f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0052fa   0e00     movlw   0x00             	MOVLW	0x00
0052fc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0052fe   ece0     call    0x0047c0, 0x0call    0x0047c0, 0x0 	CALL	__divulong
005300   f023
005302   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005304   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005306   f001
005308   0e08     movlw   0x08             	MOVLW	0x08
00530a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00530c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00530e   0102     movlb   0x2              	BANKSEL	__pr2_plus1
005310   6f07     movwf   0x07, 0x1        	MOVWF	__pr2_plus1, B
005312   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005314   6f08     movwf   0x08, 0x1        	MOVWF	(__pr2_plus1 + 1), B
                                           ;	.line	64; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (_pr2_plus1 <= 4096)					// check if it's not too high
005316   0e10     movlw   0x10             	MOVLW	0x10
                                           ; removed redundant BANKSEL
005318   5d08     subwf   0x08, 0x0, 0x1   	SUBWF	(__pr2_plus1 + 1), W, B
00531a   e102     bnz     0x005320         	BNZ	_00627_DS_
00531c   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
00531e   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	__pr2_plus1, W, B
                                           _00627_DS_:
005320   e227     bc      0x005370         	BC	_00616_DS_
                                           ;	.line	66; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	if (_pr2_plus1 <= 256)				// no needs of any prescaler
005322   0e01     movlw   0x01             	MOVLW	0x01
005324   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
005326   5d08     subwf   0x08, 0x0, 0x1   	SUBWF	(__pr2_plus1 + 1), W, B
005328   e102     bnz     0x00532e         	BNZ	_00628_DS_
00532a   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
00532c   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	__pr2_plus1, W, B
                                           _00628_DS_:
00532e   e203     bc      0x005336         	BC	_00612_DS_
005330   0103     movlb   0x3              	BANKSEL	__t2con
                                           ;	.line	68; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	_t2con = Bin(00);				// prescaler is 1
005332   6b40     clrf    0x40, 0x1        	CLRF	__t2con, B
005334   d01d     bra     0x005370         	BRA	_00616_DS_
                                           _00612_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	else if (_pr2_plus1 <= 1024)		// needs prescaler 1:4
005336   0e04     movlw   0x04             	MOVLW	0x04
005338   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
00533a   5d08     subwf   0x08, 0x0, 0x1   	SUBWF	(__pr2_plus1 + 1), W, B
00533c   e102     bnz     0x005342         	BNZ	_00629_DS_
00533e   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
005340   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	__pr2_plus1, W, B
                                           _00629_DS_:
005342   e20b     bc      0x00535a         	BC	_00609_DS_
                                           ;	.line	72; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 2;	// divided by 4
005344   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005346   0102     movlb   0x2              	BANKSEL	(__pr2_plus1 + 1)
005348   3308     rrcf    0x08, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
00534a   3307     rrcf    0x07, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
00534c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
                                           ; removed redundant BANKSEL
00534e   3308     rrcf    0x08, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
005350   3307     rrcf    0x07, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
                                           ;	.line	73; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	_t2con = Bin(01);				// prescaler is 4
005352   0e01     movlw   0x01             	MOVLW	0x01
005354   0103     movlb   0x3              	BANKSEL	__t2con
005356   6f40     movwf   0x40, 0x1        	MOVWF	__t2con, B
005358   d00b     bra     0x005370         	BRA	_00616_DS_
                                           _00609_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 4;	// divided by 16
00535a   0ef0     movlw   0xf0             	MOVLW	0xf0
00535c   0102     movlb   0x2              	BANKSEL	__pr2_plus1
00535e   1707     andwf   0x07, 0x1, 0x1   	ANDWF	__pr2_plus1, F, B
005360   3b07     swapf   0x07, 0x1, 0x1   	SWAPF	__pr2_plus1, F, B
                                           ; removed redundant BANKSEL
005362   3b08     swapf   0x08, 0x1, 0x1   	SWAPF	(__pr2_plus1 + 1), F, B
005364   1508     andwf   0x08, 0x0, 0x1   	ANDWF	(__pr2_plus1 + 1), W, B
005366   1b08     xorwf   0x08, 0x1, 0x1   	XORWF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
005368   2707     addwf   0x07, 0x1, 0x1   	ADDWF	__pr2_plus1, F, B
                                           ;	.line	78; /home/vbasel/.icaro/v2/firmware/tmp/pwm.c	_t2con = Bin(10);				// prescaler is 16
00536a   0e02     movlw   0x02             	MOVLW	0x02
00536c   0103     movlb   0x3              	BANKSEL	__t2con
00536e   6f40     movwf   0x40, 0x1        	MOVWF	__t2con, B
                                           _00616_DS_:
005370   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005372   f003
005374   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005376   f002
005378   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00537a   f001
00537c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00537e   f000
005380   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005382   ffd9
005384   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/vbasel/.icaro/v2/firmware/tmp/arduinodelay.c	void Delayus(int microsecondes)
006186   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006188   ffe5
00618a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00618c   ffd9
00618e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006190   ffe5
006192   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006194   ffe5
006196   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
006198   ffe5
00619a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00619c   ffe5
00619e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0061a0   ffe5
0061a2   0e02     movlw   0x02             	MOVLW	0x02
0061a4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0061a6   f000
0061a8   0e03     movlw   0x03             	MOVLW	0x03
0061aa   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0061ac   f001
                                           ;	.line	20; /home/vbasel/.icaro/v2/firmware/tmp/arduinodelay.c	for (i=0;i<microsecondes;i++);
0061ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0061b0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00592_DS_:
0061b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0061b4   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
0061b6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0061b8   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0061ba   e102     bnz     0x0061c0         	BNZ	_00603_DS_
0061bc   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0061be   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _00603_DS_:
0061c0   e203     bc      0x0061c8         	BC	_00594_DS_
0061c2   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
0061c4   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0061c6   d7f5     bra     0x0061b2         	BRA	_00592_DS_
                                           _00594_DS_:
0061c8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0061ca   f004
0061cc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0061ce   f003
0061d0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0061d2   f002
0061d4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0061d6   f001
0061d8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0061da   f000
0061dc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0061de   ffd9
0061e0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/vbasel/.icaro/v2/firmware/tmp/arduinodelay.c	void Delayms(unsigned long milliseconde)
005ae4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005ae6   ffe5
005ae8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005aea   ffd9
005aec   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005aee   ffe5
005af0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005af2   ffe5
005af4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005af6   ffe5
005af8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005afa   ffe5
005afc   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
005afe   ffe5
005b00   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
005b02   ffe5
005b04   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
005b06   ffe5
005b08   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
005b0a   ffe5
005b0c   0e02     movlw   0x02             	MOVLW	0x02
005b0e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005b10   f000
005b12   0e03     movlw   0x03             	MOVLW	0x03
005b14   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005b16   f001
005b18   0e04     movlw   0x04             	MOVLW	0x04
005b1a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005b1c   f002
005b1e   0e05     movlw   0x05             	MOVLW	0x05
005b20   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
005b22   f003
                                           ;	.line	13; /home/vbasel/.icaro/v2/firmware/tmp/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
005b24   6a04     clrf    0x04, 0x0        	CLRF	r0x04
005b26   6a05     clrf    0x05, 0x0        	CLRF	r0x05
005b28   6a06     clrf    0x06, 0x0        	CLRF	r0x06
005b2a   6a07     clrf    0x07, 0x0        	CLRF	r0x07
                                           _00573_DS_:
005b2c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
005b2e   5c07     subwf   0x07, 0x0, 0x0   	SUBWF	r0x07, W
005b30   e108     bnz     0x005b42         	BNZ	_00584_DS_
005b32   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005b34   5c06     subwf   0x06, 0x0, 0x0   	SUBWF	r0x06, W
005b36   e105     bnz     0x005b42         	BNZ	_00584_DS_
005b38   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005b3a   5c05     subwf   0x05, 0x0, 0x0   	SUBWF	r0x05, W
005b3c   e102     bnz     0x005b42         	BNZ	_00584_DS_
005b3e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005b40   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
                                           _00584_DS_:
005b42   e20a     bc      0x005b58         	BC	_00575_DS_
005b44   0e01     movlw   0x01             	MOVLW	0x01
005b46   ec37     call    0x00006e, 0x0call    0x00006e, 0x0 	CALL	_delay10ktcy
005b48   f000
005b4a   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
005b4c   e3ef     bnc     0x005b2c         	BNC	_00573_DS_
005b4e   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
005b50   e3ed     bnc     0x005b2c         	BNC	_00573_DS_
005b52   4a06     infsnz  0x06, 0x1, 0x0   	INFSNZ	r0x06, F
005b54   2a07     incf    0x07, 0x1, 0x0   	INCF	r0x07, F
                                           _00585_DS_:
005b56   d7ea     bra     0x005b2c         	BRA	_00573_DS_
                                           _00575_DS_:
005b58   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
005b5a   f007
005b5c   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
005b5e   f006
005b60   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
005b62   f005
005b64   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
005b66   f004
005b68   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005b6a   f003
005b6c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005b6e   f002
005b70   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005b72   f001
005b74   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005b76   f000
005b78   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005b7a   ffd9
005b7c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogread	code
                                           _analogread:
                                           ;	.line	40; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	unsigned int analogread(unsigned char channel)
005db6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005db8   ffe5
005dba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005dbc   ffd9
005dbe   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005dc0   ffe5
005dc2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005dc4   ffe5
005dc6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005dc8   ffe5
005dca   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005dcc   ffe5
005dce   0e02     movlw   0x02             	MOVLW	0x02
005dd0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005dd2   f000
                                           ;	.line	55; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON0=(channel-13)*4;
005dd4   0ef3     movlw   0xf3             	MOVLW	0xf3
005dd6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
005dd8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005dda   0d04     mullw   0x04             	MULLW	0x04
005ddc   cff3     movff   0xff3, 0xfc2     	MOVFF	PRODL, _ADCON0
005dde   ffc2
                                           ;	.line	59; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON0bits.ADON=1;
005de0   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	60; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
005de2   0e09     movlw   0x09             	MOVLW	0x09
005de4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005de6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00565_DS_:
005de8   0000     nop                      	NOP	
005dea   0eff     movlw   0xff             	MOVLW	0xff
005dec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005dee   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005df0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005df2   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
005df4   e1f9     bnz     0x005de8         	BNZ	_00565_DS_
                                           ;	.line	61; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON0bits.GO=1;
005df6   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00560_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	while (ADCON0bits.GO);
005df8   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
005dfa   d7fe     bra     0x005df8         	BRA	_00560_DS_
                                           ;	.line	63; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	result=ADRESH<<8;
005dfc   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
005dfe   f000
005e00   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005e02   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005e04   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005e06   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	64; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	result+=ADRESL;
005e08   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
005e0a   f000
005e0c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005e0e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005e10   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
005e12   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005e14   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	65; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON0bits.ADON=0;
005e16   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	66; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	return(result);
005e18   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
005e1a   fff3
005e1c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005e1e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005e20   f003
005e22   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005e24   f002
005e26   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005e28   f001
005e2a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005e2c   f000
005e2e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005e30   ffd9
005e32   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogReference	code
                                           _analogReference:
                                           ;	.line	32; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	void analogReference(unsigned char Type)
00651e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006520   ffe5
006522   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006524   ffd9
006526   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006528   ffe5
00652a   0e02     movlw   0x02             	MOVLW	0x02
00652c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00652e   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00543_DS_
                                           ; #	GOTO	_00545_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	34; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	if(Type == DEFAULTAN)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
006530   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	35; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON1|=0x00;			//Vref+ = VDD
006532   e004     bz      0x00653c         	BZ	_00545_DS_
                                           ;	.line	36; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
006534   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
006536   0a01     xorlw   0x01             	XORLW	0x01
006538   e101     bnz     0x00653c         	BNZ	_00545_DS_
                                           ;	.line	37; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON1|=0x10;			//Vref+ = External source
00653a   88c1     bsf     0xc1, 0x4, 0x0   	BSF	_ADCON1, 4
                                           _00545_DS_:
00653c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00653e   f000
006540   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006542   ffd9
006544   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analog_init	code
                                           _analog_init:
                                           ;	.line	15; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	TRISA=TRISA | 0x2F;
0065b6   0e2f     movlw   0x2f             	MOVLW	0x2f
0065b8   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
                                           ;	.line	16; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	TRISE=TRISE | 0x07;	
0065ba   0e07     movlw   0x07             	MOVLW	0x07
0065bc   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
                                           ;	.line	17; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON1=0x07;
0065be   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	18; /home/vbasel/.icaro/v2/firmware/tmp/analog.c	ADCON2=0xBD;
0065c0   0ebd     movlw   0xbd             	MOVLW	0xbd
0065c2   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
0065c4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (PIR1bits.TMR1IF) {
0062da   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
0062dc   d020     bra     0x00631e         	BRA	_00530_DS_
                                           ;	.line	289; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	PIR1bits.TMR1IF=0;
0062de   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	T1CON=0x00;
0062e0   6acd     clrf    0xcd, 0x0        	CLRF	_T1CON
0062e2   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	291; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (phase) {
0062e4   5101     movf    0x01, 0x0, 0x1   	MOVF	_phase, W, B
0062e6   e00b     bz      0x0062fe         	BZ	_00526_DS_
                                           ;	.line	293; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	ServosPulseUp();
0062e8   ecea     call    0x0065d4, 0x0call    0x0065d4, 0x0 	CALL	_ServosPulseUp
0062ea   f032
                                           ;	.line	295; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TMR1H= 0xf2; //0xd3;
0062ec   0ef2     movlw   0xf2             	MOVLW	0xf2
0062ee   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	296; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TMR1L= 0x30;//ff; //0x8f;
0062f0   0e30     movlw   0x30             	MOVLW	0x30
0062f2   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	298; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	T1CON=1;
0062f4   0e01     movlw   0x01             	MOVLW	0x01
0062f6   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
0062f8   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	299; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	phase = 0;
0062fa   6b01     clrf    0x01, 0x1        	CLRF	_phase, B
0062fc   d010     bra     0x00631e         	BRA	_00530_DS_
                                           _00526_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	ServosPulseDown();
0062fe   ec22     call    0x005a44, 0x0call    0x005a44, 0x0 	CALL	_ServosPulseDown
006300   f02d
                                           ;	.line	308; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TMR1H= 0x2d;//0x2d;
006302   0e2d     movlw   0x2d             	MOVLW	0x2d
006304   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	309; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TMR1L= 0x0f;
006306   0e0f     movlw   0x0f             	MOVLW	0x0f
006308   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00524_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
00630a   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	311; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (needreordering)	
00630c   5102     movf    0x02, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
00630e   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	313; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
006310   ece7     call    0x002bce, 0x0call    0x002bce, 0x0 	CALL	_SortServoTimings
006312   f015
006314   0e21     movlw   0x21             	MOVLW	0x21
006316   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	314; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
006318   0e01     movlw   0x01             	MOVLW	0x01
00631a   0102     movlb   0x2              	BANKSEL	_phase
00631c   6f01     movwf   0x01, 0x1        	MOVWF	_phase, B
                                           _00530_DS_:
                                           ;	.line	317; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	return;
00631e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	void ServoMaximumPulse(uchar servo)
006320   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006322   ffe5
006324   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006326   ffd9
006328   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00632a   ffe5
00632c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00632e   ffe5
006330   0e02     movlw   0x02             	MOVLW	0x02
006332   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006334   f000
                                           ;	.line	275; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
006336   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00512_DS_
                                           ; #	GOTO	_00513_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	return;
006338   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	278; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
00633a   e20e     bc      0x006358         	BC	_00513_DS_
00633c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00633e   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
006340   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006342   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
006344   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
006346   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006348   ffe9
00634a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00634c   ffea
00634e   0efa     movlw   0xfa             	MOVLW	0xfa
006350   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	280; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
006352   0e01     movlw   0x01             	MOVLW	0x01
006354   0102     movlb   0x2              	BANKSEL	_needreordering
006356   6f02     movwf   0x02, 0x1        	MOVWF	_needreordering, B
                                           _00513_DS_:
006358   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00635a   f001
00635c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00635e   f000
006360   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006362   ffd9
006364   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	void ServoMinimumPulse(uchar servo)
0063f0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0063f2   ffe5
0063f4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0063f6   ffd9
0063f8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0063fa   ffe5
0063fc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0063fe   ffe5
006400   0e02     movlw   0x02             	MOVLW	0x02
006402   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006404   f000
                                           ;	.line	264; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
006406   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00500_DS_
                                           ; #	GOTO	_00501_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	return;
006408   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	267; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
00640a   e20d     bc      0x006426         	BC	_00501_DS_
00640c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00640e   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
006410   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
006412   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
006414   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
006416   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006418   ffe9
00641a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00641c   ffea
00641e   0e01     movlw   0x01             	MOVLW	0x01
006420   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
006422   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	269; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
006424   6f02     movwf   0x02, 0x1        	MOVWF	_needreordering, B
                                           _00501_DS_:
006426   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006428   f001
00642a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00642c   f000
00642e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006430   ffd9
006432   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	unsigned char ServoRead(uchar servo)
006366   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006368   ffe5
00636a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00636c   ffd9
00636e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006370   ffe5
006372   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006374   ffe5
006376   0e02     movlw   0x02             	MOVLW	0x02
006378   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00637a   f000
                                           ;	.line	256; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
00637c   0e12     movlw   0x12             	MOVLW	0x12
00637e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
006380   e302     bnc     0x006386         	BNC	_00488_DS_
                                           ;	.line	257; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	return 0;
006382   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
006384   d00c     bra     0x00639e         	BRA	_00489_DS_
                                           _00488_DS_:
                                           ;	.line	258; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	return servovalues[servo];
006386   6a01     clrf    0x01, 0x0        	CLRF	r0x01
006388   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
00638a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00638c   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
00638e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
006390   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006392   ffe9
006394   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
006396   ffea
006398   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00639a   f000
00639c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00489_DS_:
00639e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0063a0   f001
0063a2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0063a4   f000
0063a6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0063a8   ffd9
0063aa   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	void ServoWrite(uchar servo, uchar value)
005ffa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005ffc   ffe5
005ffe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006000   ffd9
006002   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006004   ffe5
006006   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006008   ffe5
00600a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00600c   ffe5
00600e   0e02     movlw   0x02             	MOVLW	0x02
006010   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
006012   f000
006014   0e03     movlw   0x03             	MOVLW	0x03
006016   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
006018   f001
                                           ;	.line	241; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
00601a   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00464_DS_
                                           ; #	GOTO	_00469_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	return;
00601c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	244; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
00601e   e218     bc      0x006050         	BC	_00469_DS_
006020   0e01     movlw   0x01             	MOVLW	0x01
006022   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
006024   e202     bc      0x00602a         	BC	_00466_DS_
                                           ;	.line	245; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	value=SERVOMIN;
006026   0e01     movlw   0x01             	MOVLW	0x01
006028   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           _00466_DS_:
                                           ;	.line	246; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
00602a   0efb     movlw   0xfb             	MOVLW	0xfb
00602c   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
00602e   e302     bnc     0x006034         	BNC	_00468_DS_
                                           ;	.line	247; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	value=SERVOMAX;
006030   0efa     movlw   0xfa             	MOVLW	0xfa
006032   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           _00468_DS_:
                                           ;	.line	248; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	servovalues[servo]=value;
006034   6a02     clrf    0x02, 0x0        	CLRF	r0x02
006036   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
006038   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00603a   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
00603c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00603e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
006040   ffe9
006042   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
006044   ffea
006046   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
006048   ffef
                                           ;	.line	250; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
00604a   0e01     movlw   0x01             	MOVLW	0x01
00604c   0102     movlb   0x2              	BANKSEL	_needreordering
00604e   6f02     movwf   0x02, 0x1        	MOVWF	_needreordering, B
                                           _00469_DS_:
006050   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
006052   f002
006054   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
006056   f001
006058   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00605a   f000
00605c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00605e   ffd9
006060   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	void ServoDetach(uchar pin)
005386   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005388   ffe5
00538a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00538c   ffd9
00538e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005390   ffe5
005392   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005394   ffe5
005396   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005398   ffe5
00539a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00539c   ffe5
00539e   0e02     movlw   0x02             	MOVLW	0x02
0053a0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0053a2   f000
                                           ;	.line	227; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(pin>=18) return;
0053a4   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00437_DS_
                                           ; #	GOTO	_00444_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(pin<8){
0053a6   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0053a8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0053aa   d04c     bra     0x005444         	BRA	_00444_DS_
0053ac   0e08     movlw   0x08             	MOVLW	0x08
0053ae   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0053b0   e218     bc      0x0053e2         	BC	_00442_DS_
                                           ;	.line	230; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
0053b2   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
0053b4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0053b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0053b8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0053ba   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
0053bc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0053be   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0053c0   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
0053c2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0053c4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0053c6   fff6
0053c8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0053ca   fff7
0053cc   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0053ce   fff8
0053d0   0009     tblrd*+                  	TBLRD*+	
0053d2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0053d4   f001
0053d6   0102     movlb   0x2              	BANKSEL	_activatedservos
0053d8   5104     movf    0x04, 0x0, 0x1   	MOVF	_activatedservos, W, B
0053da   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0053dc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0053de   6f04     movwf   0x04, 0x1        	MOVWF	_activatedservos, B
0053e0   d031     bra     0x005444         	BRA	_00444_DS_
                                           _00442_DS_:
                                           ;	.line	231; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	} else if (pin>12) {
0053e2   0e0d     movlw   0x0d             	MOVLW	0x0d
0053e4   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0053e6   e318     bnc     0x005418         	BNC	_00439_DS_
                                           ;	.line	232; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
0053e8   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
0053ea   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0053ec   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0053ee   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0053f0   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
0053f2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0053f4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0053f6   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
0053f8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0053fa   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0053fc   fff6
0053fe   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
005400   fff7
005402   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
005404   fff8
005406   0009     tblrd*+                  	TBLRD*+	
005408   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00540a   f001
00540c   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
00540e   5106     movf    0x06, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
005410   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
005412   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
005414   6f06     movwf   0x06, 0x1        	MOVWF	(_activatedservos + 2), B
005416   d016     bra     0x005444         	BRA	_00444_DS_
                                           _00439_DS_:
                                           ;	.line	234; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
005418   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00541a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00541c   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
00541e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005420   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
005422   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005424   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
005426   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005428   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00542a   fff6
00542c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00542e   fff7
005430   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
005432   fff8
005434   0009     tblrd*+                  	TBLRD*+	
005436   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
005438   f000
00543a   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
00543c   5105     movf    0x05, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
00543e   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
005440   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
005442   6f05     movwf   0x05, 0x1        	MOVWF	(_activatedservos + 1), B
                                           _00444_DS_:
005444   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005446   f003
005448   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00544a   f002
00544c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00544e   f001
005450   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005452   f000
005454   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005456   ffd9
005458   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	void ServoAttach(uchar pin)
00469c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00469e   ffe5
0046a0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0046a2   ffd9
0046a4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0046a6   ffe5
0046a8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0046aa   ffe5
0046ac   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0046ae   ffe5
0046b0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0046b2   ffe5
0046b4   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0046b6   ffe5
0046b8   0e02     movlw   0x02             	MOVLW	0x02
0046ba   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0046bc   f000
                                           ;	.line	210; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(pin>=18) return;
0046be   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00409_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if(pin<8){
0046c0   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0046c2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0046c4   d070     bra     0x0047a6         	BRA	_00416_DS_
0046c6   0e08     movlw   0x08             	MOVLW	0x08
0046c8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0046ca   e224     bc      0x004714         	BC	_00414_DS_
                                           ;	.line	213; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
0046cc   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
0046ce   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0046d0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0046d2   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0046d4   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
0046d6   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0046d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0046da   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
0046dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0046de   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0046e0   fff6
0046e2   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0046e4   fff7
0046e6   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0046e8   fff8
0046ea   0009     tblrd*+                  	TBLRD*+	
0046ec   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0046ee   f004
0046f0   0102     movlb   0x2              	BANKSEL	_activatedservos
0046f2   5104     movf    0x04, 0x0, 0x1   	MOVF	_activatedservos, W, B
0046f4   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0046f6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0046f8   6f04     movwf   0x04, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
0046fa   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0046fc   fff6
0046fe   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004700   fff7
004702   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004704   fff8
004706   0009     tblrd*+                  	TBLRD*+	
004708   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00470a   f001
00470c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00470e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004710   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
004712   d049     bra     0x0047a6         	BRA	_00416_DS_
                                           _00414_DS_:
                                           ;	.line	215; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	} else if (pin>12) {
004714   0e0d     movlw   0x0d             	MOVLW	0x0d
004716   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004718   e324     bnc     0x004762         	BNC	_00411_DS_
                                           ;	.line	216; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
00471a   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
00471c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00471e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004720   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004722   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
004724   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004726   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004728   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
00472a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00472c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00472e   fff6
004730   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004732   fff7
004734   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004736   fff8
004738   0009     tblrd*+                  	TBLRD*+	
00473a   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00473c   f004
00473e   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
004740   5106     movf    0x06, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
004742   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
004744   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
004746   6f06     movwf   0x06, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
004748   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00474a   fff6
00474c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00474e   fff7
004750   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004752   fff8
004754   0009     tblrd*+                  	TBLRD*+	
004756   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
004758   f001
00475a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00475c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00475e   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
004760   d022     bra     0x0047a6         	BRA	_00416_DS_
                                           _00411_DS_:
                                           ;	.line	219; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
004762   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004764   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004766   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
004768   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00476a   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
00476c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00476e   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
004770   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004772   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004774   fff6
004776   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004778   fff7
00477a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00477c   fff8
00477e   0009     tblrd*+                  	TBLRD*+	
004780   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
004782   f003
004784   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
004786   5105     movf    0x05, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
004788   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
00478a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00478c   6f05     movwf   0x05, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
00478e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
004790   fff6
004792   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
004794   fff7
004796   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
004798   fff8
00479a   0009     tblrd*+                  	TBLRD*+	
00479c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00479e   f000
0047a0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0047a2   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0047a4   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           _00416_DS_:
0047a6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0047a8   f004
0047aa   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0047ac   f003
0047ae   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0047b0   f002
0047b2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0047b4   f001
0047b6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0047b8   f000
0047ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047bc   ffd9
0047be   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	static void SortServoTimings()
002bce   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002bd0   ffe5
002bd2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002bd4   ffe5
002bd6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002bd8   ffe5
002bda   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002bdc   ffe5
002bde   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002be0   ffe5
002be2   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002be4   ffe5
002be6   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002be8   ffe5
002bea   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002bec   ffe5
002bee   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
002bf0   ffe5
002bf2   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
002bf4   ffe5
002bf6   c00a     movff   0x00a, 0xfe5     	MOVFF	r0x0a, POSTDEC1
002bf8   ffe5
002bfa   c00b     movff   0x00b, 0xfe5     	MOVFF	r0x0b, POSTDEC1
002bfc   ffe5
002bfe   c00c     movff   0x00c, 0xfe5     	MOVFF	r0x0c, POSTDEC1
002c00   ffe5
002c02   0103     movlb   0x3              	BANKSEL	_SortServoTimings_mascaratotal_1_27
                                           ;	.line	131; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
002c04   6b2b     clrf    0x2b, 0x1        	CLRF	_SortServoTimings_mascaratotal_1_27, B
                                           ; removed redundant BANKSEL
002c06   6b2c     clrf    0x2c, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ; removed redundant BANKSEL
002c08   6b2d     clrf    0x2d, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	134; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(t=0;t<18;t++){
002c0a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00325_DS_:
                                           ;	.line	135; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[timevalue][t]=255;
002c0c   0ec2     movlw   0xc2             	MOVLW	LOW(_timings + 54)
002c0e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c10   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c12   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c14   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 54)
002c16   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c18   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002c1a   ffe9
002c1c   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002c1e   ffea
002c20   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	137; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002c22   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
002c24   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c26   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c28   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c2a   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
002c2c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c2e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002c30   ffe9
002c32   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002c34   ffea
002c36   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	138; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
002c38   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
002c3a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c3c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c3e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c40   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
002c42   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c44   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
002c46   ffe9
002c48   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
002c4a   ffea
002c4c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	134; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(t=0;t<18;t++){
002c4e   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
002c50   0e12     movlw   0x12             	MOVLW	0x12
002c52   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002c54   e3db     bnc     0x002c0c         	BNC	_00325_DS_
                                           ;	.line	141; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	totalservos=0;
002c56   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	143; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	while(totalservos<18) {
002c58   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00322_DS_:
002c5a   0e12     movlw   0x12             	MOVLW	0x12
002c5c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002c5e   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002c60   d194     bra     0x002f8a         	BRA	_00324_DS_
                                           ;	.line	144; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos=1;
002c62   0e01     movlw   0x01             	MOVLW	0x01
002c64   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ;	.line	145; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
002c66   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _00327_DS_:
                                           ;	.line	147; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (s<8){
002c68   0e08     movlw   0x08             	MOVLW	0x08
002c6a   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
002c6c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002c6e   d061     bra     0x002d32         	BRA	_00319_DS_
                                           ;	.line	148; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002c70   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
002c72   2403     addwf   0x03, 0x0, 0x0   	ADDWF	r0x03, W
002c74   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002c76   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002c78   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
002c7a   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002c7c   6a06     clrf    0x06, 0x0        	CLRF	r0x06
002c7e   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
002c80   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
002c82   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
002c84   fff6
002c86   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
002c88   fff7
002c8a   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
002c8c   fff8
002c8e   0009     tblrd*+                  	TBLRD*+	
002c90   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c92   f004
002c94   0103     movlb   0x3              	BANKSEL	_SortServoTimings_mascaratotal_1_27
002c96   512b     movf    0x2b, 0x0, 0x1   	MOVF	_SortServoTimings_mascaratotal_1_27, W, B
002c98   1604     andwf   0x04, 0x1, 0x0   	ANDWF	r0x04, F
002c9a   0102     movlb   0x2              	BANKSEL	_activatedservos
002c9c   5104     movf    0x04, 0x0, 0x1   	MOVF	_activatedservos, W, B
002c9e   1604     andwf   0x04, 0x1, 0x0   	ANDWF	r0x04, F
002ca0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002ca2   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
002ca4   d148     bra     0x002f36         	BRA	_00328_DS_
                                           ;	.line	150; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002ca6   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
002ca8   2403     addwf   0x03, 0x0, 0x0   	ADDWF	r0x03, W
002caa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002cac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002cae   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
002cb0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002cb2   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002cb4   ffe9
002cb6   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002cb8   ffea
002cba   cfef     movff   0xfef, 0x004     	MOVFF	INDF0, r0x04
002cbc   f004
002cbe   0ec2     movlw   0xc2             	MOVLW	LOW(_timings + 54)
002cc0   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002cc2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002cc4   6a06     clrf    0x06, 0x0        	CLRF	r0x06
002cc6   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 54)
002cc8   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
002cca   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
002ccc   ffe9
002cce   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
002cd0   ffea
002cd2   cfef     movff   0xfef, 0x007     	MOVFF	INDF0, r0x07
002cd4   f007
002cd6   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
002cd8   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
002cda   e21f     bc      0x002d1a         	BC	_00294_DS_
                                           ;	.line	151; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002cdc   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
002cde   ffe9
002ce0   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
002ce2   ffea
002ce4   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
002ce6   ffef
                                           ;	.line	153; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002ce8   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
002cea   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002cec   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002cee   6a08     clrf    0x08, 0x0        	CLRF	r0x08
002cf0   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
002cf2   2208     addwfc  0x08, 0x1, 0x0   	ADDWFC	r0x08, F
002cf4   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
002cf6   ffe9
002cf8   c008     movff   0x008, 0xfea     	MOVFF	r0x08, FSR0H
002cfa   ffea
002cfc   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	154; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
002cfe   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
002d00   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002d02   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002d04   6a08     clrf    0x08, 0x0        	CLRF	r0x08
002d06   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
002d08   2208     addwfc  0x08, 0x1, 0x0   	ADDWFC	r0x08, F
002d0a   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
002d0c   ffe9
002d0e   c008     movff   0x008, 0xfea     	MOVFF	r0x08, FSR0H
002d10   ffea
002d12   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	155; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos=1;
002d14   0e01     movlw   0x01             	MOVLW	0x01
002d16   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002d18   d10e     bra     0x002f36         	BRA	_00328_DS_
                                           _00294_DS_:
                                           ;	.line	157; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002d1a   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
002d1c   ffe9
002d1e   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
002d20   ffea
002d22   cfef     movff   0xfef, 0x005     	MOVFF	INDF0, r0x05
002d24   f005
002d26   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
002d28   1805     xorwf   0x05, 0x0, 0x0   	XORWF	r0x05, W
002d2a   e001     bz      0x002d2e         	BZ	_00391_DS_
002d2c   d104     bra     0x002f36         	BRA	_00328_DS_
                                           _00391_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos++;
002d2e   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
002d30   d102     bra     0x002f36         	BRA	_00328_DS_
                                           _00319_DS_:
                                           ;	.line	163; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (s>12){
002d32   0e0d     movlw   0x0d             	MOVLW	0x0d
002d34   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
002d36   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
002d38   d080     bra     0x002e3a         	BRA	_00316_DS_
                                           ;	.line	164; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002d3a   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
002d3c   2403     addwf   0x03, 0x0, 0x0   	ADDWF	r0x03, W
002d3e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002d40   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002d42   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
002d44   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002d46   6a06     clrf    0x06, 0x0        	CLRF	r0x06
002d48   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
002d4a   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
002d4c   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
002d4e   fff6
002d50   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
002d52   fff7
002d54   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
002d56   fff8
002d58   0009     tblrd*+                  	TBLRD*+	
002d5a   cff5     movff   0xff5, 0x007     	MOVFF	TABLAT, r0x07
002d5c   f007
002d5e   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 2)
002d60   512d     movf    0x2d, 0x0, 0x1   	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002d62   1407     andwf   0x07, 0x0, 0x0   	ANDWF	r0x07, W
002d64   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
002d66   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
002d68   5106     movf    0x06, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
002d6a   1608     andwf   0x08, 0x1, 0x0   	ANDWF	r0x08, F
002d6c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002d6e   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
002d70   d0e2     bra     0x002f36         	BRA	_00328_DS_
                                           ;	.line	166; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002d72   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
002d74   2403     addwf   0x03, 0x0, 0x0   	ADDWF	r0x03, W
002d76   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
002d78   6a09     clrf    0x09, 0x0        	CLRF	r0x09
002d7a   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
002d7c   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
002d7e   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
002d80   ffe9
002d82   c009     movff   0x009, 0xfea     	MOVFF	r0x09, FSR0H
002d84   ffea
002d86   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
002d88   f008
002d8a   0ec2     movlw   0xc2             	MOVLW	LOW(_timings + 54)
002d8c   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002d8e   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
002d90   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002d92   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 54)
002d94   220a     addwfc  0x0a, 0x1, 0x0   	ADDWFC	r0x0a, F
002d96   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
002d98   ffe9
002d9a   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
002d9c   ffea
002d9e   cfef     movff   0xfef, 0x00b     	MOVFF	INDF0, r0x0b
002da0   f00b
002da2   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002da4   5c08     subwf   0x08, 0x0, 0x0   	SUBWF	r0x08, W
002da6   e229     bc      0x002dfa         	BC	_00302_DS_
                                           ;	.line	167; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002da8   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
002daa   ffe9
002dac   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
002dae   ffea
002db0   c008     movff   0x008, 0xfef     	MOVFF	r0x08, INDF0
002db2   ffef
                                           ;	.line	169; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002db4   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
002db6   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002db8   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
002dba   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002dbc   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
002dbe   220c     addwfc  0x0c, 0x1, 0x0   	ADDWFC	r0x0c, F
002dc0   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
002dc2   ffe9
002dc4   c00c     movff   0x00c, 0xfea     	MOVFF	r0x0c, FSR0H
002dc6   ffea
002dc8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	170; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_A][t]=servomasks[s];
002dca   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
002dcc   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002dce   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
002dd0   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002dd2   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
002dd4   220c     addwfc  0x0c, 0x1, 0x0   	ADDWFC	r0x0c, F
002dd6   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
002dd8   fff6
002dda   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
002ddc   fff7
002dde   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
002de0   fff8
002de2   0009     tblrd*+                  	TBLRD*+	
002de4   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002de6   f004
002de8   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
002dea   ffe9
002dec   c00c     movff   0x00c, 0xfea     	MOVFF	r0x0c, FSR0H
002dee   ffea
002df0   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
002df2   ffef
                                           ;	.line	171; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos=1;
002df4   0e01     movlw   0x01             	MOVLW	0x01
002df6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002df8   d09e     bra     0x002f36         	BRA	_00328_DS_
                                           _00302_DS_:
                                           ;	.line	173; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002dfa   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
002dfc   ffe9
002dfe   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
002e00   ffea
002e02   cfef     movff   0xfef, 0x009     	MOVFF	INDF0, r0x09
002e04   f009
002e06   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002e08   1809     xorwf   0x09, 0x0, 0x0   	XORWF	r0x09, W
002e0a   e001     bz      0x002e0e         	BZ	_00396_DS_
002e0c   d094     bra     0x002f36         	BRA	_00328_DS_
                                           _00396_DS_:
                                           ;	.line	174; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_A][t] |= servomasks[s];
002e0e   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
002e10   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002e12   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002e14   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002e16   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
002e18   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002e1a   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002e1c   ffe9
002e1e   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002e20   ffea
002e22   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
002e24   f006
002e26   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002e28   1207     iorwf   0x07, 0x1, 0x0   	IORWF	r0x07, F
002e2a   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002e2c   ffe9
002e2e   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002e30   ffea
002e32   c007     movff   0x007, 0xfef     	MOVFF	r0x07, INDF0
002e34   ffef
                                           ;	.line	175; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos++;
002e36   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
002e38   d07e     bra     0x002f36         	BRA	_00328_DS_
                                           _00316_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002e3a   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
002e3c   2403     addwf   0x03, 0x0, 0x0   	ADDWF	r0x03, W
002e3e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002e40   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002e42   0e2a     movlw   0x2a             	MOVLW	HIGH(_servomasks)
002e44   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002e46   6a06     clrf    0x06, 0x0        	CLRF	r0x06
002e48   0e00     movlw   0x00             	MOVLW	UPPER(_servomasks)
002e4a   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
002e4c   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
002e4e   fff6
002e50   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
002e52   fff7
002e54   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
002e56   fff8
002e58   0009     tblrd*+                  	TBLRD*+	
002e5a   cff5     movff   0xff5, 0x007     	MOVFF	TABLAT, r0x07
002e5c   f007
002e5e   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002e60   512c     movf    0x2c, 0x0, 0x1   	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002e62   1407     andwf   0x07, 0x0, 0x0   	ANDWF	r0x07, W
002e64   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
002e66   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
002e68   5105     movf    0x05, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
002e6a   1608     andwf   0x08, 0x1, 0x0   	ANDWF	r0x08, F
002e6c   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002e6e   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
002e70   d062     bra     0x002f36         	BRA	_00328_DS_
                                           ;	.line	182; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002e72   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
002e74   2403     addwf   0x03, 0x0, 0x0   	ADDWF	r0x03, W
002e76   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
002e78   6a09     clrf    0x09, 0x0        	CLRF	r0x09
002e7a   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
002e7c   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
002e7e   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
002e80   ffe9
002e82   c009     movff   0x009, 0xfea     	MOVFF	r0x09, FSR0H
002e84   ffea
002e86   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
002e88   f008
002e8a   0ec2     movlw   0xc2             	MOVLW	LOW(_timings + 54)
002e8c   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002e8e   6e09     movwf   0x09, 0x0        	MOVWF	r0x09
002e90   6a0a     clrf    0x0a, 0x0        	CLRF	r0x0a
002e92   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 54)
002e94   220a     addwfc  0x0a, 0x1, 0x0   	ADDWFC	r0x0a, F
002e96   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
002e98   ffe9
002e9a   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
002e9c   ffea
002e9e   cfef     movff   0xfef, 0x00b     	MOVFF	INDF0, r0x0b
002ea0   f00b
002ea2   500b     movf    0x0b, 0x0, 0x0   	MOVF	r0x0b, W
002ea4   5c08     subwf   0x08, 0x0, 0x0   	SUBWF	r0x08, W
002ea6   e229     bc      0x002efa         	BC	_00310_DS_
                                           ;	.line	183; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002ea8   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
002eaa   ffe9
002eac   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
002eae   ffea
002eb0   c008     movff   0x008, 0xfef     	MOVFF	r0x08, INDF0
002eb2   ffef
                                           ;	.line	185; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_C][t]=servomasks[s];
002eb4   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
002eb6   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002eb8   6e0b     movwf   0x0b, 0x0        	MOVWF	r0x0b
002eba   6a0c     clrf    0x0c, 0x0        	CLRF	r0x0c
002ebc   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
002ebe   220c     addwfc  0x0c, 0x1, 0x0   	ADDWFC	r0x0c, F
002ec0   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
002ec2   fff6
002ec4   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
002ec6   fff7
002ec8   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
002eca   fff8
002ecc   0009     tblrd*+                  	TBLRD*+	
002ece   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002ed0   f004
002ed2   c00b     movff   0x00b, 0xfe9     	MOVFF	r0x0b, FSR0L
002ed4   ffe9
002ed6   c00c     movff   0x00c, 0xfea     	MOVFF	r0x0c, FSR0H
002ed8   ffea
002eda   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
002edc   ffef
                                           ;	.line	186; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
002ede   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
002ee0   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002ee2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002ee4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002ee6   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
002ee8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002eea   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002eec   ffe9
002eee   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002ef0   ffea
002ef2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	187; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos=1;
002ef4   0e01     movlw   0x01             	MOVLW	0x01
002ef6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002ef8   d01e     bra     0x002f36         	BRA	_00328_DS_
                                           _00310_DS_:
                                           ;	.line	189; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	else if (servovalues[s] == timings [timevalue][t]){
002efa   c009     movff   0x009, 0xfe9     	MOVFF	r0x09, FSR0L
002efc   ffe9
002efe   c00a     movff   0x00a, 0xfea     	MOVFF	r0x0a, FSR0H
002f00   ffea
002f02   cfef     movff   0xfef, 0x009     	MOVFF	INDF0, r0x09
002f04   f009
002f06   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
002f08   1809     xorwf   0x09, 0x0, 0x0   	XORWF	r0x09, W
002f0a   e115     bnz     0x002f36         	BNZ	_00328_DS_
                                           ;	.line	190; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timings[MaskPort_C][t] |= servomasks[s];
002f0c   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
002f0e   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002f10   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002f12   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002f14   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
002f16   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002f18   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002f1a   ffe9
002f1c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002f1e   ffea
002f20   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
002f22   f006
002f24   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
002f26   1207     iorwf   0x07, 0x1, 0x0   	IORWF	r0x07, F
002f28   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002f2a   ffe9
002f2c   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002f2e   ffea
002f30   c007     movff   0x007, 0xfef     	MOVFF	r0x07, INDF0
002f32   ffef
                                           ;	.line	191; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	numservos++;
002f34   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
                                           _00328_DS_:
                                           ;	.line	145; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
002f36   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002f38   0e12     movlw   0x12             	MOVLW	0x12
002f3a   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
002f3c   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
002f3e   d694     bra     0x002c68         	BRA	_00327_DS_
                                           ;	.line	197; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
002f40   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
002f42   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002f44   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002f46   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002f48   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
002f4a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002f4c   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002f4e   ffe9
002f50   c004     movff   0x004, 0xfea     	MOVFF	r0x04, FSR0H
002f52   ffea
002f54   cfef     movff   0xfef, 0x003     	MOVFF	INDF0, r0x03
002f56   f003
002f58   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002f5a   512c     movf    0x2c, 0x0, 0x1   	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002f5c   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002f5e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002f60   6f2c     movwf   0x2c, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ;	.line	198; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
002f62   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
002f64   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
002f66   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002f68   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002f6a   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
002f6c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002f6e   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002f70   ffe9
002f72   c004     movff   0x004, 0xfea     	MOVFF	r0x04, FSR0H
002f74   ffea
002f76   cfef     movff   0xfef, 0x003     	MOVFF	INDF0, r0x03
002f78   f003
                                           ; removed redundant BANKSEL
002f7a   512d     movf    0x2d, 0x0, 0x1   	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002f7c   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002f7e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002f80   6f2d     movwf   0x2d, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	199; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	totalservos += numservos;
002f82   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002f84   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
                                           ;	.line	200; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	t++;
002f86   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
002f88   d668     bra     0x002c5a         	BRA	_00322_DS_
                                           _00324_DS_:
002f8a   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	203; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002f8c   6b02     clrf    0x02, 0x1        	CLRF	_needreordering, B
002f8e   cfe4     movff   0xfe4, 0x00c     	MOVFF	PREINC1, r0x0c
002f90   f00c
002f92   cfe4     movff   0xfe4, 0x00b     	MOVFF	PREINC1, r0x0b
002f94   f00b
002f96   cfe4     movff   0xfe4, 0x00a     	MOVFF	PREINC1, r0x0a
002f98   f00a
002f9a   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
002f9c   f009
002f9e   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
002fa0   f008
002fa2   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
002fa4   f007
002fa6   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
002fa8   f006
002faa   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002fac   f005
002fae   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002fb0   f004
002fb2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002fb4   f003
002fb6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002fb8   f002
002fba   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002fbc   f001
002fbe   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002fc0   f000
002fc2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	119; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
0065d4   c205     movff   0x205, 0xf82     	MOVFF	(_activatedservos + 1), _PORTC
0065d6   ff82
                                           ;	.line	120; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
0065d8   c206     movff   0x206, 0xf80     	MOVFF	(_activatedservos + 2), _PORTA
0065da   ff80
0065dc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	static void ServosPulseDown()
005a44   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005a46   ffe5
005a48   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005a4a   ffd9
005a4c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005a4e   ffe5
005a50   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005a52   ffe5
005a54   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	94; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timingindex = 0;
005a56   6b3f     clrf    0x3f, 0x1        	CLRF	_timingindex, B
005a58   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
005a5a   6b03     clrf    0x03, 0x1        	CLRF	_timedivision, B
                                           _00266_DS_:
                                           ;	.line	97; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	if (timings[timevalue][timingindex] == timedivision){
005a5c   c33f     movff   0x33f, 0x000     	MOVFF	_timingindex, r0x00
005a5e   f000
005a60   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005a62   0ec2     movlw   0xc2             	MOVLW	LOW(_timings + 54)
005a64   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005a66   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 54)
005a68   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005a6a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005a6c   ffe9
005a6e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005a70   ffea
005a72   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005a74   f000
005a76   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005a78   0102     movlb   0x2              	BANKSEL	_timedivision
005a7a   1903     xorwf   0x03, 0x0, 0x1   	XORWF	_timedivision, W, B
005a7c   e120     bnz     0x005abe         	BNZ	_00264_DS_
                                           ;	.line	99; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
005a7e   c33f     movff   0x33f, 0x000     	MOVFF	_timingindex, r0x00
005a80   f000
005a82   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005a84   0e9e     movlw   0x9e             	MOVLW	LOW(_timings + 18)
005a86   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005a88   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 18)
005a8a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005a8c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005a8e   ffe9
005a90   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005a92   ffea
005a94   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005a96   f000
005a98   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005a9a   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ;	.line	100; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
005a9c   c33f     movff   0x33f, 0x000     	MOVFF	_timingindex, r0x00
005a9e   f000
005aa0   6a01     clrf    0x01, 0x0        	CLRF	r0x01
005aa2   0eb0     movlw   0xb0             	MOVLW	LOW(_timings + 36)
005aa4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005aa6   0e02     movlw   0x02             	MOVLW	HIGH(_timings + 36)
005aa8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005aaa   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005aac   ffe9
005aae   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005ab0   ffea
005ab2   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
005ab4   f000
005ab6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005ab8   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
005aba   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	101; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	timingindex++;
005abc   2b3f     incf    0x3f, 0x1, 0x1   	INCF	_timingindex, F, B
                                           _00264_DS_:
005abe   0e14     movlw   0x14             	movlw	20
005ac0   6f38     movwf   0x38, 0x1        	movwf	_loopvar
                                           bucle:
005ac2   0000     nop                      	NOP
005ac4   2f38     decfsz  0x38, 0x1, 0x1   	decfsz	_loopvar,1
005ac6   ef61     goto    0x005ac2         	goto	bucle
005ac8   f02d
                                           	
005aca   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
005acc   2b03     incf    0x03, 0x1, 0x1   	INCF	_timedivision, F, B
005ace   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
005ad0   5d03     subwf   0x03, 0x0, 0x1   	SUBWF	_timedivision, W, B
005ad2   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
005ad4   d7c3     bra     0x005a5c         	BRA	_00266_DS_
005ad6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005ad8   f001
005ada   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005adc   f000
005ade   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005ae0   ffd9
005ae2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	void servos_init()
006292   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
006294   ffe5
006296   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
006298   ffe5
00629a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00629c   ffe5
                                           ;	.line	75; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
00629e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00247_DS_:
0062a0   0e00     movlw   0x00             	MOVLW	LOW(_servovalues)
0062a2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0062a4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0062a6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0062a8   0e03     movlw   0x03             	MOVLW	HIGH(_servovalues)
0062aa   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0062ac   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0062ae   ffe9
0062b0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0062b2   ffea
0062b4   68ef     setf    0xef, 0x0        	SETF	INDF0
0062b6   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0062b8   0e12     movlw   0x12             	MOVLW	0x12
0062ba   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0062bc   e3f1     bnc     0x0062a0         	BNC	_00247_DS_
                                           ;	.line	78; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TMR1H=0xFF;
0062be   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	79; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	TMR1L=0x00;
0062c0   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	81; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	T1CON=0x01;
0062c2   0e01     movlw   0x01             	MOVLW	0x01
0062c4   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	83; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	PIE1bits.TMR1IE=1;
0062c6   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	INTCONbits.PEIE=1;
0062c8   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/vbasel/.icaro/v2/firmware/tmp/servos.c	INTCONbits.GIE=1;
0062ca   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
0062cc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0062ce   f002
0062d0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0062d2   f001
0062d4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0062d6   f000
0062d8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	void pinmode(int input, int state)
002fc4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002fc6   ffe5
002fc8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002fca   ffd9
002fcc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002fce   ffe5
002fd0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002fd2   ffe5
002fd4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002fd6   ffe5
002fd8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002fda   ffe5
002fdc   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002fde   ffe5
002fe0   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002fe2   ffe5
002fe4   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002fe6   ffe5
002fe8   0e02     movlw   0x02             	MOVLW	0x02
002fea   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002fec   f000
002fee   0e03     movlw   0x03             	MOVLW	0x03
002ff0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002ff2   f001
002ff4   0e04     movlw   0x04             	MOVLW	0x04
002ff6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
002ff8   f002
002ffa   0e05     movlw   0x05             	MOVLW	0x05
002ffc   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
002ffe   f003
                                           ;	.line	71; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	switch (port[input])
003000   0eb6     movlw   0xb6             	MOVLW	LOW(_port)
003002   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003004   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003006   0e2a     movlw   0x2a             	MOVLW	HIGH(_port)
003008   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00300a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00300c   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00300e   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003010   6806     setf    0x06, 0x0        	SETF	r0x06
003012   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003014   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003016   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003018   fff6
00301a   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00301c   fff7
00301e   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003020   fff8
003022   0009     tblrd*+                  	TBLRD*+	
003024   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003026   f004
003028   0e05     movlw   0x05             	MOVLW	0x05
00302a   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
00302c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00302e   d110     bra     0x003250         	BRA	_00220_DS_
003030   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003032   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003034   3404     rlcf    0x04, 0x0, 0x0   	RLCF	r0x04, W
003036   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003038   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00303a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00303c   0bfc     andlw   0xfc             	ANDLW	0xfc
00303e   0f4e     addlw   0x4e             	ADDLW	LOW(_00241_DS_)
003040   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003042   0e30     movlw   0x30             	MOVLW	HIGH(_00241_DS_)
003044   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003046   0e00     movlw   0x00             	MOVLW	UPPER(_00241_DS_)
003048   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00304a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00304c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00241_DS_:
00304e   ef31     goto    0x003062         	GOTO	_00199_DS_
003050   f018
003052   ef63     goto    0x0030c6         	GOTO	_00203_DS_
003054   f018
003056   ef95     goto    0x00312a         	GOTO	_00207_DS_
003058   f018
00305a   efc7     goto    0x00318e         	GOTO	_00211_DS_
00305c   f018
00305e   eff9     goto    0x0031f2         	GOTO	_00215_DS_
003060   f018
                                           _00199_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
003062   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003064   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
003066   e017     bz      0x003096         	BZ	_00201_DS_
003068   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00306a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00306c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00306e   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003070   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003072   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003074   6a06     clrf    0x06, 0x0        	CLRF	r0x06
003076   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003078   6806     setf    0x06, 0x0        	SETF	r0x06
00307a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00307c   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00307e   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003080   fff6
003082   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
003084   fff7
003086   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003088   fff8
00308a   0009     tblrd*+                  	TBLRD*+	
00308c   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00308e   f004
003090   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003092   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
003094   d0dd     bra     0x003250         	BRA	_00220_DS_
                                           _00201_DS_:
                                           ;	.line	74; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else TRISB=TRISB & (255-mask[input]);
003096   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003098   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00309a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00309c   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
00309e   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0030a0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0030a2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0030a4   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0030a6   6806     setf    0x06, 0x0        	SETF	r0x06
0030a8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0030aa   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0030ac   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0030ae   fff6
0030b0   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0030b2   fff7
0030b4   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0030b6   fff8
0030b8   0009     tblrd*+                  	TBLRD*+	
0030ba   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0030bc   f004
0030be   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0030c0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0030c2   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	75; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
0030c4   d0c5     bra     0x003250         	BRA	_00220_DS_
                                           _00203_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
0030c6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0030c8   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
0030ca   e017     bz      0x0030fa         	BZ	_00205_DS_
0030cc   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0030ce   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0030d0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0030d2   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
0030d4   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0030d6   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0030d8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0030da   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0030dc   6806     setf    0x06, 0x0        	SETF	r0x06
0030de   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0030e0   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0030e2   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0030e4   fff6
0030e6   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0030e8   fff7
0030ea   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0030ec   fff8
0030ee   0009     tblrd*+                  	TBLRD*+	
0030f0   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0030f2   f004
0030f4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0030f6   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
0030f8   d0ab     bra     0x003250         	BRA	_00220_DS_
                                           _00205_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else TRISC=TRISC & (255-mask[input]);
0030fa   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0030fc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0030fe   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003100   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003102   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003104   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003106   6a06     clrf    0x06, 0x0        	CLRF	r0x06
003108   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
00310a   6806     setf    0x06, 0x0        	SETF	r0x06
00310c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00310e   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003110   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003112   fff6
003114   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
003116   fff7
003118   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00311a   fff8
00311c   0009     tblrd*+                  	TBLRD*+	
00311e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003120   f004
003122   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003124   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003126   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	78; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
003128   d093     bra     0x003250         	BRA	_00220_DS_
                                           _00207_DS_:
                                           ;	.line	79; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
00312a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00312c   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
00312e   e017     bz      0x00315e         	BZ	_00209_DS_
003130   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003132   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003134   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003136   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003138   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00313a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00313c   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00313e   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003140   6806     setf    0x06, 0x0        	SETF	r0x06
003142   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003144   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003146   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003148   fff6
00314a   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00314c   fff7
00314e   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003150   fff8
003152   0009     tblrd*+                  	TBLRD*+	
003154   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003156   f004
003158   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00315a   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
00315c   d079     bra     0x003250         	BRA	_00220_DS_
                                           _00209_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else TRISA=TRISA & (255-mask[input]);
00315e   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003160   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003162   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003164   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003166   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003168   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00316a   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00316c   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
00316e   6806     setf    0x06, 0x0        	SETF	r0x06
003170   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003172   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003174   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003176   fff6
003178   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00317a   fff7
00317c   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00317e   fff8
003180   0009     tblrd*+                  	TBLRD*+	
003182   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003184   f004
003186   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003188   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00318a   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	81; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
00318c   d061     bra     0x003250         	BRA	_00220_DS_
                                           _00211_DS_:
                                           ;	.line	83; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
00318e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003190   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
003192   e017     bz      0x0031c2         	BZ	_00213_DS_
003194   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003196   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003198   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00319a   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
00319c   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00319e   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0031a0   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0031a2   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0031a4   6806     setf    0x06, 0x0        	SETF	r0x06
0031a6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0031a8   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0031aa   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0031ac   fff6
0031ae   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0031b0   fff7
0031b2   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0031b4   fff8
0031b6   0009     tblrd*+                  	TBLRD*+	
0031b8   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0031ba   f004
0031bc   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0031be   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
0031c0   d047     bra     0x003250         	BRA	_00220_DS_
                                           _00213_DS_:
                                           ;	.line	84; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else TRISD=TRISD & (255-mask[input]);
0031c2   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0031c4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031c6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0031c8   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
0031ca   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0031cc   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0031ce   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0031d0   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0031d2   6806     setf    0x06, 0x0        	SETF	r0x06
0031d4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0031d6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0031d8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0031da   fff6
0031dc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0031de   fff7
0031e0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0031e2   fff8
0031e4   0009     tblrd*+                  	TBLRD*+	
0031e6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0031e8   f004
0031ea   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0031ec   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0031ee   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	85; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
0031f0   d02f     bra     0x003250         	BRA	_00220_DS_
                                           _00215_DS_:
                                           ;	.line	86; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
0031f2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0031f4   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
0031f6   e017     bz      0x003226         	BZ	_00217_DS_
0031f8   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0031fa   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031fc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0031fe   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003200   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003202   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003204   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003206   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003208   6804     setf    0x04, 0x0        	SETF	r0x04
00320a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00320c   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00320e   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003210   fff6
003212   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003214   fff7
003216   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003218   fff8
00321a   0009     tblrd*+                  	TBLRD*+	
00321c   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00321e   f002
003220   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003222   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
003224   d015     bra     0x003250         	BRA	_00220_DS_
                                           _00217_DS_:
                                           ;	.line	87; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else TRISE=TRISE & (255-mask[input]);
003226   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003228   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
00322a   6802     setf    0x02, 0x0        	SETF	r0x02
00322c   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00322e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003230   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003232   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003234   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003236   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003238   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00323a   fff6
00323c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00323e   fff7
003240   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003242   fff8
003244   0009     tblrd*+                  	TBLRD*+	
003246   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003248   f000
00324a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00324c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00324e   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00220_DS_:
                                           ;	.line	90; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	}
003250   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003252   f006
003254   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003256   f005
003258   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00325a   f004
00325c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00325e   f003
003260   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003262   f002
003264   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003266   f001
003268   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00326a   f000
00326c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00326e   ffd9
003270   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	int digitalread(int input)
0039e8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0039ea   ffe5
0039ec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0039ee   ffd9
0039f0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0039f2   ffe5
0039f4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0039f6   ffe5
0039f8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0039fa   ffe5
0039fc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0039fe   ffe5
003a00   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003a02   ffe5
003a04   0e02     movlw   0x02             	MOVLW	0x02
003a06   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003a08   f000
003a0a   0e03     movlw   0x03             	MOVLW	0x03
003a0c   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003a0e   f001
                                           ;	.line	46; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	switch (port[input])
003a10   0eb6     movlw   0xb6             	MOVLW	LOW(_port)
003a12   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003a14   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003a16   0e2a     movlw   0x2a             	MOVLW	HIGH(_port)
003a18   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003a1a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003a1c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003a1e   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003a20   6804     setf    0x04, 0x0        	SETF	r0x04
003a22   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003a24   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003a26   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003a28   fff6
003a2a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003a2c   fff7
003a2e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003a30   fff8
003a32   0009     tblrd*+                  	TBLRD*+	
003a34   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003a36   f002
003a38   0e05     movlw   0x05             	MOVLW	0x05
003a3a   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
003a3c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003a3e   d0ad     bra     0x003b9a         	BRA	_00172_DS_
003a40   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003a42   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003a44   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
003a46   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003a48   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
003a4a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003a4c   0bfc     andlw   0xfc             	ANDLW	0xfc
003a4e   0f5e     addlw   0x5e             	ADDLW	LOW(_00194_DS_)
003a50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a52   0e3a     movlw   0x3a             	MOVLW	HIGH(_00194_DS_)
003a54   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003a56   0e00     movlw   0x00             	MOVLW	UPPER(_00194_DS_)
003a58   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
003a5a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
003a5c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00194_DS_:
003a5e   ef39     goto    0x003a72         	GOTO	_00152_DS_
003a60   f01d
003a62   ef57     goto    0x003aae         	GOTO	_00156_DS_
003a64   f01d
003a66   ef75     goto    0x003aea         	GOTO	_00160_DS_
003a68   f01d
003a6a   ef93     goto    0x003b26         	GOTO	_00164_DS_
003a6c   f01d
003a6e   efb1     goto    0x003b62         	GOTO	_00168_DS_
003a70   f01d
                                           _00152_DS_:
                                           ;	.line	48; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
003a72   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003a74   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003a76   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003a78   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003a7a   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003a7c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003a7e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003a80   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003a82   6804     setf    0x04, 0x0        	SETF	r0x04
003a84   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003a86   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003a88   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003a8a   fff6
003a8c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003a8e   fff7
003a90   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003a92   fff8
003a94   0009     tblrd*+                  	TBLRD*+	
003a96   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003a98   f002
003a9a   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
003a9c   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
003a9e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003aa0   e003     bz      0x003aa8         	BZ	_00154_DS_
003aa2   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003aa4   0e01     movlw   0x01             	MOVLW	0x01
003aa6   d07b     bra     0x003b9e         	BRA	_00173_DS_
                                           _00154_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else return (0);
003aa8   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003aaa   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003aac   d078     bra     0x003b9e         	BRA	_00173_DS_
                                           _00156_DS_:
                                           ;	.line	51; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
003aae   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003ab0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ab2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003ab4   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003ab6   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003ab8   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003aba   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003abc   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003abe   6804     setf    0x04, 0x0        	SETF	r0x04
003ac0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003ac2   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003ac4   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003ac6   fff6
003ac8   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003aca   fff7
003acc   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003ace   fff8
003ad0   0009     tblrd*+                  	TBLRD*+	
003ad2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003ad4   f002
003ad6   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
003ad8   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
003ada   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003adc   e003     bz      0x003ae4         	BZ	_00158_DS_
003ade   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003ae0   0e01     movlw   0x01             	MOVLW	0x01
003ae2   d05d     bra     0x003b9e         	BRA	_00173_DS_
                                           _00158_DS_:
                                           ;	.line	52; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else return (0);
003ae4   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003ae6   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003ae8   d05a     bra     0x003b9e         	BRA	_00173_DS_
                                           _00160_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
003aea   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003aec   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003aee   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003af0   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003af2   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003af4   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003af6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003af8   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003afa   6804     setf    0x04, 0x0        	SETF	r0x04
003afc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003afe   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003b00   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003b02   fff6
003b04   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003b06   fff7
003b08   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003b0a   fff8
003b0c   0009     tblrd*+                  	TBLRD*+	
003b0e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003b10   f002
003b12   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
003b14   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
003b16   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003b18   e003     bz      0x003b20         	BZ	_00162_DS_
003b1a   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b1c   0e01     movlw   0x01             	MOVLW	0x01
003b1e   d03f     bra     0x003b9e         	BRA	_00173_DS_
                                           _00162_DS_:
                                           ;	.line	55; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else return (0);
003b20   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b22   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003b24   d03c     bra     0x003b9e         	BRA	_00173_DS_
                                           _00164_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
003b26   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003b28   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003b2a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003b2c   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003b2e   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003b30   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003b32   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003b34   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003b36   6804     setf    0x04, 0x0        	SETF	r0x04
003b38   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003b3a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
003b3c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
003b3e   fff6
003b40   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
003b42   fff7
003b44   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
003b46   fff8
003b48   0009     tblrd*+                  	TBLRD*+	
003b4a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
003b4c   f002
003b4e   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
003b50   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
003b52   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003b54   e003     bz      0x003b5c         	BZ	_00166_DS_
003b56   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b58   0e01     movlw   0x01             	MOVLW	0x01
003b5a   d021     bra     0x003b9e         	BRA	_00173_DS_
                                           _00166_DS_:
                                           ;	.line	59; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else return (0);
003b5c   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b5e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003b60   d01e     bra     0x003b9e         	BRA	_00173_DS_
                                           _00168_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
003b62   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003b64   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003b66   6802     setf    0x02, 0x0        	SETF	r0x02
003b68   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003b6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003b6c   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003b6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003b70   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003b72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003b74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003b76   fff6
003b78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003b7a   fff7
003b7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
003b7e   fff8
003b80   0009     tblrd*+                  	TBLRD*+	
003b82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003b84   f000
003b86   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
003b88   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
003b8a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003b8c   e003     bz      0x003b94         	BZ	_00170_DS_
003b8e   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b90   0e01     movlw   0x01             	MOVLW	0x01
003b92   d005     bra     0x003b9e         	BRA	_00173_DS_
                                           _00170_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else return (0);
003b94   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b96   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003b98   d002     bra     0x003b9e         	BRA	_00173_DS_
                                           _00172_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	return (0);
003b9a   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
003b9c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00173_DS_:
003b9e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003ba0   f004
003ba2   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003ba4   f003
003ba6   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003ba8   f002
003baa   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003bac   f001
003bae   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003bb0   f000
003bb2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003bb4   ffd9
003bb6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	void digitalwrite(int output,int state)
003272   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003274   ffe5
003276   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003278   ffd9
00327a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00327c   ffe5
00327e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003280   ffe5
003282   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003284   ffe5
003286   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003288   ffe5
00328a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00328c   ffe5
00328e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003290   ffe5
003292   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003294   ffe5
003296   0e02     movlw   0x02             	MOVLW	0x02
003298   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00329a   f000
00329c   0e03     movlw   0x03             	MOVLW	0x03
00329e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0032a0   f001
0032a2   0e04     movlw   0x04             	MOVLW	0x04
0032a4   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
0032a6   f002
0032a8   0e05     movlw   0x05             	MOVLW	0x05
0032aa   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0032ac   f003
                                           ;	.line	22; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	switch (port[output])
0032ae   0eb6     movlw   0xb6             	MOVLW	LOW(_port)
0032b0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0032b2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0032b4   0e2a     movlw   0x2a             	MOVLW	HIGH(_port)
0032b6   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0032b8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0032ba   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0032bc   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0032be   6806     setf    0x06, 0x0        	SETF	r0x06
0032c0   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0032c2   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0032c4   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0032c6   fff6
0032c8   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0032ca   fff7
0032cc   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0032ce   fff8
0032d0   0009     tblrd*+                  	TBLRD*+	
0032d2   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0032d4   f004
0032d6   0e05     movlw   0x05             	MOVLW	0x05
0032d8   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
0032da   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0032dc   d110     bra     0x0034fe         	BRA	_00126_DS_
0032de   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0032e0   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0032e2   3404     rlcf    0x04, 0x0, 0x0   	RLCF	r0x04, W
0032e4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0032e6   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0032e8   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0032ea   0bfc     andlw   0xfc             	ANDLW	0xfc
0032ec   0ffc     addlw   0xfc             	ADDLW	LOW(_00147_DS_)
0032ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0032f0   0e32     movlw   0x32             	MOVLW	HIGH(_00147_DS_)
0032f2   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0032f4   0e00     movlw   0x00             	MOVLW	UPPER(_00147_DS_)
0032f6   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0032f8   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0032fa   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00147_DS_:
0032fc   ef88     goto    0x003310         	GOTO	_00105_DS_
0032fe   f019
003300   efba     goto    0x003374         	GOTO	_00109_DS_
003302   f019
003304   efec     goto    0x0033d8         	GOTO	_00113_DS_
003306   f019
003308   ef1e     goto    0x00343c         	GOTO	_00117_DS_
00330a   f01a
00330c   ef50     goto    0x0034a0         	GOTO	_00121_DS_
00330e   f01a
                                           _00105_DS_:
                                           ;	.line	24; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
003310   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003312   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
003314   e017     bz      0x003344         	BZ	_00107_DS_
003316   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003318   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00331a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00331c   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
00331e   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003320   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003322   6a06     clrf    0x06, 0x0        	CLRF	r0x06
003324   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003326   6806     setf    0x06, 0x0        	SETF	r0x06
003328   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00332a   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00332c   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00332e   fff6
003330   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
003332   fff7
003334   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003336   fff8
003338   0009     tblrd*+                  	TBLRD*+	
00333a   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00333c   f004
00333e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003340   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
003342   d0dd     bra     0x0034fe         	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else PORTB=PORTB & (255-mask[output]);
003344   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003346   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003348   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00334a   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
00334c   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00334e   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003350   6a06     clrf    0x06, 0x0        	CLRF	r0x06
003352   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003354   6806     setf    0x06, 0x0        	SETF	r0x06
003356   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003358   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00335a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00335c   fff6
00335e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
003360   fff7
003362   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003364   fff8
003366   0009     tblrd*+                  	TBLRD*+	
003368   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00336a   f004
00336c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00336e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003370   1681     andwf   0x81, 0x1, 0x0   	ANDWF	_PORTB, F
                                           ;	.line	26; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
003372   d0c5     bra     0x0034fe         	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
003374   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003376   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
003378   e017     bz      0x0033a8         	BZ	_00111_DS_
00337a   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00337c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00337e   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003380   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003382   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003384   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003386   6a06     clrf    0x06, 0x0        	CLRF	r0x06
003388   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
00338a   6806     setf    0x06, 0x0        	SETF	r0x06
00338c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00338e   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003390   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003392   fff6
003394   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
003396   fff7
003398   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00339a   fff8
00339c   0009     tblrd*+                  	TBLRD*+	
00339e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0033a0   f004
0033a2   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0033a4   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
0033a6   d0ab     bra     0x0034fe         	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else PORTC=PORTC & (255-mask[output]);
0033a8   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0033aa   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0033ac   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0033ae   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
0033b0   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0033b2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0033b4   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0033b6   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0033b8   6806     setf    0x06, 0x0        	SETF	r0x06
0033ba   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0033bc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0033be   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0033c0   fff6
0033c2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0033c4   fff7
0033c6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0033c8   fff8
0033ca   0009     tblrd*+                  	TBLRD*+	
0033cc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0033ce   f004
0033d0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0033d2   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0033d4   1682     andwf   0x82, 0x1, 0x0   	ANDWF	_PORTC, F
                                           ;	.line	29; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
0033d6   d093     bra     0x0034fe         	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
0033d8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0033da   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
0033dc   e017     bz      0x00340c         	BZ	_00115_DS_
0033de   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0033e0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0033e2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0033e4   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
0033e6   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0033e8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0033ea   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0033ec   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0033ee   6806     setf    0x06, 0x0        	SETF	r0x06
0033f0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0033f2   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0033f4   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0033f6   fff6
0033f8   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0033fa   fff7
0033fc   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0033fe   fff8
003400   0009     tblrd*+                  	TBLRD*+	
003402   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003404   f004
003406   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003408   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
00340a   d079     bra     0x0034fe         	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else PORTA=PORTA & (255-mask[output]);
00340c   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00340e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003410   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003412   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003414   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003416   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003418   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00341a   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
00341c   6806     setf    0x06, 0x0        	SETF	r0x06
00341e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003420   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003422   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003424   fff6
003426   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
003428   fff7
00342a   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00342c   fff8
00342e   0009     tblrd*+                  	TBLRD*+	
003430   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003432   f004
003434   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003436   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003438   1680     andwf   0x80, 0x1, 0x0   	ANDWF	_PORTA, F
                                           ;	.line	32; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
00343a   d061     bra     0x0034fe         	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
00343c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00343e   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
003440   e017     bz      0x003470         	BZ	_00119_DS_
003442   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003444   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003446   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003448   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
00344a   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00344c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00344e   6a06     clrf    0x06, 0x0        	CLRF	r0x06
003450   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003452   6806     setf    0x06, 0x0        	SETF	r0x06
003454   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003456   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003458   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00345a   fff6
00345c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00345e   fff7
003460   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003462   fff8
003464   0009     tblrd*+                  	TBLRD*+	
003466   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003468   f004
00346a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00346c   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
00346e   d047     bra     0x0034fe         	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else PORTD=PORTD & (255-mask[output]);
003470   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003472   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003474   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
003476   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
003478   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
00347a   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00347c   6a06     clrf    0x06, 0x0        	CLRF	r0x06
00347e   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
003480   6806     setf    0x06, 0x0        	SETF	r0x06
003482   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003484   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
003486   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
003488   fff6
00348a   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00348c   fff7
00348e   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
003490   fff8
003492   0009     tblrd*+                  	TBLRD*+	
003494   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
003496   f004
003498   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00349a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00349c   1683     andwf   0x83, 0x1, 0x0   	ANDWF	_PORTD, F
                                           ;	.line	36; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	break;
00349e   d02f     bra     0x0034fe         	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
0034a0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0034a2   1003     iorwf   0x03, 0x0, 0x0   	IORWF	r0x03, W
0034a4   e017     bz      0x0034d4         	BZ	_00123_DS_
0034a6   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0034a8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034aa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0034ac   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
0034ae   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0034b0   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0034b2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0034b4   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0034b6   6804     setf    0x04, 0x0        	SETF	r0x04
0034b8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034ba   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0034bc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0034be   fff6
0034c0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0034c2   fff7
0034c4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0034c6   fff8
0034c8   0009     tblrd*+                  	TBLRD*+	
0034ca   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0034cc   f002
0034ce   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0034d0   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
0034d2   d015     bra     0x0034fe         	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	else PORTE=PORTE & (255-mask[output]);
0034d4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0034d6   be01     btfsc   0x01, 0x7, 0x0   	BTFSC	r0x01, 7
0034d8   6802     setf    0x02, 0x0        	SETF	r0x02
0034da   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0034dc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0034de   0e2a     movlw   0x2a             	MOVLW	HIGH(_mask)
0034e0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0034e2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034e4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0034e6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0034e8   fff6
0034ea   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0034ec   fff7
0034ee   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0034f0   fff8
0034f2   0009     tblrd*+                  	TBLRD*+	
0034f4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0034f6   f000
0034f8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0034fa   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0034fc   1684     andwf   0x84, 0x1, 0x0   	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/vbasel/.icaro/v2/firmware/tmp/digitalw.c	}
0034fe   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003500   f006
003502   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003504   f005
003506   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003508   f004
00350a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00350c   f003
00350e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003510   f002
003512   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003514   f001
003516   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003518   f000
00351a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00351c   ffd9
00351e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
002a98   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002a9a   0804     sublw   0x04             
002a9c   2010     addwfc  0x10, 0x0, 0x0   
002a9e   8040     bsf     0x40, 0x0, 0x0   
002aa0   8040     bsf     0x40, 0x0, 0x0   
002aa2   0201     mulwf   0x01, 0x0        
002aa4   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002aa6   0402     decf    0x02, 0x0, 0x0   
002aa8   2008     addwfc  0x08, 0x0, 0x0   
002aaa   0201     mulwf   0x01, 0x0        
002aac   0104     movlb   0x4              
002aae   0402     decf    0x02, 0x0, 0x0   
002ab0   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80
002ab2   4020     rrncf   0x20, 0x0, 0x0   
002ab4   0080     dw      0x0080           
                                           ; ; Starting pCode block for Ival
                                           _port:
002ab6   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
002ab8   0000     nop                      
002aba   0000     nop                      
002abc   0000     nop                      
002abe   0101     movlb   0x1              
002ac0   0101     movlb   0x1              
002ac2   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002ac4   0202     mulwf   0x02, 0x0        
002ac6   0202     mulwf   0x02, 0x0        
002ac8   0404     decf    0x04, 0x0, 0x0   
002aca   0304     mulwf   0x04, 0x1        
002acc   0303     mulwf   0x03, 0x1        
002ace   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03
002ad0   0303     mulwf   0x03, 0x1        
002ad2   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002ad4   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002ad6   0804     sublw   0x04             
002ad8   2010     addwfc  0x10, 0x0, 0x0   
002ada   8040     bsf     0x40, 0x0, 0x0   
002adc   8040     bsf     0x40, 0x0, 0x0   
002ade   0201     mulwf   0x01, 0x0        
002ae0   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002ae2   0402     decf    0x02, 0x0, 0x0   
002ae4   2008     addwfc  0x08, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _libdevice_descriptor:
002ae6   0112     dw      0x0112           	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
002ae8   0200     mulwf   0x00, 0x0        
002aea   0002     dw      0x0002           
002aec   4000     rrncf   0x00, 0x0, 0x0   
002aee   04d8     decf    0xd8, 0x0, 0x0   
002af0   feab     dw      0xfeab           
002af2   0000     nop                      	DB	0x00, 0x00, 0x00, 0x01, 0x00, 0x01
002af4   0100     movlb   0x0              
002af6   0100     movlb   0x0              
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
002af8   0209     mulwf   0x09, 0x0        	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0x03, 0x14, 0x09, 0x04, 0x00
002afa   0043     dw      0x0043           
002afc   0102     movlb   0x2              
002afe   0300     mulwf   0x00, 0x1        
002b00   0914     iorlw   0x14             
002b02   0004     clrwdt                   
002b04   0100     movlb   0x0              	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
002b06   0202     mulwf   0x02, 0x0        
002b08   0001     halt                     
002b0a   2405     addwf   0x05, 0x0, 0x0   
002b0c   1000     iorwf   0x00, 0x0, 0x0   
002b0e   0401     decf    0x01, 0x0, 0x0   
002b10   0224     mulwf   0x24, 0x0        	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
002b12   0500     decf    0x00, 0x0, 0x1   
002b14   0624     decf    0x24, 0x1, 0x0   
002b16   0100     movlb   0x0              
002b18   2405     addwf   0x05, 0x0, 0x0   
002b1a   0001     halt                     
002b1c   0701     decf    0x01, 0x1, 0x1   	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
002b1e   8205     bsf     0x05, 0x1, 0x0   
002b20   1003     iorwf   0x03, 0x0, 0x0   
002b22   0200     mulwf   0x00, 0x0        
002b24   0409     decf    0x09, 0x0, 0x0   
002b26   0001     halt                     
002b28   0a02     xorlw   0x02             	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
002b2a   0000     nop                      
002b2c   0700     decf    0x00, 0x1, 0x1   
002b2e   0305     mulwf   0x05, 0x1        
002b30   4002     rrncf   0x02, 0x0, 0x0   
002b32   0000     nop                      
002b34   0507     decf    0x07, 0x0, 0x1   	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
002b36   0283     mulwf   0x83, 0x0        
002b38   0040     dw      0x0040           
002b3a   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
002b3c   0328     mulwf   0x28, 0x1        	DB	0x28, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x00, 0x00, 0x00
002b3e   0c50     retlw   0x50             
002b40   5003     movf    0x03, 0x0, 0x0   
002b42   030c     mulwf   0x0c, 0x1        
002b44   0050     dw      0x0050           
002b46   0000     nop                      
002b48   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b4a   0000     nop                      
002b4c   0000     nop                      
002b4e   0000     nop                      
002b50   0000     nop                      
002b52   0000     nop                      
002b54   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b56   0000     nop                      
002b58   0000     nop                      
002b5a   0000     nop                      
002b5c   0000     nop                      
002b5e   0000     nop                      
002b60   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b62   0000     nop                      
002b64   0000     nop                      
002b66   0000     nop                      
002b68   0000     nop                      
002b6a   0000     nop                      
002b6c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b6e   0000     nop                      
002b70   0000     nop                      
002b72   0000     nop                      
002b74   0000     nop                      
002b76   0000     nop                      
002b78   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b7a   0000     nop                      
002b7c   0000     nop                      
002b7e   0000     nop                      
002b80   0000     nop                      
002b82   0000     nop                      
002b84   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b86   0000     nop                      
002b88   0000     nop                      
002b8a   0000     nop                      
002b8c   0000     nop                      
002b8e   0000     nop                      
002b90   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b92   0000     nop                      
002b94   0000     nop                      
002b96   0000     nop                      
002b98   0000     nop                      
002b9a   0000     nop                      
002b9c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002b9e   0000     nop                      
002ba0   0000     nop                      
002ba2   0000     nop                      
002ba4   0000     nop                      
002ba6   0000     nop                      
002ba8   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002baa   0000     nop                      
002bac   0000     nop                      
002bae   0000     nop                      
002bb0   0000     nop                      
002bb2   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_0:
002bb4   000a     tblrd*-                  	DB	0x0a, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
002bb6   0030     dw      0x0030           	DB	0x30, 0x00
                                           ; ; Starting pCode block
                                           ___str_2:
002bb8   0031     dw      0x0031           	DB	0x31, 0x00
                                           ; ; Starting pCode block
                                           ___str_3:
002bba   0a66     xorlw   0x66             	DB	0x66, 0x0a, 0x00
002bbc   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_4:
002bbe   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x32
002bc0   7261     btg     0x61, 0x1, 0x0   
002bc2   206f     addwfc  0x6f, 0x0, 0x0   
002bc4   5355     movf    0x55, 0x1, 0x1   
002bc6   2042     addwfc  0x42, 0x0, 0x0   
002bc8   3230     rrcf    0x30, 0x1, 0x0   
002bca   0a20     xorlw   0x20             	DB	0x20, 0x0a, 0x00
002bcc   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	10784 (0x2a20) bytes ( 8.23%)
                                           ;           	 5392 (0x1510) words
                                           ; udata size:	  533 (0x0215) bytes (29.74%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
