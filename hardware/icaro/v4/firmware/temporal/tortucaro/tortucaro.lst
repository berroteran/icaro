gplink-1.4.2 #1169 (Jun 26 2016)
Copyright (c) 1998-2015 gputils project
Listing File Generated: 3-14-2017  17:31:00
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	_i
                                           	global	__cdc_buffer
                                           	global	_hidRxLen
                                           	global	_hidProtocol
                                           	global	_hidIdleRate
                                           	global	_HIDPostProcess
                                           	global	_deviceAddress
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	_EnableUSBModule
                                           	global	_ProcessUSBTransactions
                                           	global	_ProcessCDCRequest
                                           	global	_CDCgets
                                           	global	_CDCInitEndpoint
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	_CONTROL_LINE
                                           	global	_deviceState
                                           	global	_remoteWakeup
                                           	global	_selfPowered
                                           	global	_currentConfiguration
                                           	global	_ctrlTransferStage
                                           	global	_requestHandled
                                           	global	_outPtr
                                           	global	_inPtr
                                           	global	_wCount
                                           	global	_ep_bdt
                                           	global	_SetupPacket
                                           	global	_controlTransferBuffer
                                           	global	_CDCControlBuffer
                                           	global	_CDCRxBuffer
                                           	global	_CDCTxBuffer
                                           	global	_line_config
                                           	global	_zlp
                                           	global	_receivedbyte
                                           	global	_receivedbyte2
                                           	global	_rxstr
                                           	global	_rxstr2
                                           	global	_valor
                                           	global	_caracter
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_ProcessStandardRequest
                                           	global	_InDataStage
                                           	global	_OutDataStage
                                           	global	_SetupStage
                                           	global	_WaitForSetupStage
                                           	global	_ProcessControlTransfer
                                           	global	_UnSuspend
                                           	global	_StartOfFrame
                                           	global	_Stall
                                           	global	_Suspend
                                           	global	_BusReset
                                           	global	_CDCputs
                                           	global	_CDCputc
                                           	global	_CDC_init
                                           	global	_CDC_interrupt
                                           	global	_digital
                                           	global	_leo_puerto
                                           	global	_l293d
                                           	global	_analogico
                                           	global	_puertob
                                           	global	_servos
                                           	global	_setup
                                           	global	_comparo
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_libdevice_descriptor
                                           	global	_libconfiguration_descriptor
                                           	global	_lang
                                           	global	_manu
                                           	global	_prod
                                           	global	_libstring_descriptor
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	__gptrput1
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	__divsint
                                           	extern	_x_ftoa
                                           	extern	_strcat
                                           	extern	_strlen
                                           	extern	___uint2fs
                                           	extern	_cinit
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _CONTROL_LINE	db	0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           ___uflags	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_tortucaro_0	udata
                                           __cpu_clock_	res	4
                                           
                                           udata_tortucaro_1	udata
                                           _timingindex	res	1
                                           
                                           udata_tortucaro_2	udata
                                           _loopvar	res	1
                                           
                                           udata_tortucaro_3	udata
                                           _deviceAddress	res	1
                                           
                                           udata_tortucaro_4	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_tortucaro_5	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_tortucaro_6	udata
                                           _hidProtocol	res	1
                                           
                                           udata_tortucaro_7	udata
                                           _hidRxLen	res	1
                                           
                                           udata_tortucaro_8	udata
                                           __cdc_buffer	res	64
                                           
                                           udata_tortucaro_9	udata
                                           _i	res	1
                                           
                                           udata_tortucaro_10	udata
                                           _servovalues	res	30
                                           
                                           udata_tortucaro_11	udata
                                           _maxminpos	res	60
                                           
                                           udata_tortucaro_12	udata
                                           _activatedservos	res	5
                                           
                                           udata_tortucaro_13	udata
                                           _ServosPulseDown_timingindex_1_28	res	1
                                           
                                           udata_tortucaro_14	udata
                                           _timings	res	150
                                           
                                           udata_tortucaro_15	udata
                                           _timevalue	res	30
                                           
                                           udata_tortucaro_16	udata
                                           _SortServoTimings_t_1_32	res	1
                                           
                                           udata_tortucaro_17	udata
                                           _SortServoTimings_totalservos_1_32	res	1
                                           
                                           udata_tortucaro_18	udata
                                           _SortServoTimings_numservos_1_32	res	1
                                           
                                           udata_tortucaro_19	udata
                                           _SortServoTimings_s_1_32	res	1
                                           
                                           udata_tortucaro_20	udata
                                           _mascaratotal	res	5
                                           
                                           udata_tortucaro_21	udata
                                           _requestHandled	res	1
                                           
                                           udata_tortucaro_22	udata
                                           _outPtr	res	3
                                           
                                           udata_tortucaro_23	udata
                                           _wCount	res	2
                                           
                                           udata_tortucaro_24	udata
                                           _inPtr	res	3
                                           
                                           udata_tortucaro_25	udata
                                           _selfPowered	res	1
                                           
                                           udata_tortucaro_26	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_tortucaro_27	udata
                                           _deviceState	res	1
                                           
                                           udata_tortucaro_28	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_tortucaro_29	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_tortucaro_30	udata
                                           _line_config	res	7
                                           
                                           udata_tortucaro_31	udata
                                           _zlp	res	8
                                           
                                           udata_tortucaro_32	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_tortucaro_33	udata
                                           _caracter	res	2
                                           
                                           udata_tortucaro_34	udata
                                           _receivedbyte	res	1
                                           
                                           udata_tortucaro_35	udata
                                           _receivedbyte2	res	1
                                           
                                           udata_tortucaro_36	udata
                                           _analogico_chaine_1_236	res	0
                                           
                                           
                                           ustat_tortucaro_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_tortucaro___entry	code	0X000C00
                                           __entry:
000c00   ef10     goto    0x004c20         	goto	__startup
000c02   f026
                                           	
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_tortucaro_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   effe     goto    0x0053fc         	GOTO	_high_priority_isr
000c0a   f029
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_tortucaro_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   ef3b     goto    0x005476         	GOTO	_low_priority_isr
000c1a   f02a
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_tortucaro__main	code
                                           _main:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	if (OSCCONbits.SCS > 0x01)
0058e4   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0058e6   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0058e8   0f80     addlw   0x80             	ADDLW	0x80
0058ea   0f7e     addlw   0x7e             	ADDLW	0x7e
0058ec   e302     bnc     0x0058f2         	BNC	_01816_DS_
                                           _01812_DS_:
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	while (!OSCCONbits.IOFS);
0058ee   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
0058f0   d7fe     bra     0x0058ee         	BRA	_01812_DS_
                                           _01816_DS_:
                                           ;	.line	245; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	IO_init();
0058f2   ecb4     call    0x005968, 0x0call    0x005968, 0x0 	CALL	_IO_init
0058f4   f02c
                                           ;	.line	246; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	IO_digital();
0058f6   ec06     call    0x000c0c, 0x0call    0x000c0c, 0x0 	CALL	_IO_digital
0058f8   f006
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	CDC_init();
0058fa   ec0d     call    0x004e1a, 0x0call    0x004e1a, 0x0 	CALL	_CDC_init
0058fc   f027
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	analog_init();
0058fe   ec56     call    0x005aac, 0x0call    0x005aac, 0x0 	CALL	_analog_init
005900   f02d
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	servos_init();
005902   ecbb     call    0x004d76, 0x0call    0x004d76, 0x0 	CALL	_servos_init
005904   f026
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	setup();
005906   ec07     call    0x004a0e, 0x0call    0x004a0e, 0x0 	CALL	_setup
005908   f025
                                           _01818_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	loop();
00590a   ec59     call    0x0058b2, 0x0call    0x0058b2, 0x0 	CALL	_loop
00590c   f02c
00590e   d7fd     bra     0x00590a         	BRA	_01818_DS_
005910   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	void low_priority_isr(void) __interrupt 2
005476   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
005478   ffe5
00547a   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00547c   ffe5
00547e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005480   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
005482   ffe5
005484   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
005486   ffe5
005488   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
00548a   ffe5
00548c   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00548e   ffe5
005490   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
005492   ffe5
005494   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
005496   ffe5
005498   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00549a   ffe5
00549c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00549e   ffd9
0054a0   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
0054a2   ffe5
0054a4   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
0054a6   ffe5
0054a8   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
0054aa   ffe5
0054ac   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
0054ae   ffe5
                                           	
0054b0   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
0054b2   fff5
0054b4   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
0054b6   fff8
0054b8   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
0054ba   fff7
0054bc   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
0054be   fff6
                                           	
0054c0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0054c2   ffd9
0054c4   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
0054c6   fffb
0054c8   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
0054ca   fffa
0054cc   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
0054ce   ffea
0054d0   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
0054d2   ffe9
0054d4   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
0054d6   fff4
0054d8   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0054da   fff3
0054dc   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0054de   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
0054e0   ffe0
0054e2   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
0054e4   ffd8
0054e6   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	void high_priority_isr(void) __interrupt 1
0053fc   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
0053fe   ffe5
005400   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
005402   ffe5
005404   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005406   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
005408   ffe5
00540a   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
00540c   ffe5
00540e   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
005410   ffe5
005412   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
005414   ffe5
005416   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
005418   ffe5
00541a   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
00541c   ffe5
00541e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005420   ffe5
005422   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005424   ffd9
005426   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
005428   ffe5
00542a   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
00542c   ffe5
00542e   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
005430   ffe5
005432   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
005434   ffe5
                                           	
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	CDC_interrupt();
005436   ec4d     call    0x005a9a, 0x0call    0x005a9a, 0x0 	CALL	_CDC_interrupt
005438   f02d
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	servos_interrupt();
00543a   ec16     call    0x00582c, 0x0call    0x00582c, 0x0 	CALL	_servos_interrupt
00543c   f02c
00543e   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
005440   fff5
005442   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
005444   fff8
005446   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
005448   fff7
00544a   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
00544c   fff6
                                           	
00544e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005450   ffd9
005452   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
005454   fffb
005456   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
005458   fffa
00545a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00545c   ffea
00545e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
005460   ffe9
005462   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
005464   fff4
005466   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
005468   fff3
00546a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00546c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00546e   ffe0
005470   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
005472   ffd8
005474   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
004c20   ee17     lfsr    0x1, 0x7ff       	lfsr	1, _stack_end
004c22   f0ff
004c24   ee27     lfsr    0x2, 0x7ff       	lfsr	2, _stack_end
004c26   f0ff
                                           	;	1st silicon does not do this on POR
004c28   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
004c2a   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
004c2c   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
004c2e   0ebf     movlw   0xbf             	movlw	0xbf
004c30   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
004c32   0e0e     movlw   0x0e             	movlw	0x0e
004c34   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
004c36   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
004c38   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
004c3a   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
004c3c   e1fd     bnz     0x004c38         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
004c3e   0ecc     movlw   0xcc             	movlw	low(_cinit)
004c40   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
004c42   0e5a     movlw   0x5a             	movlw	high(_cinit)
004c44   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
004c46   0e00     movlw   0x00             	movlw	upper(_cinit)
004c48   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
004c4a   0009     tblrd*+                  	tblrd*+
004c4c   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
004c4e   f005
004c50   0009     tblrd*+                  	tblrd*+
004c52   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
004c54   f006
                                           	;	while (0x05)
004c56   d034     bra     0x004cc0         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
004c58   0009     tblrd*+                  	tblrd*+
004c5a   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
004c5c   f000
                                           	;	source address high
004c5e   0009     tblrd*+                  	tblrd*+
004c60   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
004c62   f001
                                           	;	source address upper
004c64   0009     tblrd*+                  	tblrd*+
004c66   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
004c68   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
004c6a   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
004c6c   0009     tblrd*+                  	tblrd*+
004c6e   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
004c70   ffe9
                                           	;	destination address high
004c72   0009     tblrd*+                  	tblrd*+
004c74   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
004c76   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
004c78   0009     tblrd*+                  	tblrd*+
004c7a   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
004c7c   0009     tblrd*+                  	tblrd*+
004c7e   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
004c80   f003
004c82   0009     tblrd*+                  	tblrd*+
004c84   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
004c86   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
004c88   0009     tblrd*+                  	tblrd*+
004c8a   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
004c8c   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
004c8e   f007
004c90   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
004c92   f008
004c94   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
004c96   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
004c98   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
004c9a   fff6
004c9c   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
004c9e   fff7
004ca0   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
004ca2   fff8
004ca4   d003     bra     0x004cac         	bra	copy_loop_dec
                                           copy_loop:
004ca6   0009     tblrd*+                  	tblrd*+
004ca8   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
004caa   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
004cac   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
004cae   e2fb     bc      0x004ca6         	bc	copy_loop
004cb0   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
004cb2   e2f9     bc      0x004ca6         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
004cb4   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
004cb6   fff6
004cb8   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
004cba   fff7
004cbc   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
004cbe   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
004cc0   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
004cc2   e2ca     bc      0x004c58         	bc	entry_loop
004cc4   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
004cc6   e2c8     bc      0x004c58         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/tortucaro/crt0iz.c	main ();
004cc8   ec72     call    0x0058e4, 0x0call    0x0058e4, 0x0 	CALL	_main
004cca   f02c
                                           lockup:
                                           	;	Returning from main will lock up.
004ccc   d7ff     bra     0x004ccc         	bra	lockup
                                           	
                                           ; ; Starting pCode block
                                           S_tortucaro__loop	code
                                           _loop:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void loop()
0058b2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0058b4   ffe5
                                           _01786_DS_:
0058b6   0101     movlb   0x1              	BANKSEL	_valor
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTD=valor;
0058b8   5184     movf    0x84, 0x0, 0x1   	MOVF	_valor, W, B
0058ba   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
0058bc   ec77     call    0x0056ee, 0x0call    0x0056ee, 0x0 	CALL	_leo_puerto
0058be   f02b
0058c0   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0058c2   f001
0058c4   0a01     xorlw   0x01             	XORLW	0x01
0058c6   e102     bnz     0x0058cc         	BNZ	_01796_DS_
0058c8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0058ca   e001     bz      0x0058ce         	BZ	_01797_DS_
                                           _01796_DS_:
0058cc   d002     bra     0x0058d2         	BRA	_01784_DS_
                                           _01797_DS_:
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	comparo();
0058ce   ec7f     call    0x0052fe, 0x0call    0x0052fe, 0x0 	CALL	_comparo
0058d0   f029
                                           _01784_DS_:
0058d2   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0058d4   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0058d6   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
0058d8   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0058da   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
0058dc   d7ec     bra     0x0058b6         	BRA	_01786_DS_
0058de   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0058e0   f001
0058e2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__leo_puerto	code
                                           _leo_puerto:
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int leo_puerto()
0056ee   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0056f0   ffe5
0056f2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0056f4   ffe5
                                           _01773_DS_:
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	while ((receivedbyte=CDCgets(rxstr))==0);
0056f6   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0056f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056fa   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr)
0056fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0056fe   0e04     movlw   0x04             	MOVLW	LOW(_rxstr)
005700   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005702   ec14     call    0x003e28, 0x0call    0x003e28, 0x0 	CALL	_CDCgets
005704   f01f
005706   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005708   0e03     movlw   0x03             	MOVLW	0x03
00570a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00570c   c000     movff   0x000, 0x1ae     	MOVFF	r0x00, _receivedbyte
00570e   f1ae
005710   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005712   e0f1     bz      0x0056f6         	BZ	_01773_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	rxstr[receivedbyte]=0;
005714   0e04     movlw   0x04             	MOVLW	LOW(_rxstr)
005716   0101     movlb   0x1              	BANKSEL	_receivedbyte
005718   25ae     addwf   0xae, 0x0, 0x1   	ADDWF	_receivedbyte, W, B
00571a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00571c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00571e   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr)
005720   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
005722   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005724   ffe9
005726   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
005728   ffea
00572a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte>0)
00572c   51ae     movf    0xae, 0x0, 0x1   	MOVF	_receivedbyte, W, B
00572e   e007     bz      0x00573e         	BZ	_01777_DS_
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=rxstr[0];
005730   c104     movff   0x104, 0x193     	MOVFF	_rxstr, _caracter
005732   f193
005734   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
005736   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return 1;
005738   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
00573a   0e01     movlw   0x01             	MOVLW	0x01
00573c   d002     bra     0x005742         	BRA	_01778_DS_
                                           _01777_DS_:
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return 0;
00573e   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
005740   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _01778_DS_:
005742   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005744   f001
005746   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005748   f000
00574a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__comparo	code
                                           _comparo:
0052fe   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='b')
005300   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005302   0a62     xorlw   0x62             	XORLW	0x62
005304   e102     bnz     0x00530a         	BNZ	_01757_DS_
                                           ; removed redundant BANKSEL
005306   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005308   e001     bz      0x00530c         	BZ	_01758_DS_
                                           _01757_DS_:
00530a   d00c     bra     0x005324         	BRA	_01726_DS_
                                           _01758_DS_:
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("icaro USB 02 \n",14);
00530c   0e0e     movlw   0x0e             	MOVLW	0x0e
00530e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005310   0e00     movlw   0x00             	MOVLW	UPPER(___str_3)
005312   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005314   0e37     movlw   0x37             	MOVLW	HIGH(___str_3)
005316   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005318   0ed2     movlw   0xd2             	MOVLW	LOW(___str_3)
00531a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00531c   ec2d     call    0x00405a, 0x0call    0x00405a, 0x0 	CALL	_CDCputs
00531e   f020
005320   0e04     movlw   0x04             	MOVLW	0x04
005322   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01726_DS_:
005324   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='m')
005326   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005328   0a6d     xorlw   0x6d             	XORLW	0x6d
00532a   e102     bnz     0x005330         	BNZ	_01759_DS_
                                           ; removed redundant BANKSEL
00532c   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00532e   e001     bz      0x005332         	BZ	_01760_DS_
                                           _01759_DS_:
005330   d002     bra     0x005336         	BRA	_01728_DS_
                                           _01760_DS_:
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	servos();
005332   ec9e     call    0x00453c, 0x0call    0x00453c, 0x0 	CALL	_servos
005334   f022
                                           _01728_DS_:
005336   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='e')
005338   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
00533a   0a65     xorlw   0x65             	XORLW	0x65
00533c   e102     bnz     0x005342         	BNZ	_01761_DS_
                                           ; removed redundant BANKSEL
00533e   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005340   e001     bz      0x005344         	BZ	_01762_DS_
                                           _01761_DS_:
005342   d002     bra     0x005348         	BRA	_01730_DS_
                                           _01762_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	analogico();
005344   ecb1     call    0x003962, 0x0call    0x003962, 0x0 	CALL	_analogico
005346   f01c
                                           _01730_DS_:
005348   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	216; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='l')
00534a   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
00534c   0a6c     xorlw   0x6c             	XORLW	0x6c
00534e   e102     bnz     0x005354         	BNZ	_01763_DS_
                                           ; removed redundant BANKSEL
005350   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005352   e001     bz      0x005356         	BZ	_01764_DS_
                                           _01763_DS_:
005354   d002     bra     0x00535a         	BRA	_01732_DS_
                                           _01764_DS_:
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	l293d();
005356   ece6     call    0x0047cc, 0x0call    0x0047cc, 0x0 	CALL	_l293d
005358   f023
                                           _01732_DS_:
00535a   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='d')
00535c   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
00535e   0a64     xorlw   0x64             	XORLW	0x64
005360   e102     bnz     0x005366         	BNZ	_01765_DS_
                                           ; removed redundant BANKSEL
005362   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005364   e001     bz      0x005368         	BZ	_01766_DS_
                                           _01765_DS_:
005366   d002     bra     0x00536c         	BRA	_01734_DS_
                                           _01766_DS_:
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	digital();
005368   ec37     call    0x00426e, 0x0call    0x00426e, 0x0 	CALL	_digital
00536a   f021
                                           _01734_DS_:
00536c   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='s')
00536e   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005370   0a73     xorlw   0x73             	XORLW	0x73
005372   e102     bnz     0x005378         	BNZ	_01767_DS_
                                           ; removed redundant BANKSEL
005374   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
005376   e001     bz      0x00537a         	BZ	_01768_DS_
                                           _01767_DS_:
005378   d002     bra     0x00537e         	BRA	_01737_DS_
                                           _01768_DS_:
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	puertob();
00537a   ec9f     call    0x00593e, 0x0call    0x00593e, 0x0 	CALL	_puertob
00537c   f02c
                                           _01737_DS_:
00537e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__setup	code
                                           _setup:
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	TRISB=0;
004a0e   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(21,INPUT);
004a10   0e01     movlw   0x01             	MOVLW	0x01
004a12   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a14   0e15     movlw   0x15             	MOVLW	0x15
004a16   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a18   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a1a   f013
004a1c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a1e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(22,INPUT);
004a20   0e01     movlw   0x01             	MOVLW	0x01
004a22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a24   0e16     movlw   0x16             	MOVLW	0x16
004a26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a28   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a2a   f013
004a2c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a2e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(23,INPUT);
004a30   0e01     movlw   0x01             	MOVLW	0x01
004a32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a34   0e17     movlw   0x17             	MOVLW	0x17
004a36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a38   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a3a   f013
004a3c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a3e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	186; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(24,INPUT);
004a40   0e01     movlw   0x01             	MOVLW	0x01
004a42   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a44   0e18     movlw   0x18             	MOVLW	0x18
004a46   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a48   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a4a   f013
004a4c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a4e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(25,OUTPUT);
004a50   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a52   0e19     movlw   0x19             	MOVLW	0x19
004a54   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a56   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a58   f013
004a5a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a5c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(26,OUTPUT);
004a5e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a60   0e1a     movlw   0x1a             	MOVLW	0x1a
004a62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a64   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a66   f013
004a68   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a6a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(27,OUTPUT);
004a6c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a6e   0e1b     movlw   0x1b             	MOVLW	0x1b
004a70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a72   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a74   f013
004a76   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a78   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(28,OUTPUT);
004a7a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004a7c   0e1c     movlw   0x1c             	MOVLW	0x1c
004a7e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a80   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004a82   f013
004a84   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004a86   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(8);
004a88   0e08     movlw   0x08             	MOVLW	0x08
004a8a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a8c   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
004a8e   f015
004a90   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(9);
004a92   0e09     movlw   0x09             	MOVLW	0x09
004a94   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004a96   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
004a98   f015
004a9a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(10);
004a9c   0e0a     movlw   0x0a             	MOVLW	0x0a
004a9e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004aa0   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
004aa2   f015
004aa4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(11);
004aa6   0e0b     movlw   0x0b             	MOVLW	0x0b
004aa8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004aaa   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
004aac   f015
004aae   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(12);
004ab0   0e0c     movlw   0x0c             	MOVLW	0x0c
004ab2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004ab4   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
004ab6   f015
004ab8   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTD=0;
004aba   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTB=0;
004abc   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
004abe   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos	code
                                           _servos:
                                           ;	.line	141; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void servos()
00453c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00453e   ffe5
004540   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004542   ffe5
004544   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004546   ffe5
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int val=0;
004548   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
00454a   ec77     call    0x0056ee, 0x0call    0x0056ee, 0x0 	CALL	_leo_puerto
00454c   f02b
00454e   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004550   f003
004552   0a01     xorlw   0x01             	XORLW	0x01
004554   e102     bnz     0x00455a         	BNZ	_01709_DS_
004556   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004558   e001     bz      0x00455c         	BZ	_01710_DS_
                                           _01709_DS_:
00455a   d03b     bra     0x0045d2         	BRA	_01692_DS_
                                           _01710_DS_:
00455c   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
00455e   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004560   0f80     addlw   0x80             	ADDLW	0x80
004562   0f80     addlw   0x80             	ADDLW	0x80
004564   e102     bnz     0x00456a         	BNZ	_01711_DS_
004566   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
004568   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01711_DS_:
00456a   e333     bnc     0x0045d2         	BNC	_01692_DS_
00456c   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
00456e   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004570   0f80     addlw   0x80             	ADDLW	0x80
004572   0f80     addlw   0x80             	ADDLW	0x80
004574   e102     bnz     0x00457a         	BNZ	_01712_DS_
004576   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
004578   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01712_DS_:
00457a   e22b     bc      0x0045d2         	BC	_01692_DS_
00457c   0ecf     movlw   0xcf             	MOVLW	0xcf
00457e   0101     movlb   0x1              	BANKSEL	_caracter
004580   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
004582   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004584   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
004586   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
004588   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00458a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00458c   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00458e   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004590   0bfc     andlw   0xfc             	ANDLW	0xfc
004592   0fa2     addlw   0xa2             	ADDLW	LOW(_01713_DS_)
004594   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004596   0e45     movlw   0x45             	MOVLW	HIGH(_01713_DS_)
004598   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00459a   0e00     movlw   0x00             	MOVLW	UPPER(_01713_DS_)
00459c   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00459e   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0045a0   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01713_DS_:
0045a2   efdb     goto    0x0045b6         	GOTO	_01685_DS_
0045a4   f022
0045a6   efde     goto    0x0045bc         	GOTO	_01686_DS_
0045a8   f022
0045aa   efe1     goto    0x0045c2         	GOTO	_01687_DS_
0045ac   f022
0045ae   efe4     goto    0x0045c8         	GOTO	_01688_DS_
0045b0   f022
0045b2   efe7     goto    0x0045ce         	GOTO	_01689_DS_
0045b4   f022
                                           _01685_DS_:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV1;
0045b6   0e0a     movlw   0x0a             	MOVLW	0x0a
0045b8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0045ba   d00b     bra     0x0045d2         	BRA	_01692_DS_
                                           _01686_DS_:
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV2;
0045bc   0e0b     movlw   0x0b             	MOVLW	0x0b
0045be   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	156; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0045c0   d008     bra     0x0045d2         	BRA	_01692_DS_
                                           _01687_DS_:
                                           ;	.line	158; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV3;
0045c2   0e0c     movlw   0x0c             	MOVLW	0x0c
0045c4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0045c6   d005     bra     0x0045d2         	BRA	_01692_DS_
                                           _01688_DS_:
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV4;
0045c8   0e09     movlw   0x09             	MOVLW	0x09
0045ca   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0045cc   d002     bra     0x0045d2         	BRA	_01692_DS_
                                           _01689_DS_:
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV5;
0045ce   0e08     movlw   0x08             	MOVLW	0x08
0045d0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01692_DS_:
0045d2   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0045d4   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0045d6   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
0045d8   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0045da   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	170; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
0045dc   ec77     call    0x0056ee, 0x0call    0x0056ee, 0x0 	CALL	_leo_puerto
0045de   f02b
0045e0   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0045e2   f003
0045e4   0a01     xorlw   0x01             	XORLW	0x01
0045e6   e102     bnz     0x0045ec         	BNZ	_01714_DS_
0045e8   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0045ea   e001     bz      0x0045ee         	BZ	_01715_DS_
                                           _01714_DS_:
0045ec   d00f     bra     0x00460c         	BRA	_01694_DS_
                                           _01715_DS_:
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	resultado = caracter;
0045ee   c193     movff   0x193, 0x002     	MOVFF	_caracter, r0x02
0045f0   f002
0045f2   c194     movff   0x194, 0x003     	MOVFF	(_caracter + 1), r0x03
0045f4   f003
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoWrite(val,resultado);
0045f6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0045f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0045fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045fc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0045fe   ec7c     call    0x0046f8, 0x0call    0x0046f8, 0x0 	CALL	_ServoWrite
004600   f023
004602   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004604   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004606   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
004608   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
00460a   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
                                           _01694_DS_:
00460c   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
00460e   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return;
004610   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004612   f003
004614   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004616   f002
004618   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00461a   f000
00461c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__puertob	code
                                           _puertob:
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void puertob()
00593e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005940   ffe5
                                           ;	.line	133; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
005942   ec77     call    0x0056ee, 0x0call    0x0056ee, 0x0 	CALL	_leo_puerto
005944   f02b
005946   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005948   f001
00594a   0a01     xorlw   0x01             	XORLW	0x01
00594c   e102     bnz     0x005952         	BNZ	_01679_DS_
00594e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005950   e001     bz      0x005954         	BZ	_01680_DS_
                                           _01679_DS_:
005952   d007     bra     0x005962         	BRA	_01674_DS_
                                           _01680_DS_:
005954   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	136; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTB=caracter;
005956   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005958   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
                                           ; removed redundant BANKSEL
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
00595a   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
00595c   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
00595e   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	138; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
005960   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           _01674_DS_:
005962   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005964   f001
005966   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogico	code
                                           _analogico:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void analogico()
003962   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003964   ffe5
003966   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003968   ffe5
00396a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00396c   ffe5
00396e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003970   ffe5
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	unsigned int val=0;
003972   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01618_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=CDCgets(rxstr2);
003974   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003976   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003978   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr2)
00397a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00397c   0e44     movlw   0x44             	MOVLW	LOW(_rxstr2)
00397e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003980   ec14     call    0x003e28, 0x0call    0x003e28, 0x0 	CALL	_CDCgets
003982   f01f
003984   0101     movlb   0x1              	BANKSEL	_receivedbyte2
003986   6faf     movwf   0xaf, 0x1        	MOVWF	_receivedbyte2, B
003988   0e03     movlw   0x03             	MOVLW	0x03
00398a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte2>0)
00398c   51af     movf    0xaf, 0x0, 0x1   	MOVF	_receivedbyte2, W, B
00398e   e0f2     bz      0x003974         	BZ	_01618_DS_
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='1')
003990   c144     movff   0x144, 0x002     	MOVFF	_rxstr2, r0x02
003992   f002
003994   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003996   0a31     xorlw   0x31             	XORLW	0x31
003998   e102     bnz     0x00399e         	BNZ	_01600_DS_
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=13;
00399a   0e0d     movlw   0x0d             	MOVLW	0x0d
00399c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01600_DS_:
                                           ;	.line	88; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='2')
00399e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039a0   0a32     xorlw   0x32             	XORLW	0x32
0039a2   e102     bnz     0x0039a8         	BNZ	_01602_DS_
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=14;
0039a4   0e0e     movlw   0x0e             	MOVLW	0x0e
0039a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01602_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='3')
0039a8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039aa   0a33     xorlw   0x33             	XORLW	0x33
0039ac   e102     bnz     0x0039b2         	BNZ	_01604_DS_
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=15;
0039ae   0e0f     movlw   0x0f             	MOVLW	0x0f
0039b0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01604_DS_:
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='4')
0039b2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039b4   0a34     xorlw   0x34             	XORLW	0x34
0039b6   e102     bnz     0x0039bc         	BNZ	_01606_DS_
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=16;
0039b8   0e10     movlw   0x10             	MOVLW	0x10
0039ba   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01606_DS_:
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='5')
0039bc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039be   0a35     xorlw   0x35             	XORLW	0x35
0039c0   e102     bnz     0x0039c6         	BNZ	_01608_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=17;
0039c2   0e11     movlw   0x11             	MOVLW	0x11
0039c4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01608_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='6')
0039c6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039c8   0a36     xorlw   0x36             	XORLW	0x36
0039ca   e102     bnz     0x0039d0         	BNZ	_01610_DS_
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=18;
0039cc   0e12     movlw   0x12             	MOVLW	0x12
0039ce   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01610_DS_:
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='7')
0039d0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039d2   0a37     xorlw   0x37             	XORLW	0x37
0039d4   e102     bnz     0x0039da         	BNZ	_01612_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=19;
0039d6   0e13     movlw   0x13             	MOVLW	0x13
0039d8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01612_DS_:
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='8')
0039da   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039dc   0a38     xorlw   0x38             	XORLW	0x38
0039de   e102     bnz     0x0039e4         	BNZ	_01614_DS_
                                           ;	.line	114; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=20;
0039e0   0e14     movlw   0x14             	MOVLW	0x14
0039e2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01614_DS_:
0039e4   0101     movlb   0x1              	BANKSEL	_receivedbyte2
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=0;
0039e6   6baf     clrf    0xaf, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	valor=analogread(val);
0039e8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039ea   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039ec   eca1     call    0x005142, 0x0call    0x005142, 0x0 	CALL	_analogread
0039ee   f028
0039f0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0039f2   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0039f4   f001
0039f6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0039f8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0039fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039fc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a00   ece0     call    0x0055c0, 0x0call    0x0055c0, 0x0 	CALL	___uint2fs
003a02   f02a
003a04   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003a06   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003a08   f001
003a0a   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003a0c   f002
003a0e   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003a10   f003
003a12   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003a14   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	x_ftoa(valor,chaine,2,2);
003a16   0e02     movlw   0x02             	MOVLW	0x02
003a18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a1a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a1c   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a1e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a20   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a24   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a28   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003a2a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a2c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a30   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a34   ec67     call    0x0028ce, 0x0call    0x0028ce, 0x0 	CALL	_x_ftoa
003a36   f014
003a38   0e08     movlw   0x08             	MOVLW	0x08
003a3a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	strcat(chaine,"f\n");
003a3c   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
003a3e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a40   0e37     movlw   0x37             	MOVLW	HIGH(___str_2)
003a42   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a44   0ece     movlw   0xce             	MOVLW	LOW(___str_2)
003a46   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a48   0e80     movlw   0x80             	MOVLW	0x80
003a4a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a4c   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a4e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a50   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a54   ec28     call    0x004450, 0x0call    0x004450, 0x0 	CALL	_strcat
003a56   f022
003a58   0e06     movlw   0x06             	MOVLW	0x06
003a5a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	tam=strlen(chaine);
003a5c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003a5e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a60   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a64   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a68   ecc0     call    0x005380, 0x0call    0x005380, 0x0 	CALL	_strlen
003a6a   f029
003a6c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003a6e   0e03     movlw   0x03             	MOVLW	0x03
003a70   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs(chaine,tam);
003a72   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a74   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a76   0e80     movlw   0x80             	MOVLW	0x80
003a78   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a7a   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a7e   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a82   ec2d     call    0x00405a, 0x0call    0x00405a, 0x0 	CALL	_CDCputs
003a84   f020
003a86   0e04     movlw   0x04             	MOVLW	0x04
003a88   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003a8a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003a8c   f003
003a8e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003a90   f002
003a92   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003a94   f001
003a96   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003a98   f000
003a9a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__l293d	code
                                           _l293d:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void l293d()
0047cc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0047ce   ffe5
0047d0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0047d2   ffe5
0047d4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0047d6   ffe5
0047d8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0047da   ffe5
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int val=0;
0047dc   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0047de   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
0047e0   ec77     call    0x0056ee, 0x0call    0x0056ee, 0x0 	CALL	_leo_puerto
0047e2   f02b
0047e4   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0047e6   f003
0047e8   0a01     xorlw   0x01             	XORLW	0x01
0047ea   e102     bnz     0x0047f0         	BNZ	_01590_DS_
0047ec   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0047ee   e001     bz      0x0047f2         	BZ	_01591_DS_
                                           _01590_DS_:
0047f0   d042     bra     0x004876         	BRA	_01578_DS_
                                           _01591_DS_:
0047f2   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
0047f4   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0047f6   0f80     addlw   0x80             	ADDLW	0x80
0047f8   0f80     addlw   0x80             	ADDLW	0x80
0047fa   e102     bnz     0x004800         	BNZ	_01592_DS_
0047fc   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
0047fe   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01592_DS_:
004800   e338     bnc     0x004872         	BNC	_01575_DS_
004802   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
004804   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004806   0f80     addlw   0x80             	ADDLW	0x80
004808   0f80     addlw   0x80             	ADDLW	0x80
00480a   e102     bnz     0x004810         	BNZ	_01593_DS_
00480c   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
00480e   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01593_DS_:
004810   e230     bc      0x004872         	BC	_01575_DS_
004812   0ecf     movlw   0xcf             	MOVLW	0xcf
004814   0101     movlb   0x1              	BANKSEL	_caracter
004816   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
004818   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00481a   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
00481c   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00481e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004820   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004822   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
004824   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004826   0bfc     andlw   0xfc             	ANDLW	0xfc
004828   0f38     addlw   0x38             	ADDLW	LOW(_01594_DS_)
00482a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00482c   0e48     movlw   0x48             	MOVLW	HIGH(_01594_DS_)
00482e   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
004830   0e00     movlw   0x00             	MOVLW	UPPER(_01594_DS_)
004832   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
004834   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
004836   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01594_DS_:
004838   ef26     goto    0x00484c         	GOTO	_01570_DS_
00483a   f024
00483c   ef2a     goto    0x004854         	GOTO	_01571_DS_
00483e   f024
004840   ef2e     goto    0x00485c         	GOTO	_01572_DS_
004842   f024
004844   ef32     goto    0x004864         	GOTO	_01573_DS_
004846   f024
004848   ef36     goto    0x00486c         	GOTO	_01574_DS_
00484a   f024
                                           _01570_DS_:
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AD;
00484c   0e60     movlw   0x60             	MOVLW	0x60
00484e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004850   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004852   d011     bra     0x004876         	BRA	_01578_DS_
                                           _01571_DS_:
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AT;
004854   0e90     movlw   0x90             	MOVLW	0x90
004856   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004858   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	56; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
00485a   d00d     bra     0x004876         	BRA	_01578_DS_
                                           _01572_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_IZ;
00485c   0e40     movlw   0x40             	MOVLW	0x40
00485e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004860   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004862   d009     bra     0x004876         	BRA	_01578_DS_
                                           _01573_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_DE;
004864   0e20     movlw   0x20             	MOVLW	0x20
004866   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004868   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
00486a   d005     bra     0x004876         	BRA	_01578_DS_
                                           _01574_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=0;
00486c   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00486e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004870   d002     bra     0x004876         	BRA	_01578_DS_
                                           _01575_DS_:
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=0;
004872   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004874   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01578_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	valor=val;
004876   c000     movff   0x000, 0x184     	MOVFF	r0x00, _valor
004878   f184
00487a   c001     movff   0x001, 0x185     	MOVFF	r0x01, (_valor + 1)
00487c   f185
00487e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004880   f003
004882   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004884   f002
004886   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004888   f001
00488a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00488c   f000
00488e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digital	code
                                           _digital:
                                           ;	.line	13; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void digital()
00426e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004270   ffe5
004272   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004274   ffe5
004276   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004278   ffe5
00427a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00427c   ffe5
                                           ;	.line	15; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int sens=0;
00427e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	17; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
004280   ec77     call    0x0056ee, 0x0call    0x0056ee, 0x0 	CALL	_leo_puerto
004282   f02b
004284   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004286   f003
004288   0a01     xorlw   0x01             	XORLW	0x01
00428a   e102     bnz     0x004290         	BNZ	_01559_DS_
00428c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00428e   e001     bz      0x004292         	BZ	_01560_DS_
                                           _01559_DS_:
004290   d036     bra     0x0042fe         	BRA	_01541_DS_
                                           _01560_DS_:
004292   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	19; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
004294   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
004296   0f80     addlw   0x80             	ADDLW	0x80
004298   0f80     addlw   0x80             	ADDLW	0x80
00429a   e102     bnz     0x0042a0         	BNZ	_01561_DS_
00429c   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
00429e   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01561_DS_:
0042a0   e32e     bnc     0x0042fe         	BNC	_01541_DS_
0042a2   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
0042a4   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0042a6   0f80     addlw   0x80             	ADDLW	0x80
0042a8   0f80     addlw   0x80             	ADDLW	0x80
0042aa   e102     bnz     0x0042b0         	BNZ	_01562_DS_
0042ac   0e35     movlw   0x35             	MOVLW	0x35
                                           ; removed redundant BANKSEL
0042ae   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01562_DS_:
0042b0   e226     bc      0x0042fe         	BC	_01541_DS_
0042b2   0ecf     movlw   0xcf             	MOVLW	0xcf
0042b4   0101     movlb   0x1              	BANKSEL	_caracter
0042b6   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
0042b8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0042ba   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0042bc   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0042be   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0042c0   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0042c2   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0042c4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0042c6   0bfc     andlw   0xfc             	ANDLW	0xfc
0042c8   0fd8     addlw   0xd8             	ADDLW	LOW(_01563_DS_)
0042ca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042cc   0e42     movlw   0x42             	MOVLW	HIGH(_01563_DS_)
0042ce   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0042d0   0e00     movlw   0x00             	MOVLW	UPPER(_01563_DS_)
0042d2   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0042d4   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0042d6   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01563_DS_:
0042d8   ef74     goto    0x0042e8         	GOTO	_01535_DS_
0042da   f021
0042dc   ef77     goto    0x0042ee         	GOTO	_01536_DS_
0042de   f021
0042e0   ef7a     goto    0x0042f4         	GOTO	_01537_DS_
0042e2   f021
0042e4   ef7d     goto    0x0042fa         	GOTO	_01538_DS_
0042e6   f021
                                           _01535_DS_:
                                           ;	.line	22; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=21;
0042e8   0e15     movlw   0x15             	MOVLW	0x15
0042ea   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	23; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0042ec   d008     bra     0x0042fe         	BRA	_01541_DS_
                                           _01536_DS_:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=22;
0042ee   0e16     movlw   0x16             	MOVLW	0x16
0042f0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	26; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0042f2   d005     bra     0x0042fe         	BRA	_01541_DS_
                                           _01537_DS_:
                                           ;	.line	28; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=23;
0042f4   0e17     movlw   0x17             	MOVLW	0x17
0042f6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0042f8   d002     bra     0x0042fe         	BRA	_01541_DS_
                                           _01538_DS_:
                                           ;	.line	31; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=24;
0042fa   0e18     movlw   0x18             	MOVLW	0x18
0042fc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01541_DS_:
0042fe   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	35; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
004300   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
004302   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
004304   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
004306   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	r=digitalread(sens);
004308   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00430a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00430c   ec4b     call    0x003096, 0x0call    0x003096, 0x0 	CALL	_digitalread
00430e   f018
004310   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004312   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (r==1) 
004314   0a01     xorlw   0x01             	XORLW	0x01
004316   e102     bnz     0x00431c         	BNZ	_01564_DS_
004318   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00431a   e001     bz      0x00431e         	BZ	_01565_DS_
                                           _01564_DS_:
00431c   d00d     bra     0x004338         	BRA	_01543_DS_
                                           _01565_DS_:
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("0",1);
00431e   0e01     movlw   0x01             	MOVLW	0x01
004320   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004322   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
004324   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004326   0e37     movlw   0x37             	MOVLW	HIGH(___str_0)
004328   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00432a   0eca     movlw   0xca             	MOVLW	LOW(___str_0)
00432c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00432e   ec2d     call    0x00405a, 0x0call    0x00405a, 0x0 	CALL	_CDCputs
004330   f020
004332   0e04     movlw   0x04             	MOVLW	0x04
004334   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
004336   d00c     bra     0x004350         	BRA	_01545_DS_
                                           _01543_DS_:
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("1",1);
004338   0e01     movlw   0x01             	MOVLW	0x01
00433a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00433c   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
00433e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004340   0e37     movlw   0x37             	MOVLW	HIGH(___str_1)
004342   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004344   0ecc     movlw   0xcc             	MOVLW	LOW(___str_1)
004346   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004348   ec2d     call    0x00405a, 0x0call    0x00405a, 0x0 	CALL	_CDCputs
00434a   f020
00434c   0e04     movlw   0x04             	MOVLW	0x04
00434e   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01545_DS_:
004350   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004352   f003
004354   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004356   f002
004358   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00435a   f001
00435c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00435e   f000
004360   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDC_interrupt	code
                                           _CDC_interrupt:
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	if(PIR2bits.USBIF)
005a9a   aaa1     btfss   0xa1, 0x5, 0x0   	BTFSS	_PIR2bits, 5
005a9c   d006     bra     0x005aaa         	BRA	_01530_DS_
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIR2bits.USBIF = 0;
005a9e   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	ProcessUSBTransactions();
005aa0   ecaa     call    0x005554, 0x0call    0x005554, 0x0 	CALL	_ProcessUSBTransactions
005aa2   f02a
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UIRbits.SOFIF = 0;
005aa4   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UIRbits.URSTIF = 0;
005aa6   9068     bcf     0x68, 0x0, 0x0   	BCF	_UIRbits, 0
                                           ;	.line	348; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UEIR = 0;
005aa8   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           _01530_DS_:
005aaa   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDC_init	code
                                           _CDC_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	void CDC_init(void)
004e1a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004e1c   ffe5
004e1e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004e20   ffe5
004e22   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004e24   ffe5
004e26   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004e28   ffe5
004e2a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004e2c   ffe5
004e2e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004e30   ffe5
004e32   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004e34   ffe5
004e36   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004e38   ffe5
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEH = 0;
004e3a   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEL = 0;
004e3c   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UCFG = 0x14;            // Enable pullup resistors; full speed mode
004e3e   0e14     movlw   0x14             	MOVLW	0x14
004e40   6e6f     movwf   0x6f, 0x0        	MOVWF	_UCFG
004e42   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	deviceState = DETACHED;
004e44   6bab     clrf    0xab, 0x1        	CLRF	_deviceState, B
004e46   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	remoteWakeup = 0x00;
004e48   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
004e4a   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	currentConfiguration = 0x00;
004e4c   6bac     clrf    0xac, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	while ( counter++ && deviceState != CONFIGURED )
004e4e   0e01     movlw   0x01             	MOVLW	0x01
004e50   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004e52   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004e54   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004e56   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01506_DS_:
004e58   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
004e5a   f004
004e5c   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
004e5e   f005
004e60   c002     movff   0x002, 0x006     	MOVFF	r0x02, r0x06
004e62   f006
004e64   c003     movff   0x003, 0x007     	MOVFF	r0x03, r0x07
004e66   f007
004e68   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004e6a   e304     bnc     0x004e74         	BNC	_01521_DS_
004e6c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004e6e   e302     bnc     0x004e74         	BNC	_01521_DS_
004e70   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004e72   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           _01521_DS_:
004e74   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004e76   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
004e78   1006     iorwf   0x06, 0x0, 0x0   	IORWF	r0x06, W
004e7a   1007     iorwf   0x07, 0x0, 0x0   	IORWF	r0x07, W
004e7c   e009     bz      0x004e90         	BZ	_01508_DS_
004e7e   0101     movlb   0x1              	BANKSEL	_deviceState
004e80   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
004e82   0a05     xorlw   0x05             	XORLW	0x05
004e84   e005     bz      0x004e90         	BZ	_01508_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	EnableUSBModule();
004e86   ec89     call    0x005912, 0x0call    0x005912, 0x0 	CALL	_EnableUSBModule
004e88   f02c
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	ProcessUSBTransactions();
004e8a   ecaa     call    0x005554, 0x0call    0x005554, 0x0 	CALL	_ProcessUSBTransactions
004e8c   f02a
004e8e   d7e4     bra     0x004e58         	BRA	_01506_DS_
                                           _01508_DS_:
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIR2bits.USBIF = 0;     // clear usb interrupt flag
004e90   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIE2bits.USBIE = 1;     // enable usb interrupt
004e92   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	IPR2bits.USBIP = 1;     // high priority interrupt
004e94   8aa2     bsf     0xa2, 0x5, 0x0   	BSF	_IPR2bits, 5
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEH = 1;   // Enable global HP interrupts
004e96   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEL = 1;   // Enable global LP interrupts
004e98   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
004e9a   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004e9c   f007
004e9e   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004ea0   f006
004ea2   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004ea4   f005
004ea6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004ea8   f004
004eaa   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004eac   f003
004eae   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004eb0   f002
004eb2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004eb4   f001
004eb6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004eb8   f000
004eba   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
00568e   0104     movlb   0x4              	BANKSEL	_line_config
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
005690   6bea     clrf    0xea, 0x1        	CLRF	_line_config, B
005692   0ec2     movlw   0xc2             	MOVLW	0xc2
                                           ; removed redundant BANKSEL
005694   6feb     movwf   0xeb, 0x1        	MOVWF	(_line_config + 1), B
005696   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
005698   6fec     movwf   0xec, 0x1        	MOVWF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
00569a   6bed     clrf    0xed, 0x1        	CLRF	(_line_config + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
00569c   6bee     clrf    0xee, 0x1        	CLRF	(_line_config + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
00569e   6bef     clrf    0xef, 0x1        	CLRF	(_line_config + 5), B
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
0056a0   0e08     movlw   0x08             	MOVLW	0x08
                                           ; removed redundant BANKSEL
0056a2   6ff0     movwf   0xf0, 0x1        	MOVWF	(_line_config + 6), B
0056a4   0106     movlb   0x6              	BANKSEL	_zlp
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue0=0;
0056a6   6bf4     clrf    0xf4, 0x1        	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	225; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue1=0;
0056a8   6bf5     clrf    0xf5, 0x1        	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue2=0;
0056aa   6bf6     clrf    0xf6, 0x1        	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue3=0;
0056ac   6bf7     clrf    0xf7, 0x1        	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue4=0;
0056ae   6bf8     clrf    0xf8, 0x1        	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue5=0;
0056b0   6bf9     clrf    0xf9, 0x1        	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue6=0;
0056b2   6bfa     clrf    0xfa, 0x1        	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue7=0;
0056b4   6bfb     clrf    0xfb, 0x1        	CLRF	(_zlp + 7), B
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
0056b6   0e1a     movlw   0x1a             	MOVLW	0x1a
0056b8   6e72     movwf   0x72, 0x0        	MOVWF	_UEP2
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
0056ba   0e1e     movlw   0x1e             	MOVLW	0x1e
0056bc   6e73     movwf   0x73, 0x0        	MOVWF	_UEP3
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
0056be   0eda     movlw   0xda             	MOVLW	LOW(_CDCControlBuffer)
0056c0   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 22)
0056c2   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
0056c4   0e04     movlw   0x04             	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
0056c6   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
0056c8   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
0056ca   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
0056cc   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	248; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
0056ce   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
0056d0   6f1a     movwf   0x1a, 0x1        	MOVWF	(_ep_bdt + 26), B
0056d2   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
0056d4   6f1b     movwf   0x1b, 0x1        	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
0056d6   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0056d8   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
0056da   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
0056dc   6f1e     movwf   0x1e, 0x1        	MOVWF	(_ep_bdt + 30), B
0056de   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
0056e0   6f1f     movwf   0x1f, 0x1        	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
0056e2   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0056e4   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	deviceState=CONFIGURED; 
0056e6   0e05     movlw   0x05             	MOVLW	0x05
0056e8   0101     movlb   0x1              	BANKSEL	_deviceState
0056ea   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
0056ec   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputc	code
                                           _CDCputc:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	void CDCputc(u8 c)
0054e8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0054ea   ffe5
0054ec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0054ee   ffd9
0054f0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0054f2   ffe5
0054f4   0e02     movlw   0x02             	MOVLW	0x02
0054f6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0054f8   f000
0054fa   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED) return;
0054fc   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
0054fe   0a05     xorlw   0x05             	XORLW	0x05
005500   e124     bnz     0x00554a         	BNZ	_01483_DS_
                                           _01478_DS_:
005502   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE) return;
005504   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
005506   e021     bz      0x00554a         	BZ	_01483_DS_
                                           _01480_DS_:
005508   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN)
00550a   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
00550c   d01e     bra     0x00554a         	BRA	_01483_DS_
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDCTxBuffer[0] = c;
00550e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005510   0105     movlb   0x5              	BANKSEL	_CDCTxBuffer
005512   6fc0     movwf   0xc0, 0x1        	MOVWF	_CDCTxBuffer, B
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = 1;
005514   0e01     movlw   0x01             	MOVLW	0x01
005516   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
005518   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
00551a   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
00551c   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00551e   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
005520   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
005522   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
005524   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005526   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005528   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
00552a   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
00552c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00552e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005530   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
005532   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005534   0b01     andlw   0x01             	ANDLW	0x01
005536   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
005538   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
00553a   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
00553c   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
00553e   0bbf     andlw   0xbf             	ANDLW	0xbf
005540   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
005542   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
005544   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
005546   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005548   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01483_DS_:
00554a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00554c   f000
00554e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005550   ffd9
005552   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputs	code
                                           _CDCputs:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 CDCputs(u8 *buffer, u8 length)
00405a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00405c   ffe5
00405e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004060   ffd9
004062   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004064   ffe5
004066   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004068   ffe5
00406a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00406c   ffe5
00406e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004070   ffe5
004072   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004074   ffe5
004076   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004078   ffe5
00407a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00407c   ffe5
00407e   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004080   ffe5
004082   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
004084   ffe5
004086   0e02     movlw   0x02             	MOVLW	0x02
004088   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00408a   f000
00408c   0e03     movlw   0x03             	MOVLW	0x03
00408e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004090   f001
004092   0e04     movlw   0x04             	MOVLW	0x04
004094   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004096   f002
004098   0e05     movlw   0x05             	MOVLW	0x05
00409a   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
00409c   f003
00409e   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
0040a0   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
0040a2   0a05     xorlw   0x05             	XORLW	0x05
0040a4   e002     bz      0x0040aa         	BZ	_01437_DS_
0040a6   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040a8   d04c     bra     0x004142         	BRA	_01448_DS_
                                           _01437_DS_:
0040aa   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
0040ac   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
0040ae   e102     bnz     0x0040b4         	BNZ	_01439_DS_
0040b0   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040b2   d047     bra     0x004142         	BRA	_01448_DS_
                                           _01439_DS_:
0040b4   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN)
0040b6   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
0040b8   d043     bra     0x004140         	BRA	_01444_DS_
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE)
0040ba   0e41     movlw   0x41             	MOVLW	0x41
0040bc   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0040be   e302     bnc     0x0040c4         	BNC	_01455_DS_
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	length = CDC_BULK_IN_SIZE;
0040c0   0e40     movlw   0x40             	MOVLW	0x40
0040c2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           _01455_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < length; i++)
0040c4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01446_DS_:
0040c6   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0040c8   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
0040ca   e21d     bc      0x004106         	BC	_01456_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
0040cc   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
0040ce   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
0040d0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0040d2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0040d4   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
0040d6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0040d8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0040da   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0040dc   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0040de   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040e0   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0040e2   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0040e4   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040e6   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0040e8   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
0040ea   ffe9
0040ec   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
0040ee   fff3
0040f0   eced     call    0x0059da, 0x0call    0x0059da, 0x0 	CALL	__gptrget1
0040f2   f02c
0040f4   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0040f6   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
0040f8   ffe9
0040fa   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
0040fc   ffea
0040fe   c007     movff   0x007, 0xfef     	MOVFF	r0x07, INDF0
004100   ffef
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < length; i++)
004102   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
004104   d7e0     bra     0x0040c6         	BRA	_01446_DS_
                                           _01456_DS_:
004106   c004     movff   0x004, 0x000     	MOVFF	r0x04, r0x00
004108   f000
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
00410a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
00410c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
00410e   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
004110   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004112   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004114   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
004116   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ; removed redundant BANKSEL
004118   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
00411a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00411c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00411e   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004120   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
004122   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004124   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004126   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004128   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00412a   0b01     andlw   0x01             	ANDLW	0x01
00412c   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
00412e   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004130   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
004132   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
004134   0bbf     andlw   0xbf             	ANDLW	0xbf
004136   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
004138   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
00413a   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
00413c   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00413e   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01444_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return i;
004140   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _01448_DS_:
004142   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
004144   f008
004146   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004148   f007
00414a   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
00414c   f006
00414e   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004150   f005
004152   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004154   f004
004156   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004158   f003
00415a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00415c   f002
00415e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004160   f001
004162   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004164   f000
004166   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004168   ffd9
00416a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCgets	code
                                           _CDCgets:
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 CDCgets(u8 *buffer)
003e28   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003e2a   ffe5
003e2c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003e2e   ffd9
003e30   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003e32   ffe5
003e34   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003e36   ffe5
003e38   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003e3a   ffe5
003e3c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003e3e   ffe5
003e40   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003e42   ffe5
003e44   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003e46   ffe5
003e48   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003e4a   ffe5
003e4c   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003e4e   ffe5
003e50   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003e52   ffe5
003e54   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
003e56   ffe5
003e58   0e02     movlw   0x02             	MOVLW	0x02
003e5a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003e5c   f000
003e5e   0e03     movlw   0x03             	MOVLW	0x03
003e60   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003e62   f001
003e64   0e04     movlw   0x04             	MOVLW	0x04
003e66   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
003e68   f002
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 i=0;
003e6a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e6c   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED)
003e6e   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
003e70   0a05     xorlw   0x05             	XORLW	0x05
003e72   e002     bz      0x003e78         	BZ	_01396_DS_
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return 0;
003e74   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003e76   d050     bra     0x003f18         	BRA	_01407_DS_
                                           _01396_DS_:
003e78   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE)
003e7a   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
003e7c   e102     bnz     0x003e82         	BNZ	_01398_DS_
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return 0;
003e7e   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003e80   d04b     bra     0x003f18         	BRA	_01407_DS_
                                           _01398_DS_:
003e82   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN)
003e84   bf18     btfsc   0x18, 0x7, 0x1   	BTFSC	(_ep_bdt + 24), 7, B
003e86   d047     bra     0x003f16         	BRA	_01403_DS_
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt)
003e88   0e40     movlw   0x40             	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01414_DS_
                                           ; #;;;!!! pic16_aopOp:1118 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
003e8a   5d19     subwf   0x19, 0x0, 0x1   	SUBWF	(_ep_bdt + 25), W, B
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++)
003e8c   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
003e8e   c419     movff   0x419, 0xfe8     	MOVFF	(_ep_bdt + 25), WREG
003e90   ffe8
003e92   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01405_DS_:
003e94   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 25)
003e96   5119     movf    0x19, 0x0, 0x1   	MOVF	(_ep_bdt + 25), W, B
003e98   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
003e9a   e220     bc      0x003edc         	BC	_01415_DS_
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
003e9c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003e9e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ea0   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003ea2   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003ea4   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003ea6   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003ea8   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003eaa   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
003eac   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003eae   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
003eb0   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
003eb2   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
003eb4   6a09     clrf    0x09, 0x0        	CLRF	r0x09
003eb6   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
003eb8   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
003eba   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
003ebc   ffe9
003ebe   c009     movff   0x009, 0xfea     	MOVFF	r0x09, FSR0H
003ec0   ffea
003ec2   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
003ec4   f008
003ec6   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003ec8   ffe5
003eca   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
003ecc   ffe9
003ece   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
003ed0   fff3
003ed2   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003ed4   ec42     call    0x005a84, 0x0call    0x005a84, 0x0 	CALL	__gptrput1
003ed6   f02d
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++)
003ed8   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
003eda   d7dc     bra     0x003e94         	BRA	_01405_DS_
                                           _01415_DS_:
003edc   c004     movff   0x004, 0x003     	MOVFF	r0x04, r0x03
003ede   f003
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
003ee0   0e40     movlw   0x40             	MOVLW	0x40
003ee2   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
003ee4   1518     andwf   0x18, 0x0, 0x1   	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003ee6   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	144; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
003ee8   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
003eea   bd18     btfsc   0x18, 0x6, 0x1   	BTFSC	(_ep_bdt + 24), 6, B
003eec   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
003eee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003ef0   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003ef2   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003ef4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003ef6   6a00     clrf    0x00, 0x0        	CLRF	r0x00
003ef8   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
003efa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003efc   0b01     andlw   0x01             	ANDLW	0x01
003efe   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
003f00   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
003f02   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003f04   5118     movf    0x18, 0x0, 0x1   	MOVF	(_ep_bdt + 24), W, B
003f06   0bbf     andlw   0xbf             	ANDLW	0xbf
003f08   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003f0a   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
003f0c   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003f0e   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
003f10   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
003f12   1118     iorwf   0x18, 0x0, 0x1   	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003f14   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           _01403_DS_:
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return i;
003f16   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           _01407_DS_:
003f18   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003f1a   f009
003f1c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003f1e   f008
003f20   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003f22   f007
003f24   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003f26   f006
003f28   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003f2a   f005
003f2c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003f2e   f004
003f30   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003f32   f003
003f34   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003f36   f002
003f38   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003f3a   f001
003f3c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003f3e   f000
003f40   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003f42   ffd9
003f44   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	void ProcessCDCRequest(void)
004cce   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004cd0   ffe5
                                           ;	.line	40; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
004cd2   0e60     movlw   0x60             	MOVLW	0x60
004cd4   0105     movlb   0x5              	BANKSEL	_SetupPacket
004cd6   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004cd8   0a20     xorlw   0x20             	XORLW	0x20
004cda   e001     bz      0x004cde         	BZ	_01343_DS_
004cdc   d049     bra     0x004d70         	BRA	_01353_DS_
                                           _01343_DS_:
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	switch(SetupPacket.bRequest)
004cde   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
004ce0   f000
004ce2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004ce4   e101     bnz     0x004ce8         	BNZ	_01380_DS_
004ce6   d044     bra     0x004d70         	BRA	_01353_DS_
                                           _01380_DS_:
004ce8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cea   0a01     xorlw   0x01             	XORLW	0x01
004cec   e101     bnz     0x004cf0         	BNZ	_01382_DS_
004cee   d040     bra     0x004d70         	BRA	_01353_DS_
                                           _01382_DS_:
004cf0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cf2   0a20     xorlw   0x20             	XORLW	0x20
004cf4   e007     bz      0x004d04         	BZ	_01346_DS_
004cf6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cf8   0a21     xorlw   0x21             	XORLW	0x21
004cfa   e013     bz      0x004d22         	BZ	_01347_DS_
004cfc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004cfe   0a22     xorlw   0x22             	XORLW	0x22
004d00   e01f     bz      0x004d40         	BZ	_01348_DS_
004d02   d036     bra     0x004d70         	BRA	_01353_DS_
                                           _01346_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
004d04   0e04     movlw   0x04             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004d06   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004d08   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004d0a   0eea     movlw   0xea             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004d0c   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004d0e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004d10   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
004d12   0e07     movlw   0x07             	MOVLW	0x07
004d14   0101     movlb   0x1              	BANKSEL	_wCount
004d16   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004d18   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;				
004d1a   0e01     movlw   0x01             	MOVLW	0x01
004d1c   0101     movlb   0x1              	BANKSEL	_requestHandled
004d1e   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	break;
004d20   d027     bra     0x004d70         	BRA	_01353_DS_
                                           _01347_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
004d22   0e04     movlw   0x04             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004d24   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004d26   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004d28   0eea     movlw   0xea             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004d2a   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004d2c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004d2e   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
004d30   0e07     movlw   0x07             	MOVLW	0x07
004d32   0101     movlb   0x1              	BANKSEL	_wCount
004d34   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004d36   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;
004d38   0e01     movlw   0x01             	MOVLW	0x01
004d3a   0101     movlb   0x1              	BANKSEL	_requestHandled
004d3c   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	break;
004d3e   d018     bra     0x004d70         	BRA	_01353_DS_
                                           _01348_DS_:
004d40   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
004d42   5102     movf    0x02, 0x0, 0x1   	MOVF	(_SetupPacket + 2), W, B
004d44   0a03     xorlw   0x03             	XORLW	0x03
004d46   e104     bnz     0x004d50         	BNZ	_01350_DS_
004d48   0e01     movlw   0x01             	MOVLW	0x01
004d4a   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
004d4c   6f03     movwf   0x03, 0x1        	MOVWF	_CONTROL_LINE, B
004d4e   d002     bra     0x004d54         	BRA	_01351_DS_
                                           _01350_DS_:
004d50   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	else CONTROL_LINE=0;		
004d52   6b03     clrf    0x03, 0x1        	CLRF	_CONTROL_LINE, B
                                           _01351_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&zlp;
004d54   0e06     movlw   0x06             	MOVLW	HIGH(_zlp)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004d56   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004d58   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004d5a   0ef4     movlw   0xf4             	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
004d5c   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004d5e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004d60   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
004d62   0e08     movlw   0x08             	MOVLW	0x08
004d64   0101     movlb   0x1              	BANKSEL	_wCount
004d66   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004d68   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;						
004d6a   0e01     movlw   0x01             	MOVLW	0x01
004d6c   0101     movlb   0x1              	BANKSEL	_requestHandled
004d6e   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _01353_DS_:
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
004d70   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004d72   f000
004d74   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	838; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessUSBTransactions(void)
005554   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005556   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_01256_DS_
                                           ; #	GOTO	_01282_DS_
                                           ; #	BTFSS	_UIRbits, 2
005558   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	841; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(deviceState == DETACHED)
00555a   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
                                           ;	.line	842; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
00555c   e02e     bz      0x0055ba         	BZ	_01282_DS_
                                           ;	.line	845; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
00555e   a468     btfss   0x68, 0x2, 0x0   	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_01258_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_01258_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	846; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UnSuspend();
005560   d003     bra     0x005568         	BRA	_01258_DS_
                                           ;	.line	850; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UCONbits.SUSPND == 1)
005562   b469     btfsc   0x69, 0x2, 0x0   	BTFSC	_UIEbits, 2
005564   ec6d     call    0x005ada, 0x0call    0x005ada, 0x0 	CALL	_UnSuspend
005566   f02d
                                           _01258_DS_:
005568   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00556a   b26d     btfsc   0x6d, 0x1, 0x0   	BTFSC	_UCONbits, 1
00556c   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
00556e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005570   0a01     xorlw   0x01             	XORLW	0x01
                                           ;	.line	851; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
005572   e023     bz      0x0055ba         	BZ	_01282_DS_
                                           ;	.line	854; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE)
005574   a068     btfss   0x68, 0x0, 0x0   	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_01263_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_01263_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	855; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	BusReset();
005576   d003     bra     0x00557e         	BRA	_01263_DS_
                                           ;	.line	858; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE)
005578   b069     btfsc   0x69, 0x0, 0x0   	BTFSC	_UIEbits, 0
00557a   ecf4     call    0x0057e8, 0x0call    0x0057e8, 0x0 	CALL	_BusReset
00557c   f02b
                                           _01263_DS_:
00557e   a868     btfss   0x68, 0x4, 0x0   	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_01266_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_01266_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	859; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	Suspend();
005580   d003     bra     0x005588         	BRA	_01266_DS_
                                           ;	.line	861; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE)
005582   b869     btfsc   0x69, 0x4, 0x0   	BTFSC	_UIEbits, 4
005584   ecdc     call    0x0059b8, 0x0call    0x0059b8, 0x0 	CALL	_Suspend
005586   f02c
                                           _01266_DS_:
005588   ac68     btfss   0x68, 0x6, 0x0   	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_01269_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_01269_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	862; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	StartOfFrame();
00558a   d003     bra     0x005592         	BRA	_01269_DS_
                                           ;	.line	864; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE)
00558c   bc69     btfsc   0x69, 0x6, 0x0   	BTFSC	_UIEbits, 6
00558e   ec02     call    0x000c04, 0x0call    0x000c04, 0x0 	CALL	_StartOfFrame
005590   f006
                                           _01269_DS_:
005592   aa68     btfss   0x68, 0x5, 0x0   	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_01272_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_01272_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	865; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	Stall();
005594   d003     bra     0x00559c         	BRA	_01272_DS_
                                           ;	.line	869; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE)
005596   ba69     btfsc   0x69, 0x5, 0x0   	BTFSC	_UIEbits, 5
005598   ec0e     call    0x005a1c, 0x0call    0x005a1c, 0x0 	CALL	_Stall
00559a   f02d
                                           _01272_DS_:
00559c   a268     btfss   0x68, 0x1, 0x0   	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_01275_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_01275_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	870; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.UERRIF = 0;
00559e   d002     bra     0x0055a4         	BRA	_01275_DS_
                                           ;	.line	873; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (deviceState < DEFAULT_STATUS)
0055a0   b269     btfsc   0x69, 0x1, 0x0   	BTFSC	_UIEbits, 1
0055a2   9268     bcf     0x68, 0x1, 0x0   	BCF	_UIRbits, 1
                                           _01275_DS_:
0055a4   0e03     movlw   0x03             	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01278_DS_
                                           ; #	GOTO	_01282_DS_
                                           ; #	BTFSS	_UIRbits, 3
0055a6   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	874; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
0055a8   5dab     subwf   0xab, 0x0, 0x1   	SUBWF	_deviceState, W, B
                                           ;	.line	877; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE)
0055aa   e307     bnc     0x0055ba         	BNC	_01282_DS_
0055ac   a668     btfss   0x68, 0x3, 0x0   	BTFSS	_UIRbits, 3
0055ae   d005     bra     0x0055ba         	BRA	_01282_DS_
0055b0   a669     btfss   0x69, 0x3, 0x0   	BTFSS	_UIEbits, 3
0055b2   d003     bra     0x0055ba         	BRA	_01282_DS_
                                           ;	.line	879; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessControlTransfer();
0055b4   ec5e     call    0x004ebc, 0x0call    0x004ebc, 0x0 	CALL	_ProcessControlTransfer
0055b6   f027
                                           ;	.line	881; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.TRNIF = 0;
0055b8   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
                                           _01282_DS_:
0055ba   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0055bc   f000
0055be   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__BusReset	code
                                           _BusReset:
                                           ;	.line	808; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void BusReset()
0057e8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0057ea   ffe5
                                           ;	.line	810; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEIR  = 0x00;
0057ec   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           ;	.line	811; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIR   = 0x00;
0057ee   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	812; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEIE  = 0x9f;
0057f0   0e9f     movlw   0x9f             	MOVLW	0x9f
0057f2   6e6b     movwf   0x6b, 0x0        	MOVWF	_UEIE
                                           ;	.line	813; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE   = 0x7b;
0057f4   0e7b     movlw   0x7b             	MOVLW	0x7b
0057f6   6e69     movwf   0x69, 0x0        	MOVWF	_UIE
                                           ;	.line	814; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UADDR = 0x00;
0057f8   6a6e     clrf    0x6e, 0x0        	CLRF	_UADDR
                                           ;	.line	817; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
0057fa   0e16     movlw   0x16             	MOVLW	0x16
0057fc   6e70     movwf   0x70, 0x0        	MOVWF	_UEP0
                                           _01238_DS_:
                                           ;	.line	821; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	while (UIRbits.TRNIF == 1)
0057fe   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005800   b668     btfsc   0x68, 0x3, 0x0   	BTFSC	_UIRbits, 3
005802   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005804   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005806   0a01     xorlw   0x01             	XORLW	0x01
005808   e102     bnz     0x00580e         	BNZ	_01240_DS_
                                           ;	.line	822; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.TRNIF = 0;
00580a   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
00580c   d7f8     bra     0x0057fe         	BRA	_01238_DS_
                                           _01240_DS_:
                                           ;	.line	825; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.PKTDIS = 0;
00580e   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
                                           ;	.line	828; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
005810   ec1d     call    0x005a3a, 0x0call    0x005a3a, 0x0 	CALL	_WaitForSetupStage
005812   f02d
005814   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	830; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
005816   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
005818   0101     movlb   0x1              	BANKSEL	_selfPowered
                                           ;	.line	831; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
00581a   6ba9     clrf    0xa9, 0x1        	CLRF	_selfPowered, B
00581c   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	832; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
00581e   6bac     clrf    0xac, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	833; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = DEFAULT_STATUS;
005820   0e03     movlw   0x03             	MOVLW	0x03
005822   0101     movlb   0x1              	BANKSEL	_deviceState
005824   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
005826   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005828   f000
00582a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Suspend	code
                                           _Suspend:
                                           ;	.line	735; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void Suspend(void)
0059b8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0059ba   ffe5
0059bc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0059be   ffd9
                                           ;	.line	741; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.ACTVIE = 1;
0059c0   8469     bsf     0x69, 0x2, 0x0   	BSF	_UIEbits, 2
                                           ;	.line	742; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.IDLEIF = 0;
0059c2   9868     bcf     0x68, 0x4, 0x0   	BCF	_UIRbits, 4
                                           ;	.line	743; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.SUSPND = 1;
0059c4   826d     bsf     0x6d, 0x1, 0x0   	BSF	_UCONbits, 1
                                           ;	.line	748; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIR2bits.USBIF = 0;
0059c6   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	754; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIF = 0;
0059c8   90f2     bcf     0xf2, 0x0, 0x0   	BCF	_INTCONbits, 0
                                           ;	.line	760; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIE2bits.USBIE = 1;
0059ca   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	766; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIE = 1;
0059cc   86f2     bsf     0xf2, 0x3, 0x0   	BSF	_INTCONbits, 3
0059ce   0003     sleep                    	sleep	
                                           ;	.line	796; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIE2bits.USBIE = 0;
0059d0   9aa0     bcf     0xa0, 0x5, 0x0   	BCF	_PIE2bits, 5
                                           ;	.line	802; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIE = 0;
0059d2   96f2     bcf     0xf2, 0x3, 0x0   	BCF	_INTCONbits, 3
0059d4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0059d6   ffd9
0059d8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Stall	code
                                           _Stall:
                                           ;	.line	719; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void Stall(void)
005a1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005a1e   ffe5
                                           ;	.line	724; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UEP0bits.EPSTALL == 1)
005a20   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005a22   b070     btfsc   0x70, 0x0, 0x0   	BTFSC	_UEP0bits, 0
005a24   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005a26   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005a28   0a01     xorlw   0x01             	XORLW	0x01
005a2a   e103     bnz     0x005a32         	BNZ	_01221_DS_
                                           ;	.line	727; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
005a2c   ec1d     call    0x005a3a, 0x0call    0x005a3a, 0x0 	CALL	_WaitForSetupStage
005a2e   f02d
                                           ;	.line	728; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEP0bits.EPSTALL = 0;
005a30   9070     bcf     0x70, 0x0, 0x0   	BCF	_UEP0bits, 0
                                           _01221_DS_:
                                           ;	.line	730; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.STALLIF = 0;
005a32   9a68     bcf     0x68, 0x5, 0x0   	BCF	_UIRbits, 5
005a34   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005a36   f000
005a38   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	715; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.SOFIF = 0;
000c04   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
000c06   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	704; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.SUSPND = 0;
005ada   926d     bcf     0x6d, 0x1, 0x0   	BCF	_UCONbits, 1
                                           ;	.line	705; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.ACTVIE = 0;
005adc   9469     bcf     0x69, 0x2, 0x0   	BCF	_UIEbits, 2
                                           ;	.line	706; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.ACTVIF = 0;
005ade   9468     bcf     0x68, 0x2, 0x0   	BCF	_UIRbits, 2
005ae0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	670; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UCONbits.USBEN == 0)
005912   b66d     btfsc   0x6d, 0x3, 0x0   	BTFSC	_UCONbits, 3
005914   d006     bra     0x005922         	BRA	_01189_DS_
                                           ;	.line	675; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCON = 0;
005916   6a6d     clrf    0x6d, 0x0        	CLRF	_UCON
                                           ;	.line	676; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE = 0;
005918   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	677; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.USBEN = 1;
00591a   866d     bsf     0x6d, 0x3, 0x0   	BSF	_UCONbits, 3
                                           ;	.line	678; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ATTACHED;
00591c   0e01     movlw   0x01             	MOVLW	0x01
00591e   0101     movlb   0x1              	BANKSEL	_deviceState
005920   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01189_DS_:
005922   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	683; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0)
005924   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
005926   0a01     xorlw   0x01             	XORLW	0x01
005928   e109     bnz     0x00593c         	BNZ	_01193_DS_
00592a   ba6d     btfsc   0x6d, 0x5, 0x0   	BTFSC	_UCONbits, 5
00592c   d007     bra     0x00593c         	BRA	_01193_DS_
                                           ;	.line	685; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIR = 0;
00592e   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	686; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE = 0;
005930   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	687; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.URSTIE = 1;
005932   8069     bsf     0x69, 0x0, 0x0   	BSF	_UIEbits, 0
                                           ;	.line	688; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.IDLEIE = 1;
005934   8869     bsf     0x69, 0x4, 0x0   	BSF	_UIEbits, 4
                                           ;	.line	689; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = POWERED;
005936   0e02     movlw   0x02             	MOVLW	0x02
005938   0101     movlb   0x1              	BANKSEL	_deviceState
00593a   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01193_DS_:
00593c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	564; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessControlTransfer(void)
004ebc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004ebe   ffe5
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (USTATbits.DIR == OUT)
004ec0   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
004ec2   d022     bra     0x004f08         	BRA	_01139_DS_
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
004ec4   0e3c     movlw   0x3c             	MOVLW	0x3c
004ec6   0104     movlb   0x4              	BANKSEL	_ep_bdt
004ec8   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
004eca   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004ecc   4000     rrncf   0x00, 0x0, 0x0   	RRNCF	r0x00, W
004ece   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004ed0   0b3f     andlw   0x3f             	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	575; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (PID == 0x0D)
004ed2   0a0d     xorlw   0x0d             	XORLW	0x0d
004ed4   e103     bnz     0x004edc         	BNZ	_01123_DS_
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	SetupStage();
004ed6   ec48     call    0x004890, 0x0call    0x004890, 0x0 	CALL	_SetupStage
004ed8   f024
004eda   d03e     bra     0x004f58         	BRA	_01141_DS_
                                           _01123_DS_:
004edc   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	580; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE)
004ede   51ad     movf    0xad, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
004ee0   0a01     xorlw   0x01             	XORLW	0x01
004ee2   e10f     bnz     0x004f02         	BNZ	_01120_DS_
                                           ;	.line	584; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	OutDataStage(0);
004ee4   0e00     movlw   0x00             	MOVLW	0x00
004ee6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004ee8   ec4e     call    0x003a9c, 0x0call    0x003a9c, 0x0 	CALL	_OutDataStage
004eea   f01d
004eec   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004eee   0104     movlb   0x4              	BANKSEL	_ep_bdt
                                           ;	.line	612; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
004ef0   ad00     btfss   0x00, 0x6, 0x1   	BTFSS	_ep_bdt, 6, B
004ef2   d003     bra     0x004efa         	BRA	_01117_DS_
                                           ;	.line	613; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004ef4   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004ef6   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
004ef8   d02f     bra     0x004f58         	BRA	_01141_DS_
                                           _01117_DS_:
                                           ;	.line	615; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004efa   0ec8     movlw   0xc8             	MOVLW	0xc8
004efc   0104     movlb   0x4              	BANKSEL	_ep_bdt
004efe   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
004f00   d02b     bra     0x004f58         	BRA	_01141_DS_
                                           _01120_DS_:
                                           ;	.line	620; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
004f02   ec1d     call    0x005a3a, 0x0call    0x005a3a, 0x0 	CALL	_WaitForSetupStage
004f04   f02d
004f06   d028     bra     0x004f58         	BRA	_01141_DS_
                                           _01139_DS_:
                                           ;	.line	623; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if(USTATbits.DIR == IN)
004f08   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004f0a   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
004f0c   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004f0e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f10   0a01     xorlw   0x01             	XORLW	0x01
004f12   e122     bnz     0x004f58         	BNZ	_01141_DS_
                                           ;	.line	626; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS))
004f14   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
004f16   e10b     bnz     0x004f2e         	BNZ	_01128_DS_
004f18   0101     movlb   0x1              	BANKSEL	_deviceState
004f1a   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
004f1c   0a04     xorlw   0x04             	XORLW	0x04
004f1e   e107     bnz     0x004f2e         	BNZ	_01128_DS_
                                           ;	.line	630; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UADDR = SetupPacket.wValue0;
004f20   c502     movff   0x502, 0xf6e     	MOVFF	(_SetupPacket + 2), _UADDR
004f22   ff6e
                                           ;	.line	634; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UADDR == 0)
004f24   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
004f26   e103     bnz     0x004f2e         	BNZ	_01128_DS_
                                           ;	.line	637; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = DEFAULT_STATUS;
004f28   0e03     movlw   0x03             	MOVLW	0x03
004f2a   0101     movlb   0x1              	BANKSEL	_deviceState
004f2c   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01128_DS_:
004f2e   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	640; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE)
004f30   51ad     movf    0xad, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
004f32   0a02     xorlw   0x02             	XORLW	0x02
004f34   e10f     bnz     0x004f54         	BNZ	_01134_DS_
                                           ;	.line	643; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	InDataStage(0);
004f36   0e00     movlw   0x00             	MOVLW	0x00
004f38   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004f3a   ec6b     call    0x002ed6, 0x0call    0x002ed6, 0x0 	CALL	_InDataStage
004f3c   f017
004f3e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004f40   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	646; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
004f42   ad04     btfss   0x04, 0x6, 0x1   	BTFSS	(_ep_bdt + 4), 6, B
004f44   d003     bra     0x004f4c         	BRA	_01131_DS_
                                           ;	.line	647; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004f46   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004f48   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004f4a   d006     bra     0x004f58         	BRA	_01141_DS_
                                           _01131_DS_:
                                           ;	.line	649; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004f4c   0ec8     movlw   0xc8             	MOVLW	0xc8
004f4e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
004f50   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004f52   d002     bra     0x004f58         	BRA	_01141_DS_
                                           _01134_DS_:
                                           ;	.line	654; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
004f54   ec1d     call    0x005a3a, 0x0call    0x005a3a, 0x0 	CALL	_WaitForSetupStage
004f56   f02d
                                           _01141_DS_:
004f58   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004f5a   f000
004f5c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__WaitForSetupStage	code
                                           _WaitForSetupStage:
005a3a   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	551; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
005a3c   6bad     clrf    0xad, 0x1        	CLRF	_ctrlTransferStage, B
                                           ;	.line	552; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
005a3e   0e40     movlw   0x40             	MOVLW	0x40
005a40   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
005a42   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
005a44   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
005a46   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
005a48   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
005a4a   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
005a4c   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
005a4e   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	556; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
005a50   6b04     clrf    0x04, 0x1        	CLRF	(_ep_bdt + 4), B
005a52   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SetupStage	code
                                           _SetupStage:
                                           ;	.line	481; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
004890   0e7f     movlw   0x7f             	MOVLW	0x7f
004892   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
004894   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_ep_bdt + 4), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004896   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
004898   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
00489a   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00489c   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
00489e   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	485; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0048a0   6bad     clrf    0xad, 0x1        	CLRF	_ctrlTransferStage, B
0048a2   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	486; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
0048a4   6ba8     clrf    0xa8, 0x1        	CLRF	_requestHandled, B
0048a6   0101     movlb   0x1              	BANKSEL	_HIDPostProcess
                                           ;	.line	487; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
0048a8   6b9e     clrf    0x9e, 0x1        	CLRF	_HIDPostProcess, B
0048aa   0101     movlb   0x1              	BANKSEL	_wCount
                                           ;	.line	488; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 0;                           // No bytes transferred
0048ac   6b91     clrf    0x91, 0x1        	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
0048ae   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessStandardRequest();
0048b0   ec0f     call    0x00461e, 0x0call    0x00461e, 0x0 	CALL	_ProcessStandardRequest
0048b2   f023
                                           ;	.line	501; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
0048b4   0e1f     movlw   0x1f             	MOVLW	0x1f
0048b6   0105     movlb   0x5              	BANKSEL	_SetupPacket
0048b8   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0048ba   0a01     xorlw   0x01             	XORLW	0x01
0048bc   e102     bnz     0x0048c2         	BNZ	_01076_DS_
                                           ;	.line	502; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessCDCRequest();
0048be   ec67     call    0x004cce, 0x0call    0x004cce, 0x0 	CALL	_ProcessCDCRequest
0048c0   f026
                                           _01076_DS_:
0048c2   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (!requestHandled) {
0048c4   51a8     movf    0xa8, 0x0, 0x1   	MOVF	_requestHandled, W, B
0048c6   e10b     bnz     0x0048de         	BNZ	_01083_DS_
                                           ;	.line	507; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0048c8   0e40     movlw   0x40             	MOVLW	0x40
0048ca   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
0048cc   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0048ce   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0048d0   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
0048d2   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0048d4   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	509; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
0048d6   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
0048d8   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
0048da   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
0048dc   d038     bra     0x00494e         	BRA	_01084_DS_
                                           _01083_DS_:
0048de   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	512; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
0048e0   af00     btfss   0x00, 0x7, 0x1   	BTFSS	_SetupPacket, 7, B
0048e2   d026     bra     0x004930         	BRA	_01080_DS_
0048e4   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.wLength < wCount)
0048e6   5192     movf    0x92, 0x0, 0x1   	MOVF	(_wCount + 1), W, B
0048e8   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 7)
0048ea   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	(_SetupPacket + 7), W, B
0048ec   e104     bnz     0x0048f6         	BNZ	_01106_DS_
0048ee   0101     movlb   0x1              	BANKSEL	_wCount
0048f0   5191     movf    0x91, 0x0, 0x1   	MOVF	_wCount, W, B
0048f2   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 6)
0048f4   5d06     subwf   0x06, 0x0, 0x1   	SUBWF	(_SetupPacket + 6), W, B
                                           _01106_DS_:
0048f6   e204     bc      0x004900         	BC	_01078_DS_
                                           ;	.line	515; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = SetupPacket.wLength;
0048f8   c506     movff   0x506, 0x191     	MOVFF	(_SetupPacket + 6), _wCount
0048fa   f191
0048fc   c507     movff   0x507, 0x192     	MOVFF	(_SetupPacket + 7), (_wCount + 1)
0048fe   f192
                                           _01078_DS_:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	InDataStage(0);
004900   0e00     movlw   0x00             	MOVLW	0x00
004902   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004904   ec6b     call    0x002ed6, 0x0call    0x002ed6, 0x0 	CALL	_InDataStage
004906   f017
004908   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	517; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
00490a   0e02     movlw   0x02             	MOVLW	0x02
00490c   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
00490e   6fad     movwf   0xad, 0x1        	MOVWF	_ctrlTransferStage, B
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
004910   0e40     movlw   0x40             	MOVLW	0x40
004912   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
004914   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
004916   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
004918   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
00491a   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
00491c   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	521; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
00491e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004920   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
004922   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004924   6f06     movwf   0x06, 0x1        	MOVWF	(_ep_bdt + 6), B
004926   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004928   6f07     movwf   0x07, 0x1        	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	526; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
00492a   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00492c   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
00492e   d00f     bra     0x00494e         	BRA	_01084_DS_
                                           _01080_DS_:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
004930   0e01     movlw   0x01             	MOVLW	0x01
004932   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
004934   6fad     movwf   0xad, 0x1        	MOVWF	_ctrlTransferStage, B
004936   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
004938   6b05     clrf    0x05, 0x1        	CLRF	(_ep_bdt + 5), B
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
00493a   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00493c   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00493e   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004940   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
004942   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004944   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
004946   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004948   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	540; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
00494a   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00494c   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           _01084_DS_:
                                           ;	.line	544; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.PKTDIS = 0;
00494e   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
004950   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void OutDataStage(unsigned char ep) {
003a9c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003a9e   ffe5
003aa0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003aa2   ffd9
003aa4   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003aa6   ffe5
003aa8   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003aaa   ffe5
003aac   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003aae   ffe5
003ab0   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003ab2   ffe5
003ab4   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003ab6   ffe5
003ab8   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003aba   ffe5
003abc   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003abe   ffe5
003ac0   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003ac2   ffe5
003ac4   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003ac6   ffe5
003ac8   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
003aca   ffe5
003acc   0e02     movlw   0x02             	MOVLW	0x02
003ace   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003ad0   f000
                                           ;	.line	445; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
003ad2   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
003ad4   0bfe     andlw   0xfe             	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #	MOVF	r0x01, W
003ad6   0d04     mullw   0x04             	MULLW	0x04
003ad8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003ada   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003adc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003ade   f000
003ae0   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003ae2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ae4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003ae6   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003ae8   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
003aea   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003aec   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
003aee   ffe9
003af0   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
003af2   ffea
003af4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
003af6   f001
003af8   0e03     movlw   0x03             	MOVLW	0x03
003afa   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003afc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003afe   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003b00   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003b02   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003b04   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003b06   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003b08   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003b0a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
003b0c   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
003b0e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003b10   ffe9
003b12   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
003b14   ffea
003b16   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003b18   f000
003b1a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003b1c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003b1e   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
003b20   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003b22   1201     iorwf   0x01, 0x1, 0x0   	IORWF	r0x01, F
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = wCount + bufferSize;
003b24   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003b26   0101     movlb   0x1              	BANKSEL	_wCount
003b28   2791     addwf   0x91, 0x1, 0x1   	ADDWF	_wCount, F, B
003b2a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003b2c   2392     addwfc  0x92, 0x1, 0x1   	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8*)&controlTransferBuffer;
003b2e   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
003b30   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
003b32   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
003b34   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003b36   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
003b38   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003b3a   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003b3c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003b3e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01055_DS_:
003b40   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003b42   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
003b44   e102     bnz     0x003b4a         	BNZ	_01068_DS_
003b46   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003b48   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01068_DS_:
003b4a   e22c     bc      0x003ba4         	BC	_01057_DS_
                                           ;	.line	462; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr++ = *outPtr++;
003b4c   c18e     movff   0x18e, 0x004     	MOVFF	_inPtr, r0x04
003b4e   f004
003b50   c18f     movff   0x18f, 0x005     	MOVFF	(_inPtr + 1), r0x05
003b52   f005
003b54   c190     movff   0x190, 0x006     	MOVFF	(_inPtr + 2), r0x06
003b56   f006
003b58   c18b     movff   0x18b, 0x007     	MOVFF	_outPtr, r0x07
003b5a   f007
003b5c   c18c     movff   0x18c, 0x008     	MOVFF	(_outPtr + 1), r0x08
003b5e   f008
003b60   c18d     movff   0x18d, 0x009     	MOVFF	(_outPtr + 2), r0x09
003b62   f009
003b64   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
003b66   ffe9
003b68   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
003b6a   fff3
003b6c   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
003b6e   eced     call    0x0059da, 0x0call    0x0059da, 0x0 	CALL	__gptrget1
003b70   f02c
003b72   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003b74   0101     movlb   0x1              	BANKSEL	_outPtr
003b76   2b8b     incf    0x8b, 0x1, 0x1   	INCF	_outPtr, F, B
003b78   e303     bnc     0x003b80         	BNC	_01069_DS_
                                           ; removed redundant BANKSEL
003b7a   3f8c     incfsz  0x8c, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003b7c   d001     bra     0x003b80         	BRA	_11838_DS_
                                           ; removed redundant BANKSEL
003b7e   2b8d     incf    0x8d, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _11838_DS_:
                                           _01069_DS_:
003b80   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003b82   ffe5
003b84   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
003b86   ffe9
003b88   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
003b8a   fff3
003b8c   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003b8e   ec42     call    0x005a84, 0x0call    0x005a84, 0x0 	CALL	__gptrput1
003b90   f02d
003b92   0101     movlb   0x1              	BANKSEL	_inPtr
003b94   2b8e     incf    0x8e, 0x1, 0x1   	INCF	_inPtr, F, B
003b96   e303     bnc     0x003b9e         	BNC	_01070_DS_
                                           ; removed redundant BANKSEL
003b98   3f8f     incfsz  0x8f, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003b9a   d001     bra     0x003b9e         	BRA	_21839_DS_
                                           ; removed redundant BANKSEL
003b9c   2b90     incf    0x90, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _21839_DS_:
                                           _01070_DS_:
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003b9e   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
003ba0   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
003ba2   d7ce     bra     0x003b40         	BRA	_01055_DS_
                                           _01057_DS_:
003ba4   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003ba6   f009
003ba8   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003baa   f008
003bac   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003bae   f007
003bb0   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003bb2   f006
003bb4   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003bb6   f005
003bb8   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003bba   f004
003bbc   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003bbe   f003
003bc0   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003bc2   f002
003bc4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003bc6   f001
003bc8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003bca   f000
003bcc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003bce   ffd9
003bd0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__InDataStage	code
                                           _InDataStage:
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void InDataStage(unsigned char ep) {
002ed6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ed8   ffe5
002eda   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002edc   ffd9
002ede   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002ee0   ffe5
002ee2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002ee4   ffe5
002ee6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002ee8   ffe5
002eea   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002eec   ffe5
002eee   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002ef0   ffe5
002ef2   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002ef4   ffe5
002ef6   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002ef8   ffe5
002efa   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002efc   ffe5
002efe   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
002f00   ffe5
002f02   0e02     movlw   0x02             	MOVLW	0x02
002f04   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002f06   f000
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
002f08   0e00     movlw   0x00             	MOVLW	0x00
002f0a   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
002f0c   5d92     subwf   0x92, 0x0, 0x1   	SUBWF	(_wCount + 1), W, B
002f0e   e102     bnz     0x002f14         	BNZ	_01040_DS_
002f10   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
002f12   5d91     subwf   0x91, 0x0, 0x1   	SUBWF	_wCount, W, B
                                           _01040_DS_:
002f14   e205     bc      0x002f20         	BC	_01022_DS_
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = wCount;
002f16   c191     movff   0x191, 0x001     	MOVFF	_wCount, r0x01
002f18   f001
002f1a   c192     movff   0x192, 0x002     	MOVFF	(_wCount + 1), r0x02
002f1c   f002
002f1e   d003     bra     0x002f26         	BRA	_01023_DS_
                                           _01022_DS_:
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
002f20   0e40     movlw   0x40             	MOVLW	0x40
002f22   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002f24   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           _01023_DS_:
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
002f26   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
002f28   0bfe     andlw   0xfe             	ANDLW	0xfe
002f2a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002f2c   2803     incf    0x03, 0x0, 0x0   	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #	MOVF	r0x00, W
002f2e   0d04     mullw   0x04             	MULLW	0x04
002f30   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
002f32   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002f34   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
002f36   f000
002f38   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f3a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f3c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002f3e   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f40   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f42   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002f44   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f46   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f48   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002f4a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f4c   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f4e   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002f50   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
002f52   ffe9
002f54   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
002f56   ffea
002f58   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
002f5a   f006
002f5c   0efc     movlw   0xfc             	MOVLW	0xfc
002f5e   1606     andwf   0x06, 0x1, 0x0   	ANDWF	r0x06, F
002f60   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002f62   ffe9
002f64   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002f66   ffea
002f68   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
002f6a   ffef
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (u8)((bufferSize & 0x0300) >> 8);
002f6c   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f6e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f70   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002f72   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f74   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f76   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002f78   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f7a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f7c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002f7e   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f80   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f82   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002f84   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
002f86   ffe9
002f88   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
002f8a   ffea
002f8c   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
002f8e   f006
002f90   0e03     movlw   0x03             	MOVLW	0x03
002f92   1402     andwf   0x02, 0x0, 0x0   	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x08
                                           ; #	MOVF	r0x08, W
002f94   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
002f96   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002f98   ffe9
002f9a   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002f9c   ffea
002f9e   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
002fa0   ffef
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Cnt = (u8)(bufferSize & 0xFF);
002fa2   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002fa4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002fa6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002fa8   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002faa   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002fac   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002fae   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
002fb0   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
002fb2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002fb4   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002fb6   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002fb8   ffe9
002fba   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002fbc   ffea
002fbe   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
002fc0   ffef
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
002fc2   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002fc4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002fc6   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002fc8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002fca   0e02     movlw   0x02             	MOVLW	0x02
002fcc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002fce   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002fd0   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002fd2   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
002fd4   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002fd6   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
002fd8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002fda   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002fdc   ffe9
002fde   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
002fe0   ffea
002fe2   c004     movff   0x004, 0xfee     	MOVFF	r0x04, POSTINC0
002fe4   ffee
002fe6   c005     movff   0x005, 0xfef     	MOVFF	r0x05, INDF0
002fe8   ffef
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = wCount - bufferSize;
002fea   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002fec   0101     movlb   0x1              	BANKSEL	_wCount
002fee   5f91     subwf   0x91, 0x1, 0x1   	SUBWF	_wCount, F, B
002ff0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
002ff2   5b92     subwfb  0x92, 0x1, 0x1   	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&controlTransferBuffer;
002ff4   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
002ff6   0101     movlb   0x1              	BANKSEL	(_inPtr + 1)
002ff8   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
002ffa   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
002ffc   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
002ffe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003000   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003002   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01026_DS_:
003004   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
003006   f003
003008   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00300a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00300c   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
00300e   e102     bnz     0x003014         	BNZ	_01046_DS_
003010   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003012   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
                                           _01046_DS_:
003014   e22b     bc      0x00306c         	BC	_01028_DS_
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr++ = *outPtr++;
003016   c18e     movff   0x18e, 0x003     	MOVFF	_inPtr, r0x03
003018   f003
00301a   c18f     movff   0x18f, 0x004     	MOVFF	(_inPtr + 1), r0x04
00301c   f004
00301e   c190     movff   0x190, 0x005     	MOVFF	(_inPtr + 2), r0x05
003020   f005
003022   c18b     movff   0x18b, 0x006     	MOVFF	_outPtr, r0x06
003024   f006
003026   c18c     movff   0x18c, 0x007     	MOVFF	(_outPtr + 1), r0x07
003028   f007
00302a   c18d     movff   0x18d, 0x008     	MOVFF	(_outPtr + 2), r0x08
00302c   f008
00302e   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003030   ffe9
003032   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
003034   fff3
003036   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003038   eced     call    0x0059da, 0x0call    0x0059da, 0x0 	CALL	__gptrget1
00303a   f02c
00303c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00303e   0101     movlb   0x1              	BANKSEL	_outPtr
003040   2b8b     incf    0x8b, 0x1, 0x1   	INCF	_outPtr, F, B
003042   e303     bnc     0x00304a         	BNC	_01047_DS_
                                           ; removed redundant BANKSEL
003044   3f8c     incfsz  0x8c, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003046   d001     bra     0x00304a         	BRA	_31840_DS_
                                           ; removed redundant BANKSEL
003048   2b8d     incf    0x8d, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _31840_DS_:
                                           _01047_DS_:
00304a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00304c   ffe5
00304e   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003050   ffe9
003052   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003054   fff3
003056   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003058   ec42     call    0x005a84, 0x0call    0x005a84, 0x0 	CALL	__gptrput1
00305a   f02d
00305c   0101     movlb   0x1              	BANKSEL	_inPtr
00305e   2b8e     incf    0x8e, 0x1, 0x1   	INCF	_inPtr, F, B
003060   e303     bnc     0x003068         	BNC	_01048_DS_
                                           ; removed redundant BANKSEL
003062   3f8f     incfsz  0x8f, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003064   d001     bra     0x003068         	BRA	_41841_DS_
                                           ; removed redundant BANKSEL
003066   2b90     incf    0x90, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _41841_DS_:
                                           _01048_DS_:
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003068   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
00306a   d7cc     bra     0x003004         	BRA	_01026_DS_
                                           _01028_DS_:
00306c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00306e   f008
003070   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003072   f007
003074   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003076   f006
003078   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00307a   f005
00307c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00307e   f004
003080   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003082   f003
003084   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003086   f002
003088   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00308a   f001
00308c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00308e   f000
003090   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003092   ffd9
003094   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessStandardRequest(void) {
00461e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004620   ffe5
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 request = SetupPacket.bRequest;
004622   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
004624   f000
004626   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	287; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
004628   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00935_DS_
                                           ; #	GOTO	_00967_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
00462a   0b60     andlw   0x60             	ANDLW	0x60
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (request == SET_ADDRESS) {
00462c   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00462e   d061     bra     0x0046f2         	BRA	_00967_DS_
004630   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004632   0a05     xorlw   0x05             	XORLW	0x05
004634   e109     bnz     0x004648         	BNZ	_00965_DS_
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004636   0e01     movlw   0x01             	MOVLW	0x01
004638   0101     movlb   0x1              	BANKSEL	_requestHandled
00463a   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	301; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ADDRESS;
00463c   0e04     movlw   0x04             	MOVLW	0x04
00463e   0101     movlb   0x1              	BANKSEL	_deviceState
004640   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
004642   c502     movff   0x502, 0x19d     	MOVFF	(_SetupPacket + 2), _deviceAddress
004644   f19d
004646   d055     bra     0x0046f2         	BRA	_00967_DS_
                                           _00965_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
004648   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00464a   0a06     xorlw   0x06             	XORLW	0x06
00464c   e103     bnz     0x004654         	BNZ	_00962_DS_
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	GetDescriptor();
00464e   ecb6     call    0x00416c, 0x0call    0x00416c, 0x0 	CALL	_GetDescriptor
004650   f020
004652   d04f     bra     0x0046f2         	BRA	_00967_DS_
                                           _00962_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
004654   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004656   0a09     xorlw   0x09             	XORLW	0x09
004658   e112     bnz     0x00467e         	BNZ	_00959_DS_
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
00465a   0e01     movlw   0x01             	MOVLW	0x01
00465c   0101     movlb   0x1              	BANKSEL	_requestHandled
00465e   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
004660   c502     movff   0x502, 0x1ac     	MOVFF	(_SetupPacket + 2), _currentConfiguration
004662   f1ac
004664   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (currentConfiguration == 0)
004666   51ac     movf    0xac, 0x0, 0x1   	MOVF	_currentConfiguration, W, B
004668   e104     bnz     0x004672         	BNZ	_00937_DS_
                                           ;	.line	318; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ADDRESS;
00466a   0e04     movlw   0x04             	MOVLW	0x04
00466c   0101     movlb   0x1              	BANKSEL	_deviceState
00466e   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
004670   d040     bra     0x0046f2         	BRA	_00967_DS_
                                           _00937_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = CONFIGURED;
004672   0e05     movlw   0x05             	MOVLW	0x05
004674   0101     movlb   0x1              	BANKSEL	_deviceState
004676   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	CDCInitEndpoint();
004678   ec47     call    0x00568e, 0x0call    0x00568e, 0x0 	CALL	_CDCInitEndpoint
00467a   f02b
00467c   d03a     bra     0x0046f2         	BRA	_00967_DS_
                                           _00959_DS_:
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
00467e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004680   0a08     xorlw   0x08             	XORLW	0x08
004682   e10f     bnz     0x0046a2         	BNZ	_00956_DS_
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004684   0e01     movlw   0x01             	MOVLW	0x01
004686   0101     movlb   0x1              	BANKSEL	_requestHandled
004688   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8*)&currentConfiguration;
00468a   0e01     movlw   0x01             	MOVLW	HIGH(_currentConfiguration)
00468c   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
00468e   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004690   0eac     movlw   0xac             	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
004692   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004694   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004696   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 1;
004698   0e01     movlw   0x01             	MOVLW	0x01
00469a   0101     movlb   0x1              	BANKSEL	_wCount
00469c   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
00469e   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0046a0   d028     bra     0x0046f2         	BRA	_00967_DS_
                                           _00956_DS_:
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_STATUS) {
0046a2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046a4   e103     bnz     0x0046ac         	BNZ	_00953_DS_
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	GetStatus();
0046a6   eca3     call    0x003f46, 0x0call    0x003f46, 0x0 	CALL	_GetStatus
0046a8   f01f
0046aa   d023     bra     0x0046f2         	BRA	_00967_DS_
                                           _00953_DS_:
                                           ;	.line	352; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
0046ac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046ae   0a01     xorlw   0x01             	XORLW	0x01
0046b0   e003     bz      0x0046b8         	BZ	_00948_DS_
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	(request == SET_FEATURE)) {
0046b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046b4   0a03     xorlw   0x03             	XORLW	0x03
0046b6   e103     bnz     0x0046be         	BNZ	_00949_DS_
                                           _00948_DS_:
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	SetFeature();
0046b8   ece9     call    0x003bd2, 0x0call    0x003bd2, 0x0 	CALL	_SetFeature
0046ba   f01d
0046bc   d01a     bra     0x0046f2         	BRA	_00967_DS_
                                           _00949_DS_:
                                           ;	.line	356; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_INTERFACE) {
0046be   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046c0   0a0a     xorlw   0x0a             	XORLW	0x0a
0046c2   e111     bnz     0x0046e6         	BNZ	_00946_DS_
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0046c4   0e01     movlw   0x01             	MOVLW	0x01
0046c6   0101     movlb   0x1              	BANKSEL	_requestHandled
0046c8   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
0046ca   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0;
0046cc   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ;	.line	364; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
0046ce   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
0046d0   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
0046d2   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0046d4   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0046d6   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
0046d8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0046da   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 1;
0046dc   0e01     movlw   0x01             	MOVLW	0x01
0046de   0101     movlb   0x1              	BANKSEL	_wCount
0046e0   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0046e2   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0046e4   d006     bra     0x0046f2         	BRA	_00967_DS_
                                           _00946_DS_:
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SET_INTERFACE) {
0046e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0046e8   0a0b     xorlw   0x0b             	XORLW	0x0b
0046ea   e103     bnz     0x0046f2         	BNZ	_00967_DS_
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0046ec   0e01     movlw   0x01             	MOVLW	0x01
0046ee   0101     movlb   0x1              	BANKSEL	_requestHandled
0046f0   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _00967_DS_:
                                           ;	.line	379; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SYNCH_FRAME) {
0046f2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0046f4   f000
0046f6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SetFeature	code
                                           _SetFeature:
                                           ;	.line	240; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void SetFeature(void) {
003bd2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003bd4   ffe5
003bd6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003bd8   ffe5
003bda   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003bdc   ffe5
003bde   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003be0   ffe5
003be2   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003be4   ffe5
003be6   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003be8   ffe5
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003bea   0e1f     movlw   0x1f             	MOVLW	0x1f
003bec   0105     movlb   0x5              	BANKSEL	_SetupPacket
003bee   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
003bf0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 feature = SetupPacket.wValue0;
003bf2   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
003bf4   f001
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (recipient == 0x00) {
003bf6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003bf8   e112     bnz     0x003c1e         	BNZ	_00886_DS_
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
003bfa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003bfc   0a01     xorlw   0x01             	XORLW	0x01
003bfe   e001     bz      0x003c02         	BZ	_00919_DS_
003c00   d076     bra     0x003cee         	BRA	_00888_DS_
                                           _00919_DS_:
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003c02   0e01     movlw   0x01             	MOVLW	0x01
003c04   0101     movlb   0x1              	BANKSEL	_requestHandled
003c06   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003c08   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
003c0a   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
003c0c   0a03     xorlw   0x03             	XORLW	0x03
003c0e   e104     bnz     0x003c18         	BNZ	_00868_DS_
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 1;
003c10   0e01     movlw   0x01             	MOVLW	0x01
003c12   0101     movlb   0x1              	BANKSEL	_remoteWakeup
003c14   6faa     movwf   0xaa, 0x1        	MOVWF	_remoteWakeup, B
003c16   d06b     bra     0x003cee         	BRA	_00888_DS_
                                           _00868_DS_:
003c18   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 0;
003c1a   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
003c1c   d068     bra     0x003cee         	BRA	_00888_DS_
                                           _00886_DS_:
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x02) {
003c1e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c20   0a02     xorlw   0x02             	XORLW	0x02
003c22   e001     bz      0x003c26         	BZ	_00923_DS_
003c24   d064     bra     0x003cee         	BRA	_00888_DS_
                                           _00923_DS_:
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003c26   0e0f     movlw   0x0f             	MOVLW	0x0f
003c28   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003c2a   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003c2c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	261; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003c2e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003c30   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003c32   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
003c34   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c36   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
003c38   d05a     bra     0x003cee         	BRA	_00888_DS_
003c3a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c3c   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003c3e   d057     bra     0x003cee         	BRA	_00888_DS_
                                           ;	.line	264; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003c40   0e01     movlw   0x01             	MOVLW	0x01
003c42   0101     movlb   0x1              	BANKSEL	_requestHandled
003c44   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003c46   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c48   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003c4a   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c4c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003c4e   0e80     movlw   0x80             	MOVLW	0x80
003c50   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
003c52   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c54   0d08     mullw   0x08             	MULLW	0x08
003c56   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003c58   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003c5a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003c5c   f000
003c5e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c60   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
003c62   0101     movlb   0x1              	BANKSEL	_inPtr
003c64   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003c66   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003c68   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003c6a   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
003c6c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003c6e   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
003c70   68e8     setf    0xe8, 0x0        	SETF	WREG
003c72   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003c74   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (endpointDir)
003c76   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c78   e005     bz      0x003c84         	BZ	_00873_DS_
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr += 4;
003c7a   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
003c7c   278e     addwf   0x8e, 0x1, 0x1   	ADDWF	_inPtr, F, B
003c7e   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
003c80   238f     addwfc  0x8f, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003c82   2390     addwfc  0x90, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00873_DS_:
003c84   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
003c86   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
003c88   0a03     xorlw   0x03             	XORLW	0x03
003c8a   e110     bnz     0x003cac         	BNZ	_00878_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x84;
003c8c   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003c8e   f000
003c90   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003c92   f001
003c94   c190     movff   0x190, 0x003     	MOVFF	(_inPtr + 2), r0x03
003c96   f003
003c98   0e84     movlw   0x84             	MOVLW	0x84
003c9a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003c9c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003c9e   ffe9
003ca0   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003ca2   fff3
003ca4   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003ca6   ec42     call    0x005a84, 0x0call    0x005a84, 0x0 	CALL	__gptrput1
003ca8   f02d
003caa   d021     bra     0x003cee         	BRA	_00888_DS_
                                           _00878_DS_:
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(endpointDir == 1)
003cac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cae   0a01     xorlw   0x01             	XORLW	0x01
003cb0   e10f     bnz     0x003cd0         	BNZ	_00875_DS_
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x00;
003cb2   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003cb4   f000
003cb6   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003cb8   f001
003cba   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003cbc   f002
003cbe   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003cc0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003cc2   ffe9
003cc4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003cc6   fff3
003cc8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cca   ec42     call    0x005a84, 0x0call    0x005a84, 0x0 	CALL	__gptrput1
003ccc   f02d
003cce   d00f     bra     0x003cee         	BRA	_00888_DS_
                                           _00875_DS_:
                                           ;	.line	277; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x88;
003cd0   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003cd2   f000
003cd4   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003cd6   f001
003cd8   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003cda   f002
003cdc   0e88     movlw   0x88             	MOVLW	0x88
003cde   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003ce0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003ce2   ffe9
003ce4   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003ce6   fff3
003ce8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cea   ec42     call    0x005a84, 0x0call    0x005a84, 0x0 	CALL	__gptrput1
003cec   f02d
                                           _00888_DS_:
003cee   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003cf0   f005
003cf2   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003cf4   f004
003cf6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003cf8   f003
003cfa   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003cfc   f002
003cfe   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003d00   f001
003d02   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003d04   f000
003d06   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__GetStatus	code
                                           _GetStatus:
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void GetStatus(void) {
003f46   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003f48   ffe5
003f4a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003f4c   ffe5
003f4e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003f50   ffe5
003f52   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003f54   ffe5
003f56   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003f58   ffe5
003f5a   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003f5c   ffe5
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003f5e   0e1f     movlw   0x1f             	MOVLW	0x1f
003f60   0105     movlb   0x5              	BANKSEL	_SetupPacket
003f62   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
003f64   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003f66   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0;
003f68   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[1] = 0;
003f6a   6b41     clrf    0x41, 0x1        	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	205; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (recipient == 0x00) {
003f6c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f6e   e113     bnz     0x003f96         	BNZ	_00823_DS_
                                           ;	.line	207; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003f70   0e01     movlw   0x01             	MOVLW	0x01
003f72   0101     movlb   0x1              	BANKSEL	_requestHandled
003f74   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003f76   0101     movlb   0x1              	BANKSEL	_selfPowered
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (selfPowered)
003f78   51a9     movf    0xa9, 0x0, 0x1   	MOVF	_selfPowered, W, B
003f7a   e004     bz      0x003f84         	BZ	_00810_DS_
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
003f7c   0e01     movlw   0x01             	MOVLW	0x01
003f7e   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003f80   1140     iorwf   0x40, 0x0, 0x1   	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003f82   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00810_DS_:
003f84   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	211; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (remoteWakeup)
003f86   51aa     movf    0xaa, 0x0, 0x1   	MOVF	_remoteWakeup, W, B
003f88   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003f8a   d04c     bra     0x004024         	BRA	_00824_DS_
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
003f8c   0e02     movlw   0x02             	MOVLW	0x02
003f8e   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003f90   1140     iorwf   0x40, 0x0, 0x1   	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003f92   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
003f94   d047     bra     0x004024         	BRA	_00824_DS_
                                           _00823_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x01) {
003f96   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f98   0a01     xorlw   0x01             	XORLW	0x01
003f9a   e104     bnz     0x003fa4         	BNZ	_00820_DS_
                                           ;	.line	216; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003f9c   0e01     movlw   0x01             	MOVLW	0x01
003f9e   0101     movlb   0x1              	BANKSEL	_requestHandled
003fa0   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003fa2   d040     bra     0x004024         	BRA	_00824_DS_
                                           _00820_DS_:
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x02) {
003fa4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fa6   0a02     xorlw   0x02             	XORLW	0x02
003fa8   e001     bz      0x003fac         	BZ	_00859_DS_
003faa   d03c     bra     0x004024         	BRA	_00824_DS_
                                           _00859_DS_:
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003fac   0e0f     movlw   0x0f             	MOVLW	0x0f
003fae   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003fb0   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003fb2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003fb4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003fb6   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003fb8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003fba   0e01     movlw   0x01             	MOVLW	0x01
003fbc   0101     movlb   0x1              	BANKSEL	_requestHandled
003fbe   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	225; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003fc0   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003fc2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003fc4   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003fc6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003fc8   0e80     movlw   0x80             	MOVLW	0x80
003fca   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
003fcc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fce   0d08     mullw   0x08             	MULLW	0x08
003fd0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003fd2   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003fd4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003fd6   f000
003fd8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fda   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
003fdc   0101     movlb   0x1              	BANKSEL	_inPtr
003fde   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003fe0   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003fe2   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003fe4   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
003fe6   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003fe8   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
003fea   68e8     setf    0xe8, 0x0        	SETF	WREG
003fec   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003fee   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (endpointDir)
003ff0   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ff2   e005     bz      0x003ffe         	BZ	_00814_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr += 4;
003ff4   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
003ff6   278e     addwf   0x8e, 0x1, 0x1   	ADDWF	_inPtr, F, B
003ff8   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
003ffa   238f     addwfc  0x8f, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003ffc   2390     addwfc  0x90, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00814_DS_:
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
003ffe   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
004000   f000
004002   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
004004   f001
004006   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
004008   f002
00400a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00400c   ffe9
00400e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004010   fff3
004012   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004014   eced     call    0x0059da, 0x0call    0x0059da, 0x0 	CALL	__gptrget1
004016   f02c
004018   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00401a   a400     btfss   0x00, 0x2, 0x0   	BTFSS	r0x00, 2
00401c   d003     bra     0x004024         	BRA	_00824_DS_
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
00401e   0e01     movlw   0x01             	MOVLW	0x01
004020   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
004022   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00824_DS_:
004024   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (requestHandled) {
004026   51a8     movf    0xa8, 0x0, 0x1   	MOVF	_requestHandled, W, B
004028   e00b     bz      0x004040         	BZ	_00827_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
00402a   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
00402c   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
00402e   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004030   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
004032   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004034   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004036   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 2;
004038   0e02     movlw   0x02             	MOVLW	0x02
00403a   0101     movlb   0x1              	BANKSEL	_wCount
00403c   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
00403e   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           _00827_DS_:
004040   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004042   f005
004044   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004046   f004
004048   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00404a   f003
00404c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00404e   f002
004050   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004052   f001
004054   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004056   f000
004058   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void GetDescriptor(void)
00416c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00416e   ffe5
004170   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004172   ffe5
004174   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004176   ffe5
004178   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00417a   ffe5
00417c   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80)
00417e   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
004180   0a80     xorlw   0x80             	XORLW	0x80
004182   e001     bz      0x004186         	BZ	_00796_DS_
004184   d06b     bra     0x00425c         	BRA	_00778_DS_
                                           _00796_DS_:
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 descriptorType  = SetupPacket.wValue1;
004186   c503     movff   0x503, 0x000     	MOVFF	(_SetupPacket + 3), r0x00
004188   f000
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 descriptorIndex = SetupPacket.wValue0;
00418a   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
00418c   f001
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR)
00418e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004190   0a01     xorlw   0x01             	XORLW	0x01
004192   e10f     bnz     0x0041b2         	BNZ	_00774_DS_
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004194   0e01     movlw   0x01             	MOVLW	0x01
004196   0101     movlb   0x1              	BANKSEL	_requestHandled
004198   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&libdevice_descriptor;
00419a   0e00     movlw   0x00             	MOVLW	UPPER(_libdevice_descriptor)
00419c   0101     movlb   0x1              	BANKSEL	(_outPtr + 2)
00419e   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
0041a0   0e37     movlw   0x37             	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
0041a2   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0041a4   0e3e     movlw   0x3e             	MOVLW	LOW(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
0041a6   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	128; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
0041a8   0e12     movlw   0x12             	MOVLW	0x12
0041aa   0101     movlb   0x1              	BANKSEL	_wCount
0041ac   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0041ae   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0041b0   d055     bra     0x00425c         	BRA	_00778_DS_
                                           _00774_DS_:
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR)
0041b2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0041b4   0a02     xorlw   0x02             	XORLW	0x02
0041b6   e117     bnz     0x0041e6         	BNZ	_00771_DS_
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0041b8   0e01     movlw   0x01             	MOVLW	0x01
0041ba   0101     movlb   0x1              	BANKSEL	_requestHandled
0041bc   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&libconfiguration_descriptor;
0041be   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor)
0041c0   0101     movlb   0x1              	BANKSEL	(_outPtr + 2)
0041c2   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
0041c4   0e37     movlw   0x37             	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0041c6   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0041c8   0e50     movlw   0x50             	MOVLW	LOW(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0041ca   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
0041cc   0e52     movlw   0x52             	MOVLW	LOW(_libconfiguration_descriptor + 2)
0041ce   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0041d0   0e37     movlw   0x37             	MOVLW	HIGH(_libconfiguration_descriptor + 2)
0041d2   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0041d4   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor + 2)
0041d6   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
0041d8   0009     tblrd*+                  	TBLRD*+	
0041da   cff5     movff   0xff5, 0x191     	MOVFF	TABLAT, _wCount
0041dc   f191
0041de   0009     tblrd*+                  	TBLRD*+	
0041e0   cff5     movff   0xff5, 0x192     	MOVFF	TABLAT, (_wCount + 1)
0041e2   f192
0041e4   d03b     bra     0x00425c         	BRA	_00778_DS_
                                           _00771_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR)
0041e6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0041e8   0a03     xorlw   0x03             	XORLW	0x03
0041ea   e132     bnz     0x004250         	BNZ	_00768_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0041ec   0e01     movlw   0x01             	MOVLW	0x01
0041ee   0101     movlb   0x1              	BANKSEL	_requestHandled
0041f0   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = libstring_descriptor[descriptorIndex];
0041f2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0041f4   0d03     mullw   0x03             	MULLW	0x03
0041f6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0041f8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0041fa   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0041fc   f001
0041fe   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004200   0ec0     movlw   0xc0             	MOVLW	LOW(_libstring_descriptor)
004202   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004204   0e37     movlw   0x37             	MOVLW	HIGH(_libstring_descriptor)
004206   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004208   0e00     movlw   0x00             	MOVLW	UPPER(_libstring_descriptor)
00420a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00420c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00420e   fff6
004210   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
004212   fff7
004214   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
004216   fff8
004218   0009     tblrd*+                  	TBLRD*+	
00421a   cff5     movff   0xff5, 0x18b     	MOVFF	TABLAT, _outPtr
00421c   f18b
00421e   0009     tblrd*+                  	TBLRD*+	
004220   cff5     movff   0xff5, 0x18c     	MOVFF	TABLAT, (_outPtr + 1)
004222   f18c
004224   0009     tblrd*+                  	TBLRD*+	
004226   cff5     movff   0xff5, 0x18d     	MOVFF	TABLAT, (_outPtr + 2)
004228   f18d
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = *outPtr;
00422a   c18b     movff   0x18b, 0x001     	MOVFF	_outPtr, r0x01
00422c   f001
00422e   c18c     movff   0x18c, 0x002     	MOVFF	(_outPtr + 1), r0x02
004230   f002
004232   c18d     movff   0x18d, 0x003     	MOVFF	(_outPtr + 2), r0x03
004234   f003
004236   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004238   ffe9
00423a   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
00423c   fff3
00423e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004240   eced     call    0x0059da, 0x0call    0x0059da, 0x0 	CALL	__gptrget1
004242   f02c
004244   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004246   c001     movff   0x001, 0x191     	MOVFF	r0x01, _wCount
004248   f191
00424a   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
00424c   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
00424e   d006     bra     0x00425c         	BRA	_00778_DS_
                                           _00768_DS_:
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR)
004250   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004252   0a06     xorlw   0x06             	XORLW	0x06
004254   e103     bnz     0x00425c         	BNZ	_00778_DS_
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004256   0e01     movlw   0x01             	MOVLW	0x01
004258   0101     movlb   0x1              	BANKSEL	_requestHandled
00425a   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _00778_DS_:
00425c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00425e   f003
004260   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004262   f002
004264   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004266   f001
004268   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00426a   f000
00426c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
000c0c   0e0f     movlw   0x0f             	MOVLW	0x0f
000c0e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
000c10   0e07     movlw   0x07             	MOVLW	0x07
000c12   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
000c14   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
005968   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
00596a   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
00596c   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
00596e   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
005970   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
005972   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
005974   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
005976   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
005978   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
00597a   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
00597c   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
00597e   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
005980   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
005982   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
005984   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
005986   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
005988   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
00598a   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
00598c   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
00598e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
0051de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051e0   ffe5
0051e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051e4   ffd9
0051e6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0051e8   ffe5
0051ea   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0051ec   ffe5
0051ee   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0051f0   ffe5
0051f2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0051f4   ffe5
0051f6   0e02     movlw   0x02             	MOVLW	0x02
0051f8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0051fa   f000
0051fc   0e03     movlw   0x03             	MOVLW	0x03
0051fe   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005200   f001
005202   0e04     movlw   0x04             	MOVLW	0x04
005204   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005206   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
005208   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00520a   0a0b     xorlw   0x0b             	XORLW	0x0b
00520c   e017     bz      0x00523c         	BZ	_00737_DS_
00520e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005210   0a0c     xorlw   0x0c             	XORLW	0x0c
005212   e125     bnz     0x00525e         	BNZ	_00738_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
005214   0e0c     movlw   0x0c             	MOVLW	0x0c
005216   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
005218   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00521a   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
00521c   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
00521e   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
005220   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005222   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005224   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
005226   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
005228   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00522a   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
00522c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00522e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005230   0e03     movlw   0x03             	MOVLW	0x03
005232   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
005234   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
005236   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
005238   12bd     iorwf   0xbd, 0x1, 0x0   	IORWF	_CCP1CON, F
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
00523a   d011     bra     0x00525e         	BRA	_00738_DS_
                                           _00737_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
00523c   0e0c     movlw   0x0c             	MOVLW	0x0c
00523e   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
005240   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
005242   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
005244   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
005246   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
005248   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00524a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00524c   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
00524e   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
005250   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005252   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
005254   0e03     movlw   0x03             	MOVLW	0x03
005256   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
005258   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
00525a   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00525c   12ba     iorwf   0xba, 0x1, 0x0   	IORWF	_CCP2CON, F
                                           _00738_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
00525e   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
005260   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
005262   f003
005264   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005266   f002
005268   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00526a   f001
00526c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00526e   f000
005270   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005272   ffd9
005274   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
005ae2   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
005ae4   0e04     movlw   0x04             	MOVLW	0x04
005ae6   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
005ae8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
005142   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005144   ffe5
005146   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005148   ffd9
00514a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00514c   ffe5
00514e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005150   ffe5
005152   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005154   ffe5
005156   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005158   ffe5
00515a   0e02     movlw   0x02             	MOVLW	0x02
00515c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00515e   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
005160   0e0d     movlw   0x0d             	MOVLW	0x0d
005162   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005164   e30b     bnc     0x00517c         	BNC	_00690_DS_
005166   0e15     movlw   0x15             	MOVLW	0x15
005168   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00516a   e208     bc      0x00517c         	BC	_00690_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
00516c   0ef3     movlw   0xf3             	MOVLW	0xf3
00516e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
005170   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005172   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
005174   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
005176   0bfc     andlw   0xfc             	ANDLW	0xfc
005178   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
00517a   d007     bra     0x00518a         	BRA	_00691_DS_
                                           _00690_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
00517c   0e06     movlw   0x06             	MOVLW	0x06
00517e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
005180   e204     bc      0x00518a         	BC	_00691_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
005182   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
005184   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
005186   0bfc     andlw   0xfc             	ANDLW	0xfc
005188   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00691_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
00518a   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
00518c   0e09     movlw   0x09             	MOVLW	0x09
00518e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
005190   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00699_DS_:
005192   0000     nop                      	NOP
005194   0eff     movlw   0xff             	MOVLW	0xff
005196   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005198   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
00519a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00519c   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
00519e   e1f9     bnz     0x005192         	BNZ	_00699_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
0051a0   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00694_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
0051a2   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
0051a4   d7fe     bra     0x0051a2         	BRA	_00694_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
0051a6   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
0051a8   f000
0051aa   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0051ac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0051ae   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0051b0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
0051b2   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
0051b4   f000
0051b6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0051b8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0051ba   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0051bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0051be   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
0051c0   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
0051c2   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
0051c4   fff3
0051c6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0051c8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0051ca   f003
0051cc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0051ce   f002
0051d0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0051d2   f001
0051d4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0051d6   f000
0051d8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051da   ffd9
0051dc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
005990   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005992   ffe5
005994   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005996   ffd9
005998   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00599a   ffe5
00599c   0e02     movlw   0x02             	MOVLW	0x02
00599e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0059a0   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00671_DS_
                                           ; #	GOTO	_00673_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
0059a2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
0059a4   e004     bz      0x0059ae         	BZ	_00673_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
0059a6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0059a8   0a01     xorlw   0x01             	XORLW	0x01
0059aa   e101     bnz     0x0059ae         	BNZ	_00673_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
0059ac   88c1     bsf     0xc1, 0x4, 0x0   	BSF	_ADCON1, 4
                                           _00673_DS_:
0059ae   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0059b0   f000
0059b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0059b4   ffd9
0059b6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analog_init	code
                                           _analog_init:
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
005aac   0e2f     movlw   0x2f             	MOVLW	0x2f
005aae   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
005ab0   0e07     movlw   0x07             	MOVLW	0x07
005ab2   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
005ab4   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
005ab6   0ebd     movlw   0xbd             	MOVLW	0xbd
005ab8   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
005aba   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	543; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
00582c   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
00582e   d01f     bra     0x00586e         	BRA	_00658_DS_
005830   0101     movlb   0x1              	BANKSEL	_phase
                                           ;	.line	549; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
005832   5100     movf    0x00, 0x0, 0x1   	MOVF	_phase, W, B
005834   e00b     bz      0x00584c         	BZ	_00654_DS_
                                           ;	.line	551; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
005836   ec2a     call    0x005a54, 0x0call    0x005a54, 0x0 	CALL	_ServosPulseUp
005838   f02d
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
00583a   0ee9     movlw   0xe9             	MOVLW	0xe9
00583c   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	554; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
00583e   0e59     movlw   0x59             	MOVLW	0x59
005840   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	556; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
005842   0e01     movlw   0x01             	MOVLW	0x01
005844   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
005846   0101     movlb   0x1              	BANKSEL	_phase
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
005848   6b00     clrf    0x00, 0x1        	CLRF	_phase, B
00584a   d010     bra     0x00586c         	BRA	_00655_DS_
                                           _00654_DS_:
                                           ;	.line	565; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
00584c   ec10     call    0x003820, 0x0call    0x003820, 0x0 	CALL	_ServosPulseDown
00584e   f01c
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
005850   0e32     movlw   0x32             	MOVLW	0x32
005852   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	570; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
005854   0eeb     movlw   0xeb             	MOVLW	0xeb
005856   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00652_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
005858   0101     movlb   0x1              	BANKSEL	_needreordering
                                           ;	.line	572; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
00585a   5101     movf    0x01, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
00585c   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
00585e   ec0e     call    0x000c1c, 0x0call    0x000c1c, 0x0 	CALL	_SortServoTimings
005860   f006
005862   0e21     movlw   0x21             	MOVLW	0x21
005864   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	575; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
005866   0e01     movlw   0x01             	MOVLW	0x01
005868   0101     movlb   0x1              	BANKSEL	_phase
00586a   6f00     movwf   0x00, 0x1        	MOVWF	_phase, B
                                           _00655_DS_:
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
00586c   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00658_DS_:
                                           ;	.line	581; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00586e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	526; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
004f5e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f60   ffe5
004f62   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f64   ffd9
004f66   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004f68   ffe5
004f6a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004f6c   ffe5
004f6e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004f70   ffe5
004f72   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004f74   ffe5
004f76   0e02     movlw   0x02             	MOVLW	0x02
004f78   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004f7a   f000
004f7c   0e03     movlw   0x03             	MOVLW	0x03
004f7e   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004f80   f001
004f82   0e04     movlw   0x04             	MOVLW	0x04
004f84   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004f86   f002
                                           ;	.line	529; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
004f88   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00628_DS_
                                           ; #	GOTO	_00633_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
004f8a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
004f8c   e22e     bc      0x004fea         	BC	_00633_DS_
004f8e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004f90   0f80     addlw   0x80             	ADDLW	0x80
004f92   0f7b     addlw   0x7b             	ADDLW	0x7b
004f94   e102     bnz     0x004f9a         	BNZ	_00645_DS_
004f96   0edc     movlw   0xdc             	MOVLW	0xdc
004f98   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00645_DS_:
004f9a   e204     bc      0x004fa4         	BC	_00630_DS_
004f9c   0edc     movlw   0xdc             	MOVLW	0xdc
004f9e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004fa0   0e05     movlw   0x05             	MOVLW	0x05
004fa2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00630_DS_:
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
004fa4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004fa6   0f80     addlw   0x80             	ADDLW	0x80
004fa8   0f77     addlw   0x77             	ADDLW	0x77
004faa   e102     bnz     0x004fb0         	BNZ	_00646_DS_
004fac   0ec5     movlw   0xc5             	MOVLW	0xc5
004fae   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00646_DS_:
004fb0   e304     bnc     0x004fba         	BNC	_00632_DS_
004fb2   0ec4     movlw   0xc4             	MOVLW	0xc4
004fb4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004fb6   0e09     movlw   0x09             	MOVLW	0x09
004fb8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00632_DS_:
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
004fba   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004fbc   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004fbe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004fc0   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004fc2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004fc4   0e0c     movlw   0x0c             	MOVLW	0x0c
004fc6   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004fc8   0efe     movlw   0xfe             	MOVLW	0xfe
004fca   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004fcc   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004fce   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004fd0   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004fd2   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004fd4   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004fd6   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004fd8   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004fda   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004fdc   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004fde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004fe0   ffe9
004fe2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004fe4   ffea
004fe6   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
004fe8   ffef
                                           _00633_DS_:
004fea   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004fec   f003
004fee   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004ff0   f002
004ff2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004ff4   f001
004ff6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004ff8   f000
004ffa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ffc   ffd9
004ffe   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	512; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
005000   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005002   ffe5
005004   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005006   ffd9
005008   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00500a   ffe5
00500c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00500e   ffe5
005010   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
005012   ffe5
005014   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
005016   ffe5
005018   0e02     movlw   0x02             	MOVLW	0x02
00501a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00501c   f000
00501e   0e03     movlw   0x03             	MOVLW	0x03
005020   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005022   f001
005024   0e04     movlw   0x04             	MOVLW	0x04
005026   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
005028   f002
                                           ;	.line	515; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
00502a   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00604_DS_
                                           ; #	GOTO	_00609_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00502c   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
00502e   e22e     bc      0x00508c         	BC	_00609_DS_
005030   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005032   0f80     addlw   0x80             	ADDLW	0x80
005034   0f7f     addlw   0x7f             	ADDLW	0x7f
005036   e102     bnz     0x00503c         	BNZ	_00621_DS_
005038   0ef4     movlw   0xf4             	MOVLW	0xf4
00503a   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00621_DS_:
00503c   e204     bc      0x005046         	BC	_00606_DS_
00503e   0ef4     movlw   0xf4             	MOVLW	0xf4
005040   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005042   0e01     movlw   0x01             	MOVLW	0x01
005044   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00606_DS_:
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
005046   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
005048   0f80     addlw   0x80             	ADDLW	0x80
00504a   0f7b     addlw   0x7b             	ADDLW	0x7b
00504c   e102     bnz     0x005052         	BNZ	_00622_DS_
00504e   0edd     movlw   0xdd             	MOVLW	0xdd
005050   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00622_DS_:
005052   e304     bnc     0x00505c         	BNC	_00608_DS_
005054   0edc     movlw   0xdc             	MOVLW	0xdc
005056   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005058   0e05     movlw   0x05             	MOVLW	0x05
00505a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00608_DS_:
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
00505c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00505e   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
005060   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005062   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
005064   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
005066   0e0c     movlw   0x0c             	MOVLW	0x0c
005068   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
00506a   0efe     movlw   0xfe             	MOVLW	0xfe
00506c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00506e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005070   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005072   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005074   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
005076   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
005078   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
00507a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00507c   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
00507e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
005080   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
005082   ffe9
005084   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
005086   ffea
005088   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
00508a   ffef
                                           _00609_DS_:
00508c   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00508e   f003
005090   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
005092   f002
005094   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005096   f001
005098   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00509a   f000
00509c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00509e   ffd9
0050a0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoRead	code
                                           _ServoRead:
                                           ;	.line	504; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
0057a2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0057a4   ffe5
0057a6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0057a8   ffd9
0057aa   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0057ac   ffe5
0057ae   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0057b0   ffe5
0057b2   0e02     movlw   0x02             	MOVLW	0x02
0057b4   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0057b6   f000
                                           ;	.line	506; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
0057b8   0e1e     movlw   0x1e             	MOVLW	0x1e
0057ba   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0057bc   e302     bnc     0x0057c2         	BNC	_00592_DS_
                                           ;	.line	507; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
0057be   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0057c0   d00c     bra     0x0057da         	BRA	_00593_DS_
                                           _00592_DS_:
                                           ;	.line	509; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
0057c2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0057c4   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0057c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0057c8   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0057ca   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0057cc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0057ce   ffe9
0057d0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0057d2   ffea
0057d4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0057d6   f000
0057d8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00593_DS_:
0057da   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0057dc   f001
0057de   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0057e0   f000
0057e2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0057e4   ffd9
0057e6   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	480; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
0046f8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0046fa   ffe5
0046fc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0046fe   ffd9
004700   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004702   ffe5
004704   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004706   ffe5
004708   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00470a   ffe5
00470c   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00470e   ffe5
004710   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004712   ffe5
004714   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004716   ffe5
004718   0e02     movlw   0x02             	MOVLW	0x02
00471a   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00471c   f000
00471e   0e03     movlw   0x03             	MOVLW	0x03
004720   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004722   f001
                                           ;	.line	487; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
004724   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00574_DS_
                                           ; #	GOTO	_00577_DS_
                                           ; #	MOVLW	0xb5
                                           ;	.line	488; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
004726   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(degrees>180) degrees=180;
004728   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00472a   d041     bra     0x0047ae         	BRA	_00577_DS_
00472c   0eb5     movlw   0xb5             	MOVLW	0xb5
00472e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
004730   e302     bnc     0x004736         	BNC	_00576_DS_
004732   0eb4     movlw   0xb4             	MOVLW	0xb4
004734   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           _00576_DS_:
                                           ;	.line	494; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	range = (maxminpos[1][servo]  - maxminpos[0][servo]);
004736   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004738   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00473a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00473c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00473e   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004740   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004742   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
004744   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004746   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004748   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00474a   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
00474c   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
00474e   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
004750   ffe9
004752   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
004754   ffea
004756   cfef     movff   0xfef, 0x004     	MOVFF	INDF0, r0x04
004758   f004
00475a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00475c   ffe9
00475e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004760   ffea
004762   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
004764   f002
004766   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004768   5e02     subwf   0x02, 0x1, 0x0   	SUBWF	r0x02, F
                                           ; ;multiply variable :r0x02 by variable r0x01 and store in r0x01
                                           ;	.line	495; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	value = (degrees*range) / 180 + maxminpos[0][servo];
00476a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00476c   0202     mulwf   0x02, 0x0        	MULWF	r0x02
00476e   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
004770   f003
004772   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004774   f001
004776   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004778   0eb4     movlw   0xb4             	MOVLW	0xb4
00477a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00477c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00477e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004780   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004782   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004784   ecb1     call    0x004362, 0x0call    0x004362, 0x0 	CALL	__divsint
004786   f021
004788   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00478a   0e04     movlw   0x04             	MOVLW	0x04
00478c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00478e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004790   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
                                           ;	.line	499; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
004792   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004794   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
004796   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004798   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00479a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00479c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00479e   ffe9
0047a0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0047a2   ffea
0047a4   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
0047a6   ffef
                                           ;	.line	501; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0047a8   0e01     movlw   0x01             	MOVLW	0x01
0047aa   0101     movlb   0x1              	BANKSEL	_needreordering
0047ac   6f01     movwf   0x01, 0x1        	MOVWF	_needreordering, B
                                           _00577_DS_:
0047ae   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0047b0   f005
0047b2   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0047b4   f004
0047b6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0047b8   f003
0047ba   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0047bc   f002
0047be   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0047c0   f001
0047c2   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0047c4   f000
0047c6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047c8   ffd9
0047ca   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	455; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
0033de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0033e0   ffe5
0033e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0033e4   ffd9
0033e6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0033e8   ffe5
0033ea   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0033ec   ffe5
0033ee   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0033f0   ffe5
0033f2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0033f4   ffe5
0033f6   0e02     movlw   0x02             	MOVLW	0x02
0033f8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0033fa   f000
                                           ;	.line	457; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
0033fc   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00551_DS_
                                           ; #	GOTO	_00558_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
0033fe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
003400   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003402   d0a5     bra     0x00354e         	BRA	_00558_DS_
003404   0e20     movlw   0x20             	MOVLW	LOW(_port)
003406   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003408   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00340a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00340c   0e37     movlw   0x37             	MOVLW	HIGH(_port)
00340e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003410   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003412   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003414   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003416   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003418   fff6
00341a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00341c   fff7
00341e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003420   fff8
003422   0009     tblrd*+                  	TBLRD*+	
003424   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003426   f001
003428   0e05     movlw   0x05             	MOVLW	0x05
00342a   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
00342c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00342e   d08f     bra     0x00354e         	BRA	_00558_DS_
003430   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003432   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003434   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
003436   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003438   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00343a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00343c   0bfc     andlw   0xfc             	ANDLW	0xfc
00343e   0f4e     addlw   0x4e             	ADDLW	LOW(_00568_DS_)
003440   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003442   0e34     movlw   0x34             	MOVLW	HIGH(_00568_DS_)
003444   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003446   0e00     movlw   0x00             	MOVLW	UPPER(_00568_DS_)
003448   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00344a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00344c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00568_DS_:
00344e   ef31     goto    0x003462         	GOTO	_00552_DS_
003450   f01a
003452   ef49     goto    0x003492         	GOTO	_00553_DS_
003454   f01a
003456   ef61     goto    0x0034c2         	GOTO	_00554_DS_
003458   f01a
00345a   ef79     goto    0x0034f2         	GOTO	_00555_DS_
00345c   f01a
00345e   ef91     goto    0x003522         	GOTO	_00556_DS_
003460   f01a
                                           _00552_DS_:
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
003462   0e02     movlw   0x02             	MOVLW	LOW(_mask)
003464   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003466   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003468   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00346a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00346c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00346e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003470   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003472   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003474   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003476   fff6
003478   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00347a   fff7
00347c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00347e   fff8
003480   0009     tblrd*+                  	TBLRD*+	
003482   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003484   f001
003486   0104     movlb   0x4              	BANKSEL	_activatedservos
003488   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
00348a   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
00348c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00348e   6ff1     movwf   0xf1, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	462; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003490   d05e     bra     0x00354e         	BRA	_00558_DS_
                                           _00553_DS_:
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
003492   0e02     movlw   0x02             	MOVLW	LOW(_mask)
003494   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003496   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003498   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00349a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00349c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00349e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034a0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034a2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034a4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0034a6   fff6
0034a8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0034aa   fff7
0034ac   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0034ae   fff8
0034b0   0009     tblrd*+                  	TBLRD*+	
0034b2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0034b4   f001
0034b6   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
0034b8   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
0034ba   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0034bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0034be   6ff2     movwf   0xf2, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	464; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0034c0   d046     bra     0x00354e         	BRA	_00558_DS_
                                           _00554_DS_:
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
0034c2   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0034c4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034c6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0034c8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0034ca   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0034cc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0034ce   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034d0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034d2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034d4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0034d6   fff6
0034d8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0034da   fff7
0034dc   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0034de   fff8
0034e0   0009     tblrd*+                  	TBLRD*+	
0034e2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0034e4   f001
0034e6   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
0034e8   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
0034ea   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0034ec   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0034ee   6ff3     movwf   0xf3, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0034f0   d02e     bra     0x00354e         	BRA	_00558_DS_
                                           _00555_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
0034f2   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0034f4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034f6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0034f8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0034fa   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0034fc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0034fe   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003500   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003502   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003504   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003506   fff6
003508   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00350a   fff7
00350c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00350e   fff8
003510   0009     tblrd*+                  	TBLRD*+	
003512   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003514   f001
003516   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
003518   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00351a   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
00351c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00351e   6ff4     movwf   0xf4, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003520   d016     bra     0x00354e         	BRA	_00558_DS_
                                           _00556_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
003522   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003524   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003526   0e02     movlw   0x02             	MOVLW	LOW(_mask)
003528   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00352a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00352c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00352e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003530   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003532   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003534   fff6
003536   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003538   fff7
00353a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00353c   fff8
00353e   0009     tblrd*+                  	TBLRD*+	
003540   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003542   f000
003544   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
003546   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
003548   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
00354a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00354c   6ff5     movwf   0xf5, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00558_DS_:
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00354e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003550   f003
003552   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003554   f002
003556   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003558   f001
00355a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00355c   f000
00355e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003560   ffd9
003562   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	420; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
002aea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002aec   ffe5
002aee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002af0   ffd9
002af2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002af4   ffe5
002af6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002af8   ffe5
002afa   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002afc   ffe5
002afe   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002b00   ffe5
002b02   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002b04   ffe5
002b06   0e02     movlw   0x02             	MOVLW	0x02
002b08   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002b0a   f000
                                           ;	.line	422; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
002b0c   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00528_DS_
                                           ; #	GOTO	_00535_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
002b0e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002b10   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002b12   d0e1     bra     0x002cd6         	BRA	_00535_DS_
002b14   0e20     movlw   0x20             	MOVLW	LOW(_port)
002b16   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002b18   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002b1a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002b1c   0e37     movlw   0x37             	MOVLW	HIGH(_port)
002b1e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002b20   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002b22   0e00     movlw   0x00             	MOVLW	UPPER(_port)
002b24   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002b26   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002b28   fff6
002b2a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002b2c   fff7
002b2e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002b30   fff8
002b32   0009     tblrd*+                  	TBLRD*+	
002b34   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002b36   f001
002b38   0e05     movlw   0x05             	MOVLW	0x05
002b3a   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
002b3c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002b3e   d0cb     bra     0x002cd6         	BRA	_00535_DS_
002b40   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002b42   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
002b44   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
002b46   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002b48   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002b4a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002b4c   0bfc     andlw   0xfc             	ANDLW	0xfc
002b4e   0f5e     addlw   0x5e             	ADDLW	LOW(_00545_DS_)
002b50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b52   0e2b     movlw   0x2b             	MOVLW	HIGH(_00545_DS_)
002b54   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
002b56   0e00     movlw   0x00             	MOVLW	UPPER(_00545_DS_)
002b58   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002b5a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002b5c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00545_DS_:
002b5e   efb9     goto    0x002b72         	GOTO	_00529_DS_
002b60   f015
002b62   efdd     goto    0x002bba         	GOTO	_00530_DS_
002b64   f015
002b66   ef01     goto    0x002c02         	GOTO	_00531_DS_
002b68   f016
002b6a   ef25     goto    0x002c4a         	GOTO	_00532_DS_
002b6c   f016
002b6e   ef49     goto    0x002c92         	GOTO	_00533_DS_
002b70   f016
                                           _00529_DS_:
                                           ;	.line	427; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
002b72   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002b74   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002b76   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002b78   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002b7a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002b7c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002b7e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002b80   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002b82   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002b84   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002b86   fff6
002b88   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002b8a   fff7
002b8c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002b8e   fff8
002b90   0009     tblrd*+                  	TBLRD*+	
002b92   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002b94   f004
002b96   0104     movlb   0x4              	BANKSEL	_activatedservos
002b98   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
002b9a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002b9c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002b9e   6ff1     movwf   0xf1, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
002ba0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002ba2   fff6
002ba4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002ba6   fff7
002ba8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002baa   fff8
002bac   0009     tblrd*+                  	TBLRD*+	
002bae   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002bb0   f001
002bb2   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002bb4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002bb6   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002bb8   d08e     bra     0x002cd6         	BRA	_00535_DS_
                                           _00530_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
002bba   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002bbc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002bbe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002bc0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002bc2   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002bc4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002bc6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002bc8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002bca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002bcc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002bce   fff6
002bd0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002bd2   fff7
002bd4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002bd6   fff8
002bd8   0009     tblrd*+                  	TBLRD*+	
002bda   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002bdc   f004
002bde   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
002be0   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
002be2   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002be4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002be6   6ff2     movwf   0xf2, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
002be8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002bea   fff6
002bec   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002bee   fff7
002bf0   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002bf2   fff8
002bf4   0009     tblrd*+                  	TBLRD*+	
002bf6   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002bf8   f001
002bfa   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002bfc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002bfe   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c00   d06a     bra     0x002cd6         	BRA	_00535_DS_
                                           _00531_DS_:
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
002c02   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002c04   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c08   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c0a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002c0c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c0e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002c10   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002c12   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002c14   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c16   fff6
002c18   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c1a   fff7
002c1c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c1e   fff8
002c20   0009     tblrd*+                  	TBLRD*+	
002c22   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c24   f004
002c26   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
002c28   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
002c2a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c2c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c2e   6ff3     movwf   0xf3, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
002c30   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c32   fff6
002c34   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c36   fff7
002c38   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c3a   fff8
002c3c   0009     tblrd*+                  	TBLRD*+	
002c3e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002c40   f001
002c42   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002c44   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002c46   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	438; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c48   d046     bra     0x002cd6         	BRA	_00535_DS_
                                           _00532_DS_:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
002c4a   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002c4c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c4e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c50   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c52   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002c54   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c56   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002c58   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002c5a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002c5c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c5e   fff6
002c60   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c62   fff7
002c64   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c66   fff8
002c68   0009     tblrd*+                  	TBLRD*+	
002c6a   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c6c   f004
002c6e   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
002c70   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
002c72   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c74   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c76   6ff4     movwf   0xf4, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	443; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
002c78   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c7a   fff6
002c7c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c7e   fff7
002c80   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c82   fff8
002c84   0009     tblrd*+                  	TBLRD*+	
002c86   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002c88   f001
002c8a   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002c8c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002c8e   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	444; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c90   d022     bra     0x002cd6         	BRA	_00535_DS_
                                           _00533_DS_:
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
002c92   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002c94   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c96   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002c98   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002c9a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002c9c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002c9e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002ca0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002ca2   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002ca4   fff6
002ca6   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002ca8   fff7
002caa   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002cac   fff8
002cae   0009     tblrd*+                  	TBLRD*+	
002cb0   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
002cb2   f003
002cb4   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
002cb6   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
002cb8   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002cba   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002cbc   6ff5     movwf   0xf5, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	449; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
002cbe   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002cc0   fff6
002cc2   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002cc4   fff7
002cc6   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002cc8   fff8
002cca   0009     tblrd*+                  	TBLRD*+	
002ccc   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002cce   f000
002cd0   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
002cd2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002cd4   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00535_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002cd6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002cd8   f004
002cda   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002cdc   f003
002cde   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002ce0   f002
002ce2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002ce4   f001
002ce6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002ce8   f000
002cea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002cec   ffd9
002cee   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	245; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00411_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000c40   5da4     subwf   0xa4, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_32, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00358_DS_
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
000d10   d795     bra     0x000c3c         	BRA	_00411_DS_
                                           _00358_DS_:
000d12   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00414_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000d1a   5da4     subwf   0xa4, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_32, W, B
000d1c   e20d     bc      0x000d38         	BC	_00359_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0ef6     movlw   0xf6             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e04     movlw   0x04             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00414_DS_
                                           _00359_DS_:
000d38   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_32
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6ba5     clrf    0xa5, 0x1        	CLRF	_SortServoTimings_totalservos_1_32, B
000d3c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00407_DS_:
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_32
000d44   5da5     subwf   0xa5, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_32, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00409_DS_
000d4a   f00d
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
000d50   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
000d52   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6ba7     clrf    0xa7, 0x1        	CLRF	_SortServoTimings_s_1_32, B
                                           _00417_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000d5a   5da7     subwf   0xa7, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_32, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00406_DS_
000d60   f00c
                                           ;	.line	279; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0e20     movlw   0x20             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e37     movlw   0x37             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00418_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00498_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00498_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00498_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00498_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00360_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00369_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00378_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00387_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00396_DS_
000dc0   f00b
                                           _00360_DS_:
                                           ;	.line	282; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0e02     movlw   0x02             	MOVLW	LOW(_mask)
000dc4   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000dc6   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0104     movlb   0x4              	BANKSEL	_mascaratotal
000dea   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0104     movlb   0x4              	BANKSEL	_activatedservos
000df0   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00418_DS_
000dfa   f00c
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000dfe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000e00   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
000e18   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000e1a   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00364_DS_
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000e46   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000e48   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
000e6a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	287; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0e02     movlw   0x02             	MOVLW	LOW(_mask)
000e82   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000e84   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
000eb2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	288; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	296; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	298; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
000f4c   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
000f4e   ef99     goto    0x001932         	GOTO	_00418_DS_
000f50   f00c
                                           _00364_DS_:
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000f54   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000f56   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
000f6e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000f70   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00502_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00418_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00502_DS_:
000f90   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	301; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0e02     movlw   0x02             	MOVLW	LOW(_mask)
000fbc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000fbe   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00418_DS_
001002   f00c
                                           _00369_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0e02     movlw   0x02             	MOVLW	LOW(_mask)
001006   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001008   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 1)
00102c   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
001032   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00418_DS_
00103c   f00c
                                           ;	.line	310; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001040   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001042   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00105a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
00105c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00373_DS_
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001088   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00108a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0010ac   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0010e6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0010e8   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001116   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	318; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	323; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
00118e   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
001190   ef99     goto    0x001932         	GOTO	_00418_DS_
001192   f00c
                                           _00373_DS_:
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001196   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001198   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0011b0   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0011b2   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00507_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00418_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00507_DS_:
0011d2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	326; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0e02     movlw   0x02             	MOVLW	LOW(_mask)
001206   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001208   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00418_DS_
00124c   f00c
                                           _00378_DS_:
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0e02     movlw   0x02             	MOVLW	LOW(_mask)
001250   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001252   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 2)
001276   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
00127c   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00418_DS_
001286   f00c
                                           ;	.line	336; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00128a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00128c   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0012a4   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0012a6   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00382_DS_
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0012d2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0012d4   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0012f6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	338; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	339; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0e02     movlw   0x02             	MOVLW	LOW(_mask)
001356   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001358   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001386   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
0013d8   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
0013da   ef99     goto    0x001932         	GOTO	_00418_DS_
0013dc   f00c
                                           _00382_DS_:
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0013e0   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0013e2   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0013fa   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0013fc   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00512_DS_
001418   ef99     goto    0x001932         	GOTO	_00418_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00512_DS_:
00141c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0e02     movlw   0x02             	MOVLW	LOW(_mask)
001458   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00145a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00418_DS_
00149e   f00c
                                           _00387_DS_:
                                           ;	.line	358; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0014a2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0014a4   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 3)
0014c8   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
0014ce   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00418_DS_
0014d8   f00c
                                           ;	.line	361; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0014dc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0014de   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0014f6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0014f8   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00391_DS_
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001524   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001526   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001548   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	364; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0015ce   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0015d0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0015fe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
00162a   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
00162c   d182     bra     0x001932         	BRA	_00418_DS_
                                           _00391_DS_:
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001630   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001632   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00164a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
00164c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00517_DS_
001668   d164     bra     0x001932         	BRA	_00418_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00517_DS_:
00166a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	373; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
001688   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0016a6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0016a8   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00418_DS_
                                           _00396_DS_:
                                           ;	.line	381; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0016ee   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0016f0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 4)
001714   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
00171a   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00418_DS_
                                           ;	.line	384; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001726   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001728   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
001740   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
001742   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00400_DS_
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00176e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001770   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001792   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	386; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	387; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0e02     movlw   0x02             	MOVLW	LOW(_mask)
00183e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001840   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
001872   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
001874   d05e     bra     0x001932         	BRA	_00418_DS_
                                           _00400_DS_:
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001878   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00187a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
001892   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
001894   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00522_DS_
0018b0   d040     bra     0x001932         	BRA	_00418_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00522_DS_:
0018b2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0018ee   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0018f0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           _00418_DS_:
001932   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2ba7     incf    0xa7, 0x1, 0x1   	INCF	_SortServoTimings_s_1_32, F, B
001936   efab     goto    0x000d56         	GOTO	_00417_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00406_DS_:
00193a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	401; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0104     movlb   0x4              	BANKSEL	_mascaratotal
00195e   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6ff6     movwf   0xf6, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001966   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 1)
00198e   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6ff7     movwf   0xf7, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001996   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	404; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 2)
0019c2   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6ff8     movwf   0xf8, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0019ca   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	407; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 3)
0019f6   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6ff9     movwf   0xf9, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0019fe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	410; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 4)
001a2a   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6ffa     movwf   0xfa, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   51a6     movf    0xa6, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_32, W, B
001a36   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_32
001a38   27a5     addwf   0xa5, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_32, F, B
001a3a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00407_DS_
001a40   f006
                                           _00409_DS_:
001a42   0101     movlb   0x1              	BANKSEL	_needreordering
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6b01     clrf    0x01, 0x1        	CLRF	_needreordering, B
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseUp	code
                                           _ServosPulseUp:
005a54   0104     movlb   0x4              	BANKSEL	_activatedservos
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
005a56   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
005a58   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
005a5a   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
005a5c   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
005a5e   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
005a60   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
005a62   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
005a64   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
005a66   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
005a68   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
005a6a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
003820   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003822   ffe5
003824   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003826   ffd9
003828   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00382a   ffe5
00382c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00382e   ffe5
003830   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_28
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
003832   6ba3     clrf    0xa3, 0x1        	CLRF	_ServosPulseDown_timingindex_1_28, B
003834   0101     movlb   0x1              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
003836   6b02     clrf    0x02, 0x1        	CLRF	_timedivision, B
                                           _00331_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
003838   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00383a   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_28
00383c   25a3     addwf   0xa3, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_28, W, B
00383e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003840   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003842   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
003844   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003846   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003848   ffe9
00384a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00384c   ffea
00384e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003850   f000
003852   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003854   0101     movlb   0x1              	BANKSEL	_timedivision
003856   1902     xorwf   0x02, 0x0, 0x1   	XORWF	_timedivision, W, B
003858   e001     bz      0x00385c         	BZ	_00342_DS_
00385a   d06a     bra     0x003930         	BRA	_00329_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           _00342_DS_:
00385c   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_28
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
00385e   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
003860   0d05     mullw   0x05             	MULLW	0x05
003862   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003864   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003866   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003868   f000
00386a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00386c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00386e   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
003870   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003872   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003874   ffe9
003876   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003878   ffea
00387a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00387c   f000
00387e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003880   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
003882   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
003884   0d05     mullw   0x05             	MULLW	0x05
003886   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003888   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00388a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00388c   f000
00388e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
003890   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003892   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
003894   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003896   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
003898   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00389a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00389c   ffe9
00389e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0038a0   ffea
0038a2   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0038a4   f000
0038a6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0038a8   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
0038aa   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
0038ac   0d05     mullw   0x05             	MULLW	0x05
0038ae   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0038b0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0038b2   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0038b4   f000
0038b6   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0038b8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0038ba   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0038bc   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0038be   0e02     movlw   0x02             	MOVLW	0x02
0038c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0038c2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0038c4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0038c6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0038c8   ffe9
0038ca   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0038cc   ffea
0038ce   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0038d0   f000
0038d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0038d4   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
0038d6   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
0038d8   0d05     mullw   0x05             	MULLW	0x05
0038da   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0038dc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0038de   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0038e0   f000
0038e2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0038e4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0038e6   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0038e8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0038ea   0e03     movlw   0x03             	MOVLW	0x03
0038ec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0038ee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0038f0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0038f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0038f4   ffe9
0038f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0038f8   ffea
0038fa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0038fc   f000
0038fe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003900   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
003902   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
003904   0d05     mullw   0x05             	MULLW	0x05
003906   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003908   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00390a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00390c   f000
00390e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
003910   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003912   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
003914   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003916   0e04     movlw   0x04             	MOVLW	0x04
003918   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00391a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00391c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00391e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003920   ffe9
003922   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003924   ffea
003926   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003928   f000
00392a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00392c   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
00392e   2ba3     incf    0xa3, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_28, F, B
                                           _00329_DS_:
003930   0e07     movlw   0x07             	movlw	7
003932   6f9c     movwf   0x9c, 0x1        	movwf	_loopvar
                                           bucle:
003934   0000     nop                      	NOP
003936   0000     nop                      	NOP
003938   0000     nop                      	NOP
00393a   0000     nop                      	NOP
00393c   0000     nop                      	NOP
00393e   0000     nop                      	NOP
003940   0000     nop                      	NOP
003942   2f9c     decfsz  0x9c, 0x1, 0x1   	decfsz	_loopvar,1
003944   ef9a     goto    0x003934         	goto	bucle
003946   f01c
                                           	
003948   0101     movlb   0x1              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
00394a   2b02     incf    0x02, 0x1, 0x1   	INCF	_timedivision, F, B
00394c   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
00394e   5d02     subwf   0x02, 0x0, 0x1   	SUBWF	_timedivision, W, B
003950   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
003952   d772     bra     0x003838         	BRA	_00331_DS_
003954   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003956   f001
003958   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00395a   f000
00395c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00395e   ffd9
003960   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
004d76   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004d78   ffe5
004d7a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004d7c   ffe5
004d7e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004d80   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
004d82   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00302_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
004d84   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
004d86   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d88   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d8a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004d8c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
004d8e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d90   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004d92   ffe9
004d94   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004d96   ffea
004d98   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
004d9a   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
004d9c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004d9e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004da0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004da2   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
004da4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004da6   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004da8   ffe9
004daa   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004dac   ffea
004dae   0e40     movlw   0x40             	MOVLW	0x40
004db0   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
004db2   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004db4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004db6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004db8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004dba   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004dbc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004dbe   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004dc0   ffe9
004dc2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004dc4   ffea
004dc6   0ec0     movlw   0xc0             	MOVLW	0xc0
004dc8   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
004dca   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004dcc   0e1e     movlw   0x1e             	MOVLW	0x1e
004dce   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004dd0   e3d9     bnc     0x004d84         	BNC	_00302_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
004dd2   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00304_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
004dd4   0ef1     movlw   0xf1             	MOVLW	LOW(_activatedservos)
004dd6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004dd8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004dda   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004ddc   0e04     movlw   0x04             	MOVLW	HIGH(_activatedservos)
004dde   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004de0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004de2   ffe9
004de4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004de6   ffea
004de8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
004dea   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004dec   0e05     movlw   0x05             	MOVLW	0x05
004dee   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004df0   e3f1     bnc     0x004dd4         	BNC	_00304_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
004df2   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
004df4   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
004df6   0e01     movlw   0x01             	MOVLW	0x01
004df8   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
004dfa   0eff     movlw   0xff             	MOVLW	0xff
004dfc   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
004dfe   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
004e00   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
004e02   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
004e04   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
004e06   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
004e08   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
004e0a   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
004e0c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004e0e   f002
004e10   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004e12   f001
004e14   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004e16   f000
004e18   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
005870   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005872   ffe5
005874   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005876   ffd9
005878   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00587a   ffe5
00587c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00587e   ffe5
005880   0e02     movlw   0x02             	MOVLW	0x02
005882   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005884   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
005886   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005888   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00588a   ec4b     call    0x003096, 0x0call    0x003096, 0x0 	CALL	_digitalread
00588c   f018
00588e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
005890   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
005892   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
005894   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005896   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005898   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00589a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00589c   ec09     call    0x002412, 0x0call    0x002412, 0x0 	CALL	_digitalwrite
00589e   f012
0058a0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0058a2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0058a4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0058a6   f001
0058a8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0058aa   f000
0058ac   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0058ae   ffd9
0058b0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
003096   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003098   ffe5
00309a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00309c   ffd9
00309e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0030a0   ffe5
0030a2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0030a4   ffe5
0030a6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0030a8   ffe5
0030aa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0030ac   ffe5
0030ae   0e02     movlw   0x02             	MOVLW	0x02
0030b0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0030b2   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
0030b4   0e20     movlw   0x20             	MOVLW	LOW(_port)
0030b6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0030b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0030ba   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0030bc   0e37     movlw   0x37             	MOVLW	HIGH(_port)
0030be   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0030c0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0030c2   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0030c4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0030c6   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0030c8   fff6
0030ca   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0030cc   fff7
0030ce   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0030d0   fff8
0030d2   0009     tblrd*+                  	TBLRD*+	
0030d4   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0030d6   f001
0030d8   0e05     movlw   0x05             	MOVLW	0x05
0030da   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0030dc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0030de   d0a4     bra     0x003228         	BRA	_00258_DS_
0030e0   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0030e2   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0030e4   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0030e6   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0030e8   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0030ea   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0030ec   0bfc     andlw   0xfc             	ANDLW	0xfc
0030ee   0ffe     addlw   0xfe             	ADDLW	LOW(_00290_DS_)
0030f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0030f2   0e30     movlw   0x30             	MOVLW	HIGH(_00290_DS_)
0030f4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0030f6   0e00     movlw   0x00             	MOVLW	UPPER(_00290_DS_)
0030f8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0030fa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0030fc   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00290_DS_:
0030fe   ef89     goto    0x003112         	GOTO	_00253_DS_
003100   f018
003102   efa5     goto    0x00314a         	GOTO	_00254_DS_
003104   f018
003106   efc1     goto    0x003182         	GOTO	_00255_DS_
003108   f018
00310a   efdd     goto    0x0031ba         	GOTO	_00256_DS_
00310c   f018
00310e   eff9     goto    0x0031f2         	GOTO	_00257_DS_
003110   f018
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
003112   0e02     movlw   0x02             	MOVLW	LOW(_mask)
003114   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003116   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003118   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00311a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00311c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00311e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003120   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003122   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003124   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003126   fff6
003128   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00312a   fff7
00312c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00312e   fff8
003130   0009     tblrd*+                  	TBLRD*+	
003132   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003134   f001
003136   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
003138   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
00313a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00313c   e003     bz      0x003144         	BZ	_00261_DS_
00313e   0e01     movlw   0x01             	MOVLW	0x01
003140   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003142   d001     bra     0x003146         	BRA	_00262_DS_
                                           _00261_DS_:
003144   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00262_DS_:
003146   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003148   d070     bra     0x00322a         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
00314a   0e02     movlw   0x02             	MOVLW	LOW(_mask)
00314c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00314e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003150   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003152   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
003154   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003156   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003158   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00315a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00315c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00315e   fff6
003160   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003162   fff7
003164   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003166   fff8
003168   0009     tblrd*+                  	TBLRD*+	
00316a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00316c   f001
00316e   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
003170   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003172   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003174   e003     bz      0x00317c         	BZ	_00263_DS_
003176   0e01     movlw   0x01             	MOVLW	0x01
003178   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00317a   d001     bra     0x00317e         	BRA	_00264_DS_
                                           _00263_DS_:
00317c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00264_DS_:
00317e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003180   d054     bra     0x00322a         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
003182   0e02     movlw   0x02             	MOVLW	LOW(_mask)
003184   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003186   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003188   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00318a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00318c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00318e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003190   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003192   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003194   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003196   fff6
003198   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00319a   fff7
00319c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00319e   fff8
0031a0   0009     tblrd*+                  	TBLRD*+	
0031a2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0031a4   f001
0031a6   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
0031a8   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0031aa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031ac   e003     bz      0x0031b4         	BZ	_00265_DS_
0031ae   0e01     movlw   0x01             	MOVLW	0x01
0031b0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031b2   d001     bra     0x0031b6         	BRA	_00266_DS_
                                           _00265_DS_:
0031b4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00266_DS_:
0031b6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031b8   d038     bra     0x00322a         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
0031ba   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0031bc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031be   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031c0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0031c2   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0031c4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0031c6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0031c8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0031ca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0031cc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0031ce   fff6
0031d0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0031d2   fff7
0031d4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0031d6   fff8
0031d8   0009     tblrd*+                  	TBLRD*+	
0031da   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0031dc   f001
0031de   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
0031e0   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0031e2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031e4   e003     bz      0x0031ec         	BZ	_00267_DS_
0031e6   0e01     movlw   0x01             	MOVLW	0x01
0031e8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031ea   d001     bra     0x0031ee         	BRA	_00268_DS_
                                           _00267_DS_:
0031ec   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00268_DS_:
0031ee   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031f0   d01c     bra     0x00322a         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
0031f2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0031f4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0031f6   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0031f8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0031fa   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0031fc   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0031fe   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003200   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003202   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003204   fff6
003206   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003208   fff7
00320a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00320c   fff8
00320e   0009     tblrd*+                  	TBLRD*+	
003210   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003212   f000
003214   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
003216   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
003218   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00321a   e003     bz      0x003222         	BZ	_00269_DS_
00321c   0e01     movlw   0x01             	MOVLW	0x01
00321e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003220   d001     bra     0x003224         	BRA	_00270_DS_
                                           _00269_DS_:
003222   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00270_DS_:
003224   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003226   d001     bra     0x00322a         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
003228   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
00322a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00322c   f003
00322e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003230   f002
003232   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003234   f001
003236   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003238   f000
00323a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00323c   ffd9
00323e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
002412   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002414   ffe5
002416   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002418   ffd9
00241a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00241c   ffe5
00241e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002420   ffe5
002422   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002424   ffe5
002426   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002428   ffe5
00242a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00242c   ffe5
00242e   0e02     movlw   0x02             	MOVLW	0x02
002430   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002432   f000
002434   0e03     movlw   0x03             	MOVLW	0x03
002436   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002438   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
00243a   0e20     movlw   0x20             	MOVLW	LOW(_port)
00243c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00243e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002440   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002442   0e37     movlw   0x37             	MOVLW	HIGH(_port)
002444   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002446   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002448   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00244a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00244c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00244e   fff6
002450   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002452   fff7
002454   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002456   fff8
002458   0009     tblrd*+                  	TBLRD*+	
00245a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00245c   f002
00245e   0e05     movlw   0x05             	MOVLW	0x05
002460   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
002462   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002464   d0f8     bra     0x002656         	BRA	_00227_DS_
002466   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002468   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00246a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00246c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00246e   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002470   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002472   0bfc     andlw   0xfc             	ANDLW	0xfc
002474   0f84     addlw   0x84             	ADDLW	LOW(_00248_DS_)
002476   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002478   0e24     movlw   0x24             	MOVLW	HIGH(_00248_DS_)
00247a   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00247c   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
00247e   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002480   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002482   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
002484   ef4c     goto    0x002498         	GOTO	_00206_DS_
002486   f012
002488   ef79     goto    0x0024f2         	GOTO	_00210_DS_
00248a   f012
00248c   efa6     goto    0x00254c         	GOTO	_00214_DS_
00248e   f012
002490   efd3     goto    0x0025a6         	GOTO	_00218_DS_
002492   f012
002494   ef00     goto    0x002600         	GOTO	_00222_DS_
002496   f013
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
002498   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00249a   e015     bz      0x0024c6         	BZ	_00208_DS_
00249c   0e02     movlw   0x02             	MOVLW	LOW(_mask)
00249e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024a0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024a2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024a4   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0024a6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024a8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0024aa   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024ac   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0024ae   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0024b0   fff6
0024b2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0024b4   fff7
0024b6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0024b8   fff8
0024ba   0009     tblrd*+                  	TBLRD*+	
0024bc   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0024be   f002
0024c0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024c2   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
0024c4   d0c8     bra     0x002656         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
0024c6   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0024c8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024ca   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024cc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024ce   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0024d0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024d2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0024d4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024d6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0024d8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0024da   fff6
0024dc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0024de   fff7
0024e0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0024e2   fff8
0024e4   0009     tblrd*+                  	TBLRD*+	
0024e6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0024e8   f002
0024ea   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024ec   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0024ee   1689     andwf   0x89, 0x1, 0x0   	ANDWF	_LATA, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0024f0   d0b2     bra     0x002656         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
0024f2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024f4   e015     bz      0x002520         	BZ	_00212_DS_
0024f6   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0024f8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024fa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024fc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024fe   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002500   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002502   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002504   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002506   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002508   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00250a   fff6
00250c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00250e   fff7
002510   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002512   fff8
002514   0009     tblrd*+                  	TBLRD*+	
002516   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002518   f002
00251a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00251c   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
00251e   d09b     bra     0x002656         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
002520   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002522   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002524   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002526   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002528   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00252a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00252c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00252e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002530   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002532   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002534   fff6
002536   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002538   fff7
00253a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00253c   fff8
00253e   0009     tblrd*+                  	TBLRD*+	
002540   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002542   f002
002544   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002546   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002548   168a     andwf   0x8a, 0x1, 0x0   	ANDWF	_LATB, F
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
00254a   d085     bra     0x002656         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
00254c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00254e   e015     bz      0x00257a         	BZ	_00216_DS_
002550   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002552   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002554   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002556   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002558   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00255a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00255c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00255e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002560   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002562   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002564   fff6
002566   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002568   fff7
00256a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00256c   fff8
00256e   0009     tblrd*+                  	TBLRD*+	
002570   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002572   f002
002574   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002576   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
002578   d06e     bra     0x002656         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
00257a   0e02     movlw   0x02             	MOVLW	LOW(_mask)
00257c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00257e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002580   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002582   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002584   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002586   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002588   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00258a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00258c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00258e   fff6
002590   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002592   fff7
002594   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002596   fff8
002598   0009     tblrd*+                  	TBLRD*+	
00259a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00259c   f002
00259e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025a0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0025a2   168b     andwf   0x8b, 0x1, 0x0   	ANDWF	_LATC, F
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0025a4   d058     bra     0x002656         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
0025a6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0025a8   e015     bz      0x0025d4         	BZ	_00220_DS_
0025aa   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0025ac   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0025ae   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025b0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0025b2   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0025b4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0025b6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0025b8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0025ba   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0025bc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0025be   fff6
0025c0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0025c2   fff7
0025c4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0025c6   fff8
0025c8   0009     tblrd*+                  	TBLRD*+	
0025ca   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0025cc   f002
0025ce   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025d0   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
0025d2   d041     bra     0x002656         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
0025d4   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0025d6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0025d8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025da   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0025dc   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0025de   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0025e0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0025e2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0025e4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0025e6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0025e8   fff6
0025ea   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0025ec   fff7
0025ee   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0025f0   fff8
0025f2   0009     tblrd*+                  	TBLRD*+	
0025f4   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0025f6   f002
0025f8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025fa   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0025fc   168c     andwf   0x8c, 0x1, 0x0   	ANDWF	_LATD, F
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0025fe   d02b     bra     0x002656         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
002600   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002602   e015     bz      0x00262e         	BZ	_00224_DS_
002604   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002606   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002608   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00260a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00260c   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00260e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002610   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002612   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002614   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002616   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002618   fff6
00261a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00261c   fff7
00261e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002620   fff8
002622   0009     tblrd*+                  	TBLRD*+	
002624   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002626   f001
002628   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00262a   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
00262c   d014     bra     0x002656         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
00262e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002630   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002632   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002634   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002636   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002638   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00263a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00263c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00263e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002640   fff6
002642   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002644   fff7
002646   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002648   fff8
00264a   0009     tblrd*+                  	TBLRD*+	
00264c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00264e   f000
002650   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002652   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002654   168d     andwf   0x8d, 0x1, 0x0   	ANDWF	_LATE, F
                                           _00227_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
002656   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002658   f004
00265a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00265c   f003
00265e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002660   f002
002662   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002664   f001
002666   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002668   f000
00266a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00266c   ffd9
00266e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
002670   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002672   ffe5
002674   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002676   ffd9
002678   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00267a   ffe5
00267c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00267e   ffe5
002680   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002682   ffe5
002684   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002686   ffe5
002688   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00268a   ffe5
00268c   0e02     movlw   0x02             	MOVLW	0x02
00268e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002690   f000
002692   0e03     movlw   0x03             	MOVLW	0x03
002694   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002696   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
002698   0e20     movlw   0x20             	MOVLW	LOW(_port)
00269a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00269c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00269e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0026a0   0e37     movlw   0x37             	MOVLW	HIGH(_port)
0026a2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0026a4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0026a6   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0026a8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0026aa   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0026ac   fff6
0026ae   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0026b0   fff7
0026b2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0026b4   fff8
0026b6   0009     tblrd*+                  	TBLRD*+	
0026b8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0026ba   f002
0026bc   0e05     movlw   0x05             	MOVLW	0x05
0026be   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
0026c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0026c2   d0f8     bra     0x0028b4         	BRA	_00180_DS_
0026c4   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0026c6   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0026c8   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0026ca   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0026cc   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0026ce   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0026d0   0bfc     andlw   0xfc             	ANDLW	0xfc
0026d2   0fe2     addlw   0xe2             	ADDLW	LOW(_00201_DS_)
0026d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0026d6   0e26     movlw   0x26             	MOVLW	HIGH(_00201_DS_)
0026d8   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0026da   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
0026dc   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0026de   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0026e0   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
0026e2   ef7b     goto    0x0026f6         	GOTO	_00159_DS_
0026e4   f013
0026e6   efa8     goto    0x002750         	GOTO	_00163_DS_
0026e8   f013
0026ea   efd5     goto    0x0027aa         	GOTO	_00167_DS_
0026ec   f013
0026ee   ef02     goto    0x002804         	GOTO	_00171_DS_
0026f0   f014
0026f2   ef2f     goto    0x00285e         	GOTO	_00175_DS_
0026f4   f014
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
0026f6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0026f8   e015     bz      0x002724         	BZ	_00161_DS_
0026fa   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0026fc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0026fe   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002700   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002702   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002704   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002706   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002708   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00270a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00270c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00270e   fff6
002710   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002712   fff7
002714   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002716   fff8
002718   0009     tblrd*+                  	TBLRD*+	
00271a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00271c   f002
00271e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002720   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
002722   d0c8     bra     0x0028b4         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
002724   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002726   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002728   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00272a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00272c   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00272e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002730   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002732   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002734   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002736   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002738   fff6
00273a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00273c   fff7
00273e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002740   fff8
002742   0009     tblrd*+                  	TBLRD*+	
002744   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002746   f002
002748   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00274a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00274c   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
00274e   d0b2     bra     0x0028b4         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
002750   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002752   e015     bz      0x00277e         	BZ	_00165_DS_
002754   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002756   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002758   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00275a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00275c   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00275e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002760   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002762   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002764   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002766   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002768   fff6
00276a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00276c   fff7
00276e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002770   fff8
002772   0009     tblrd*+                  	TBLRD*+	
002774   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002776   f002
002778   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00277a   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
00277c   d09b     bra     0x0028b4         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
00277e   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002780   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002782   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002784   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002786   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002788   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00278a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00278c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00278e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002790   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002792   fff6
002794   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002796   fff7
002798   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00279a   fff8
00279c   0009     tblrd*+                  	TBLRD*+	
00279e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027a0   f002
0027a2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027a4   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0027a6   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0027a8   d085     bra     0x0028b4         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
0027aa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0027ac   e015     bz      0x0027d8         	BZ	_00169_DS_
0027ae   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0027b0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027b2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027b4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027b6   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0027b8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027ba   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0027bc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027be   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0027c0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0027c2   fff6
0027c4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0027c6   fff7
0027c8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0027ca   fff8
0027cc   0009     tblrd*+                  	TBLRD*+	
0027ce   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027d0   f002
0027d2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027d4   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
0027d6   d06e     bra     0x0028b4         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
0027d8   0e02     movlw   0x02             	MOVLW	LOW(_mask)
0027da   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027dc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027de   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027e0   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
0027e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027e4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0027e6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027e8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0027ea   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0027ec   fff6
0027ee   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0027f0   fff7
0027f2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0027f4   fff8
0027f6   0009     tblrd*+                  	TBLRD*+	
0027f8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027fa   f002
0027fc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027fe   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002800   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
002802   d058     bra     0x0028b4         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
002804   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002806   e015     bz      0x002832         	BZ	_00173_DS_
002808   0e02     movlw   0x02             	MOVLW	LOW(_mask)
00280a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00280c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00280e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002810   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002812   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002814   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002816   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002818   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00281a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00281c   fff6
00281e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002820   fff7
002822   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002824   fff8
002826   0009     tblrd*+                  	TBLRD*+	
002828   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00282a   f002
00282c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00282e   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
002830   d041     bra     0x0028b4         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
002832   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002834   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002836   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002838   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00283a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00283c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00283e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002840   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002842   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002844   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002846   fff6
002848   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00284a   fff7
00284c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00284e   fff8
002850   0009     tblrd*+                  	TBLRD*+	
002852   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002854   f002
002856   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002858   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00285a   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
00285c   d02b     bra     0x0028b4         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
00285e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002860   e015     bz      0x00288c         	BZ	_00177_DS_
002862   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002864   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002866   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002868   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00286a   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
00286c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00286e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002870   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002872   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002874   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002876   fff6
002878   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00287a   fff7
00287c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00287e   fff8
002880   0009     tblrd*+                  	TBLRD*+	
002882   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002884   f001
002886   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002888   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
00288a   d014     bra     0x0028b4         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
00288c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00288e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002890   0e02     movlw   0x02             	MOVLW	LOW(_mask)
002892   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002894   0e37     movlw   0x37             	MOVLW	HIGH(_mask)
002896   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002898   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00289a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00289c   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00289e   fff6
0028a0   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0028a2   fff7
0028a4   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0028a6   fff8
0028a8   0009     tblrd*+                  	TBLRD*+	
0028aa   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0028ac   f000
0028ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0028b0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0028b2   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00180_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
0028b4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0028b6   f004
0028b8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0028ba   f003
0028bc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0028be   f002
0028c0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0028c2   f001
0028c4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0028c6   f000
0028c8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0028ca   ffd9
0028cc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
004952   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004954   ffe5
004956   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004958   ffd9
00495a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00495c   ffe5
00495e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004960   ffe5
004962   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004964   ffe5
004966   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004968   ffe5
00496a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00496c   ffe5
00496e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004970   ffe5
004972   0e02     movlw   0x02             	MOVLW	0x02
004974   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004976   f000
004978   0e03     movlw   0x03             	MOVLW	0x03
00497a   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
00497c   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
00497e   ec78     call    0x002cf0, 0x0call    0x002cf0, 0x0 	CALL	_System_getCpuFrequency
004980   f016
004982   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004984   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
004986   f003
004988   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
00498a   f004
00498c   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
00498e   f005
004990   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004992   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
004994   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
004996   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
004998   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
00499a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00499c   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
00499e   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0049a0   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0049a2   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0049a4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0049a6   0e01     movlw   0x01             	MOVLW	0x01
0049a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049aa   0e86     movlw   0x86             	MOVLW	0x86
0049ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049ae   0ea0     movlw   0xa0             	MOVLW	0xa0
0049b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049b2   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0049b4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049b6   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0049b8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049ba   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0049bc   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049be   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0049c0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0049c2   ec84     call    0x003d08, 0x0call    0x003d08, 0x0 	CALL	__divulong
0049c4   f01e
0049c6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0049c8   0e08     movlw   0x08             	MOVLW	0x08
0049ca   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
0049cc   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
0049ce   f004
0049d0   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
0049d2   f005
0049d4   0eff     movlw   0xff             	MOVLW	0xff
0049d6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0049d8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0049da   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0049dc   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
0049de   e008     bz      0x0049f0         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
0049e0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0049e2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0049e4   0efd     movlw   0xfd             	MOVLW	0xfd
0049e6   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
0049e8   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0049ea   ecf1     call    0x0037e2, 0x0call    0x0037e2, 0x0 	CALL	_delay100tcy
0049ec   f01b
0049ee   d7ee     bra     0x0049cc         	BRA	_00151_DS_
                                           _00154_DS_:
0049f0   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
0049f2   f005
0049f4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0049f6   f004
0049f8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0049fa   f003
0049fc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0049fe   f002
004a00   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004a02   f001
004a04   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004a06   f000
004a08   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004a0a   ffd9
004a0c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
002cf0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002cf2   ffe5
002cf4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002cf6   ffe5
002cf8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002cfa   ffe5
002cfc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002cfe   ffe5
002d00   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002d02   ffe5
002d04   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002d06   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
002d08   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002d0a   0b03     andlw   0x03             	ANDLW	0x03
002d0c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d0e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d10   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
002d12   d091     bra     0x002e36         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
002d14   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d16   0e30     movlw   0x30             	MOVLW	0x30
002d18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d1a   0e00     movlw   0x00             	MOVLW	0x00
002d1c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d1e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d20   ec60     call    0x004ac0, 0x0call    0x004ac0, 0x0 	CALL	_System_readFlashMemory
002d22   f025
002d24   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d26   0e04     movlw   0x04             	MOVLW	0x04
002d28   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002d2a   0e18     movlw   0x18             	MOVLW	0x18
002d2c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
002d2e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002d30   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d32   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002d34   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
002d36   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d38   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002d3a   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
002d3c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d3e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002d40   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
002d42   0ede     movlw   0xde             	MOVLW	LOW(_cpudiv_xtal)
002d44   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002d46   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002d48   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002d4a   0e36     movlw   0x36             	MOVLW	HIGH(_cpudiv_xtal)
002d4c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002d4e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002d50   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
002d52   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002d54   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002d56   fff6
002d58   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002d5a   fff7
002d5c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002d5e   fff8
002d60   0009     tblrd*+                  	TBLRD*+	
002d62   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002d64   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
002d66   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d68   0e30     movlw   0x30             	MOVLW	0x30
002d6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d6c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d6e   0e01     movlw   0x01             	MOVLW	0x01
002d70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d72   ec60     call    0x004ac0, 0x0call    0x004ac0, 0x0 	CALL	_System_readFlashMemory
002d74   f025
002d76   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002d78   0e04     movlw   0x04             	MOVLW	0x04
002d7a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002d7c   0e0f     movlw   0x0f             	MOVLW	0x0f
002d7e   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
002d80   0eda     movlw   0xda             	MOVLW	LOW(_cpudiv)
002d82   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002d84   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002d86   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002d88   0e36     movlw   0x36             	MOVLW	HIGH(_cpudiv)
002d8a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002d8c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002d8e   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
002d90   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002d92   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
002d94   fff6
002d96   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
002d98   fff7
002d9a   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
002d9c   fff8
002d9e   0009     tblrd*+                  	TBLRD*+	
002da0   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002da2   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
002da4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002da6   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
002da8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002daa   e006     bz      0x002db8         	BZ	_00110_DS_
002dac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002dae   0a02     xorlw   0x02             	XORLW	0x02
002db0   e003     bz      0x002db8         	BZ	_00110_DS_
002db2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002db4   0a06     xorlw   0x06             	XORLW	0x06
002db6   e11f     bnz     0x002df6         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
002db8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dba   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dbc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dbe   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002dc0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dc2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dc4   0e7a     movlw   0x7a             	MOVLW	0x7a
002dc6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dc8   0e12     movlw   0x12             	MOVLW	0x12
002dca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dcc   0e00     movlw   0x00             	MOVLW	0x00
002dce   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dd0   ec20     call    0x003240, 0x0call    0x003240, 0x0 	CALL	__divslong
002dd2   f019
002dd4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002dd6   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
002dd8   f002
002dda   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
002ddc   f003
002dde   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
002de0   f004
002de2   0e08     movlw   0x08             	MOVLW	0x08
002de4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002de6   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002de8   ffe9
002dea   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
002dec   fff4
002dee   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
002df0   fff3
002df2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002df4   d063     bra     0x002ebc         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
002df6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002df8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dfa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dfc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002dfe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e00   0e05     movlw   0x05             	MOVLW	0x05
002e02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e04   0eb8     movlw   0xb8             	MOVLW	0xb8
002e06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e08   0ed8     movlw   0xd8             	MOVLW	0xd8
002e0a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e0c   0e00     movlw   0x00             	MOVLW	0x00
002e0e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e10   ec84     call    0x003d08, 0x0call    0x003d08, 0x0 	CALL	__divulong
002e12   f01e
002e14   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002e16   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002e18   f001
002e1a   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
002e1c   f002
002e1e   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
002e20   f003
002e22   0e08     movlw   0x08             	MOVLW	0x08
002e24   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e26   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002e28   ffe9
002e2a   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002e2c   fff4
002e2e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002e30   fff3
002e32   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e34   d043     bra     0x002ebc         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
002e36   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002e38   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002e3a   0a01     xorlw   0x01             	XORLW	0x01
002e3c   e106     bnz     0x002e4a         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
002e3e   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002e40   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002e42   0e80     movlw   0x80             	MOVLW	0x80
002e44   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
002e46   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
002e48   d039     bra     0x002ebc         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
002e4a   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002e4c   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002e4e   0f80     addlw   0x80             	ADDLW	0x80
002e50   0f7e     addlw   0x7e             	ADDLW	0x7e
002e52   e330     bnc     0x002eb4         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
002e54   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002e56   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
002e58   0b07     andlw   0x07             	ANDLW	0x07
002e5a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e5e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e60   0e04     movlw   0x04             	MOVLW	0x04
002e62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e64   ec51     call    0x0050a2, 0x0call    0x0050a2, 0x0 	CALL	__mulint
002e66   f028
002e68   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002e6a   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002e6c   f001
002e6e   0e04     movlw   0x04             	MOVLW	0x04
002e70   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e72   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002e74   0ee2     movlw   0xe2             	MOVLW	LOW(_ircf)
002e76   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002e78   0e36     movlw   0x36             	MOVLW	HIGH(_ircf)
002e7a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002e7c   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
002e7e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002e80   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002e82   fff6
002e84   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002e86   fff7
002e88   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002e8a   fff8
002e8c   0009     tblrd*+                  	TBLRD*+	
002e8e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002e90   f000
002e92   0009     tblrd*+                  	TBLRD*+	
002e94   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002e96   f001
002e98   0009     tblrd*+                  	TBLRD*+	
002e9a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002e9c   f002
002e9e   0009     tblrd*+                  	TBLRD*+	
002ea0   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
002ea2   f003
002ea4   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002ea6   ffe9
002ea8   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002eaa   fff4
002eac   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002eae   fff3
002eb0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002eb2   d004     bra     0x002ebc         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
002eb4   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002eb6   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002eb8   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
002eba   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
002ebc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002ebe   f005
002ec0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002ec2   f004
002ec4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002ec6   f003
002ec8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002eca   f002
002ecc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002ece   f001
002ed0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002ed2   f000
002ed4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
004ac0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004ac2   ffe5
004ac4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ac6   ffd9
004ac8   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004aca   ffe5
004acc   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004ace   ffe5
004ad0   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004ad2   ffe5
004ad4   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004ad6   ffe5
004ad8   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004ada   ffe5
004adc   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004ade   ffe5
004ae0   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004ae2   ffe5
004ae4   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004ae6   ffe5
004ae8   0e02     movlw   0x02             	MOVLW	0x02
004aea   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004aec   f000
004aee   0e03     movlw   0x03             	MOVLW	0x03
004af0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004af2   f001
004af4   0e04     movlw   0x04             	MOVLW	0x04
004af6   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004af8   f002
004afa   0e05     movlw   0x05             	MOVLW	0x05
004afc   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
004afe   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
004b00   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004b02   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004b04   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004b06   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004b08   6a06     clrf    0x06, 0x0        	CLRF	r0x06
004b0a   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004b0c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004b0e   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
004b10   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004b12   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004b14   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004b16   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
004b18   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004b1a   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004b1c   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004b1e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004b20   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
004b22   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004b24   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
004b26   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
004b28   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
004b2a   f000
004b2c   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
004b2e   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
004b30   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
004b32   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004b34   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004b36   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
004b38   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004b3a   6a05     clrf    0x05, 0x0        	CLRF	r0x05
004b3c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004b3e   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
004b40   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004b42   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
004b44   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
004b46   fff3
004b48   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004b4a   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004b4c   f007
004b4e   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004b50   f006
004b52   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004b54   f005
004b56   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004b58   f004
004b5a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004b5c   f003
004b5e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004b60   f002
004b62   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004b64   f001
004b66   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004b68   f000
004b6a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b6c   ffd9
004b6e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
0036da   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
0036dc   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
0036de   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
0036e0   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
0036e2   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
0036e4   0000     nop                      
0036e6   e848     dw      0xe848           
0036e8   0001     halt                     
0036ea   d090     bra     0x00380c         
0036ec   0003     sleep                    
0036ee   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
0036f0   0007     daw                      
0036f2   4240     rrncf   0x40, 0x1, 0x0   
0036f4   000f     tblwt+*                  
0036f6   8480     bsf     0x80, 0x2, 0x0   
0036f8   001e     dw      0x001e           
0036fa   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
0036fc   003d     dw      0x003d           
0036fe   1200     iorwf   0x00, 0x1, 0x0   
003700   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
003702   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
003704   0804     sublw   0x04             
003706   2010     addwfc  0x10, 0x0, 0x0   
003708   8040     bsf     0x40, 0x0, 0x0   
00370a   8040     bsf     0x40, 0x0, 0x0   
00370c   0201     mulwf   0x01, 0x0        
00370e   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
003710   0402     decf    0x02, 0x0, 0x0   
003712   2008     addwfc  0x08, 0x0, 0x0   
003714   0201     mulwf   0x01, 0x0        
003716   0104     movlb   0x4              
003718   0402     decf    0x02, 0x0, 0x0   
00371a   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
00371c   4020     rrncf   0x20, 0x0, 0x0   
00371e   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
003720   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
003722   0101     movlb   0x1              
003724   0101     movlb   0x1              
003726   0101     movlb   0x1              
003728   0202     mulwf   0x02, 0x0        
00372a   0202     mulwf   0x02, 0x0        
00372c   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
00372e   0000     nop                      
003730   0000     nop                      
003732   0404     decf    0x04, 0x0, 0x0   
003734   0304     mulwf   0x04, 0x1        
003736   0303     mulwf   0x03, 0x1        
003738   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
00373a   0303     mulwf   0x03, 0x1        
00373c   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _libdevice_descriptor:
00373e   0112     dw      0x0112           	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
003740   0200     mulwf   0x00, 0x0        
003742   0002     dw      0x0002           
003744   4000     rrncf   0x00, 0x0, 0x0   
003746   04d8     decf    0xd8, 0x0, 0x0   
003748   feab     dw      0xfeab           
00374a   0000     nop                      	DB	0x00, 0x00, 0x01, 0x02, 0x00, 0x01
00374c   0201     mulwf   0x01, 0x0        
00374e   0100     movlb   0x0              
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
003750   0209     mulwf   0x09, 0x0        	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x14, 0x09, 0x04, 0x00
003752   0043     dw      0x0043           
003754   0102     movlb   0x2              
003756   c000     dw      0xc000           
003758   0914     iorlw   0x14             
00375a   0004     clrwdt                   
00375c   0100     movlb   0x0              	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
00375e   0202     mulwf   0x02, 0x0        
003760   0001     halt                     
003762   2405     addwf   0x05, 0x0, 0x0   
003764   1000     iorwf   0x00, 0x0, 0x0   
003766   0401     decf    0x01, 0x0, 0x0   
003768   0224     mulwf   0x24, 0x0        	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
00376a   0500     decf    0x00, 0x0, 0x1   
00376c   0624     decf    0x24, 0x1, 0x0   
00376e   0100     movlb   0x0              
003770   2405     addwf   0x05, 0x0, 0x0   
003772   0001     halt                     
003774   0701     decf    0x01, 0x1, 0x1   	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
003776   8205     bsf     0x05, 0x1, 0x0   
003778   1003     iorwf   0x03, 0x0, 0x0   
00377a   0200     mulwf   0x00, 0x0        
00377c   0409     decf    0x09, 0x0, 0x0   
00377e   0001     halt                     
003780   0a02     xorlw   0x02             	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
003782   0000     nop                      
003784   0700     decf    0x00, 0x1, 0x1   
003786   0305     mulwf   0x05, 0x1        
003788   4002     rrncf   0x02, 0x0, 0x0   
00378a   0000     nop                      
00378c   0507     decf    0x07, 0x0, 0x1   	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
00378e   0283     mulwf   0x83, 0x0        
003790   0040     dw      0x0040           
003792   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _lang:
003794   0304     mulwf   0x04, 0x1        	DB	0x04, 0x03, 0x09, 0x04
003796   0409     decf    0x09, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _manu:
003798   0316     mulwf   0x16, 0x1        	DB	0x16, 0x03, 0x4a, 0x00, 0x50, 0x00, 0x20, 0x00, 0x4d, 0x00, 0x41, 0x00
00379a   004a     dw      0x004a           
00379c   0050     dw      0x0050           
00379e   0020     dw      0x0020           
0037a0   004d     dw      0x004d           
0037a2   0041     dw      0x0041           
0037a4   004e     dw      0x004e           	DB	0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x4e, 0x00, 0x20, 0x00
0037a6   0044     dw      0x0044           
0037a8   004f     dw      0x004f           
0037aa   004e     dw      0x004e           
0037ac   0020     dw      0x0020           
                                           ; ; Starting pCode block for Ival
                                           _prod:
0037ae   0312     mulwf   0x12, 0x1        	DB	0x12, 0x03, 0x50, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x75, 0x00
0037b0   0050     dw      0x0050           
0037b2   0069     dw      0x0069           
0037b4   006e     dw      0x006e           
0037b6   0067     dw      0x0067           
0037b8   0075     dw      0x0075           
0037ba   0069     dw      0x0069           	DB	0x69, 0x00, 0x6e, 0x00, 0x6f, 0x00
0037bc   006e     dw      0x006e           
0037be   006f     dw      0x006f           
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
0037c0   3794     rlcf    0x94, 0x1, 0x1   	DB	LOW(_lang), HIGH(_lang), UPPER(_lang), LOW(_manu), HIGH(_manu), UPPER(_manu), LOW(_prod), HIGH(_prod), UPPER(_prod)
0037c2   9800     bcf     0x00, 0x4, 0x0   
0037c4   0037     dw      0x0037           
0037c6   37ae     rlcf    0xae, 0x1, 0x1   
0037c8   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_0:
0037ca   0030     dw      0x0030           	DB	0x30, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
0037cc   0031     dw      0x0031           	DB	0x31, 0x00
                                           ; ; Starting pCode block
                                           ___str_2:
0037ce   0a66     xorlw   0x66             	DB	0x66, 0x0a, 0x00
0037d0   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_3:
0037d2   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x32
0037d4   7261     btg     0x61, 0x1, 0x0   
0037d6   206f     addwfc  0x6f, 0x0, 0x0   
0037d8   5355     movf    0x55, 0x1, 0x1   
0037da   2042     addwfc  0x42, 0x0, 0x0   
0037dc   3230     rrcf    0x30, 0x1, 0x0   
0037de   0a20     xorlw   0x20             	DB	0x20, 0x0a, 0x00
0037e0   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	14374 (0x3826) bytes (10.97%)
                                           ;           	 7187 (0x1c13) words
                                           ; udata size:	  794 (0x031a) bytes (44.31%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
