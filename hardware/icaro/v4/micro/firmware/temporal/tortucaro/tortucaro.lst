gplink-1.4.2 #1169 (Aug  3 2017)
Copyright (c) 1998-2015 gputils project
Listing File Generated: 2-8-2018  18:47:16
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.6.0 #9615 (Linux)
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	___uflags
                                           	global	_i
                                           	global	__cdc_buffer
                                           	global	_hidRxLen
                                           	global	_hidProtocol
                                           	global	_hidIdleRate
                                           	global	_HIDPostProcess
                                           	global	_deviceAddress
                                           	global	_loopvar
                                           	global	_timingindex
                                           	global	__cpu_clock_
                                           	global	_EnableUSBModule
                                           	global	_ProcessUSBTransactions
                                           	global	_ProcessCDCRequest
                                           	global	_CDCgets
                                           	global	_CDCInitEndpoint
                                           	global	__entry
                                           	global	__startup
                                           	global	_main
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timedivision
                                           	global	_mascaratotal
                                           	global	_timevalue
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_maxminpos
                                           	global	_CONTROL_LINE
                                           	global	_deviceState
                                           	global	_remoteWakeup
                                           	global	_selfPowered
                                           	global	_currentConfiguration
                                           	global	_ctrlTransferStage
                                           	global	_requestHandled
                                           	global	_outPtr
                                           	global	_inPtr
                                           	global	_wCount
                                           	global	_ep_bdt
                                           	global	_SetupPacket
                                           	global	_controlTransferBuffer
                                           	global	_CDCControlBuffer
                                           	global	_CDCRxBuffer
                                           	global	_CDCTxBuffer
                                           	global	_line_config
                                           	global	_zlp
                                           	global	_receivedbyte
                                           	global	_receivedbyte2
                                           	global	_rxstr
                                           	global	_rxstr2
                                           	global	_valor
                                           	global	_caracter
                                           	global	_System_readFlashMemory
                                           	global	_System_getCpuFrequency
                                           	global	_Delayms
                                           	global	_pinmode
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_toggle
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogreference
                                           	global	_analogread
                                           	global	_analogwrite_init
                                           	global	_analogwrite
                                           	global	_IO_init
                                           	global	_IO_digital
                                           	global	_ProcessStandardRequest
                                           	global	_InDataStage
                                           	global	_OutDataStage
                                           	global	_SetupStage
                                           	global	_WaitForSetupStage
                                           	global	_ProcessControlTransfer
                                           	global	_UnSuspend
                                           	global	_StartOfFrame
                                           	global	_Stall
                                           	global	_Suspend
                                           	global	_BusReset
                                           	global	_CDCputs
                                           	global	_CDCputc
                                           	global	_CDC_init
                                           	global	_CDC_interrupt
                                           	global	_digital
                                           	global	_leo_puerto
                                           	global	_l293d
                                           	global	_analogico
                                           	global	_puertob
                                           	global	_servos
                                           	global	_setup
                                           	global	_comparo
                                           	global	_loop
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_libdevice_descriptor
                                           	global	_libconfiguration_descriptor
                                           	global	_lang
                                           	global	_manu
                                           	global	_prod
                                           	global	_libstring_descriptor
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget1
                                           	extern	__gptrput1
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_stack_end
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	__divslong
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	_delay100tcy
                                           	extern	_x_ftoa
                                           	extern	_strcat
                                           	extern	_strlen
                                           	extern	___uint2fs
                                           	extern	_cinit
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _CONTROL_LINE	db	0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           ___uflags	db	0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_tortucaro_0	udata
                                           __cpu_clock_	res	4
                                           
                                           udata_tortucaro_1	udata
                                           _timingindex	res	1
                                           
                                           udata_tortucaro_2	udata
                                           _loopvar	res	1
                                           
                                           udata_tortucaro_3	udata
                                           _deviceAddress	res	1
                                           
                                           udata_tortucaro_4	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_tortucaro_5	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_tortucaro_6	udata
                                           _hidProtocol	res	1
                                           
                                           udata_tortucaro_7	udata
                                           _hidRxLen	res	1
                                           
                                           udata_tortucaro_8	udata
                                           __cdc_buffer	res	64
                                           
                                           udata_tortucaro_9	udata
                                           _i	res	1
                                           
                                           udata_tortucaro_10	udata
                                           _servovalues	res	30
                                           
                                           udata_tortucaro_11	udata
                                           _maxminpos	res	60
                                           
                                           udata_tortucaro_12	udata
                                           _activatedservos	res	5
                                           
                                           udata_tortucaro_13	udata
                                           _ServosPulseDown_timingindex_1_28	res	1
                                           
                                           udata_tortucaro_14	udata
                                           _timings	res	150
                                           
                                           udata_tortucaro_15	udata
                                           _timevalue	res	30
                                           
                                           udata_tortucaro_16	udata
                                           _SortServoTimings_t_1_32	res	1
                                           
                                           udata_tortucaro_17	udata
                                           _SortServoTimings_totalservos_1_32	res	1
                                           
                                           udata_tortucaro_18	udata
                                           _SortServoTimings_numservos_1_32	res	1
                                           
                                           udata_tortucaro_19	udata
                                           _SortServoTimings_s_1_32	res	1
                                           
                                           udata_tortucaro_20	udata
                                           _mascaratotal	res	5
                                           
                                           udata_tortucaro_21	udata
                                           _requestHandled	res	1
                                           
                                           udata_tortucaro_22	udata
                                           _outPtr	res	3
                                           
                                           udata_tortucaro_23	udata
                                           _wCount	res	2
                                           
                                           udata_tortucaro_24	udata
                                           _inPtr	res	3
                                           
                                           udata_tortucaro_25	udata
                                           _selfPowered	res	1
                                           
                                           udata_tortucaro_26	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_tortucaro_27	udata
                                           _deviceState	res	1
                                           
                                           udata_tortucaro_28	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_tortucaro_29	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_tortucaro_30	udata
                                           _line_config	res	7
                                           
                                           udata_tortucaro_31	udata
                                           _zlp	res	8
                                           
                                           udata_tortucaro_32	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_tortucaro_33	udata
                                           _caracter	res	2
                                           
                                           udata_tortucaro_34	udata
                                           _receivedbyte	res	1
                                           
                                           udata_tortucaro_35	udata
                                           _receivedbyte2	res	1
                                           
                                           udata_tortucaro_36	udata
                                           _analogico_chaine_1_236	res	0
                                           
                                           
                                           ustat_tortucaro_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_tortucaro___entry	code	0X000C00
                                           __entry:
000c00   efdb     goto    0x0049b6         	goto	__startup
000c02   f024
                                           	
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_tortucaro_ivec_0x1_high_priority_isr	code	0X000C08
                                           ivec_0x1_high_priority_isr:
000c08   efc9     goto    0x005192         	GOTO	_high_priority_isr
000c0a   f028
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_tortucaro_ivec_0x2_low_priority_isr	code	0X000C18
                                           ivec_0x2_low_priority_isr:
000c18   ef06     goto    0x00520c         	GOTO	_low_priority_isr
000c1a   f029
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_tortucaro__main	code
                                           _main:
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	if (OSCCONbits.SCS > 0x01)
0056ce   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
0056d0   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0056d2   0f80     addlw   0x80             	ADDLW	0x80
0056d4   0f7e     addlw   0x7e             	ADDLW	0x7e
0056d6   e302     bnc     0x0056dc         	BNC	_01810_DS_
                                           _01806_DS_:
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	while (!OSCCONbits.IOFS);
0056d8   a4d3     btfss   0xd3, 0x2, 0x0   	BTFSS	_OSCCONbits, 2
0056da   d7fe     bra     0x0056d8         	BRA	_01806_DS_
                                           _01810_DS_:
                                           ;	.line	245; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	IO_init();
0056dc   eca9     call    0x005752, 0x0call    0x005752, 0x0 	CALL	_IO_init
0056de   f02b
                                           ;	.line	246; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	IO_digital();
0056e0   ec06     call    0x000c0c, 0x0call    0x000c0c, 0x0 	CALL	_IO_digital
0056e2   f006
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	CDC_init();
0056e4   ecd8     call    0x004bb0, 0x0call    0x004bb0, 0x0 	CALL	_CDC_init
0056e6   f025
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	analog_init();
0056e8   ec4b     call    0x005896, 0x0call    0x005896, 0x0 	CALL	_analog_init
0056ea   f02c
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	servos_init();
0056ec   ec86     call    0x004b0c, 0x0call    0x004b0c, 0x0 	CALL	_servos_init
0056ee   f025
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	setup();
0056f0   ec2a     call    0x004854, 0x0call    0x004854, 0x0 	CALL	_setup
0056f2   f024
                                           _01812_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	loop();
0056f4   ec4e     call    0x00569c, 0x0call    0x00569c, 0x0 	CALL	_loop
0056f6   f02b
0056f8   d7fd     bra     0x0056f4         	BRA	_01812_DS_
0056fa   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__low_priority_isr	code
                                           _low_priority_isr:
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	void low_priority_isr(void) __interrupt 2
00520c   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
00520e   ffe5
005210   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
005212   ffe5
005214   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005216   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
005218   ffe5
00521a   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
00521c   ffe5
00521e   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
005220   ffe5
005222   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
005224   ffe5
005226   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
005228   ffe5
00522a   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
00522c   ffe5
00522e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005230   ffe5
005232   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005234   ffd9
005236   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
005238   ffe5
00523a   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
00523c   ffe5
00523e   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
005240   ffe5
005242   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
005244   ffe5
                                           	
005246   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
005248   fff5
00524a   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
00524c   fff8
00524e   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
005250   fff7
005252   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
005254   fff6
                                           	
005256   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005258   ffd9
00525a   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
00525c   fffb
00525e   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
005260   fffa
005262   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
005264   ffea
005266   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
005268   ffe9
00526a   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
00526c   fff4
00526e   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
005270   fff3
005272   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
005274   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
005276   ffe0
005278   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
00527a   ffd8
00527c   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__high_priority_isr	code
                                           _high_priority_isr:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	void high_priority_isr(void) __interrupt 1
005192   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
005194   ffe5
005196   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
005198   ffe5
00519a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00519c   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00519e   ffe5
0051a0   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
0051a2   ffe5
0051a4   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
0051a6   ffe5
0051a8   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
0051aa   ffe5
0051ac   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
0051ae   ffe5
0051b0   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
0051b2   ffe5
0051b4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0051b6   ffe5
0051b8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0051ba   ffd9
0051bc   cff6     movff   0xff6, 0xfe5     	MOVFF	_TBLPTRL, POSTDEC1
0051be   ffe5
0051c0   cff7     movff   0xff7, 0xfe5     	MOVFF	_TBLPTRH, POSTDEC1
0051c2   ffe5
0051c4   cff8     movff   0xff8, 0xfe5     	MOVFF	_TBLPTRU, POSTDEC1
0051c6   ffe5
0051c8   cff5     movff   0xff5, 0xfe5     	MOVFF	_TABLAT, POSTDEC1
0051ca   ffe5
                                           	
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	CDC_interrupt();
0051cc   ec42     call    0x005884, 0x0call    0x005884, 0x0 	CALL	_CDC_interrupt
0051ce   f02c
                                           ;	.line	477; /home/vbasel/.icaro/v4/firmware/source/tortucaro/tortucaro.c	servos_interrupt();
0051d0   ec0b     call    0x005616, 0x0call    0x005616, 0x0 	CALL	_servos_interrupt
0051d2   f02b
0051d4   cfe4     movff   0xfe4, 0xff5     	MOVFF	PREINC1, _TABLAT
0051d6   fff5
0051d8   cfe4     movff   0xfe4, 0xff8     	MOVFF	PREINC1, _TBLPTRU
0051da   fff8
0051dc   cfe4     movff   0xfe4, 0xff7     	MOVFF	PREINC1, _TBLPTRH
0051de   fff7
0051e0   cfe4     movff   0xfe4, 0xff6     	MOVFF	PREINC1, _TBLPTRL
0051e2   fff6
                                           	
0051e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0051e6   ffd9
0051e8   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
0051ea   fffb
0051ec   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
0051ee   fffa
0051f0   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
0051f2   ffea
0051f4   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
0051f6   ffe9
0051f8   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
0051fa   fff4
0051fc   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
0051fe   fff3
005200   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
005202   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
005204   ffe0
005206   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
005208   ffd8
00520a   0010     retfie  0x0              	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro___startup	code
                                           __startup:
                                           	;	Initialize the stack pointer
0049b6   ee17     lfsr    0x1, 0x7ff       	lfsr	1, _stack_end
0049b8   f0ff
0049ba   ee27     lfsr    0x2, 0x7ff       	lfsr	2, _stack_end
0049bc   f0ff
                                           	;	1st silicon does not do this on POR
0049be   6af8     clrf    0xf8, 0x0        	clrf	_TBLPTRU, 0
                                           	;	Initialize the flash memory access configuration.
                                           	;	This is harmless for non-flash devices, so we do it on all parts.
0049c0   8ea6     bsf     0xa6, 0x7, 0x0   	bsf	0xa6, 7, 0 ; EECON1.EEPGD = 1, TBLPTR accesses program memory
0049c2   9ca6     bcf     0xa6, 0x6, 0x0   	bcf	0xa6, 6, 0 ; EECON1.CFGS = 0, TBLPTR accesses program memory
                                           	;	Load FSR0 with top of RAM.
0049c4   0ebf     movlw   0xbf             	movlw	0xbf
0049c6   6ee9     movwf   0xe9, 0x0        	movwf	_FSR0L, 0
0049c8   0e0e     movlw   0x0e             	movlw	0x0e
0049ca   6eea     movwf   0xea, 0x0        	movwf	_FSR0H, 0
                                           	;	Place 0xff at address 0x00 as a sentinel.
0049cc   6800     setf    0x00, 0x0        	setf	0x00, 0
                                           clear_loop:
0049ce   6aed     clrf    0xed, 0x0        	clrf	_POSTDEC0, 0
0049d0   5000     movf    0x00, 0x0, 0x0   	movf	0x00, w, 0
0049d2   e1fd     bnz     0x0049ce         	bnz	clear_loop
                                           	;	TBLPTR = &cinit
0049d4   0eb6     movlw   0xb6             	movlw	low(_cinit)
0049d6   6ef6     movwf   0xf6, 0x0        	movwf	_TBLPTRL, 0
0049d8   0e58     movlw   0x58             	movlw	high(_cinit)
0049da   6ef7     movwf   0xf7, 0x0        	movwf	_TBLPTRH, 0
0049dc   0e00     movlw   0x00             	movlw	upper(_cinit)
0049de   6ef8     movwf   0xf8, 0x0        	movwf	_TBLPTRU, 0
                                           	;	0x05 = cinit.num_init
0049e0   0009     tblrd*+                  	tblrd*+
0049e2   cff5     movff   0xff5, 0x005     	movff	_TABLAT, 0x05
0049e4   f005
0049e6   0009     tblrd*+                  	tblrd*+
0049e8   cff5     movff   0xff5, 0x006     	movff	_TABLAT, (0x05 + 1)
0049ea   f006
                                           	;	while (0x05)
0049ec   d034     bra     0x004a56         	bra	entry_loop_dec
                                           entry_loop:
                                           	;	Count down so we only have to look up the data in _cinit once.
                                           	;	At this point we know that TBLPTR points to the top of the current
                                           	;	entry in _cinit, so we can just start reading the from, to, and
                                           	;	size values.
                                           	;	Read the source address low.
                                           	;	0x00 = 0x07 ->from;
0049ee   0009     tblrd*+                  	tblrd*+
0049f0   cff5     movff   0xff5, 0x000     	movff	_TABLAT, 0x00
0049f2   f000
                                           	;	source address high
0049f4   0009     tblrd*+                  	tblrd*+
0049f6   cff5     movff   0xff5, 0x001     	movff	_TABLAT, (0x00 + 1)
0049f8   f001
                                           	;	source address upper
0049fa   0009     tblrd*+                  	tblrd*+
0049fc   cff5     movff   0xff5, 0x002     	movff	_TABLAT, (0x00 + 2)
0049fe   f002
                                           	;	Skip a byte since it is stored as a 32bit int.
004a00   0009     tblrd*+                  	tblrd*+
                                           	;	Read the destination address directly into FSR0
                                           	;	destination address low.
                                           	;	FSR0 = (unsigned short)0x07 ->to;
004a02   0009     tblrd*+                  	tblrd*+
004a04   cff5     movff   0xff5, 0xfe9     	movff	_TABLAT, _FSR0L
004a06   ffe9
                                           	;	destination address high
004a08   0009     tblrd*+                  	tblrd*+
004a0a   cff5     movff   0xff5, 0xfea     	movff	_TABLAT, _FSR0H
004a0c   ffea
                                           	;	Skip two bytes since it is stored as a 32bit int.
004a0e   0009     tblrd*+                  	tblrd*+
004a10   0009     tblrd*+                  	tblrd*+
                                           	;	Read the size of data to transfer to destination address.
                                           	;	0x03 = (unsigned short)0x07 ->size;
004a12   0009     tblrd*+                  	tblrd*+
004a14   cff5     movff   0xff5, 0x003     	movff	_TABLAT, 0x03
004a16   f003
004a18   0009     tblrd*+                  	tblrd*+
004a1a   cff5     movff   0xff5, 0x004     	movff	_TABLAT, (0x03 + 1)
004a1c   f004
                                           	;	Skip two bytes since it is stored as a 32bit int.
004a1e   0009     tblrd*+                  	tblrd*+
004a20   0009     tblrd*+                  	tblrd*+
                                           	;	0x00 = 0x07 ->from;
                                           	;	FSR0 = (unsigned short)0x07 ->to;
                                           	;	0x03 = (unsigned short)0x07 ->size;
                                           	;	The table pointer now points to the next entry. Save it
                                           	;	off since we will be using the table pointer to do the copying
                                           	;	for the entry.
                                           	;	0x07 = TBLPTR
004a22   cff6     movff   0xff6, 0x007     	movff	_TBLPTRL, 0x07
004a24   f007
004a26   cff7     movff   0xff7, 0x008     	movff	_TBLPTRH, (0x07 + 1)
004a28   f008
004a2a   cff8     movff   0xff8, 0x009     	movff	_TBLPTRU, (0x07 + 2)
004a2c   f009
                                           	;	Now assign the source address to the table pointer.
                                           	;	TBLPTR = 0x00
004a2e   c000     movff   0x000, 0xff6     	movff	0x00, _TBLPTRL
004a30   fff6
004a32   c001     movff   0x001, 0xff7     	movff	(0x00 + 1), _TBLPTRH
004a34   fff7
004a36   c002     movff   0x002, 0xff8     	movff	(0x00 + 2), _TBLPTRU
004a38   fff8
004a3a   d003     bra     0x004a42         	bra	copy_loop_dec
                                           copy_loop:
004a3c   0009     tblrd*+                  	tblrd*+
004a3e   cff5     movff   0xff5, 0xfee     	movff	_TABLAT, _POSTINC0
004a40   ffee
                                           copy_loop_dec:
                                           	;	while (--0x03);
                                           	;	Decrement and test the byte counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
004a42   0603     decf    0x03, 0x1, 0x0   	decf	0x03, f, 0
004a44   e2fb     bc      0x004a3c         	bc	copy_loop
004a46   0604     decf    0x04, 0x1, 0x0   	decf	(0x03 + 1), f, 0
004a48   e2f9     bc      0x004a3c         	bc	copy_loop
                                           	;	Restore the table pointer for the next entry.
                                           	;	TBLPTR = 0x07
004a4a   c007     movff   0x007, 0xff6     	movff	0x07, _TBLPTRL
004a4c   fff6
004a4e   c008     movff   0x008, 0xff7     	movff	(0x07 + 1), _TBLPTRH
004a50   fff7
004a52   c009     movff   0x009, 0xff8     	movff	(0x07 + 2), _TBLPTRU
004a54   fff8
                                           entry_loop_dec:
                                           	;	while (--0x05);
                                           	;	Decrement and test the entry counter.
                                           	;	The cycle ends when the value of counter reaches the -1.
004a56   0605     decf    0x05, 0x1, 0x0   	decf	0x05, f, 0
004a58   e2ca     bc      0x0049ee         	bc	entry_loop
004a5a   0606     decf    0x06, 0x1, 0x0   	decf	(0x05 + 1), f, 0
004a5c   e2c8     bc      0x0049ee         	bc	entry_loop
                                           	
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/tortucaro/crt0iz.c	main ();
004a5e   ec67     call    0x0056ce, 0x0call    0x0056ce, 0x0 	CALL	_main
004a60   f02b
                                           lockup:
                                           	;	Returning from main will lock up.
004a62   d7ff     bra     0x004a62         	bra	lockup
                                           	
                                           ; ; Starting pCode block
                                           S_tortucaro__loop	code
                                           _loop:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void loop()
00569c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00569e   ffe5
                                           _01780_DS_:
0056a0   0101     movlb   0x1              	BANKSEL	_valor
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTD=valor;
0056a2   5184     movf    0x84, 0x0, 0x1   	MOVF	_valor, W, B
0056a4   6e83     movwf   0x83, 0x0        	MOVWF	_PORTD
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
0056a6   ec42     call    0x005484, 0x0call    0x005484, 0x0 	CALL	_leo_puerto
0056a8   f02a
0056aa   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0056ac   f001
0056ae   0a01     xorlw   0x01             	XORLW	0x01
0056b0   e102     bnz     0x0056b6         	BNZ	_01790_DS_
0056b2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0056b4   e001     bz      0x0056b8         	BZ	_01791_DS_
                                           _01790_DS_:
0056b6   d002     bra     0x0056bc         	BRA	_01778_DS_
                                           _01791_DS_:
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	comparo();
0056b8   ec4a     call    0x005094, 0x0call    0x005094, 0x0 	CALL	_comparo
0056ba   f028
                                           _01778_DS_:
0056bc   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	259; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0056be   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0056c0   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
0056c2   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0056c4   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
0056c6   d7ec     bra     0x0056a0         	BRA	_01780_DS_
0056c8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0056ca   f001
0056cc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__leo_puerto	code
                                           _leo_puerto:
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int leo_puerto()
005484   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005486   ffe5
005488   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00548a   ffe5
                                           _01767_DS_:
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	while ((receivedbyte=CDCgets(rxstr))==0);
00548c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00548e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005490   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr)
005492   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005494   0e04     movlw   0x04             	MOVLW	LOW(_rxstr)
005496   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005498   ec18     call    0x003e30, 0x0call    0x003e30, 0x0 	CALL	_CDCgets
00549a   f01f
00549c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00549e   0e03     movlw   0x03             	MOVLW	0x03
0054a0   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
0054a2   c000     movff   0x000, 0x1ae     	MOVFF	r0x00, _receivedbyte
0054a4   f1ae
0054a6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0054a8   e0f1     bz      0x00548c         	BZ	_01767_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	rxstr[receivedbyte]=0;
0054aa   0e04     movlw   0x04             	MOVLW	LOW(_rxstr)
0054ac   0101     movlb   0x1              	BANKSEL	_receivedbyte
0054ae   25ae     addwf   0xae, 0x0, 0x1   	ADDWF	_receivedbyte, W, B
0054b0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0054b2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0054b4   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr)
0054b6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0054b8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0054ba   ffe9
0054bc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0054be   ffea
0054c0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte>0)
0054c2   51ae     movf    0xae, 0x0, 0x1   	MOVF	_receivedbyte, W, B
0054c4   e007     bz      0x0054d4         	BZ	_01771_DS_
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=rxstr[0];
0054c6   c104     movff   0x104, 0x193     	MOVFF	_rxstr, _caracter
0054c8   f193
0054ca   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
0054cc   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return 1;
0054ce   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0054d0   0e01     movlw   0x01             	MOVLW	0x01
0054d2   d002     bra     0x0054d8         	BRA	_01772_DS_
                                           _01771_DS_:
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return 0;
0054d4   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
0054d6   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _01772_DS_:
0054d8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0054da   f001
0054dc   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0054de   f000
0054e0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__comparo	code
                                           _comparo:
005094   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='b')
005096   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005098   0a62     xorlw   0x62             	XORLW	0x62
00509a   e102     bnz     0x0050a0         	BNZ	_01751_DS_
                                           ; removed redundant BANKSEL
00509c   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00509e   e001     bz      0x0050a2         	BZ	_01752_DS_
                                           _01751_DS_:
0050a0   d00c     bra     0x0050ba         	BRA	_01720_DS_
                                           _01752_DS_:
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("icaro USB 02 \n",14);
0050a2   0e0e     movlw   0x0e             	MOVLW	0x0e
0050a4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050a6   0e00     movlw   0x00             	MOVLW	UPPER(___str_3)
0050a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050aa   0e39     movlw   0x39             	MOVLW	HIGH(___str_3)
0050ac   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050ae   0e1c     movlw   0x1c             	MOVLW	LOW(___str_3)
0050b0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0050b2   ec31     call    0x004062, 0x0call    0x004062, 0x0 	CALL	_CDCputs
0050b4   f020
0050b6   0e04     movlw   0x04             	MOVLW	0x04
0050b8   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01720_DS_:
0050ba   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	208; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='m')
0050bc   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0050be   0a6d     xorlw   0x6d             	XORLW	0x6d
0050c0   e102     bnz     0x0050c6         	BNZ	_01753_DS_
                                           ; removed redundant BANKSEL
0050c2   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0050c4   e001     bz      0x0050c8         	BZ	_01754_DS_
                                           _01753_DS_:
0050c6   d002     bra     0x0050cc         	BRA	_01722_DS_
                                           _01754_DS_:
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	servos();
0050c8   ec2b     call    0x004456, 0x0call    0x004456, 0x0 	CALL	_servos
0050ca   f022
                                           _01722_DS_:
0050cc   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='e')
0050ce   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0050d0   0a65     xorlw   0x65             	XORLW	0x65
0050d2   e102     bnz     0x0050d8         	BNZ	_01755_DS_
                                           ; removed redundant BANKSEL
0050d4   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0050d6   e001     bz      0x0050da         	BZ	_01756_DS_
                                           _01755_DS_:
0050d8   d002     bra     0x0050de         	BRA	_01724_DS_
                                           _01756_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	analogico();
0050da   ecb5     call    0x00396a, 0x0call    0x00396a, 0x0 	CALL	_analogico
0050dc   f01c
                                           _01724_DS_:
0050de   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	216; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='l')
0050e0   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0050e2   0a6c     xorlw   0x6c             	XORLW	0x6c
0050e4   e102     bnz     0x0050ea         	BNZ	_01757_DS_
                                           ; removed redundant BANKSEL
0050e6   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0050e8   e001     bz      0x0050ec         	BZ	_01758_DS_
                                           _01757_DS_:
0050ea   d002     bra     0x0050f0         	BRA	_01726_DS_
                                           _01758_DS_:
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	l293d();
0050ec   ec09     call    0x004612, 0x0call    0x004612, 0x0 	CALL	_l293d
0050ee   f023
                                           _01726_DS_:
0050f0   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='d')
0050f2   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
0050f4   0a64     xorlw   0x64             	XORLW	0x64
0050f6   e102     bnz     0x0050fc         	BNZ	_01759_DS_
                                           ; removed redundant BANKSEL
0050f8   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0050fa   e001     bz      0x0050fe         	BZ	_01760_DS_
                                           _01759_DS_:
0050fc   d002     bra     0x005102         	BRA	_01728_DS_
                                           _01760_DS_:
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	digital();
0050fe   ec3b     call    0x004276, 0x0call    0x004276, 0x0 	CALL	_digital
005100   f021
                                           _01728_DS_:
005102   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(caracter=='s')
005104   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005106   0a73     xorlw   0x73             	XORLW	0x73
005108   e102     bnz     0x00510e         	BNZ	_01761_DS_
                                           ; removed redundant BANKSEL
00510a   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00510c   e001     bz      0x005110         	BZ	_01762_DS_
                                           _01761_DS_:
00510e   d002     bra     0x005114         	BRA	_01731_DS_
                                           _01762_DS_:
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	puertob();
005110   ec94     call    0x005728, 0x0call    0x005728, 0x0 	CALL	_puertob
005112   f02b
                                           _01731_DS_:
005114   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__setup	code
                                           _setup:
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	TRISB=0;
004854   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(21,INPUT);
004856   0e01     movlw   0x01             	MOVLW	0x01
004858   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00485a   0e15     movlw   0x15             	MOVLW	0x15
00485c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00485e   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004860   f013
004862   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004864   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	184; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(22,INPUT);
004866   0e01     movlw   0x01             	MOVLW	0x01
004868   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00486a   0e16     movlw   0x16             	MOVLW	0x16
00486c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00486e   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004870   f013
004872   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004874   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(23,INPUT);
004876   0e01     movlw   0x01             	MOVLW	0x01
004878   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00487a   0e17     movlw   0x17             	MOVLW	0x17
00487c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00487e   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004880   f013
004882   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004884   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	186; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(24,INPUT);
004886   0e01     movlw   0x01             	MOVLW	0x01
004888   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00488a   0e18     movlw   0x18             	MOVLW	0x18
00488c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00488e   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
004890   f013
004892   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004894   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(25,OUTPUT);
004896   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004898   0e19     movlw   0x19             	MOVLW	0x19
00489a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00489c   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
00489e   f013
0048a0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0048a2   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	188; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(26,OUTPUT);
0048a4   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0048a6   0e1a     movlw   0x1a             	MOVLW	0x1a
0048a8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048aa   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
0048ac   f013
0048ae   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0048b0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(27,OUTPUT);
0048b2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0048b4   0e1b     movlw   0x1b             	MOVLW	0x1b
0048b6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048b8   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
0048ba   f013
0048bc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0048be   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	pinmode(28,OUTPUT);
0048c0   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0048c2   0e1c     movlw   0x1c             	MOVLW	0x1c
0048c4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048c6   ec38     call    0x002670, 0x0call    0x002670, 0x0 	CALL	_pinmode
0048c8   f013
0048ca   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
0048cc   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(8);
0048ce   0e08     movlw   0x08             	MOVLW	0x08
0048d0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048d2   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
0048d4   f015
0048d6   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(9);
0048d8   0e09     movlw   0x09             	MOVLW	0x09
0048da   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048dc   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
0048de   f015
0048e0   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(10);
0048e2   0e0a     movlw   0x0a             	MOVLW	0x0a
0048e4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048e6   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
0048e8   f015
0048ea   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(11);
0048ec   0e0b     movlw   0x0b             	MOVLW	0x0b
0048ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048f0   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
0048f2   f015
0048f4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoAttach(12);
0048f6   0e0c     movlw   0x0c             	MOVLW	0x0c
0048f8   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0048fa   ec75     call    0x002aea, 0x0call    0x002aea, 0x0 	CALL	_ServoAttach
0048fc   f015
0048fe   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTD=0;
004900   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTB=0;
004902   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
004904   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos	code
                                           _servos:
                                           ;	.line	141; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void servos()
004456   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004458   ffe5
00445a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00445c   ffe5
00445e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004460   ffe5
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int val=0;
004462   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
004464   ec42     call    0x005484, 0x0call    0x005484, 0x0 	CALL	_leo_puerto
004466   f02a
004468   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
00446a   f003
00446c   0a01     xorlw   0x01             	XORLW	0x01
00446e   e102     bnz     0x004474         	BNZ	_01703_DS_
004470   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004472   e001     bz      0x004476         	BZ	_01704_DS_
                                           _01703_DS_:
004474   d03b     bra     0x0044ec         	BRA	_01686_DS_
                                           _01704_DS_:
004476   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
004478   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00447a   0f80     addlw   0x80             	ADDLW	0x80
00447c   0f80     addlw   0x80             	ADDLW	0x80
00447e   e102     bnz     0x004484         	BNZ	_01705_DS_
004480   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
004482   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01705_DS_:
004484   e333     bnc     0x0044ec         	BNC	_01686_DS_
004486   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
004488   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00448a   0f80     addlw   0x80             	ADDLW	0x80
00448c   0f80     addlw   0x80             	ADDLW	0x80
00448e   e102     bnz     0x004494         	BNZ	_01706_DS_
004490   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
004492   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01706_DS_:
004494   e22b     bc      0x0044ec         	BC	_01686_DS_
004496   0ecf     movlw   0xcf             	MOVLW	0xcf
004498   0101     movlb   0x1              	BANKSEL	_caracter
00449a   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
00449c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00449e   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0044a0   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0044a2   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0044a4   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0044a6   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0044a8   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0044aa   0bfc     andlw   0xfc             	ANDLW	0xfc
0044ac   0fbc     addlw   0xbc             	ADDLW	LOW(_01707_DS_)
0044ae   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0044b0   0e44     movlw   0x44             	MOVLW	HIGH(_01707_DS_)
0044b2   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0044b4   0e00     movlw   0x00             	MOVLW	UPPER(_01707_DS_)
0044b6   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0044b8   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0044ba   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01707_DS_:
0044bc   ef68     goto    0x0044d0         	GOTO	_01679_DS_
0044be   f022
0044c0   ef6b     goto    0x0044d6         	GOTO	_01680_DS_
0044c2   f022
0044c4   ef6e     goto    0x0044dc         	GOTO	_01681_DS_
0044c6   f022
0044c8   ef71     goto    0x0044e2         	GOTO	_01682_DS_
0044ca   f022
0044cc   ef74     goto    0x0044e8         	GOTO	_01683_DS_
0044ce   f022
                                           _01679_DS_:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV1;
0044d0   0e0a     movlw   0x0a             	MOVLW	0x0a
0044d2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0044d4   d00b     bra     0x0044ec         	BRA	_01686_DS_
                                           _01680_DS_:
                                           ;	.line	155; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV2;
0044d6   0e0b     movlw   0x0b             	MOVLW	0x0b
0044d8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	156; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0044da   d008     bra     0x0044ec         	BRA	_01686_DS_
                                           _01681_DS_:
                                           ;	.line	158; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV3;
0044dc   0e0c     movlw   0x0c             	MOVLW	0x0c
0044de   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0044e0   d005     bra     0x0044ec         	BRA	_01686_DS_
                                           _01682_DS_:
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV4;
0044e2   0e09     movlw   0x09             	MOVLW	0x09
0044e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	162; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0044e6   d002     bra     0x0044ec         	BRA	_01686_DS_
                                           _01683_DS_:
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_SRV5;
0044e8   0e08     movlw   0x08             	MOVLW	0x08
0044ea   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01686_DS_:
0044ec   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
0044ee   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
0044f0   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
0044f2   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
0044f4   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	170; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
0044f6   ec42     call    0x005484, 0x0call    0x005484, 0x0 	CALL	_leo_puerto
0044f8   f02a
0044fa   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0044fc   f003
0044fe   0a01     xorlw   0x01             	XORLW	0x01
004500   e102     bnz     0x004506         	BNZ	_01708_DS_
004502   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004504   e001     bz      0x004508         	BZ	_01709_DS_
                                           _01708_DS_:
004506   d00f     bra     0x004526         	BRA	_01688_DS_
                                           _01709_DS_:
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	resultado = caracter;
004508   c193     movff   0x193, 0x002     	MOVFF	_caracter, r0x02
00450a   f002
00450c   c194     movff   0x194, 0x003     	MOVFF	(_caracter + 1), r0x03
00450e   f003
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	ServoWrite(val,resultado);
004510   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004512   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004514   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004516   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004518   ec9c     call    0x005538, 0x0call    0x005538, 0x0 	CALL	_ServoWrite
00451a   f02a
00451c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00451e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004520   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
004522   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
004524   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
                                           _01688_DS_:
004526   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
004528   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	return;
00452a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00452c   f003
00452e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004530   f002
004532   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004534   f000
004536   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__puertob	code
                                           _puertob:
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void puertob()
005728   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00572a   ffe5
                                           ;	.line	133; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
00572c   ec42     call    0x005484, 0x0call    0x005484, 0x0 	CALL	_leo_puerto
00572e   f02a
005730   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
005732   f001
005734   0a01     xorlw   0x01             	XORLW	0x01
005736   e102     bnz     0x00573c         	BNZ	_01673_DS_
005738   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00573a   e001     bz      0x00573e         	BZ	_01674_DS_
                                           _01673_DS_:
00573c   d007     bra     0x00574c         	BRA	_01668_DS_
                                           _01674_DS_:
00573e   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	136; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	PORTB=caracter;
005740   5193     movf    0x93, 0x0, 0x1   	MOVF	_caracter, W, B
005742   6e81     movwf   0x81, 0x0        	MOVWF	_PORTB
                                           ; removed redundant BANKSEL
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
005744   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
005746   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
005748   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	138; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
00574a   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           _01668_DS_:
00574c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00574e   f001
005750   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogico	code
                                           _analogico:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void analogico()
00396a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00396c   ffe5
00396e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003970   ffe5
003972   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003974   ffe5
003976   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003978   ffe5
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	unsigned int val=0;
00397a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01612_DS_:
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=CDCgets(rxstr2);
00397c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00397e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003980   0e01     movlw   0x01             	MOVLW	HIGH(_rxstr2)
003982   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003984   0e44     movlw   0x44             	MOVLW	LOW(_rxstr2)
003986   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003988   ec18     call    0x003e30, 0x0call    0x003e30, 0x0 	CALL	_CDCgets
00398a   f01f
00398c   0101     movlb   0x1              	BANKSEL	_receivedbyte2
00398e   6faf     movwf   0xaf, 0x1        	MOVWF	_receivedbyte2, B
003990   0e03     movlw   0x03             	MOVLW	0x03
003992   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	82; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (receivedbyte2>0)
003994   51af     movf    0xaf, 0x0, 0x1   	MOVF	_receivedbyte2, W, B
003996   e0f2     bz      0x00397c         	BZ	_01612_DS_
                                           ;	.line	84; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='1')
003998   c144     movff   0x144, 0x002     	MOVFF	_rxstr2, r0x02
00399a   f002
00399c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00399e   0a31     xorlw   0x31             	XORLW	0x31
0039a0   e102     bnz     0x0039a6         	BNZ	_01594_DS_
                                           ;	.line	86; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=13;
0039a2   0e0d     movlw   0x0d             	MOVLW	0x0d
0039a4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01594_DS_:
                                           ;	.line	88; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='2')
0039a6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039a8   0a32     xorlw   0x32             	XORLW	0x32
0039aa   e102     bnz     0x0039b0         	BNZ	_01596_DS_
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=14;
0039ac   0e0e     movlw   0x0e             	MOVLW	0x0e
0039ae   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01596_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='3')
0039b0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039b2   0a33     xorlw   0x33             	XORLW	0x33
0039b4   e102     bnz     0x0039ba         	BNZ	_01598_DS_
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=15;
0039b6   0e0f     movlw   0x0f             	MOVLW	0x0f
0039b8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01598_DS_:
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='4')
0039ba   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039bc   0a34     xorlw   0x34             	XORLW	0x34
0039be   e102     bnz     0x0039c4         	BNZ	_01600_DS_
                                           ;	.line	98; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=16;
0039c0   0e10     movlw   0x10             	MOVLW	0x10
0039c2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01600_DS_:
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='5')
0039c4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039c6   0a35     xorlw   0x35             	XORLW	0x35
0039c8   e102     bnz     0x0039ce         	BNZ	_01602_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=17;
0039ca   0e11     movlw   0x11             	MOVLW	0x11
0039cc   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01602_DS_:
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='6')
0039ce   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039d0   0a36     xorlw   0x36             	XORLW	0x36
0039d2   e102     bnz     0x0039d8         	BNZ	_01604_DS_
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=18;
0039d4   0e12     movlw   0x12             	MOVLW	0x12
0039d6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01604_DS_:
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='7')
0039d8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039da   0a37     xorlw   0x37             	XORLW	0x37
0039dc   e102     bnz     0x0039e2         	BNZ	_01606_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=19;
0039de   0e13     movlw   0x13             	MOVLW	0x13
0039e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01606_DS_:
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(rxstr2[0]=='8')
0039e2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0039e4   0a38     xorlw   0x38             	XORLW	0x38
0039e6   e102     bnz     0x0039ec         	BNZ	_01608_DS_
                                           ;	.line	114; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=20;
0039e8   0e14     movlw   0x14             	MOVLW	0x14
0039ea   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01608_DS_:
0039ec   0101     movlb   0x1              	BANKSEL	_receivedbyte2
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte2=0;
0039ee   6baf     clrf    0xaf, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	120; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	valor=analogread(val);
0039f0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0039f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0039f4   ec6c     call    0x004ed8, 0x0call    0x004ed8, 0x0 	CALL	_analogread
0039f6   f027
0039f8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0039fa   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
0039fc   f001
0039fe   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003a00   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a04   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a08   ecab     call    0x005356, 0x0call    0x005356, 0x0 	CALL	___uint2fs
003a0a   f029
003a0c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003a0e   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
003a10   f001
003a12   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
003a14   f002
003a16   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
003a18   f003
003a1a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
003a1c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	x_ftoa(valor,chaine,2,2);
003a1e   0e02     movlw   0x02             	MOVLW	0x02
003a20   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a22   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a24   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a26   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a28   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a2a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a2c   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003a2e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a30   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003a32   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a34   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003a36   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a38   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a3a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a3c   ec67     call    0x0028ce, 0x0call    0x0028ce, 0x0 	CALL	_x_ftoa
003a3e   f014
003a40   0e08     movlw   0x08             	MOVLW	0x08
003a42   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	122; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	strcat(chaine,"f\n");
003a44   0e00     movlw   0x00             	MOVLW	UPPER(___str_2)
003a46   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a48   0e39     movlw   0x39             	MOVLW	HIGH(___str_2)
003a4a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a4c   0e18     movlw   0x18             	MOVLW	LOW(___str_2)
003a4e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a50   0e80     movlw   0x80             	MOVLW	0x80
003a52   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a54   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a56   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a58   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a5a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a5c   ecb5     call    0x00436a, 0x0call    0x00436a, 0x0 	CALL	_strcat
003a5e   f021
003a60   0e06     movlw   0x06             	MOVLW	0x06
003a62   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	tam=strlen(chaine);
003a64   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003a66   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a68   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a6c   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a6e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a70   ec8b     call    0x005116, 0x0call    0x005116, 0x0 	CALL	_strlen
003a72   f028
003a74   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003a76   0e03     movlw   0x03             	MOVLW	0x03
003a78   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs(chaine,tam);
003a7a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003a7c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a7e   0e80     movlw   0x80             	MOVLW	0x80
003a80   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a82   0e01     movlw   0x01             	MOVLW	HIGH(_analogico_chaine_1_236)
003a84   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a86   0eb0     movlw   0xb0             	MOVLW	LOW(_analogico_chaine_1_236)
003a88   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003a8a   ec31     call    0x004062, 0x0call    0x004062, 0x0 	CALL	_CDCputs
003a8c   f020
003a8e   0e04     movlw   0x04             	MOVLW	0x04
003a90   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
003a92   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003a94   f003
003a96   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003a98   f002
003a9a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003a9c   f001
003a9e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003aa0   f000
003aa2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__l293d	code
                                           _l293d:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void l293d()
004612   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004614   ffe5
004616   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004618   ffe5
00461a   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00461c   ffe5
00461e   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004620   ffe5
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int val=0;
004622   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004624   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if(leo_puerto()==1)
004626   ec42     call    0x005484, 0x0call    0x005484, 0x0 	CALL	_leo_puerto
004628   f02a
00462a   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
00462c   f003
00462e   0a01     xorlw   0x01             	XORLW	0x01
004630   e102     bnz     0x004636         	BNZ	_01584_DS_
004632   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004634   e001     bz      0x004638         	BZ	_01585_DS_
                                           _01584_DS_:
004636   d042     bra     0x0046bc         	BRA	_01572_DS_
                                           _01585_DS_:
004638   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
00463a   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00463c   0f80     addlw   0x80             	ADDLW	0x80
00463e   0f80     addlw   0x80             	ADDLW	0x80
004640   e102     bnz     0x004646         	BNZ	_01586_DS_
004642   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
004644   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01586_DS_:
004646   e338     bnc     0x0046b8         	BNC	_01569_DS_
004648   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
00464a   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00464c   0f80     addlw   0x80             	ADDLW	0x80
00464e   0f80     addlw   0x80             	ADDLW	0x80
004650   e102     bnz     0x004656         	BNZ	_01587_DS_
004652   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
004654   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01587_DS_:
004656   e230     bc      0x0046b8         	BC	_01569_DS_
004658   0ecf     movlw   0xcf             	MOVLW	0xcf
00465a   0101     movlb   0x1              	BANKSEL	_caracter
00465c   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
00465e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004660   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
004662   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
004664   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004666   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
004668   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00466a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00466c   0bfc     andlw   0xfc             	ANDLW	0xfc
00466e   0f7e     addlw   0x7e             	ADDLW	LOW(_01588_DS_)
004670   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004672   0e46     movlw   0x46             	MOVLW	HIGH(_01588_DS_)
004674   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
004676   0e00     movlw   0x00             	MOVLW	UPPER(_01588_DS_)
004678   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00467a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00467c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01588_DS_:
00467e   ef49     goto    0x004692         	GOTO	_01564_DS_
004680   f023
004682   ef4d     goto    0x00469a         	GOTO	_01565_DS_
004684   f023
004686   ef51     goto    0x0046a2         	GOTO	_01566_DS_
004688   f023
00468a   ef55     goto    0x0046aa         	GOTO	_01567_DS_
00468c   f023
00468e   ef59     goto    0x0046b2         	GOTO	_01568_DS_
004690   f023
                                           _01564_DS_:
                                           ;	.line	52; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AD;
004692   0e60     movlw   0x60             	MOVLW	0x60
004694   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004696   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004698   d011     bra     0x0046bc         	BRA	_01572_DS_
                                           _01565_DS_:
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_AT;
00469a   0e90     movlw   0x90             	MOVLW	0x90
00469c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00469e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	56; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046a0   d00d     bra     0x0046bc         	BRA	_01572_DS_
                                           _01566_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_IZ;
0046a2   0e40     movlw   0x40             	MOVLW	0x40
0046a4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0046a6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046a8   d009     bra     0x0046bc         	BRA	_01572_DS_
                                           _01567_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=ICR_MOTS_DE;
0046aa   0e20     movlw   0x20             	MOVLW	0x20
0046ac   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0046ae   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046b0   d005     bra     0x0046bc         	BRA	_01572_DS_
                                           _01568_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=0;
0046b2   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0046b4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0046b6   d002     bra     0x0046bc         	BRA	_01572_DS_
                                           _01569_DS_:
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	val=0;
0046b8   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0046ba   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _01572_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	valor=val;
0046bc   c000     movff   0x000, 0x184     	MOVFF	r0x00, _valor
0046be   f184
0046c0   c001     movff   0x001, 0x185     	MOVFF	r0x01, (_valor + 1)
0046c2   f185
0046c4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0046c6   f003
0046c8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0046ca   f002
0046cc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0046ce   f001
0046d0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0046d2   f000
0046d4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digital	code
                                           _digital:
                                           ;	.line	13; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	void digital()
004276   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004278   ffe5
00427a   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00427c   ffe5
00427e   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004280   ffe5
004282   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004284   ffe5
                                           ;	.line	15; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	int sens=0;
004286   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ;	.line	17; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (leo_puerto()==1)
004288   ec42     call    0x005484, 0x0call    0x005484, 0x0 	CALL	_leo_puerto
00428a   f02a
00428c   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
00428e   f003
004290   0a01     xorlw   0x01             	XORLW	0x01
004292   e102     bnz     0x004298         	BNZ	_01553_DS_
004294   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004296   e001     bz      0x00429a         	BZ	_01554_DS_
                                           _01553_DS_:
004298   d036     bra     0x004306         	BRA	_01535_DS_
                                           _01554_DS_:
00429a   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
                                           ;	.line	19; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	switch(caracter)
00429c   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
00429e   0f80     addlw   0x80             	ADDLW	0x80
0042a0   0f80     addlw   0x80             	ADDLW	0x80
0042a2   e102     bnz     0x0042a8         	BNZ	_01555_DS_
0042a4   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
0042a6   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01555_DS_:
0042a8   e32e     bnc     0x004306         	BNC	_01535_DS_
0042aa   0101     movlb   0x1              	BANKSEL	(_caracter + 1)
0042ac   5194     movf    0x94, 0x0, 0x1   	MOVF	(_caracter + 1), W, B
0042ae   0f80     addlw   0x80             	ADDLW	0x80
0042b0   0f80     addlw   0x80             	ADDLW	0x80
0042b2   e102     bnz     0x0042b8         	BNZ	_01556_DS_
0042b4   0e35     movlw   0x35             	MOVLW	0x35
                                           ; removed redundant BANKSEL
0042b6   5d93     subwf   0x93, 0x0, 0x1   	SUBWF	_caracter, W, B
                                           _01556_DS_:
0042b8   e226     bc      0x004306         	BC	_01535_DS_
0042ba   0ecf     movlw   0xcf             	MOVLW	0xcf
0042bc   0101     movlb   0x1              	BANKSEL	_caracter
0042be   2593     addwf   0x93, 0x0, 0x1   	ADDWF	_caracter, W, B
0042c0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0042c2   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0042c4   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0042c6   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0042c8   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0042ca   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0042cc   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0042ce   0bfc     andlw   0xfc             	ANDLW	0xfc
0042d0   0fe0     addlw   0xe0             	ADDLW	LOW(_01557_DS_)
0042d2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0042d4   0e42     movlw   0x42             	MOVLW	HIGH(_01557_DS_)
0042d6   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0042d8   0e00     movlw   0x00             	MOVLW	UPPER(_01557_DS_)
0042da   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0042dc   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0042de   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _01557_DS_:
0042e0   ef78     goto    0x0042f0         	GOTO	_01529_DS_
0042e2   f021
0042e4   ef7b     goto    0x0042f6         	GOTO	_01530_DS_
0042e6   f021
0042e8   ef7e     goto    0x0042fc         	GOTO	_01531_DS_
0042ea   f021
0042ec   ef81     goto    0x004302         	GOTO	_01532_DS_
0042ee   f021
                                           _01529_DS_:
                                           ;	.line	22; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=21;
0042f0   0e15     movlw   0x15             	MOVLW	0x15
0042f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	23; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0042f4   d008     bra     0x004306         	BRA	_01535_DS_
                                           _01530_DS_:
                                           ;	.line	25; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=22;
0042f6   0e16     movlw   0x16             	MOVLW	0x16
0042f8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	26; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
0042fa   d005     bra     0x004306         	BRA	_01535_DS_
                                           _01531_DS_:
                                           ;	.line	28; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=23;
0042fc   0e17     movlw   0x17             	MOVLW	0x17
0042fe   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	break;
004300   d002     bra     0x004306         	BRA	_01535_DS_
                                           _01532_DS_:
                                           ;	.line	31; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	sens=24;
004302   0e18     movlw   0x18             	MOVLW	0x18
004304   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           _01535_DS_:
004306   0101     movlb   0x1              	BANKSEL	_caracter
                                           ;	.line	35; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	caracter=0;
004308   6b93     clrf    0x93, 0x1        	CLRF	_caracter, B
                                           ; removed redundant BANKSEL
00430a   6b94     clrf    0x94, 0x1        	CLRF	(_caracter + 1), B
00430c   0101     movlb   0x1              	BANKSEL	_receivedbyte
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	receivedbyte=0;
00430e   6bae     clrf    0xae, 0x1        	CLRF	_receivedbyte, B
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	r=digitalread(sens);
004310   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004312   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004314   ec4b     call    0x003096, 0x0call    0x003096, 0x0 	CALL	_digitalread
004316   f018
004318   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00431a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	if (r==1) 
00431c   0a01     xorlw   0x01             	XORLW	0x01
00431e   e102     bnz     0x004324         	BNZ	_01558_DS_
004320   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004322   e001     bz      0x004326         	BZ	_01559_DS_
                                           _01558_DS_:
004324   d00d     bra     0x004340         	BRA	_01537_DS_
                                           _01559_DS_:
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("0",1);
004326   0e01     movlw   0x01             	MOVLW	0x01
004328   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00432a   0e00     movlw   0x00             	MOVLW	UPPER(___str_0)
00432c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00432e   0e39     movlw   0x39             	MOVLW	HIGH(___str_0)
004330   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004332   0e14     movlw   0x14             	MOVLW	LOW(___str_0)
004334   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004336   ec31     call    0x004062, 0x0call    0x004062, 0x0 	CALL	_CDCputs
004338   f020
00433a   0e04     movlw   0x04             	MOVLW	0x04
00433c   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
00433e   d00c     bra     0x004358         	BRA	_01539_DS_
                                           _01537_DS_:
                                           ;	.line	41; /home/vbasel/.icaro/v4/firmware/source/tortucaro/user-tortucaro.c	CDCputs("1",1);
004340   0e01     movlw   0x01             	MOVLW	0x01
004342   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004344   0e00     movlw   0x00             	MOVLW	UPPER(___str_1)
004346   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004348   0e39     movlw   0x39             	MOVLW	HIGH(___str_1)
00434a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
00434c   0e16     movlw   0x16             	MOVLW	LOW(___str_1)
00434e   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004350   ec31     call    0x004062, 0x0call    0x004062, 0x0 	CALL	_CDCputs
004352   f020
004354   0e04     movlw   0x04             	MOVLW	0x04
004356   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _01539_DS_:
004358   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00435a   f003
00435c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00435e   f002
004360   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004362   f001
004364   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004366   f000
004368   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDC_interrupt	code
                                           _CDC_interrupt:
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	if(PIR2bits.USBIF)
005884   aaa1     btfss   0xa1, 0x5, 0x0   	BTFSS	_PIR2bits, 5
005886   d006     bra     0x005894         	BRA	_01524_DS_
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIR2bits.USBIF = 0;
005888   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	ProcessUSBTransactions();
00588a   ec75     call    0x0052ea, 0x0call    0x0052ea, 0x0 	CALL	_ProcessUSBTransactions
00588c   f029
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UIRbits.SOFIF = 0;
00588e   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UIRbits.URSTIF = 0;
005890   9068     bcf     0x68, 0x0, 0x0   	BCF	_UIRbits, 0
                                           ;	.line	348; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UEIR = 0;
005892   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           _01524_DS_:
005894   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDC_init	code
                                           _CDC_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	void CDC_init(void)
004bb0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004bb2   ffe5
004bb4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004bb6   ffe5
004bb8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004bba   ffe5
004bbc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004bbe   ffe5
004bc0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004bc2   ffe5
004bc4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004bc6   ffe5
004bc8   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004bca   ffe5
004bcc   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004bce   ffe5
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEH = 0;
004bd0   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEL = 0;
004bd2   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	UCFG = 0x14;            // Enable pullup resistors; full speed mode
004bd4   0e14     movlw   0x14             	MOVLW	0x14
004bd6   6e6f     movwf   0x6f, 0x0        	MOVWF	_UCFG
004bd8   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	deviceState = DETACHED;
004bda   6bab     clrf    0xab, 0x1        	CLRF	_deviceState, B
004bdc   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	remoteWakeup = 0x00;
004bde   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
004be0   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	currentConfiguration = 0x00;
004be2   6bac     clrf    0xac, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	89; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	while ( counter++ && deviceState != CONFIGURED )
004be4   0e01     movlw   0x01             	MOVLW	0x01
004be6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004be8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004bea   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004bec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01500_DS_:
004bee   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
004bf0   f004
004bf2   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
004bf4   f005
004bf6   c002     movff   0x002, 0x006     	MOVFF	r0x02, r0x06
004bf8   f006
004bfa   c003     movff   0x003, 0x007     	MOVFF	r0x03, r0x07
004bfc   f007
004bfe   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004c00   e304     bnc     0x004c0a         	BNC	_01515_DS_
004c02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004c04   e302     bnc     0x004c0a         	BNC	_01515_DS_
004c06   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
004c08   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
                                           _01515_DS_:
004c0a   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004c0c   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
004c0e   1006     iorwf   0x06, 0x0, 0x0   	IORWF	r0x06, W
004c10   1007     iorwf   0x07, 0x0, 0x0   	IORWF	r0x07, W
004c12   e009     bz      0x004c26         	BZ	_01502_DS_
004c14   0101     movlb   0x1              	BANKSEL	_deviceState
004c16   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
004c18   0a05     xorlw   0x05             	XORLW	0x05
004c1a   e005     bz      0x004c26         	BZ	_01502_DS_
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	EnableUSBModule();
004c1c   ec7e     call    0x0056fc, 0x0call    0x0056fc, 0x0 	CALL	_EnableUSBModule
004c1e   f02b
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	ProcessUSBTransactions();
004c20   ec75     call    0x0052ea, 0x0call    0x0052ea, 0x0 	CALL	_ProcessUSBTransactions
004c22   f029
004c24   d7e4     bra     0x004bee         	BRA	_01500_DS_
                                           _01502_DS_:
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIR2bits.USBIF = 0;     // clear usb interrupt flag
004c26   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	PIE2bits.USBIE = 1;     // enable usb interrupt
004c28   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	104; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	IPR2bits.USBIP = 1;     // high priority interrupt
004c2a   8aa2     bsf     0xa2, 0x5, 0x0   	BSF	_IPR2bits, 5
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEH = 1;   // Enable global HP interrupts
004c2c   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/__cdc.c	INTCONbits.GIEL = 1;   // Enable global LP interrupts
004c2e   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
004c30   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004c32   f007
004c34   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004c36   f006
004c38   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004c3a   f005
004c3c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
004c3e   f004
004c40   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004c42   f003
004c44   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004c46   f002
004c48   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004c4a   f001
004c4c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004c4e   f000
004c50   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
005424   0104     movlb   0x4              	BANKSEL	_line_config
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
005426   6bea     clrf    0xea, 0x1        	CLRF	_line_config, B
005428   0ec2     movlw   0xc2             	MOVLW	0xc2
                                           ; removed redundant BANKSEL
00542a   6feb     movwf   0xeb, 0x1        	MOVWF	(_line_config + 1), B
00542c   0e01     movlw   0x01             	MOVLW	0x01
                                           ; removed redundant BANKSEL
00542e   6fec     movwf   0xec, 0x1        	MOVWF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
005430   6bed     clrf    0xed, 0x1        	CLRF	(_line_config + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
005432   6bee     clrf    0xee, 0x1        	CLRF	(_line_config + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
005434   6bef     clrf    0xef, 0x1        	CLRF	(_line_config + 5), B
                                           ;	.line	223; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
005436   0e08     movlw   0x08             	MOVLW	0x08
                                           ; removed redundant BANKSEL
005438   6ff0     movwf   0xf0, 0x1        	MOVWF	(_line_config + 6), B
00543a   0106     movlb   0x6              	BANKSEL	_zlp
                                           ;	.line	224; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue0=0;
00543c   6bf4     clrf    0xf4, 0x1        	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	225; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue1=0;
00543e   6bf5     clrf    0xf5, 0x1        	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue2=0;
005440   6bf6     clrf    0xf6, 0x1        	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue3=0;
005442   6bf7     clrf    0xf7, 0x1        	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue4=0;
005444   6bf8     clrf    0xf8, 0x1        	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue5=0;
005446   6bf9     clrf    0xf9, 0x1        	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	230; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue6=0;
005448   6bfa     clrf    0xfa, 0x1        	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	231; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	zlp.wValue7=0;
00544a   6bfb     clrf    0xfb, 0x1        	CLRF	(_zlp + 7), B
                                           ;	.line	236; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
00544c   0e1a     movlw   0x1a             	MOVLW	0x1a
00544e   6e72     movwf   0x72, 0x0        	MOVWF	_UEP2
                                           ;	.line	239; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
005450   0e1e     movlw   0x1e             	MOVLW	0x1e
005452   6e73     movwf   0x73, 0x0        	MOVWF	_UEP3
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
005454   0eda     movlw   0xda             	MOVLW	LOW(_CDCControlBuffer)
005456   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 22)
005458   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
00545a   0e04     movlw   0x04             	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
00545c   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	244; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
00545e   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
005460   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
005462   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	248; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
005464   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
005466   6f1a     movwf   0x1a, 0x1        	MOVWF	(_ep_bdt + 26), B
005468   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
00546a   6f1b     movwf   0x1b, 0x1        	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
00546c   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
00546e   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
005470   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
005472   6f1e     movwf   0x1e, 0x1        	MOVWF	(_ep_bdt + 30), B
005474   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
005476   6f1f     movwf   0x1f, 0x1        	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
005478   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
00547a   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	253; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	deviceState=CONFIGURED; 
00547c   0e05     movlw   0x05             	MOVLW	0x05
00547e   0101     movlb   0x1              	BANKSEL	_deviceState
005480   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
005482   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputc	code
                                           _CDCputc:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	void CDCputc(u8 c)
00527e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005280   ffe5
005282   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005284   ffd9
005286   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005288   ffe5
00528a   0e02     movlw   0x02             	MOVLW	0x02
00528c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00528e   f000
005290   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED) return;
005292   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
005294   0a05     xorlw   0x05             	XORLW	0x05
005296   e124     bnz     0x0052e0         	BNZ	_01477_DS_
                                           _01472_DS_:
005298   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE) return;
00529a   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
00529c   e021     bz      0x0052e0         	BZ	_01477_DS_
                                           _01474_DS_:
00529e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN)
0052a0   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
0052a2   d01e     bra     0x0052e0         	BRA	_01477_DS_
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDCTxBuffer[0] = c;
0052a4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0052a6   0105     movlb   0x5              	BANKSEL	_CDCTxBuffer
0052a8   6fc0     movwf   0xc0, 0x1        	MOVWF	_CDCTxBuffer, B
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = 1;
0052aa   0e01     movlw   0x01             	MOVLW	0x01
0052ac   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
0052ae   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	203; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0052b0   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0052b2   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0052b4   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
0052b6   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
0052b8   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
0052ba   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0052bc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0052be   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
0052c0   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
0052c2   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0052c4   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0052c6   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
0052c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0052ca   0b01     andlw   0x01             	ANDLW	0x01
0052cc   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0052ce   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
0052d0   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0052d2   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
0052d4   0bbf     andlw   0xbf             	ANDLW	0xbf
0052d6   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0052d8   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	206; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
0052da   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0052dc   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0052de   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01477_DS_:
0052e0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0052e2   f000
0052e4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052e6   ffd9
0052e8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCputs	code
                                           _CDCputs:
                                           ;	.line	153; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 CDCputs(u8 *buffer, u8 length)
004062   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004064   ffe5
004066   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004068   ffd9
00406a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00406c   ffe5
00406e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004070   ffe5
004072   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004074   ffe5
004076   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004078   ffe5
00407a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00407c   ffe5
00407e   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004080   ffe5
004082   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004084   ffe5
004086   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
004088   ffe5
00408a   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
00408c   ffe5
00408e   0e02     movlw   0x02             	MOVLW	0x02
004090   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004092   f000
004094   0e03     movlw   0x03             	MOVLW	0x03
004096   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004098   f001
00409a   0e04     movlw   0x04             	MOVLW	0x04
00409c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00409e   f002
0040a0   0e05     movlw   0x05             	MOVLW	0x05
0040a2   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
0040a4   f003
0040a6   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
0040a8   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
0040aa   0a05     xorlw   0x05             	XORLW	0x05
0040ac   e002     bz      0x0040b2         	BZ	_01431_DS_
0040ae   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040b0   d04c     bra     0x00414a         	BRA	_01442_DS_
                                           _01431_DS_:
0040b2   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
0040b4   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
0040b6   e102     bnz     0x0040bc         	BNZ	_01433_DS_
0040b8   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040ba   d047     bra     0x00414a         	BRA	_01442_DS_
                                           _01433_DS_:
0040bc   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN)
0040be   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
0040c0   d043     bra     0x004148         	BRA	_01438_DS_
                                           ;	.line	163; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE)
0040c2   0e41     movlw   0x41             	MOVLW	0x41
0040c4   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
0040c6   e302     bnc     0x0040cc         	BNC	_01449_DS_
                                           ;	.line	164; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	length = CDC_BULK_IN_SIZE;
0040c8   0e40     movlw   0x40             	MOVLW	0x40
0040ca   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
                                           _01449_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < length; i++)
0040cc   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01440_DS_:
0040ce   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
0040d0   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
0040d2   e21d     bc      0x00410e         	BC	_01450_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
0040d4   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
0040d6   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
0040d8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
0040da   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0040dc   0e05     movlw   0x05             	MOVLW	HIGH(_CDCTxBuffer)
0040de   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0040e0   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0040e2   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0040e4   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0040e6   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040e8   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
0040ea   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
0040ec   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0040ee   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
0040f0   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
0040f2   ffe9
0040f4   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
0040f6   fff3
0040f8   ece2     call    0x0057c4, 0x0call    0x0057c4, 0x0 	CALL	__gptrget1
0040fa   f02b
0040fc   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
0040fe   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
004100   ffe9
004102   c006     movff   0x006, 0xfea     	MOVFF	r0x06, FSR0H
004104   ffea
004106   c007     movff   0x007, 0xfef     	MOVFF	r0x07, INDF0
004108   ffef
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < length; i++)
00410a   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
00410c   d7e0     bra     0x0040ce         	BRA	_01440_DS_
                                           _01450_DS_:
00410e   c004     movff   0x004, 0x000     	MOVFF	r0x04, r0x00
004110   f000
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
004112   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004114   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
004116   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
004118   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
00411a   151c     andwf   0x1c, 0x0, 0x1   	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00411c   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	183; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
00411e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           ; removed redundant BANKSEL
004120   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
004122   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
004124   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004126   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
004128   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
00412a   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
00412c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00412e   3601     rlcf    0x01, 0x1, 0x0   	RLCF	r0x01, F
004130   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004132   0b01     andlw   0x01             	ANDLW	0x01
004134   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004136   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004138   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
00413a   511c     movf    0x1c, 0x0, 0x1   	MOVF	(_ep_bdt + 28), W, B
00413c   0bbf     andlw   0xbf             	ANDLW	0xbf
00413e   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
004140   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
004142   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004144   111c     iorwf   0x1c, 0x0, 0x1   	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004146   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _01438_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return i;
004148   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _01442_DS_:
00414a   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00414c   f008
00414e   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004150   f007
004152   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004154   f006
004156   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004158   f005
00415a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00415c   f004
00415e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004160   f003
004162   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004164   f002
004166   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004168   f001
00416a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00416c   f000
00416e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004170   ffd9
004172   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__CDCgets	code
                                           _CDCgets:
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 CDCgets(u8 *buffer)
003e30   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003e32   ffe5
003e34   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003e36   ffd9
003e38   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003e3a   ffe5
003e3c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003e3e   ffe5
003e40   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003e42   ffe5
003e44   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003e46   ffe5
003e48   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003e4a   ffe5
003e4c   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003e4e   ffe5
003e50   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003e52   ffe5
003e54   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003e56   ffe5
003e58   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003e5a   ffe5
003e5c   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
003e5e   ffe5
003e60   0e02     movlw   0x02             	MOVLW	0x02
003e62   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003e64   f000
003e66   0e03     movlw   0x03             	MOVLW	0x03
003e68   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
003e6a   f001
003e6c   0e04     movlw   0x04             	MOVLW	0x04
003e6e   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
003e70   f002
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	u8 i=0;
003e72   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003e74   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (deviceState != CONFIGURED)
003e76   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
003e78   0a05     xorlw   0x05             	XORLW	0x05
003e7a   e002     bz      0x003e80         	BZ	_01390_DS_
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return 0;
003e7c   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003e7e   d050     bra     0x003f20         	BRA	_01401_DS_
                                           _01390_DS_:
003e80   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	115; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!CONTROL_LINE)
003e82   5103     movf    0x03, 0x0, 0x1   	MOVF	_CONTROL_LINE, W, B
003e84   e102     bnz     0x003e8a         	BNZ	_01392_DS_
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return 0;
003e86   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003e88   d04b     bra     0x003f20         	BRA	_01401_DS_
                                           _01392_DS_:
003e8a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN)
003e8c   bf18     btfsc   0x18, 0x7, 0x1   	BTFSC	(_ep_bdt + 24), 7, B
003e8e   d047     bra     0x003f1e         	BRA	_01397_DS_
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt)
003e90   0e40     movlw   0x40             	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01408_DS_
                                           ; #;;;!!! pic16_aopOp:1118 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
003e92   5d19     subwf   0x19, 0x0, 0x1   	SUBWF	(_ep_bdt + 25), W, B
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++)
003e94   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
003e96   c419     movff   0x419, 0xfe8     	MOVFF	(_ep_bdt + 25), WREG
003e98   ffe8
003e9a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
                                           _01399_DS_:
003e9c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 25)
003e9e   5119     movf    0x19, 0x0, 0x1   	MOVF	(_ep_bdt + 25), W, B
003ea0   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
003ea2   e220     bc      0x003ee4         	BC	_01409_DS_
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
003ea4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003ea6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003ea8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003eaa   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003eac   2001     addwfc  0x01, 0x0, 0x0   	ADDWFC	r0x01, W
003eae   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
003eb0   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003eb2   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
003eb4   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003eb6   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
003eb8   2404     addwf   0x04, 0x0, 0x0   	ADDWF	r0x04, W
003eba   6e08     movwf   0x08, 0x0        	MOVWF	r0x08
003ebc   6a09     clrf    0x09, 0x0        	CLRF	r0x09
003ebe   0e05     movlw   0x05             	MOVLW	HIGH(_CDCRxBuffer)
003ec0   2209     addwfc  0x09, 0x1, 0x0   	ADDWFC	r0x09, F
003ec2   c008     movff   0x008, 0xfe9     	MOVFF	r0x08, FSR0L
003ec4   ffe9
003ec6   c009     movff   0x009, 0xfea     	MOVFF	r0x09, FSR0H
003ec8   ffea
003eca   cfef     movff   0xfef, 0x008     	MOVFF	INDF0, r0x08
003ecc   f008
003ece   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003ed0   ffe5
003ed2   c005     movff   0x005, 0xfe9     	MOVFF	r0x05, FSR0L
003ed4   ffe9
003ed6   c006     movff   0x006, 0xff3     	MOVFF	r0x06, PRODL
003ed8   fff3
003eda   5007     movf    0x07, 0x0, 0x0   	MOVF	r0x07, W
003edc   ec37     call    0x00586e, 0x0call    0x00586e, 0x0 	CALL	__gptrput1
003ede   f02c
                                           ;	.line	129; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++)
003ee0   2a04     incf    0x04, 0x1, 0x0   	INCF	r0x04, F
003ee2   d7dc     bra     0x003e9c         	BRA	_01399_DS_
                                           _01409_DS_:
003ee4   c004     movff   0x004, 0x003     	MOVFF	r0x04, r0x03
003ee6   f003
                                           ;	.line	143; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
003ee8   0e40     movlw   0x40             	MOVLW	0x40
003eea   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
003eec   1518     andwf   0x18, 0x0, 0x1   	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003eee   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	144; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
003ef0   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           ; removed redundant BANKSEL
003ef2   bd18     btfsc   0x18, 0x6, 0x1   	BTFSC	(_ep_bdt + 24), 6, B
003ef4   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
003ef6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003ef8   80d8     bsf     0xd8, 0x0, 0x0   	BSF	STATUS, 0
003efa   66e8     tstfsz  0xe8, 0x0        	TSTFSZ	WREG
003efc   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
003efe   6a00     clrf    0x00, 0x0        	CLRF	r0x00
003f00   3600     rlcf    0x00, 0x1, 0x0   	RLCF	r0x00, F
003f02   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f04   0b01     andlw   0x01             	ANDLW	0x01
003f06   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
003f08   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
003f0a   6ef4     movwf   0xf4, 0x0        	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003f0c   5118     movf    0x18, 0x0, 0x1   	MOVF	(_ep_bdt + 24), W, B
003f0e   0bbf     andlw   0xbf             	ANDLW	0xbf
003f10   10f4     iorwf   0xf4, 0x0, 0x0   	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003f12   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	146; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
003f14   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003f16   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	147; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
003f18   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
003f1a   1118     iorwf   0x18, 0x0, 0x1   	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003f1c   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           _01397_DS_:
                                           ;	.line	150; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	return i;
003f1e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           _01401_DS_:
003f20   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003f22   f009
003f24   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003f26   f008
003f28   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003f2a   f007
003f2c   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003f2e   f006
003f30   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003f32   f005
003f34   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003f36   f004
003f38   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003f3a   f003
003f3c   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003f3e   f002
003f40   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003f42   f001
003f44   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003f46   f000
003f48   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003f4a   ffd9
003f4c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	void ProcessCDCRequest(void)
004a64   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004a66   ffe5
                                           ;	.line	40; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
004a68   0e60     movlw   0x60             	MOVLW	0x60
004a6a   0105     movlb   0x5              	BANKSEL	_SetupPacket
004a6c   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004a6e   0a20     xorlw   0x20             	XORLW	0x20
004a70   e001     bz      0x004a74         	BZ	_01337_DS_
004a72   d049     bra     0x004b06         	BRA	_01347_DS_
                                           _01337_DS_:
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	switch(SetupPacket.bRequest)
004a74   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
004a76   f000
004a78   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a7a   e101     bnz     0x004a7e         	BNZ	_01374_DS_
004a7c   d044     bra     0x004b06         	BRA	_01347_DS_
                                           _01374_DS_:
004a7e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a80   0a01     xorlw   0x01             	XORLW	0x01
004a82   e101     bnz     0x004a86         	BNZ	_01376_DS_
004a84   d040     bra     0x004b06         	BRA	_01347_DS_
                                           _01376_DS_:
004a86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a88   0a20     xorlw   0x20             	XORLW	0x20
004a8a   e007     bz      0x004a9a         	BZ	_01340_DS_
004a8c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a8e   0a21     xorlw   0x21             	XORLW	0x21
004a90   e013     bz      0x004ab8         	BZ	_01341_DS_
004a92   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004a94   0a22     xorlw   0x22             	XORLW	0x22
004a96   e01f     bz      0x004ad6         	BZ	_01342_DS_
004a98   d036     bra     0x004b06         	BRA	_01347_DS_
                                           _01340_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
004a9a   0e04     movlw   0x04             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004a9c   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004a9e   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004aa0   0eea     movlw   0xea             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004aa2   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004aa4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004aa6   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
004aa8   0e07     movlw   0x07             	MOVLW	0x07
004aaa   0101     movlb   0x1              	BANKSEL	_wCount
004aac   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004aae   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;				
004ab0   0e01     movlw   0x01             	MOVLW	0x01
004ab2   0101     movlb   0x1              	BANKSEL	_requestHandled
004ab4   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	71; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	break;
004ab6   d027     bra     0x004b06         	BRA	_01347_DS_
                                           _01341_DS_:
                                           ;	.line	78; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&line_config;
004ab8   0e04     movlw   0x04             	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004aba   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004abc   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004abe   0eea     movlw   0xea             	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004ac0   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004ac2   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004ac4   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
004ac6   0e07     movlw   0x07             	MOVLW	0x07
004ac8   0101     movlb   0x1              	BANKSEL	_wCount
004aca   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004acc   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;
004ace   0e01     movlw   0x01             	MOVLW	0x01
004ad0   0101     movlb   0x1              	BANKSEL	_requestHandled
004ad2   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	81; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	break;
004ad4   d018     bra     0x004b06         	BRA	_01347_DS_
                                           _01342_DS_:
004ad6   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	90; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
004ad8   5102     movf    0x02, 0x0, 0x1   	MOVF	(_SetupPacket + 2), W, B
004ada   0a03     xorlw   0x03             	XORLW	0x03
004adc   e104     bnz     0x004ae6         	BNZ	_01344_DS_
004ade   0e01     movlw   0x01             	MOVLW	0x01
004ae0   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
004ae2   6f03     movwf   0x03, 0x1        	MOVWF	_CONTROL_LINE, B
004ae4   d002     bra     0x004aea         	BRA	_01345_DS_
                                           _01344_DS_:
004ae6   0101     movlb   0x1              	BANKSEL	_CONTROL_LINE
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	else CONTROL_LINE=0;		
004ae8   6b03     clrf    0x03, 0x1        	CLRF	_CONTROL_LINE, B
                                           _01345_DS_:
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	outPtr = (__data u8 *)&zlp;
004aea   0e06     movlw   0x06             	MOVLW	HIGH(_zlp)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
004aec   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004aee   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004af0   0ef4     movlw   0xf4             	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
004af2   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
004af4   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004af6   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
004af8   0e08     movlw   0x08             	MOVLW	0x08
004afa   0101     movlb   0x1              	BANKSEL	_wCount
004afc   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004afe   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	requestHandled = 1;						
004b00   0e01     movlw   0x01             	MOVLW	0x01
004b02   0101     movlb   0x1              	BANKSEL	_requestHandled
004b04   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _01347_DS_:
                                           ;	.line	96; /home/vbasel/.icaro/v4/firmware/libraries/usb/usb_cdc.c	}
004b06   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004b08   f000
004b0a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	838; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessUSBTransactions(void)
0052ea   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0052ec   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_01250_DS_
                                           ; #	GOTO	_01276_DS_
                                           ; #	BTFSS	_UIRbits, 2
0052ee   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	841; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(deviceState == DETACHED)
0052f0   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
                                           ;	.line	842; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
0052f2   e02e     bz      0x005350         	BZ	_01276_DS_
                                           ;	.line	845; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
0052f4   a468     btfss   0x68, 0x2, 0x0   	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_01252_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_01252_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	846; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UnSuspend();
0052f6   d003     bra     0x0052fe         	BRA	_01252_DS_
                                           ;	.line	850; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UCONbits.SUSPND == 1)
0052f8   b469     btfsc   0x69, 0x2, 0x0   	BTFSC	_UIEbits, 2
0052fa   ec62     call    0x0058c4, 0x0call    0x0058c4, 0x0 	CALL	_UnSuspend
0052fc   f02c
                                           _01252_DS_:
0052fe   6a00     clrf    0x00, 0x0        	CLRF	r0x00
005300   b26d     btfsc   0x6d, 0x1, 0x0   	BTFSC	_UCONbits, 1
005302   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005304   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005306   0a01     xorlw   0x01             	XORLW	0x01
                                           ;	.line	851; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
005308   e023     bz      0x005350         	BZ	_01276_DS_
                                           ;	.line	854; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE)
00530a   a068     btfss   0x68, 0x0, 0x0   	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_01257_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_01257_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	855; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	BusReset();
00530c   d003     bra     0x005314         	BRA	_01257_DS_
                                           ;	.line	858; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE)
00530e   b069     btfsc   0x69, 0x0, 0x0   	BTFSC	_UIEbits, 0
005310   ece9     call    0x0055d2, 0x0call    0x0055d2, 0x0 	CALL	_BusReset
005312   f02a
                                           _01257_DS_:
005314   a868     btfss   0x68, 0x4, 0x0   	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_01260_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_01260_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	859; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	Suspend();
005316   d003     bra     0x00531e         	BRA	_01260_DS_
                                           ;	.line	861; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE)
005318   b869     btfsc   0x69, 0x4, 0x0   	BTFSC	_UIEbits, 4
00531a   ecd1     call    0x0057a2, 0x0call    0x0057a2, 0x0 	CALL	_Suspend
00531c   f02b
                                           _01260_DS_:
00531e   ac68     btfss   0x68, 0x6, 0x0   	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_01263_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_01263_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	862; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	StartOfFrame();
005320   d003     bra     0x005328         	BRA	_01263_DS_
                                           ;	.line	864; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE)
005322   bc69     btfsc   0x69, 0x6, 0x0   	BTFSC	_UIEbits, 6
005324   ec02     call    0x000c04, 0x0call    0x000c04, 0x0 	CALL	_StartOfFrame
005326   f006
                                           _01263_DS_:
005328   aa68     btfss   0x68, 0x5, 0x0   	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_01266_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_01266_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	865; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	Stall();
00532a   d003     bra     0x005332         	BRA	_01266_DS_
                                           ;	.line	869; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE)
00532c   ba69     btfsc   0x69, 0x5, 0x0   	BTFSC	_UIEbits, 5
00532e   ec03     call    0x005806, 0x0call    0x005806, 0x0 	CALL	_Stall
005330   f02c
                                           _01266_DS_:
005332   a268     btfss   0x68, 0x1, 0x0   	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_01269_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_01269_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	870; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.UERRIF = 0;
005334   d002     bra     0x00533a         	BRA	_01269_DS_
                                           ;	.line	873; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (deviceState < DEFAULT_STATUS)
005336   b269     btfsc   0x69, 0x1, 0x0   	BTFSC	_UIEbits, 1
005338   9268     bcf     0x68, 0x1, 0x0   	BCF	_UIRbits, 1
                                           _01269_DS_:
00533a   0e03     movlw   0x03             	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_01272_DS_
                                           ; #	GOTO	_01276_DS_
                                           ; #	BTFSS	_UIRbits, 3
00533c   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	874; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
00533e   5dab     subwf   0xab, 0x0, 0x1   	SUBWF	_deviceState, W, B
                                           ;	.line	877; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE)
005340   e307     bnc     0x005350         	BNC	_01276_DS_
005342   a668     btfss   0x68, 0x3, 0x0   	BTFSS	_UIRbits, 3
005344   d005     bra     0x005350         	BRA	_01276_DS_
005346   a669     btfss   0x69, 0x3, 0x0   	BTFSS	_UIEbits, 3
005348   d003     bra     0x005350         	BRA	_01276_DS_
                                           ;	.line	879; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessControlTransfer();
00534a   ec29     call    0x004c52, 0x0call    0x004c52, 0x0 	CALL	_ProcessControlTransfer
00534c   f026
                                           ;	.line	881; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.TRNIF = 0;
00534e   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
                                           _01276_DS_:
005350   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005352   f000
005354   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__BusReset	code
                                           _BusReset:
                                           ;	.line	808; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void BusReset()
0055d2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0055d4   ffe5
                                           ;	.line	810; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEIR  = 0x00;
0055d6   6a6a     clrf    0x6a, 0x0        	CLRF	_UEIR
                                           ;	.line	811; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIR   = 0x00;
0055d8   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	812; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEIE  = 0x9f;
0055da   0e9f     movlw   0x9f             	MOVLW	0x9f
0055dc   6e6b     movwf   0x6b, 0x0        	MOVWF	_UEIE
                                           ;	.line	813; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE   = 0x7b;
0055de   0e7b     movlw   0x7b             	MOVLW	0x7b
0055e0   6e69     movwf   0x69, 0x0        	MOVWF	_UIE
                                           ;	.line	814; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UADDR = 0x00;
0055e2   6a6e     clrf    0x6e, 0x0        	CLRF	_UADDR
                                           ;	.line	817; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
0055e4   0e16     movlw   0x16             	MOVLW	0x16
0055e6   6e70     movwf   0x70, 0x0        	MOVWF	_UEP0
                                           _01232_DS_:
                                           ;	.line	821; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	while (UIRbits.TRNIF == 1)
0055e8   6a00     clrf    0x00, 0x0        	CLRF	r0x00
0055ea   b668     btfsc   0x68, 0x3, 0x0   	BTFSC	_UIRbits, 3
0055ec   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
0055ee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0055f0   0a01     xorlw   0x01             	XORLW	0x01
0055f2   e102     bnz     0x0055f8         	BNZ	_01234_DS_
                                           ;	.line	822; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.TRNIF = 0;
0055f4   9668     bcf     0x68, 0x3, 0x0   	BCF	_UIRbits, 3
0055f6   d7f8     bra     0x0055e8         	BRA	_01232_DS_
                                           _01234_DS_:
                                           ;	.line	825; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.PKTDIS = 0;
0055f8   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
                                           ;	.line	828; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
0055fa   ec12     call    0x005824, 0x0call    0x005824, 0x0 	CALL	_WaitForSetupStage
0055fc   f02c
0055fe   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	830; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
005600   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
005602   0101     movlb   0x1              	BANKSEL	_selfPowered
                                           ;	.line	831; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
005604   6ba9     clrf    0xa9, 0x1        	CLRF	_selfPowered, B
005606   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	832; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
005608   6bac     clrf    0xac, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	833; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = DEFAULT_STATUS;
00560a   0e03     movlw   0x03             	MOVLW	0x03
00560c   0101     movlb   0x1              	BANKSEL	_deviceState
00560e   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
005610   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005612   f000
005614   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Suspend	code
                                           _Suspend:
                                           ;	.line	735; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void Suspend(void)
0057a2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0057a4   ffe5
0057a6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0057a8   ffd9
                                           ;	.line	741; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.ACTVIE = 1;
0057aa   8469     bsf     0x69, 0x2, 0x0   	BSF	_UIEbits, 2
                                           ;	.line	742; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.IDLEIF = 0;
0057ac   9868     bcf     0x68, 0x4, 0x0   	BCF	_UIRbits, 4
                                           ;	.line	743; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.SUSPND = 1;
0057ae   826d     bsf     0x6d, 0x1, 0x0   	BSF	_UCONbits, 1
                                           ;	.line	748; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIR2bits.USBIF = 0;
0057b0   9aa1     bcf     0xa1, 0x5, 0x0   	BCF	_PIR2bits, 5
                                           ;	.line	754; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIF = 0;
0057b2   90f2     bcf     0xf2, 0x0, 0x0   	BCF	_INTCONbits, 0
                                           ;	.line	760; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIE2bits.USBIE = 1;
0057b4   8aa0     bsf     0xa0, 0x5, 0x0   	BSF	_PIE2bits, 5
                                           ;	.line	766; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIE = 1;
0057b6   86f2     bsf     0xf2, 0x3, 0x0   	BSF	_INTCONbits, 3
0057b8   0003     sleep                    	sleep	
                                           ;	.line	796; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	PIE2bits.USBIE = 0;
0057ba   9aa0     bcf     0xa0, 0x5, 0x0   	BCF	_PIE2bits, 5
                                           ;	.line	802; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	INTCONbits.RBIE = 0;
0057bc   96f2     bcf     0xf2, 0x3, 0x0   	BCF	_INTCONbits, 3
0057be   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0057c0   ffd9
0057c2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Stall	code
                                           _Stall:
                                           ;	.line	719; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void Stall(void)
005806   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005808   ffe5
                                           ;	.line	724; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UEP0bits.EPSTALL == 1)
00580a   6a00     clrf    0x00, 0x0        	CLRF	r0x00
00580c   b070     btfsc   0x70, 0x0, 0x0   	BTFSC	_UEP0bits, 0
00580e   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
005810   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005812   0a01     xorlw   0x01             	XORLW	0x01
005814   e103     bnz     0x00581c         	BNZ	_01215_DS_
                                           ;	.line	727; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
005816   ec12     call    0x005824, 0x0call    0x005824, 0x0 	CALL	_WaitForSetupStage
005818   f02c
                                           ;	.line	728; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UEP0bits.EPSTALL = 0;
00581a   9070     bcf     0x70, 0x0, 0x0   	BCF	_UEP0bits, 0
                                           _01215_DS_:
                                           ;	.line	730; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.STALLIF = 0;
00581c   9a68     bcf     0x68, 0x5, 0x0   	BCF	_UIRbits, 5
00581e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005820   f000
005822   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	715; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.SOFIF = 0;
000c04   9c68     bcf     0x68, 0x6, 0x0   	BCF	_UIRbits, 6
000c06   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	704; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.SUSPND = 0;
0058c4   926d     bcf     0x6d, 0x1, 0x0   	BCF	_UCONbits, 1
                                           ;	.line	705; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.ACTVIE = 0;
0058c6   9469     bcf     0x69, 0x2, 0x0   	BCF	_UIEbits, 2
                                           ;	.line	706; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIRbits.ACTVIF = 0;
0058c8   9468     bcf     0x68, 0x2, 0x0   	BCF	_UIRbits, 2
0058ca   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	670; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UCONbits.USBEN == 0)
0056fc   b66d     btfsc   0x6d, 0x3, 0x0   	BTFSC	_UCONbits, 3
0056fe   d006     bra     0x00570c         	BRA	_01183_DS_
                                           ;	.line	675; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCON = 0;
005700   6a6d     clrf    0x6d, 0x0        	CLRF	_UCON
                                           ;	.line	676; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE = 0;
005702   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	677; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.USBEN = 1;
005704   866d     bsf     0x6d, 0x3, 0x0   	BSF	_UCONbits, 3
                                           ;	.line	678; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ATTACHED;
005706   0e01     movlw   0x01             	MOVLW	0x01
005708   0101     movlb   0x1              	BANKSEL	_deviceState
00570a   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01183_DS_:
00570c   0101     movlb   0x1              	BANKSEL	_deviceState
                                           ;	.line	683; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0)
00570e   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
005710   0a01     xorlw   0x01             	XORLW	0x01
005712   e109     bnz     0x005726         	BNZ	_01187_DS_
005714   ba6d     btfsc   0x6d, 0x5, 0x0   	BTFSC	_UCONbits, 5
005716   d007     bra     0x005726         	BRA	_01187_DS_
                                           ;	.line	685; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIR = 0;
005718   6a68     clrf    0x68, 0x0        	CLRF	_UIR
                                           ;	.line	686; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIE = 0;
00571a   6a69     clrf    0x69, 0x0        	CLRF	_UIE
                                           ;	.line	687; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.URSTIE = 1;
00571c   8069     bsf     0x69, 0x0, 0x0   	BSF	_UIEbits, 0
                                           ;	.line	688; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UIEbits.IDLEIE = 1;
00571e   8869     bsf     0x69, 0x4, 0x0   	BSF	_UIEbits, 4
                                           ;	.line	689; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = POWERED;
005720   0e02     movlw   0x02             	MOVLW	0x02
005722   0101     movlb   0x1              	BANKSEL	_deviceState
005724   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01187_DS_:
005726   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	564; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessControlTransfer(void)
004c52   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004c54   ffe5
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (USTATbits.DIR == OUT)
004c56   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
004c58   d022     bra     0x004c9e         	BRA	_01133_DS_
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
004c5a   0e3c     movlw   0x3c             	MOVLW	0x3c
004c5c   0104     movlb   0x4              	BANKSEL	_ep_bdt
004c5e   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
004c60   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004c62   4000     rrncf   0x00, 0x0, 0x0   	RRNCF	r0x00, W
004c64   40e8     rrncf   0xe8, 0x0, 0x0   	RRNCF	WREG, W
004c66   0b3f     andlw   0x3f             	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	575; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (PID == 0x0D)
004c68   0a0d     xorlw   0x0d             	XORLW	0x0d
004c6a   e103     bnz     0x004c72         	BNZ	_01117_DS_
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	SetupStage();
004c6c   ec6b     call    0x0046d6, 0x0call    0x0046d6, 0x0 	CALL	_SetupStage
004c6e   f023
004c70   d03e     bra     0x004cee         	BRA	_01135_DS_
                                           _01117_DS_:
004c72   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	580; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE)
004c74   51ad     movf    0xad, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
004c76   0a01     xorlw   0x01             	XORLW	0x01
004c78   e10f     bnz     0x004c98         	BNZ	_01114_DS_
                                           ;	.line	584; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	OutDataStage(0);
004c7a   0e00     movlw   0x00             	MOVLW	0x00
004c7c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004c7e   ec52     call    0x003aa4, 0x0call    0x003aa4, 0x0 	CALL	_OutDataStage
004c80   f01d
004c82   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004c84   0104     movlb   0x4              	BANKSEL	_ep_bdt
                                           ;	.line	612; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
004c86   ad00     btfss   0x00, 0x6, 0x1   	BTFSS	_ep_bdt, 6, B
004c88   d003     bra     0x004c90         	BRA	_01111_DS_
                                           ;	.line	613; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004c8a   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004c8c   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
004c8e   d02f     bra     0x004cee         	BRA	_01135_DS_
                                           _01111_DS_:
                                           ;	.line	615; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004c90   0ec8     movlw   0xc8             	MOVLW	0xc8
004c92   0104     movlb   0x4              	BANKSEL	_ep_bdt
004c94   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
004c96   d02b     bra     0x004cee         	BRA	_01135_DS_
                                           _01114_DS_:
                                           ;	.line	620; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
004c98   ec12     call    0x005824, 0x0call    0x005824, 0x0 	CALL	_WaitForSetupStage
004c9a   f02c
004c9c   d028     bra     0x004cee         	BRA	_01135_DS_
                                           _01133_DS_:
                                           ;	.line	623; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if(USTATbits.DIR == IN)
004c9e   6a00     clrf    0x00, 0x0        	CLRF	r0x00
004ca0   b46c     btfsc   0x6c, 0x2, 0x0   	BTFSC	_USTATbits, 2
004ca2   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004ca4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004ca6   0a01     xorlw   0x01             	XORLW	0x01
004ca8   e122     bnz     0x004cee         	BNZ	_01135_DS_
                                           ;	.line	626; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS))
004caa   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
004cac   e10b     bnz     0x004cc4         	BNZ	_01122_DS_
004cae   0101     movlb   0x1              	BANKSEL	_deviceState
004cb0   51ab     movf    0xab, 0x0, 0x1   	MOVF	_deviceState, W, B
004cb2   0a04     xorlw   0x04             	XORLW	0x04
004cb4   e107     bnz     0x004cc4         	BNZ	_01122_DS_
                                           ;	.line	630; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UADDR = SetupPacket.wValue0;
004cb6   c502     movff   0x502, 0xf6e     	MOVFF	(_SetupPacket + 2), _UADDR
004cb8   ff6e
                                           ;	.line	634; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(UADDR == 0)
004cba   506e     movf    0x6e, 0x0, 0x0   	MOVF	_UADDR, W
004cbc   e103     bnz     0x004cc4         	BNZ	_01122_DS_
                                           ;	.line	637; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = DEFAULT_STATUS;
004cbe   0e03     movlw   0x03             	MOVLW	0x03
004cc0   0101     movlb   0x1              	BANKSEL	_deviceState
004cc2   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           _01122_DS_:
004cc4   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	640; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE)
004cc6   51ad     movf    0xad, 0x0, 0x1   	MOVF	_ctrlTransferStage, W, B
004cc8   0a02     xorlw   0x02             	XORLW	0x02
004cca   e10f     bnz     0x004cea         	BNZ	_01128_DS_
                                           ;	.line	643; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	InDataStage(0);
004ccc   0e00     movlw   0x00             	MOVLW	0x00
004cce   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
004cd0   ec6b     call    0x002ed6, 0x0call    0x002ed6, 0x0 	CALL	_InDataStage
004cd2   f017
004cd4   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
004cd6   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	646; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
004cd8   ad04     btfss   0x04, 0x6, 0x1   	BTFSS	(_ep_bdt + 4), 6, B
004cda   d003     bra     0x004ce2         	BRA	_01125_DS_
                                           ;	.line	647; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004cdc   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004cde   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004ce0   d006     bra     0x004cee         	BRA	_01135_DS_
                                           _01125_DS_:
                                           ;	.line	649; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004ce2   0ec8     movlw   0xc8             	MOVLW	0xc8
004ce4   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
004ce6   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004ce8   d002     bra     0x004cee         	BRA	_01135_DS_
                                           _01128_DS_:
                                           ;	.line	654; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	WaitForSetupStage();
004cea   ec12     call    0x005824, 0x0call    0x005824, 0x0 	CALL	_WaitForSetupStage
004cec   f02c
                                           _01135_DS_:
004cee   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004cf0   f000
004cf2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__WaitForSetupStage	code
                                           _WaitForSetupStage:
005824   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	551; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
005826   6bad     clrf    0xad, 0x1        	CLRF	_ctrlTransferStage, B
                                           ;	.line	552; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
005828   0e40     movlw   0x40             	MOVLW	0x40
00582a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
00582c   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
00582e   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
005830   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
005832   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
005834   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
005836   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
005838   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	556; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
00583a   6b04     clrf    0x04, 0x1        	CLRF	(_ep_bdt + 4), B
00583c   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SetupStage	code
                                           _SetupStage:
                                           ;	.line	481; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
0046d6   0e7f     movlw   0x7f             	MOVLW	0x7f
0046d8   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
0046da   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_ep_bdt + 4), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0046dc   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	482; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
0046de   0e7f     movlw   0x7f             	MOVLW	0x7f
                                           ; removed redundant BANKSEL
0046e0   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_ep_bdt, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0046e2   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
0046e4   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
                                           ;	.line	485; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0046e6   6bad     clrf    0xad, 0x1        	CLRF	_ctrlTransferStage, B
0046e8   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	486; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
0046ea   6ba8     clrf    0xa8, 0x1        	CLRF	_requestHandled, B
0046ec   0101     movlb   0x1              	BANKSEL	_HIDPostProcess
                                           ;	.line	487; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
0046ee   6b9e     clrf    0x9e, 0x1        	CLRF	_HIDPostProcess, B
0046f0   0101     movlb   0x1              	BANKSEL	_wCount
                                           ;	.line	488; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 0;                           // No bytes transferred
0046f2   6b91     clrf    0x91, 0x1        	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
0046f4   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessStandardRequest();
0046f6   ec9c     call    0x004538, 0x0call    0x004538, 0x0 	CALL	_ProcessStandardRequest
0046f8   f022
                                           ;	.line	501; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
0046fa   0e1f     movlw   0x1f             	MOVLW	0x1f
0046fc   0105     movlb   0x5              	BANKSEL	_SetupPacket
0046fe   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004700   0a01     xorlw   0x01             	XORLW	0x01
004702   e102     bnz     0x004708         	BNZ	_01070_DS_
                                           ;	.line	502; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ProcessCDCRequest();
004704   ec32     call    0x004a64, 0x0call    0x004a64, 0x0 	CALL	_ProcessCDCRequest
004706   f025
                                           _01070_DS_:
004708   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (!requestHandled) {
00470a   51a8     movf    0xa8, 0x0, 0x1   	MOVF	_requestHandled, W, B
00470c   e10b     bnz     0x004724         	BNZ	_01077_DS_
                                           ;	.line	507; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00470e   0e40     movlw   0x40             	MOVLW	0x40
004710   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
004712   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
004714   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
004716   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
004718   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
00471a   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	509; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
00471c   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
00471e   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
004720   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004722   d038     bra     0x004794         	BRA	_01078_DS_
                                           _01077_DS_:
004724   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	512; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
004726   af00     btfss   0x00, 0x7, 0x1   	BTFSS	_SetupPacket, 7, B
004728   d026     bra     0x004776         	BRA	_01074_DS_
00472a   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
                                           ;	.line	514; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.wLength < wCount)
00472c   5192     movf    0x92, 0x0, 0x1   	MOVF	(_wCount + 1), W, B
00472e   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 7)
004730   5d07     subwf   0x07, 0x0, 0x1   	SUBWF	(_SetupPacket + 7), W, B
004732   e104     bnz     0x00473c         	BNZ	_01100_DS_
004734   0101     movlb   0x1              	BANKSEL	_wCount
004736   5191     movf    0x91, 0x0, 0x1   	MOVF	_wCount, W, B
004738   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 6)
00473a   5d06     subwf   0x06, 0x0, 0x1   	SUBWF	(_SetupPacket + 6), W, B
                                           _01100_DS_:
00473c   e204     bc      0x004746         	BC	_01072_DS_
                                           ;	.line	515; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = SetupPacket.wLength;
00473e   c506     movff   0x506, 0x191     	MOVFF	(_SetupPacket + 6), _wCount
004740   f191
004742   c507     movff   0x507, 0x192     	MOVFF	(_SetupPacket + 7), (_wCount + 1)
004744   f192
                                           _01072_DS_:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	InDataStage(0);
004746   0e00     movlw   0x00             	MOVLW	0x00
004748   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
00474a   ec6b     call    0x002ed6, 0x0call    0x002ed6, 0x0 	CALL	_InDataStage
00474c   f017
00474e   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	517; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
004750   0e02     movlw   0x02             	MOVLW	0x02
004752   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
004754   6fad     movwf   0xad, 0x1        	MOVWF	_ctrlTransferStage, B
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
004756   0e40     movlw   0x40             	MOVLW	0x40
004758   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
00475a   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
00475c   0e00     movlw   0x00             	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
00475e   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
004760   0e05     movlw   0x05             	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
004762   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	521; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
004764   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
004766   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
004768   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00476a   6f06     movwf   0x06, 0x1        	MOVWF	(_ep_bdt + 6), B
00476c   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00476e   6f07     movwf   0x07, 0x1        	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	526; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004770   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
004772   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
004774   d00f     bra     0x004794         	BRA	_01078_DS_
                                           _01074_DS_:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
004776   0e01     movlw   0x01             	MOVLW	0x01
004778   0101     movlb   0x1              	BANKSEL	_ctrlTransferStage
00477a   6fad     movwf   0xad, 0x1        	MOVWF	_ctrlTransferStage, B
00477c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
00477e   6b05     clrf    0x05, 0x1        	CLRF	(_ep_bdt + 5), B
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004780   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
004782   6f04     movwf   0x04, 0x1        	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
004784   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004786   6f01     movwf   0x01, 0x1        	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
004788   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00478a   6f02     movwf   0x02, 0x1        	MOVWF	(_ep_bdt + 2), B
00478c   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00478e   6f03     movwf   0x03, 0x1        	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	540; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004790   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
004792   6f00     movwf   0x00, 0x1        	MOVWF	_ep_bdt, B
                                           _01078_DS_:
                                           ;	.line	544; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	UCONbits.PKTDIS = 0;
004794   986d     bcf     0x6d, 0x4, 0x0   	BCF	_UCONbits, 4
004796   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void OutDataStage(unsigned char ep) {
003aa4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003aa6   ffe5
003aa8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003aaa   ffd9
003aac   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003aae   ffe5
003ab0   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003ab2   ffe5
003ab4   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003ab6   ffe5
003ab8   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003aba   ffe5
003abc   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003abe   ffe5
003ac0   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003ac2   ffe5
003ac4   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
003ac6   ffe5
003ac8   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003aca   ffe5
003acc   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
003ace   ffe5
003ad0   c009     movff   0x009, 0xfe5     	MOVFF	r0x09, POSTDEC1
003ad2   ffe5
003ad4   0e02     movlw   0x02             	MOVLW	0x02
003ad6   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
003ad8   f000
                                           ;	.line	445; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
003ada   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
003adc   0bfe     andlw   0xfe             	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #	MOVF	r0x01, W
003ade   0d04     mullw   0x04             	MULLW	0x04
003ae0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003ae2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003ae4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003ae6   f000
003ae8   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003aea   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003aec   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003aee   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003af0   2002     addwfc  0x02, 0x0, 0x0   	ADDWFC	r0x02, W
003af2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003af4   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
003af6   ffe9
003af8   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
003afa   ffea
003afc   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
003afe   f001
003b00   0e03     movlw   0x03             	MOVLW	0x03
003b02   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003b04   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003b06   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003b08   6a04     clrf    0x04, 0x0        	CLRF	r0x04
003b0a   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003b0c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003b0e   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003b10   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003b12   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
003b14   2a02     incf    0x02, 0x1, 0x0   	INCF	r0x02, F
003b16   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003b18   ffe9
003b1a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
003b1c   ffea
003b1e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003b20   f000
003b22   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003b24   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
003b26   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
003b28   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003b2a   1201     iorwf   0x01, 0x1, 0x0   	IORWF	r0x01, F
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = wCount + bufferSize;
003b2c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003b2e   0101     movlb   0x1              	BANKSEL	_wCount
003b30   2791     addwf   0x91, 0x1, 0x1   	ADDWF	_wCount, F, B
003b32   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003b34   2392     addwfc  0x92, 0x1, 0x1   	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	454; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8*)&controlTransferBuffer;
003b36   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
003b38   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
003b3a   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
003b3c   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003b3e   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
003b40   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003b42   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003b44   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003b46   6a03     clrf    0x03, 0x0        	CLRF	r0x03
                                           _01049_DS_:
003b48   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003b4a   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
003b4c   e102     bnz     0x003b52         	BNZ	_01062_DS_
003b4e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003b50   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
                                           _01062_DS_:
003b52   e22c     bc      0x003bac         	BC	_01051_DS_
                                           ;	.line	462; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr++ = *outPtr++;
003b54   c18e     movff   0x18e, 0x004     	MOVFF	_inPtr, r0x04
003b56   f004
003b58   c18f     movff   0x18f, 0x005     	MOVFF	(_inPtr + 1), r0x05
003b5a   f005
003b5c   c190     movff   0x190, 0x006     	MOVFF	(_inPtr + 2), r0x06
003b5e   f006
003b60   c18b     movff   0x18b, 0x007     	MOVFF	_outPtr, r0x07
003b62   f007
003b64   c18c     movff   0x18c, 0x008     	MOVFF	(_outPtr + 1), r0x08
003b66   f008
003b68   c18d     movff   0x18d, 0x009     	MOVFF	(_outPtr + 2), r0x09
003b6a   f009
003b6c   c007     movff   0x007, 0xfe9     	MOVFF	r0x07, FSR0L
003b6e   ffe9
003b70   c008     movff   0x008, 0xff3     	MOVFF	r0x08, PRODL
003b72   fff3
003b74   5009     movf    0x09, 0x0, 0x0   	MOVF	r0x09, W
003b76   ece2     call    0x0057c4, 0x0call    0x0057c4, 0x0 	CALL	__gptrget1
003b78   f02b
003b7a   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
003b7c   0101     movlb   0x1              	BANKSEL	_outPtr
003b7e   2b8b     incf    0x8b, 0x1, 0x1   	INCF	_outPtr, F, B
003b80   e303     bnc     0x003b88         	BNC	_01063_DS_
                                           ; removed redundant BANKSEL
003b82   3f8c     incfsz  0x8c, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003b84   d001     bra     0x003b88         	BRA	_11832_DS_
                                           ; removed redundant BANKSEL
003b86   2b8d     incf    0x8d, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _11832_DS_:
                                           _01063_DS_:
003b88   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
003b8a   ffe5
003b8c   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
003b8e   ffe9
003b90   c005     movff   0x005, 0xff3     	MOVFF	r0x05, PRODL
003b92   fff3
003b94   5006     movf    0x06, 0x0, 0x0   	MOVF	r0x06, W
003b96   ec37     call    0x00586e, 0x0call    0x00586e, 0x0 	CALL	__gptrput1
003b98   f02c
003b9a   0101     movlb   0x1              	BANKSEL	_inPtr
003b9c   2b8e     incf    0x8e, 0x1, 0x1   	INCF	_inPtr, F, B
003b9e   e303     bnc     0x003ba6         	BNC	_01064_DS_
                                           ; removed redundant BANKSEL
003ba0   3f8f     incfsz  0x8f, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003ba2   d001     bra     0x003ba6         	BRA	_21833_DS_
                                           ; removed redundant BANKSEL
003ba4   2b90     incf    0x90, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _21833_DS_:
                                           _01064_DS_:
                                           ;	.line	458; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003ba6   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
003ba8   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
003baa   d7ce     bra     0x003b48         	BRA	_01049_DS_
                                           _01051_DS_:
003bac   cfe4     movff   0xfe4, 0x009     	MOVFF	PREINC1, r0x09
003bae   f009
003bb0   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
003bb2   f008
003bb4   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003bb6   f007
003bb8   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003bba   f006
003bbc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003bbe   f005
003bc0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003bc2   f004
003bc4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003bc6   f003
003bc8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003bca   f002
003bcc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003bce   f001
003bd0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003bd2   f000
003bd4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003bd6   ffd9
003bd8   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__InDataStage	code
                                           _InDataStage:
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void InDataStage(unsigned char ep) {
002ed6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ed8   ffe5
002eda   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002edc   ffd9
002ede   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002ee0   ffe5
002ee2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002ee4   ffe5
002ee6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002ee8   ffe5
002eea   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002eec   ffe5
002eee   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002ef0   ffe5
002ef2   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002ef4   ffe5
002ef6   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
002ef8   ffe5
002efa   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
002efc   ffe5
002efe   c008     movff   0x008, 0xfe5     	MOVFF	r0x08, POSTDEC1
002f00   ffe5
002f02   0e02     movlw   0x02             	MOVLW	0x02
002f04   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002f06   f000
                                           ;	.line	402; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
002f08   0e00     movlw   0x00             	MOVLW	0x00
002f0a   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
002f0c   5d92     subwf   0x92, 0x0, 0x1   	SUBWF	(_wCount + 1), W, B
002f0e   e102     bnz     0x002f14         	BNZ	_01034_DS_
002f10   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
002f12   5d91     subwf   0x91, 0x0, 0x1   	SUBWF	_wCount, W, B
                                           _01034_DS_:
002f14   e205     bc      0x002f20         	BC	_01016_DS_
                                           ;	.line	403; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = wCount;
002f16   c191     movff   0x191, 0x001     	MOVFF	_wCount, r0x01
002f18   f001
002f1a   c192     movff   0x192, 0x002     	MOVFF	(_wCount + 1), r0x02
002f1c   f002
002f1e   d003     bra     0x002f26         	BRA	_01017_DS_
                                           _01016_DS_:
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
002f20   0e40     movlw   0x40             	MOVLW	0x40
002f22   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002f24   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           _01017_DS_:
                                           ;	.line	413; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
002f26   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
002f28   0bfe     andlw   0xfe             	ANDLW	0xfe
002f2a   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002f2c   2803     incf    0x03, 0x0, 0x0   	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #	MOVF	r0x00, W
002f2e   0d04     mullw   0x04             	MULLW	0x04
002f30   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
002f32   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002f34   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
002f36   f000
002f38   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f3a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f3c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002f3e   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f40   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f42   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002f44   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f46   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f48   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002f4a   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f4c   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f4e   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002f50   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
002f52   ffe9
002f54   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
002f56   ffea
002f58   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
002f5a   f006
002f5c   0efc     movlw   0xfc             	MOVLW	0xfc
002f5e   1606     andwf   0x06, 0x1, 0x0   	ANDWF	r0x06, F
002f60   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002f62   ffe9
002f64   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002f66   ffea
002f68   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
002f6a   ffef
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (u8)((bufferSize & 0x0300) >> 8);
002f6c   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f6e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f70   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002f72   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f74   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f76   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002f78   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002f7a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002f7c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002f7e   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002f80   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002f82   6e07     movwf   0x07, 0x0        	MOVWF	r0x07
002f84   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
002f86   ffe9
002f88   c007     movff   0x007, 0xfea     	MOVFF	r0x07, FSR0H
002f8a   ffea
002f8c   cfef     movff   0xfef, 0x006     	MOVFF	INDF0, r0x06
002f8e   f006
002f90   0e03     movlw   0x03             	MOVLW	0x03
002f92   1402     andwf   0x02, 0x0, 0x0   	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x08
                                           ; #	MOVF	r0x08, W
002f94   1206     iorwf   0x06, 0x1, 0x0   	IORWF	r0x06, F
002f96   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002f98   ffe9
002f9a   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002f9c   ffea
002f9e   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
002fa0   ffef
                                           ;	.line	415; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).Cnt = (u8)(bufferSize & 0xFF);
002fa2   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002fa4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002fa6   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002fa8   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002faa   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
002fac   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002fae   4a04     infsnz  0x04, 0x1, 0x0   	INFSNZ	r0x04, F
002fb0   2a05     incf    0x05, 0x1, 0x0   	INCF	r0x05, F
002fb2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002fb4   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
002fb6   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002fb8   ffe9
002fba   c005     movff   0x005, 0xfea     	MOVFF	r0x05, FSR0H
002fbc   ffea
002fbe   c006     movff   0x006, 0xfef     	MOVFF	r0x06, INDF0
002fc0   ffef
                                           ;	.line	416; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
002fc2   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
002fc4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002fc6   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
002fc8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002fca   0e02     movlw   0x02             	MOVLW	0x02
002fcc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002fce   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002fd0   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
002fd2   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
002fd4   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
002fd6   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
002fd8   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
002fda   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
002fdc   ffe9
002fde   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
002fe0   ffea
002fe2   c004     movff   0x004, 0xfee     	MOVFF	r0x04, POSTINC0
002fe4   ffee
002fe6   c005     movff   0x005, 0xfef     	MOVFF	r0x05, INDF0
002fe8   ffef
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = wCount - bufferSize;
002fea   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002fec   0101     movlb   0x1              	BANKSEL	_wCount
002fee   5f91     subwf   0x91, 0x1, 0x1   	SUBWF	_wCount, F, B
002ff0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
002ff2   5b92     subwfb  0x92, 0x1, 0x1   	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&controlTransferBuffer;
002ff4   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
002ff6   0101     movlb   0x1              	BANKSEL	(_inPtr + 1)
002ff8   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
002ffa   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
002ffc   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
002ffe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003000   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003002   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _01020_DS_:
003004   c000     movff   0x000, 0x003     	MOVFF	r0x00, r0x03
003006   f003
003008   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00300a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00300c   5c04     subwf   0x04, 0x0, 0x0   	SUBWF	r0x04, W
00300e   e102     bnz     0x003014         	BNZ	_01040_DS_
003010   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003012   5c03     subwf   0x03, 0x0, 0x0   	SUBWF	r0x03, W
                                           _01040_DS_:
003014   e22b     bc      0x00306c         	BC	_01022_DS_
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr++ = *outPtr++;
003016   c18e     movff   0x18e, 0x003     	MOVFF	_inPtr, r0x03
003018   f003
00301a   c18f     movff   0x18f, 0x004     	MOVFF	(_inPtr + 1), r0x04
00301c   f004
00301e   c190     movff   0x190, 0x005     	MOVFF	(_inPtr + 2), r0x05
003020   f005
003022   c18b     movff   0x18b, 0x006     	MOVFF	_outPtr, r0x06
003024   f006
003026   c18c     movff   0x18c, 0x007     	MOVFF	(_outPtr + 1), r0x07
003028   f007
00302a   c18d     movff   0x18d, 0x008     	MOVFF	(_outPtr + 2), r0x08
00302c   f008
00302e   c006     movff   0x006, 0xfe9     	MOVFF	r0x06, FSR0L
003030   ffe9
003032   c007     movff   0x007, 0xff3     	MOVFF	r0x07, PRODL
003034   fff3
003036   5008     movf    0x08, 0x0, 0x0   	MOVF	r0x08, W
003038   ece2     call    0x0057c4, 0x0call    0x0057c4, 0x0 	CALL	__gptrget1
00303a   f02b
00303c   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
00303e   0101     movlb   0x1              	BANKSEL	_outPtr
003040   2b8b     incf    0x8b, 0x1, 0x1   	INCF	_outPtr, F, B
003042   e303     bnc     0x00304a         	BNC	_01041_DS_
                                           ; removed redundant BANKSEL
003044   3f8c     incfsz  0x8c, 0x1, 0x1   	INCFSZ	(_outPtr + 1), F, B
003046   d001     bra     0x00304a         	BRA	_31834_DS_
                                           ; removed redundant BANKSEL
003048   2b8d     incf    0x8d, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _31834_DS_:
                                           _01041_DS_:
00304a   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
00304c   ffe5
00304e   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
003050   ffe9
003052   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
003054   fff3
003056   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003058   ec37     call    0x00586e, 0x0call    0x00586e, 0x0 	CALL	__gptrput1
00305a   f02c
00305c   0101     movlb   0x1              	BANKSEL	_inPtr
00305e   2b8e     incf    0x8e, 0x1, 0x1   	INCF	_inPtr, F, B
003060   e303     bnc     0x003068         	BNC	_01042_DS_
                                           ; removed redundant BANKSEL
003062   3f8f     incfsz  0x8f, 0x1, 0x1   	INCFSZ	(_inPtr + 1), F, B
003064   d001     bra     0x003068         	BRA	_41835_DS_
                                           ; removed redundant BANKSEL
003066   2b90     incf    0x90, 0x1, 0x1   	INCF	(_inPtr + 2), F, B
                                           _41835_DS_:
                                           _01042_DS_:
                                           ;	.line	429; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003068   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
00306a   d7cc     bra     0x003004         	BRA	_01020_DS_
                                           _01022_DS_:
00306c   cfe4     movff   0xfe4, 0x008     	MOVFF	PREINC1, r0x08
00306e   f008
003070   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
003072   f007
003074   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
003076   f006
003078   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00307a   f005
00307c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00307e   f004
003080   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003082   f003
003084   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003086   f002
003088   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00308a   f001
00308c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00308e   f000
003090   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003092   ffd9
003094   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	void ProcessStandardRequest(void) {
004538   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00453a   ffe5
                                           ;	.line	285; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 request = SetupPacket.bRequest;
00453c   c501     movff   0x501, 0x000     	MOVFF	(_SetupPacket + 1), r0x00
00453e   f000
004540   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	287; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
004542   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00929_DS_
                                           ; #	GOTO	_00961_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	return;
004544   0b60     andlw   0x60             	ANDLW	0x60
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (request == SET_ADDRESS) {
004546   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
004548   d061     bra     0x00460c         	BRA	_00961_DS_
00454a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00454c   0a05     xorlw   0x05             	XORLW	0x05
00454e   e109     bnz     0x004562         	BNZ	_00959_DS_
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004550   0e01     movlw   0x01             	MOVLW	0x01
004552   0101     movlb   0x1              	BANKSEL	_requestHandled
004554   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	301; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ADDRESS;
004556   0e04     movlw   0x04             	MOVLW	0x04
004558   0101     movlb   0x1              	BANKSEL	_deviceState
00455a   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
00455c   c502     movff   0x502, 0x19d     	MOVFF	(_SetupPacket + 2), _deviceAddress
00455e   f19d
004560   d055     bra     0x00460c         	BRA	_00961_DS_
                                           _00959_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
004562   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004564   0a06     xorlw   0x06             	XORLW	0x06
004566   e103     bnz     0x00456e         	BNZ	_00956_DS_
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	GetDescriptor();
004568   ecba     call    0x004174, 0x0call    0x004174, 0x0 	CALL	_GetDescriptor
00456a   f020
00456c   d04f     bra     0x00460c         	BRA	_00961_DS_
                                           _00956_DS_:
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
00456e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004570   0a09     xorlw   0x09             	XORLW	0x09
004572   e112     bnz     0x004598         	BNZ	_00953_DS_
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004574   0e01     movlw   0x01             	MOVLW	0x01
004576   0101     movlb   0x1              	BANKSEL	_requestHandled
004578   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
00457a   c502     movff   0x502, 0x1ac     	MOVFF	(_SetupPacket + 2), _currentConfiguration
00457c   f1ac
00457e   0101     movlb   0x1              	BANKSEL	_currentConfiguration
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (currentConfiguration == 0)
004580   51ac     movf    0xac, 0x0, 0x1   	MOVF	_currentConfiguration, W, B
004582   e104     bnz     0x00458c         	BNZ	_00931_DS_
                                           ;	.line	318; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = ADDRESS;
004584   0e04     movlw   0x04             	MOVLW	0x04
004586   0101     movlb   0x1              	BANKSEL	_deviceState
004588   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
00458a   d040     bra     0x00460c         	BRA	_00961_DS_
                                           _00931_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	deviceState = CONFIGURED;
00458c   0e05     movlw   0x05             	MOVLW	0x05
00458e   0101     movlb   0x1              	BANKSEL	_deviceState
004590   6fab     movwf   0xab, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	CDCInitEndpoint();
004592   ec12     call    0x005424, 0x0call    0x005424, 0x0 	CALL	_CDCInitEndpoint
004594   f02a
004596   d03a     bra     0x00460c         	BRA	_00961_DS_
                                           _00953_DS_:
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
004598   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00459a   0a08     xorlw   0x08             	XORLW	0x08
00459c   e10f     bnz     0x0045bc         	BNZ	_00950_DS_
                                           ;	.line	345; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
00459e   0e01     movlw   0x01             	MOVLW	0x01
0045a0   0101     movlb   0x1              	BANKSEL	_requestHandled
0045a2   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8*)&currentConfiguration;
0045a4   0e01     movlw   0x01             	MOVLW	HIGH(_currentConfiguration)
0045a6   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
0045a8   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0045aa   0eac     movlw   0xac             	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
0045ac   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
0045ae   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0045b0   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	347; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 1;
0045b2   0e01     movlw   0x01             	MOVLW	0x01
0045b4   0101     movlb   0x1              	BANKSEL	_wCount
0045b6   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0045b8   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0045ba   d028     bra     0x00460c         	BRA	_00961_DS_
                                           _00950_DS_:
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_STATUS) {
0045bc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045be   e103     bnz     0x0045c6         	BNZ	_00947_DS_
                                           ;	.line	350; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	GetStatus();
0045c0   eca7     call    0x003f4e, 0x0call    0x003f4e, 0x0 	CALL	_GetStatus
0045c2   f01f
0045c4   d023     bra     0x00460c         	BRA	_00961_DS_
                                           _00947_DS_:
                                           ;	.line	352; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
0045c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045c8   0a01     xorlw   0x01             	XORLW	0x01
0045ca   e003     bz      0x0045d2         	BZ	_00942_DS_
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	(request == SET_FEATURE)) {
0045cc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045ce   0a03     xorlw   0x03             	XORLW	0x03
0045d0   e103     bnz     0x0045d8         	BNZ	_00943_DS_
                                           _00942_DS_:
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	SetFeature();
0045d2   eced     call    0x003bda, 0x0call    0x003bda, 0x0 	CALL	_SetFeature
0045d4   f01d
0045d6   d01a     bra     0x00460c         	BRA	_00961_DS_
                                           _00943_DS_:
                                           ;	.line	356; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == GET_INTERFACE) {
0045d8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0045da   0a0a     xorlw   0x0a             	XORLW	0x0a
0045dc   e111     bnz     0x004600         	BNZ	_00940_DS_
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0045de   0e01     movlw   0x01             	MOVLW	0x01
0045e0   0101     movlb   0x1              	BANKSEL	_requestHandled
0045e2   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
0045e4   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	363; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0;
0045e6   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ;	.line	364; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
0045e8   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
0045ea   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
0045ec   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0045ee   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0045f0   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
0045f2   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0045f4   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 1;
0045f6   0e01     movlw   0x01             	MOVLW	0x01
0045f8   0101     movlb   0x1              	BANKSEL	_wCount
0045fa   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0045fc   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0045fe   d006     bra     0x00460c         	BRA	_00961_DS_
                                           _00940_DS_:
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SET_INTERFACE) {
004600   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004602   0a0b     xorlw   0x0b             	XORLW	0x0b
004604   e103     bnz     0x00460c         	BNZ	_00961_DS_
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
004606   0e01     movlw   0x01             	MOVLW	0x01
004608   0101     movlb   0x1              	BANKSEL	_requestHandled
00460a   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _00961_DS_:
                                           ;	.line	379; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (request == SYNCH_FRAME) {
00460c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00460e   f000
004610   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SetFeature	code
                                           _SetFeature:
                                           ;	.line	240; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void SetFeature(void) {
003bda   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003bdc   ffe5
003bde   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003be0   ffe5
003be2   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003be4   ffe5
003be6   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003be8   ffe5
003bea   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003bec   ffe5
003bee   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003bf0   ffe5
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003bf2   0e1f     movlw   0x1f             	MOVLW	0x1f
003bf4   0105     movlb   0x5              	BANKSEL	_SetupPacket
003bf6   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
003bf8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 feature = SetupPacket.wValue0;
003bfa   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
003bfc   f001
                                           ;	.line	247; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (recipient == 0x00) {
003bfe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c00   e112     bnz     0x003c26         	BNZ	_00880_DS_
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
003c02   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c04   0a01     xorlw   0x01             	XORLW	0x01
003c06   e001     bz      0x003c0a         	BZ	_00913_DS_
003c08   d076     bra     0x003cf6         	BRA	_00882_DS_
                                           _00913_DS_:
                                           ;	.line	250; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003c0a   0e01     movlw   0x01             	MOVLW	0x01
003c0c   0101     movlb   0x1              	BANKSEL	_requestHandled
003c0e   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003c10   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	251; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
003c12   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
003c14   0a03     xorlw   0x03             	XORLW	0x03
003c16   e104     bnz     0x003c20         	BNZ	_00862_DS_
                                           ;	.line	252; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 1;
003c18   0e01     movlw   0x01             	MOVLW	0x01
003c1a   0101     movlb   0x1              	BANKSEL	_remoteWakeup
003c1c   6faa     movwf   0xaa, 0x1        	MOVWF	_remoteWakeup, B
003c1e   d06b     bra     0x003cf6         	BRA	_00882_DS_
                                           _00862_DS_:
003c20   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	remoteWakeup = 0;
003c22   6baa     clrf    0xaa, 0x1        	CLRF	_remoteWakeup, B
003c24   d068     bra     0x003cf6         	BRA	_00882_DS_
                                           _00880_DS_:
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x02) {
003c26   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c28   0a02     xorlw   0x02             	XORLW	0x02
003c2a   e001     bz      0x003c2e         	BZ	_00917_DS_
003c2c   d064     bra     0x003cf6         	BRA	_00882_DS_
                                           _00917_DS_:
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003c2e   0e0f     movlw   0x0f             	MOVLW	0x0f
003c30   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003c32   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003c34   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	261; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003c36   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003c38   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003c3a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           ;	.line	262; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
003c3c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003c3e   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
003c40   d05a     bra     0x003cf6         	BRA	_00882_DS_
003c42   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c44   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003c46   d057     bra     0x003cf6         	BRA	_00882_DS_
                                           ;	.line	264; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003c48   0e01     movlw   0x01             	MOVLW	0x01
003c4a   0101     movlb   0x1              	BANKSEL	_requestHandled
003c4c   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	267; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003c4e   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003c50   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003c52   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003c54   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003c56   0e80     movlw   0x80             	MOVLW	0x80
003c58   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
003c5a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c5c   0d08     mullw   0x08             	MULLW	0x08
003c5e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003c60   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003c62   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003c64   f000
003c66   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003c68   2401     addwf   0x01, 0x0, 0x0   	ADDWF	r0x01, W
003c6a   0101     movlb   0x1              	BANKSEL	_inPtr
003c6c   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003c6e   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003c70   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003c72   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
003c74   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003c76   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
003c78   68e8     setf    0xe8, 0x0        	SETF	WREG
003c7a   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003c7c   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (endpointDir)
003c7e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003c80   e005     bz      0x003c8c         	BZ	_00867_DS_
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr += 4;
003c82   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
003c84   278e     addwf   0x8e, 0x1, 0x1   	ADDWF	_inPtr, F, B
003c86   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
003c88   238f     addwfc  0x8f, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003c8a   2390     addwfc  0x90, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00867_DS_:
003c8c   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
003c8e   5101     movf    0x01, 0x0, 0x1   	MOVF	(_SetupPacket + 1), W, B
003c90   0a03     xorlw   0x03             	XORLW	0x03
003c92   e110     bnz     0x003cb4         	BNZ	_00872_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x84;
003c94   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003c96   f000
003c98   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003c9a   f001
003c9c   c190     movff   0x190, 0x003     	MOVFF	(_inPtr + 2), r0x03
003c9e   f003
003ca0   0e84     movlw   0x84             	MOVLW	0x84
003ca2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003ca4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003ca6   ffe9
003ca8   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003caa   fff3
003cac   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
003cae   ec37     call    0x00586e, 0x0call    0x00586e, 0x0 	CALL	__gptrput1
003cb0   f02c
003cb2   d021     bra     0x003cf6         	BRA	_00882_DS_
                                           _00872_DS_:
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(endpointDir == 1)
003cb4   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cb6   0a01     xorlw   0x01             	XORLW	0x01
003cb8   e10f     bnz     0x003cd8         	BNZ	_00869_DS_
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x00;
003cba   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003cbc   f000
003cbe   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003cc0   f001
003cc2   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003cc4   f002
003cc6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
003cc8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003cca   ffe9
003ccc   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003cce   fff3
003cd0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cd2   ec37     call    0x00586e, 0x0call    0x00586e, 0x0 	CALL	__gptrput1
003cd4   f02c
003cd6   d00f     bra     0x003cf6         	BRA	_00882_DS_
                                           _00869_DS_:
                                           ;	.line	277; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	*inPtr = 0x88;
003cd8   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
003cda   f000
003cdc   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
003cde   f001
003ce0   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
003ce2   f002
003ce4   0e88     movlw   0x88             	MOVLW	0x88
003ce6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003ce8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003cea   ffe9
003cec   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
003cee   fff3
003cf0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
003cf2   ec37     call    0x00586e, 0x0call    0x00586e, 0x0 	CALL	__gptrput1
003cf4   f02c
                                           _00882_DS_:
003cf6   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
003cf8   f005
003cfa   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
003cfc   f004
003cfe   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003d00   f003
003d02   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003d04   f002
003d06   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003d08   f001
003d0a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003d0c   f000
003d0e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__GetStatus	code
                                           _GetStatus:
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void GetStatus(void) {
003f4e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
003f50   ffe5
003f52   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
003f54   ffe5
003f56   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
003f58   ffe5
003f5a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
003f5c   ffe5
003f5e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
003f60   ffe5
003f62   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
003f64   ffe5
                                           ;	.line	197; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 recipient = SetupPacket.bmRequestType & 0x1F;
003f66   0e1f     movlw   0x1f             	MOVLW	0x1f
003f68   0105     movlb   0x5              	BANKSEL	_SetupPacket
003f6a   1500     andwf   0x00, 0x0, 0x1   	ANDWF	_SetupPacket, W, B
003f6c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003f6e   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	201; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0;
003f70   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[1] = 0;
003f72   6b41     clrf    0x41, 0x1        	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	205; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (recipient == 0x00) {
003f74   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003f76   e113     bnz     0x003f9e         	BNZ	_00817_DS_
                                           ;	.line	207; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003f78   0e01     movlw   0x01             	MOVLW	0x01
003f7a   0101     movlb   0x1              	BANKSEL	_requestHandled
003f7c   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003f7e   0101     movlb   0x1              	BANKSEL	_selfPowered
                                           ;	.line	209; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (selfPowered)
003f80   51a9     movf    0xa9, 0x0, 0x1   	MOVF	_selfPowered, W, B
003f82   e004     bz      0x003f8c         	BZ	_00804_DS_
                                           ;	.line	210; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
003f84   0e01     movlw   0x01             	MOVLW	0x01
003f86   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003f88   1140     iorwf   0x40, 0x0, 0x1   	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003f8a   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00804_DS_:
003f8c   0101     movlb   0x1              	BANKSEL	_remoteWakeup
                                           ;	.line	211; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (remoteWakeup)
003f8e   51aa     movf    0xaa, 0x0, 0x1   	MOVF	_remoteWakeup, W, B
003f90   b4d8     btfsc   0xd8, 0x2, 0x0   	BTFSC	STATUS, 2
003f92   d04c     bra     0x00402c         	BRA	_00818_DS_
                                           ;	.line	212; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
003f94   0e02     movlw   0x02             	MOVLW	0x02
003f96   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003f98   1140     iorwf   0x40, 0x0, 0x1   	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003f9a   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
003f9c   d047     bra     0x00402c         	BRA	_00818_DS_
                                           _00817_DS_:
                                           ;	.line	214; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x01) {
003f9e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fa0   0a01     xorlw   0x01             	XORLW	0x01
003fa2   e104     bnz     0x003fac         	BNZ	_00814_DS_
                                           ;	.line	216; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003fa4   0e01     movlw   0x01             	MOVLW	0x01
003fa6   0101     movlb   0x1              	BANKSEL	_requestHandled
003fa8   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
003faa   d040     bra     0x00402c         	BRA	_00818_DS_
                                           _00814_DS_:
                                           ;	.line	218; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (recipient == 0x02) {
003fac   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fae   0a02     xorlw   0x02             	XORLW	0x02
003fb0   e001     bz      0x003fb4         	BZ	_00853_DS_
003fb2   d03c     bra     0x00402c         	BRA	_00818_DS_
                                           _00853_DS_:
                                           ;	.line	220; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointNum = SetupPacket.wIndex0 & 0x0F;
003fb4   0e0f     movlw   0x0f             	MOVLW	0x0f
003fb6   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003fb8   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003fba   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
                                           ;	.line	221; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 endpointDir = SetupPacket.wIndex0 & 0x80;
003fbc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003fbe   1504     andwf   0x04, 0x0, 0x1   	ANDWF	(_SetupPacket + 4), W, B
003fc0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
                                           ;	.line	222; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
003fc2   0e01     movlw   0x01             	MOVLW	0x01
003fc4   0101     movlb   0x1              	BANKSEL	_requestHandled
003fc6   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	225; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr = (u8 *)&EP_OUT_BD(0) + (endpointNum * 8);
003fc8   0e04     movlw   0x04             	MOVLW	HIGH(_ep_bdt)
003fca   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
003fcc   0e00     movlw   0x00             	MOVLW	LOW(_ep_bdt)
003fce   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
003fd0   0e80     movlw   0x80             	MOVLW	0x80
003fd2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
003fd4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fd6   0d08     mullw   0x08             	MULLW	0x08
003fd8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003fda   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
003fdc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003fde   f000
003fe0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003fe2   2402     addwf   0x02, 0x0, 0x0   	ADDWF	r0x02, W
003fe4   0101     movlb   0x1              	BANKSEL	_inPtr
003fe6   6f8e     movwf   0x8e, 0x1        	MOVWF	_inPtr, B
003fe8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
003fea   2003     addwfc  0x03, 0x0, 0x0   	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003fec   6f8f     movwf   0x8f, 0x1        	MOVWF	(_inPtr + 1), B
003fee   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
003ff0   be05     btfsc   0x05, 0x7, 0x0   	BTFSC	r0x05, 7
003ff2   68e8     setf    0xe8, 0x0        	SETF	WREG
003ff4   2004     addwfc  0x04, 0x0, 0x0   	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003ff6   6f90     movwf   0x90, 0x1        	MOVWF	(_inPtr + 2), B
                                           ;	.line	226; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (endpointDir)
003ff8   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003ffa   e005     bz      0x004006         	BZ	_00808_DS_
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	inPtr += 4;
003ffc   0e04     movlw   0x04             	MOVLW	0x04
                                           ; removed redundant BANKSEL
003ffe   278e     addwf   0x8e, 0x1, 0x1   	ADDWF	_inPtr, F, B
004000   0e00     movlw   0x00             	MOVLW	0x00
                                           ; removed redundant BANKSEL
004002   238f     addwfc  0x8f, 0x1, 0x1   	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
004004   2390     addwfc  0x90, 0x1, 0x1   	ADDWFC	(_inPtr + 2), F, B
                                           _00808_DS_:
                                           ;	.line	228; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
004006   c18e     movff   0x18e, 0x000     	MOVFF	_inPtr, r0x00
004008   f000
00400a   c18f     movff   0x18f, 0x001     	MOVFF	(_inPtr + 1), r0x01
00400c   f001
00400e   c190     movff   0x190, 0x002     	MOVFF	(_inPtr + 2), r0x02
004010   f002
004012   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004014   ffe9
004016   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
004018   fff3
00401a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00401c   ece2     call    0x0057c4, 0x0call    0x0057c4, 0x0 	CALL	__gptrget1
00401e   f02b
004020   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004022   a400     btfss   0x00, 0x2, 0x0   	BTFSS	r0x00, 2
004024   d003     bra     0x00402c         	BRA	_00818_DS_
                                           ;	.line	229; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
004026   0e01     movlw   0x01             	MOVLW	0x01
004028   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
00402a   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00818_DS_:
00402c   0101     movlb   0x1              	BANKSEL	_requestHandled
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (requestHandled) {
00402e   51a8     movf    0xa8, 0x0, 0x1   	MOVF	_requestHandled, W, B
004030   e00b     bz      0x004048         	BZ	_00821_DS_
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&controlTransferBuffer;
004032   0e05     movlw   0x05             	MOVLW	HIGH(_controlTransferBuffer)
004034   0101     movlb   0x1              	BANKSEL	(_outPtr + 1)
004036   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
004038   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00403a   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
00403c   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00403e   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	234; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = 2;
004040   0e02     movlw   0x02             	MOVLW	0x02
004042   0101     movlb   0x1              	BANKSEL	_wCount
004044   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004046   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
                                           _00821_DS_:
004048   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00404a   f005
00404c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00404e   f004
004050   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004052   f003
004054   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004056   f002
004058   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00405a   f001
00405c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00405e   f000
004060   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	static void GetDescriptor(void)
004174   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004176   ffe5
004178   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00417a   ffe5
00417c   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00417e   ffe5
004180   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004182   ffe5
004184   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	116; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80)
004186   5100     movf    0x00, 0x0, 0x1   	MOVF	_SetupPacket, W, B
004188   0a80     xorlw   0x80             	XORLW	0x80
00418a   e001     bz      0x00418e         	BZ	_00790_DS_
00418c   d06b     bra     0x004264         	BRA	_00772_DS_
                                           _00790_DS_:
                                           ;	.line	118; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 descriptorType  = SetupPacket.wValue1;
00418e   c503     movff   0x503, 0x000     	MOVFF	(_SetupPacket + 3), r0x00
004190   f000
                                           ;	.line	119; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	u8 descriptorIndex = SetupPacket.wValue0;
004192   c502     movff   0x502, 0x001     	MOVFF	(_SetupPacket + 2), r0x01
004194   f001
                                           ;	.line	121; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR)
004196   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004198   0a01     xorlw   0x01             	XORLW	0x01
00419a   e10f     bnz     0x0041ba         	BNZ	_00768_DS_
                                           ;	.line	126; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
00419c   0e01     movlw   0x01             	MOVLW	0x01
00419e   0101     movlb   0x1              	BANKSEL	_requestHandled
0041a0   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	127; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&libdevice_descriptor;
0041a2   0e00     movlw   0x00             	MOVLW	UPPER(_libdevice_descriptor)
0041a4   0101     movlb   0x1              	BANKSEL	(_outPtr + 2)
0041a6   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
0041a8   0e38     movlw   0x38             	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
0041aa   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0041ac   0e88     movlw   0x88             	MOVLW	LOW(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
0041ae   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	128; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
0041b0   0e12     movlw   0x12             	MOVLW	0x12
0041b2   0101     movlb   0x1              	BANKSEL	_wCount
0041b4   6f91     movwf   0x91, 0x1        	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0041b6   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
0041b8   d055     bra     0x004264         	BRA	_00772_DS_
                                           _00768_DS_:
                                           ;	.line	131; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR)
0041ba   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0041bc   0a02     xorlw   0x02             	XORLW	0x02
0041be   e117     bnz     0x0041ee         	BNZ	_00765_DS_
                                           ;	.line	137; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0041c0   0e01     movlw   0x01             	MOVLW	0x01
0041c2   0101     movlb   0x1              	BANKSEL	_requestHandled
0041c4   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	149; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = (u8 *)&libconfiguration_descriptor;
0041c6   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor)
0041c8   0101     movlb   0x1              	BANKSEL	(_outPtr + 2)
0041ca   6f8d     movwf   0x8d, 0x1        	MOVWF	(_outPtr + 2), B
0041cc   0e38     movlw   0x38             	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0041ce   6f8c     movwf   0x8c, 0x1        	MOVWF	(_outPtr + 1), B
0041d0   0e9a     movlw   0x9a             	MOVLW	LOW(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0041d2   6f8b     movwf   0x8b, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	151; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
0041d4   0e9c     movlw   0x9c             	MOVLW	LOW(_libconfiguration_descriptor + 2)
0041d6   6ef6     movwf   0xf6, 0x0        	MOVWF	TBLPTRL
0041d8   0e38     movlw   0x38             	MOVLW	HIGH(_libconfiguration_descriptor + 2)
0041da   6ef7     movwf   0xf7, 0x0        	MOVWF	TBLPTRH
0041dc   0e00     movlw   0x00             	MOVLW	UPPER(_libconfiguration_descriptor + 2)
0041de   6ef8     movwf   0xf8, 0x0        	MOVWF	TBLPTRU
0041e0   0009     tblrd*+                  	TBLRD*+	
0041e2   cff5     movff   0xff5, 0x191     	MOVFF	TABLAT, _wCount
0041e4   f191
0041e6   0009     tblrd*+                  	TBLRD*+	
0041e8   cff5     movff   0xff5, 0x192     	MOVFF	TABLAT, (_wCount + 1)
0041ea   f192
0041ec   d03b     bra     0x004264         	BRA	_00772_DS_
                                           _00765_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR)
0041ee   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0041f0   0a03     xorlw   0x03             	XORLW	0x03
0041f2   e132     bnz     0x004258         	BNZ	_00762_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
0041f4   0e01     movlw   0x01             	MOVLW	0x01
0041f6   0101     movlb   0x1              	BANKSEL	_requestHandled
0041f8   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ;	.line	167; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	outPtr = libstring_descriptor[descriptorIndex];
0041fa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0041fc   0d03     mullw   0x03             	MULLW	0x03
0041fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
004200   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
004202   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
004204   f001
004206   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004208   0e0a     movlw   0x0a             	MOVLW	LOW(_libstring_descriptor)
00420a   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
00420c   0e39     movlw   0x39             	MOVLW	HIGH(_libstring_descriptor)
00420e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004210   0e00     movlw   0x00             	MOVLW	UPPER(_libstring_descriptor)
004212   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004214   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
004216   fff6
004218   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00421a   fff7
00421c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00421e   fff8
004220   0009     tblrd*+                  	TBLRD*+	
004222   cff5     movff   0xff5, 0x18b     	MOVFF	TABLAT, _outPtr
004224   f18b
004226   0009     tblrd*+                  	TBLRD*+	
004228   cff5     movff   0xff5, 0x18c     	MOVFF	TABLAT, (_outPtr + 1)
00422a   f18c
00422c   0009     tblrd*+                  	TBLRD*+	
00422e   cff5     movff   0xff5, 0x18d     	MOVFF	TABLAT, (_outPtr + 2)
004230   f18d
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	wCount = *outPtr;
004232   c18b     movff   0x18b, 0x001     	MOVFF	_outPtr, r0x01
004234   f001
004236   c18c     movff   0x18c, 0x002     	MOVFF	(_outPtr + 1), r0x02
004238   f002
00423a   c18d     movff   0x18d, 0x003     	MOVFF	(_outPtr + 2), r0x03
00423c   f003
00423e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004240   ffe9
004242   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
004244   fff3
004246   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004248   ece2     call    0x0057c4, 0x0call    0x0057c4, 0x0 	CALL	__gptrget1
00424a   f02b
00424c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00424e   c001     movff   0x001, 0x191     	MOVFF	r0x01, _wCount
004250   f191
004252   0101     movlb   0x1              	BANKSEL	(_wCount + 1)
004254   6b92     clrf    0x92, 0x1        	CLRF	(_wCount + 1), B
004256   d006     bra     0x004264         	BRA	_00772_DS_
                                           _00762_DS_:
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR)
004258   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00425a   0a06     xorlw   0x06             	XORLW	0x06
00425c   e103     bnz     0x004264         	BNZ	_00772_DS_
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/usb/picUSB.c	requestHandled = 1;
00425e   0e01     movlw   0x01             	MOVLW	0x01
004260   0101     movlb   0x1              	BANKSEL	_requestHandled
004262   6fa8     movwf   0xa8, 0x1        	MOVWF	_requestHandled, B
                                           _00772_DS_:
004264   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004266   f003
004268   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00426a   f002
00426c   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
00426e   f001
004270   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004272   f000
004274   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__IO_digital	code
                                           _IO_digital:
                                           ;	.line	123; /home/vbasel/.icaro/v4/firmware/core/io.c	ADCON1 = 0x0F;				// AN0 to AN12 Digital I/O
000c0c   0e0f     movlw   0x0f             	MOVLW	0x0f
000c0e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	124; /home/vbasel/.icaro/v4/firmware/core/io.c	CMCON = 0x07;               // Comparators as Digital I/O
000c10   0e07     movlw   0x07             	MOVLW	0x07
000c12   6eb4     movwf   0xb4, 0x0        	MOVWF	_CMCON
000c14   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__IO_init	code
                                           _IO_init:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/io.c	LATA  = 0x00;
005752   6a89     clrf    0x89, 0x0        	CLRF	_LATA
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/io.c	LATB  = 0x00;
005754   6a8a     clrf    0x8a, 0x0        	CLRF	_LATB
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/io.c	LATC  = 0x00;
005756   6a8b     clrf    0x8b, 0x0        	CLRF	_LATC
                                           ;	.line	79; /home/vbasel/.icaro/v4/firmware/core/io.c	LATD  = 0x00; 
005758   6a8c     clrf    0x8c, 0x0        	CLRF	_LATD
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/io.c	LATE  = 0x00; 
00575a   6a8d     clrf    0x8d, 0x0        	CLRF	_LATE
                                           ;	.line	83; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISA = 0x00;
00575c   6a92     clrf    0x92, 0x0        	CLRF	_TRISA
                                           ;	.line	85; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISB = 0x00;
00575e   6a93     clrf    0x93, 0x0        	CLRF	_TRISB
                                           ;	.line	91; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC0 = 0x00;
005760   9094     bcf     0x94, 0x0, 0x0   	BCF	_TRISCbits, 0
                                           ;	.line	92; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC1 = 0x00;
005762   9294     bcf     0x94, 0x1, 0x0   	BCF	_TRISCbits, 1
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC2 = 0x00;
005764   9494     bcf     0x94, 0x2, 0x0   	BCF	_TRISCbits, 2
                                           ;	.line	94; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC6 = 0x00;
005766   9c94     bcf     0x94, 0x6, 0x0   	BCF	_TRISCbits, 6
                                           ;	.line	95; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISCbits.TRISC7 = 0x00;
005768   9e94     bcf     0x94, 0x7, 0x0   	BCF	_TRISCbits, 7
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISD = 0x00; 
00576a   6a95     clrf    0x95, 0x0        	CLRF	_TRISD
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/io.c	TRISE = 0x00; 
00576c   6a96     clrf    0x96, 0x0        	CLRF	_TRISE
                                           ;	.line	106; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTA  = 0x00;
00576e   6a80     clrf    0x80, 0x0        	CLRF	_PORTA
                                           ;	.line	107; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTB  = 0x00;
005770   6a81     clrf    0x81, 0x0        	CLRF	_PORTB
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTC  = 0x00;
005772   6a82     clrf    0x82, 0x0        	CLRF	_PORTC
                                           ;	.line	112; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTD  = 0x00; 
005774   6a83     clrf    0x83, 0x0        	CLRF	_PORTD
                                           ;	.line	113; /home/vbasel/.icaro/v4/firmware/core/io.c	PORTE  = 0x00; 
005776   6a84     clrf    0x84, 0x0        	CLRF	_PORTE
005778   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogwrite	code
                                           _analogwrite:
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogwrite(u8 pin, u16 duty)
004f74   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f76   ffe5
004f78   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f7a   ffd9
004f7c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004f7e   ffe5
004f80   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004f82   ffe5
004f84   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004f86   ffe5
004f88   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004f8a   ffe5
004f8c   0e02     movlw   0x02             	MOVLW	0x02
004f8e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004f90   f000
004f92   0e03     movlw   0x03             	MOVLW	0x03
004f94   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004f96   f001
004f98   0e04     movlw   0x04             	MOVLW	0x04
004f9a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004f9c   f002
                                           ;	.line	243; /home/vbasel/.icaro/v4/firmware/core/analog.c	switch (pin)
004f9e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004fa0   0a0b     xorlw   0x0b             	XORLW	0x0b
004fa2   e017     bz      0x004fd2         	BZ	_00731_DS_
004fa4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004fa6   0a0c     xorlw   0x0c             	XORLW	0x0c
004fa8   e125     bnz     0x004ff4         	BNZ	_00732_DS_
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON  = 0b00001100;
004faa   0e0c     movlw   0x0c             	MOVLW	0x0c
004fac   6ebd     movwf   0xbd, 0x0        	MOVWF	_CCP1CON
                                           ;	.line	307; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR1L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
004fae   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fb0   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
004fb2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004fb4   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
004fb6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004fb8   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fba   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
004fbc   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004fbe   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004fc0   6ebe     movwf   0xbe, 0x0        	MOVWF	_CCPR1L
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP1CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
004fc2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004fc4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004fc6   0e03     movlw   0x03             	MOVLW	0x03
004fc8   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
004fca   3800     swapf   0x00, 0x0, 0x0   	SWAPF	r0x00, W
004fcc   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
004fce   12bd     iorwf   0xbd, 0x1, 0x0   	IORWF	_CCP1CON, F
                                           ;	.line	309; /home/vbasel/.icaro/v4/firmware/core/analog.c	break;
004fd0   d011     bra     0x004ff4         	BRA	_00732_DS_
                                           _00731_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON  = 0b00001100;
004fd2   0e0c     movlw   0x0c             	MOVLW	0x0c
004fd4   6eba     movwf   0xba, 0x0        	MOVWF	_CCP2CON
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCPR2L   = ( duty >> 2 ) & 0xFF;    // 8 LSB
004fd6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fd8   3002     rrcf    0x02, 0x0, 0x0   	RRCF	r0x02, W
004fda   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004fdc   3001     rrcf    0x01, 0x0, 0x0   	RRCF	r0x01, W
004fde   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004fe0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
004fe2   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
004fe4   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
004fe6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004fe8   6ebb     movwf   0xbb, 0x0        	MOVWF	_CCPR2L
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/core/analog.c	CCP2CON |= ((u8)duty & 0x03) << 4;  // 2 MSB in <5:4>
004fea   0e03     movlw   0x03             	MOVLW	0x03
004fec   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
004fee   3801     swapf   0x01, 0x0, 0x0   	SWAPF	r0x01, W
004ff0   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004ff2   12ba     iorwf   0xba, 0x1, 0x0   	IORWF	_CCP2CON, F
                                           _00732_DS_:
                                           ;	.line	321; /home/vbasel/.icaro/v4/firmware/core/analog.c	PIR1bits.TMR2IF = 0;
004ff4   929e     bcf     0x9e, 0x1, 0x0   	BCF	_PIR1bits, 1
004ff6   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004ff8   f003
004ffa   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004ffc   f002
004ffe   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005000   f001
005002   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005004   f000
005006   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005008   ffd9
00500a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogwrite_init	code
                                           _analogwrite_init:
                                           ;	.line	237; /home/vbasel/.icaro/v4/firmware/core/analog.c	PR2 = 0xFF;                         // set PWM period to the max. to get 10-bit res.
0058cc   68cb     setf    0xcb, 0x0        	SETF	_PR2
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/core/analog.c	T2CON = 0b00000100;                 // Timer2 on, prescaler is 1
0058ce   0e04     movlw   0x04             	MOVLW	0x04
0058d0   6eca     movwf   0xca, 0x0        	MOVWF	_T2CON
0058d2   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogread	code
                                           _analogread:
                                           ;	.line	134; /home/vbasel/.icaro/v4/firmware/core/analog.c	u16 analogread(u8 channel)
004ed8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004eda   ffe5
004edc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004ede   ffd9
004ee0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004ee2   ffe5
004ee4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004ee6   ffe5
004ee8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004eea   ffe5
004eec   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004eee   ffe5
004ef0   0e02     movlw   0x02             	MOVLW	0x02
004ef2   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004ef4   f000
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(channel>=13 && channel<=20)
004ef6   0e0d     movlw   0x0d             	MOVLW	0x0d
004ef8   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004efa   e30b     bnc     0x004f12         	BNC	_00684_DS_
004efc   0e15     movlw   0x15             	MOVLW	0x15
004efe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004f00   e208     bc      0x004f12         	BC	_00684_DS_
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0=(channel-13) << 2;   // A0 = 13, ..., A4 = 17
004f02   0ef3     movlw   0xf3             	MOVLW	0xf3
004f04   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004f06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004f08   4401     rlncf   0x01, 0x0, 0x0   	RLNCF	r0x01, W
004f0a   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
004f0c   0bfc     andlw   0xfc             	ANDLW	0xfc
004f0e   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
004f10   d007     bra     0x004f20         	BRA	_00685_DS_
                                           _00684_DS_:
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(channel<=5)
004f12   0e06     movlw   0x06             	MOVLW	0x06
004f14   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004f16   e204     bc      0x004f20         	BC	_00685_DS_
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0 = channel << 2;      // A0 = 0, ..., A4 = 4
004f18   4400     rlncf   0x00, 0x0, 0x0   	RLNCF	r0x00, W
004f1a   44e8     rlncf   0xe8, 0x0, 0x0   	RLNCF	WREG, W
004f1c   0bfc     andlw   0xfc             	ANDLW	0xfc
004f1e   6ec2     movwf   0xc2, 0x0        	MOVWF	_ADCON0
                                           _00685_DS_:
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON=1;                  // A/D Converter module is enabled
004f20   80c2     bsf     0xc2, 0x0, 0x0   	BSF	_ADCON0bits, 0
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
004f22   0e09     movlw   0x09             	MOVLW	0x09
004f24   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
004f26   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00693_DS_:
004f28   0000     nop                      	NOP
004f2a   0eff     movlw   0xff             	MOVLW	0xff
004f2c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004f2e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ;	.line	182; /home/vbasel/.icaro/v4/firmware/core/analog.c	for (result=1;result<10;result++)   // Acquisition time
004f30   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f32   1001     iorwf   0x01, 0x0, 0x0   	IORWF	r0x01, W
004f34   e1f9     bnz     0x004f28         	BNZ	_00693_DS_
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.GO=1;                    // Start A/D Conversion
004f36   82c2     bsf     0xc2, 0x1, 0x0   	BSF	_ADCON0bits, 1
                                           _00688_DS_:
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/core/analog.c	while (ADCON0bits.GO);              // Wait for conversion stop
004f38   b2c2     btfsc   0xc2, 0x1, 0x0   	BTFSC	_ADCON0bits, 1
004f3a   d7fe     bra     0x004f38         	BRA	_00688_DS_
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/core/analog.c	result = ADRESH << 8;
004f3c   cfc4     movff   0xfc4, 0x000     	MOVFF	_ADRESH, r0x00
004f3e   f000
004f40   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004f42   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f44   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
004f46   6a02     clrf    0x02, 0x0        	CLRF	r0x02
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/analog.c	result += ADRESL;
004f48   cfc3     movff   0xfc3, 0x000     	MOVFF	_ADRESL, r0x00
004f4a   f000
004f4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
004f4e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004f50   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
004f52   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004f54   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
                                           ;	.line	192; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON0bits.ADON = 0;                // A/D Converter module is disabled
004f56   90c2     bcf     0xc2, 0x0, 0x0   	BCF	_ADCON0bits, 0
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/analog.c	return(result);
004f58   c003     movff   0x003, 0xff3     	MOVFF	r0x03, PRODL
004f5a   fff3
004f5c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004f5e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004f60   f003
004f62   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004f64   f002
004f66   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004f68   f001
004f6a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004f6c   f000
004f6e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f70   ffd9
004f72   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analogreference	code
                                           _analogreference:
                                           ;	.line	103; /home/vbasel/.icaro/v4/firmware/core/analog.c	void analogreference(u8 Type)
00577a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00577c   ffe5
00577e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005780   ffd9
005782   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005784   ffe5
005786   0e02     movlw   0x02             	MOVLW	0x02
005788   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00578a   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00665_DS_
                                           ; #	GOTO	_00667_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	108; /home/vbasel/.icaro/v4/firmware/core/analog.c	if(Type == DEFAULT)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
00578c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ;	.line	109; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x00;			//Vref+ = VDD
00578e   e004     bz      0x005798         	BZ	_00667_DS_
                                           ;	.line	110; /home/vbasel/.icaro/v4/firmware/core/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
005790   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005792   0a01     xorlw   0x01             	XORLW	0x01
005794   e101     bnz     0x005798         	BNZ	_00667_DS_
                                           ;	.line	111; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1|=0x10;			//Vref+ = External source
005796   88c1     bsf     0xc1, 0x4, 0x0   	BSF	_ADCON1, 4
                                           _00667_DS_:
005798   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00579a   f000
00579c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00579e   ffd9
0057a0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__analog_init	code
                                           _analog_init:
                                           ;	.line	36; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISA=TRISA | 0x2F;
005896   0e2f     movlw   0x2f             	MOVLW	0x2f
005898   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
                                           ;	.line	37; /home/vbasel/.icaro/v4/firmware/core/analog.c	TRISE=TRISE | 0x07;	
00589a   0e07     movlw   0x07             	MOVLW	0x07
00589c   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
                                           ;	.line	38; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON1=0x07;
00589e   6ec1     movwf   0xc1, 0x0        	MOVWF	_ADCON1
                                           ;	.line	39; /home/vbasel/.icaro/v4/firmware/core/analog.c	ADCON2=0xBD;
0058a0   0ebd     movlw   0xbd             	MOVLW	0xbd
0058a2   6ec0     movwf   0xc0, 0x0        	MOVWF	_ADCON2
0058a4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	547; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (PIR1bits.TMR1IF)
005616   a09e     btfss   0x9e, 0x0, 0x0   	BTFSS	_PIR1bits, 0
005618   d01f     bra     0x005658         	BRA	_00652_DS_
00561a   0101     movlb   0x1              	BANKSEL	_phase
                                           ;	.line	553; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (phase)
00561c   5100     movf    0x00, 0x0, 0x1   	MOVF	_phase, W, B
00561e   e00b     bz      0x005636         	BZ	_00648_DS_
                                           ;	.line	555; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseUp();
005620   ec1f     call    0x00583e, 0x0call    0x00583e, 0x0 	CALL	_ServosPulseUp
005622   f02c
                                           ;	.line	557; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0xe9;//0xe9;
005624   0ee9     movlw   0xe9             	MOVLW	0xe9
005626   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	558; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0x59;
005628   0e59     movlw   0x59             	MOVLW	0x59
00562a   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ;	.line	560; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=1;
00562c   0e01     movlw   0x01             	MOVLW	0x01
00562e   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
005630   0101     movlb   0x1              	BANKSEL	_phase
                                           ;	.line	561; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 0;
005632   6b00     clrf    0x00, 0x1        	CLRF	_phase, B
005634   d010     bra     0x005656         	BRA	_00649_DS_
                                           _00648_DS_:
                                           ;	.line	569; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	ServosPulseDown();
005636   ec6d     call    0x0036da, 0x0call    0x0036da, 0x0 	CALL	_ServosPulseDown
005638   f01b
                                           ;	.line	573; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H= 0x32;
00563a   0e32     movlw   0x32             	MOVLW	0x32
00563c   6ecf     movwf   0xcf, 0x0        	MOVWF	_TMR1H
                                           ;	.line	574; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L= 0xeb;
00563e   0eeb     movlw   0xeb             	MOVLW	0xeb
005640   6ece     movwf   0xce, 0x0        	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00646_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
005642   0101     movlb   0x1              	BANKSEL	_needreordering
                                           ;	.line	576; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (needreordering)
005644   5101     movf    0x01, 0x0, 0x1   	MOVF	_needreordering, W, B
                                           ;	.line	577; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	SortServoTimings(); // This takes more than 1 ms, but it's call only if needed.
005646   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
                                           ;	.line	578; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
005648   ec0e     call    0x000c1c, 0x0call    0x000c1c, 0x0 	CALL	_SortServoTimings
00564a   f006
00564c   0e21     movlw   0x21             	MOVLW	0x21
00564e   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	579; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	phase = 1;  			//This indicates that after next interrupt it will start the servos cycle.
005650   0e01     movlw   0x01             	MOVLW	0x01
005652   0101     movlb   0x1              	BANKSEL	_phase
005654   6f00     movwf   0x00, 0x1        	MOVWF	_phase, B
                                           _00649_DS_:
                                           ;	.line	583; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF=0;
005656   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           _00652_DS_:
                                           ;	.line	585; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
005658   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	530; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMaximumPulse(unsigned char servo,int max_microseconds)
004cf4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004cf6   ffe5
004cf8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004cfa   ffd9
004cfc   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004cfe   ffe5
004d00   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004d02   ffe5
004d04   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004d06   ffe5
004d08   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004d0a   ffe5
004d0c   0e02     movlw   0x02             	MOVLW	0x02
004d0e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004d10   f000
004d12   0e03     movlw   0x03             	MOVLW	0x03
004d14   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004d16   f001
004d18   0e04     movlw   0x04             	MOVLW	0x04
004d1a   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004d1c   f002
                                           ;	.line	533; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
004d1e   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00622_DS_
                                           ; #	GOTO	_00627_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	534; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
004d20   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	537; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds < MIDUS) max_microseconds = MIDUS;
004d22   e22e     bc      0x004d80         	BC	_00627_DS_
004d24   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004d26   0f80     addlw   0x80             	ADDLW	0x80
004d28   0f7b     addlw   0x7b             	ADDLW	0x7b
004d2a   e102     bnz     0x004d30         	BNZ	_00639_DS_
004d2c   0edc     movlw   0xdc             	MOVLW	0xdc
004d2e   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00639_DS_:
004d30   e204     bc      0x004d3a         	BC	_00624_DS_
004d32   0edc     movlw   0xdc             	MOVLW	0xdc
004d34   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d36   0e05     movlw   0x05             	MOVLW	0x05
004d38   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00624_DS_:
                                           ;	.line	538; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (max_microseconds > MAXUS) max_microseconds = MAXUS;
004d3a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004d3c   0f80     addlw   0x80             	ADDLW	0x80
004d3e   0f77     addlw   0x77             	ADDLW	0x77
004d40   e102     bnz     0x004d46         	BNZ	_00640_DS_
004d42   0ec5     movlw   0xc5             	MOVLW	0xc5
004d44   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00640_DS_:
004d46   e304     bnc     0x004d50         	BNC	_00626_DS_
004d48   0ec4     movlw   0xc4             	MOVLW	0xc4
004d4a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004d4c   0e09     movlw   0x09             	MOVLW	0x09
004d4e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00626_DS_:
                                           ;	.line	541; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][servo]=(max_microseconds - MINUS)>>3;   // 125 < final_max < 250
004d50   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004d52   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004d54   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004d56   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004d58   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004d5a   0e0c     movlw   0x0c             	MOVLW	0x0c
004d5c   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004d5e   0efe     movlw   0xfe             	MOVLW	0xfe
004d60   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004d62   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004d64   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004d66   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004d68   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004d6a   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004d6c   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004d6e   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004d70   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004d72   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004d74   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004d76   ffe9
004d78   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004d7a   ffea
004d7c   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
004d7e   ffef
                                           _00627_DS_:
004d80   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004d82   f003
004d84   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004d86   f002
004d88   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004d8a   f001
004d8c   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004d8e   f000
004d90   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d92   ffd9
004d94   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	516; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoMinimumPulse(unsigned char servo,int min_microseconds)
004d96   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d98   ffe5
004d9a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d9c   ffd9
004d9e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004da0   ffe5
004da2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004da4   ffe5
004da6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004da8   ffe5
004daa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
004dac   ffe5
004dae   0e02     movlw   0x02             	MOVLW	0x02
004db0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004db2   f000
004db4   0e03     movlw   0x03             	MOVLW	0x03
004db6   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004db8   f001
004dba   0e04     movlw   0x04             	MOVLW	0x04
004dbc   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
004dbe   f002
                                           ;	.line	519; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
004dc0   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00598_DS_
                                           ; #	GOTO	_00603_DS_
                                           ; #	MOVF	r0x02, W
                                           ;	.line	520; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
004dc2   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	523; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds < MINUS) min_microseconds = MINUS;
004dc4   e22e     bc      0x004e22         	BC	_00603_DS_
004dc6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004dc8   0f80     addlw   0x80             	ADDLW	0x80
004dca   0f7f     addlw   0x7f             	ADDLW	0x7f
004dcc   e102     bnz     0x004dd2         	BNZ	_00615_DS_
004dce   0ef4     movlw   0xf4             	MOVLW	0xf4
004dd0   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00615_DS_:
004dd2   e204     bc      0x004ddc         	BC	_00600_DS_
004dd4   0ef4     movlw   0xf4             	MOVLW	0xf4
004dd6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004dd8   0e01     movlw   0x01             	MOVLW	0x01
004dda   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00600_DS_:
                                           ;	.line	524; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (min_microseconds > MIDUS) min_microseconds = MIDUS;
004ddc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004dde   0f80     addlw   0x80             	ADDLW	0x80
004de0   0f7b     addlw   0x7b             	ADDLW	0x7b
004de2   e102     bnz     0x004de8         	BNZ	_00616_DS_
004de4   0edd     movlw   0xdd             	MOVLW	0xdd
004de6   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
                                           _00616_DS_:
004de8   e304     bnc     0x004df2         	BNC	_00602_DS_
004dea   0edc     movlw   0xdc             	MOVLW	0xdc
004dec   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004dee   0e05     movlw   0x05             	MOVLW	0x05
004df0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
                                           _00602_DS_:
                                           ;	.line	527; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][servo]=(min_microseconds - MINUS)>>3;   // 0 < final_min < 125
004df2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004df4   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
004df6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
004df8   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
004dfa   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
004dfc   0e0c     movlw   0x0c             	MOVLW	0x0c
004dfe   2601     addwf   0x01, 0x1, 0x0   	ADDWF	r0x01, F
004e00   0efe     movlw   0xfe             	MOVLW	0xfe
004e02   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004e04   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004e06   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004e08   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004e0a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004e0c   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004e0e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004e10   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
004e12   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
004e14   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
004e16   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
004e18   ffe9
004e1a   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
004e1c   ffea
004e1e   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
004e20   ffef
                                           _00603_DS_:
004e22   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004e24   f003
004e26   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004e28   f002
004e2a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004e2c   f001
004e2e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004e30   f000
004e32   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004e34   ffd9
004e36   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoRead	code
                                           _ServoRead:
                                           ;	.line	508; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	unsigned char ServoRead(unsigned char servo)
00558c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00558e   ffe5
005590   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005592   ffd9
005594   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005596   ffe5
005598   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00559a   ffe5
00559c   0e02     movlw   0x02             	MOVLW	0x02
00559e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0055a0   f000
                                           ;	.line	510; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)        // test if numservo is valid
0055a2   0e1e     movlw   0x1e             	MOVLW	0x1e
0055a4   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0055a6   e302     bnc     0x0055ac         	BNC	_00586_DS_
                                           ;	.line	511; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return 0;
0055a8   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
0055aa   d00c     bra     0x0055c4         	BRA	_00587_DS_
                                           _00586_DS_:
                                           ;	.line	513; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return servovalues[servo];
0055ac   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0055ae   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0055b0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0055b2   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0055b4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0055b6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0055b8   ffe9
0055ba   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0055bc   ffea
0055be   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0055c0   f000
0055c2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           _00587_DS_:
0055c4   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0055c6   f001
0055c8   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0055ca   f000
0055cc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0055ce   ffd9
0055d0   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	484; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoWrite(unsigned char servo,unsigned char degrees)
005538   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00553a   ffe5
00553c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00553e   ffd9
005540   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005542   ffe5
005544   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005546   ffe5
005548   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
00554a   ffe5
00554c   0e02     movlw   0x02             	MOVLW	0x02
00554e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
005550   f000
005552   0e03     movlw   0x03             	MOVLW	0x03
005554   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
005556   f001
                                           ;	.line	491; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(servo>=TotalPICpins)
005558   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00574_DS_
                                           ; #	GOTO	_00575_DS_
                                           ; #	CLRF	r0x02
                                           ;	.line	492; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	return;
00555a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
                                           ;	.line	503; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[servo]= value;
00555c   e20e     bc      0x00557a         	BC	_00575_DS_
00555e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
005560   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
005562   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
005564   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
005566   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
005568   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00556a   ffe9
00556c   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00556e   ffea
005570   c001     movff   0x001, 0xfef     	MOVFF	r0x01, INDF0
005572   ffef
                                           ;	.line	505; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
005574   0e01     movlw   0x01             	MOVLW	0x01
005576   0101     movlb   0x1              	BANKSEL	_needreordering
005578   6f01     movwf   0x01, 0x1        	MOVWF	_needreordering, B
                                           _00575_DS_:
00557a   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
00557c   f002
00557e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005580   f001
005582   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005584   f000
005586   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005588   ffd9
00558a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	459; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoDetach(unsigned char pin)
0033de   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0033e0   ffe5
0033e2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0033e4   ffd9
0033e6   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0033e8   ffe5
0033ea   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0033ec   ffe5
0033ee   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0033f0   ffe5
0033f2   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0033f4   ffe5
0033f6   0e02     movlw   0x02             	MOVLW	0x02
0033f8   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0033fa   f000
                                           ;	.line	461; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
0033fc   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00551_DS_
                                           ; #	GOTO	_00558_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	463; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
0033fe   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
003400   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
003402   d0a5     bra     0x00354e         	BRA	_00558_DS_
003404   0e6a     movlw   0x6a             	MOVLW	LOW(_port)
003406   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003408   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00340a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00340c   0e38     movlw   0x38             	MOVLW	HIGH(_port)
00340e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003410   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003412   0e00     movlw   0x00             	MOVLW	UPPER(_port)
003414   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003416   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003418   fff6
00341a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00341c   fff7
00341e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003420   fff8
003422   0009     tblrd*+                  	TBLRD*+	
003424   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003426   f001
003428   0e05     movlw   0x05             	MOVLW	0x05
00342a   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
00342c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00342e   d08f     bra     0x00354e         	BRA	_00558_DS_
003430   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
003432   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
003434   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
003436   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
003438   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
00343a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00343c   0bfc     andlw   0xfc             	ANDLW	0xfc
00343e   0f4e     addlw   0x4e             	ADDLW	LOW(_00568_DS_)
003440   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
003442   0e34     movlw   0x34             	MOVLW	HIGH(_00568_DS_)
003444   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
003446   0e00     movlw   0x00             	MOVLW	UPPER(_00568_DS_)
003448   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
00344a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
00344c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00568_DS_:
00344e   ef31     goto    0x003462         	GOTO	_00552_DS_
003450   f01a
003452   ef49     goto    0x003492         	GOTO	_00553_DS_
003454   f01a
003456   ef61     goto    0x0034c2         	GOTO	_00554_DS_
003458   f01a
00345a   ef79     goto    0x0034f2         	GOTO	_00555_DS_
00345c   f01a
00345e   ef91     goto    0x003522         	GOTO	_00556_DS_
003460   f01a
                                           _00552_DS_:
                                           ;	.line	465; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pA: activatedservos[pA] = activatedservos[pA] ^ mask[pin];
003462   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
003464   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003466   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003468   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00346a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00346c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00346e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003470   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003472   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003474   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003476   fff6
003478   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00347a   fff7
00347c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00347e   fff8
003480   0009     tblrd*+                  	TBLRD*+	
003482   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003484   f001
003486   0104     movlb   0x4              	BANKSEL	_activatedservos
003488   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
00348a   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
00348c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00348e   6ff1     movwf   0xf1, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	466; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003490   d05e     bra     0x00354e         	BRA	_00558_DS_
                                           _00553_DS_:
                                           ;	.line	467; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pB: activatedservos[pB] = activatedservos[pB] ^ mask[pin];
003492   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
003494   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003496   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003498   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00349a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00349c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00349e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034a0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034a2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034a4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0034a6   fff6
0034a8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0034aa   fff7
0034ac   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0034ae   fff8
0034b0   0009     tblrd*+                  	TBLRD*+	
0034b2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0034b4   f001
0034b6   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
0034b8   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
0034ba   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0034bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0034be   6ff2     movwf   0xf2, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	468; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0034c0   d046     bra     0x00354e         	BRA	_00558_DS_
                                           _00554_DS_:
                                           ;	.line	470; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pC: activatedservos[pC] = activatedservos[pC] ^ mask[pin];
0034c2   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0034c4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034c6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0034c8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0034ca   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0034cc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0034ce   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0034d0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0034d2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0034d4   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0034d6   fff6
0034d8   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0034da   fff7
0034dc   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0034de   fff8
0034e0   0009     tblrd*+                  	TBLRD*+	
0034e2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0034e4   f001
0034e6   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
0034e8   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
0034ea   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
0034ec   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0034ee   6ff3     movwf   0xf3, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	471; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0034f0   d02e     bra     0x00354e         	BRA	_00558_DS_
                                           _00555_DS_:
                                           ;	.line	474; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pD: activatedservos[pD] = activatedservos[pD] ^ mask[pin];
0034f2   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0034f4   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0034f6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0034f8   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0034fa   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0034fc   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0034fe   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003500   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003502   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003504   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003506   fff6
003508   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00350a   fff7
00350c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00350e   fff8
003510   0009     tblrd*+                  	TBLRD*+	
003512   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003514   f001
003516   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
003518   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00351a   1a01     xorwf   0x01, 0x1, 0x0   	XORWF	r0x01, F
00351c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00351e   6ff4     movwf   0xf4, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	475; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
003520   d016     bra     0x00354e         	BRA	_00558_DS_
                                           _00556_DS_:
                                           ;	.line	478; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	case pE: activatedservos[pE] = activatedservos[pE] ^ mask[pin];
003522   6a01     clrf    0x01, 0x0        	CLRF	r0x01
003524   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003526   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
003528   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00352a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00352c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00352e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003530   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003532   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003534   fff6
003536   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003538   fff7
00353a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00353c   fff8
00353e   0009     tblrd*+                  	TBLRD*+	
003540   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003542   f000
003544   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
003546   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
003548   1a00     xorwf   0x00, 0x1, 0x0   	XORWF	r0x00, F
00354a   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00354c   6ff5     movwf   0xf5, 0x1        	MOVWF	(_activatedservos + 4), B
                                           _00558_DS_:
                                           ;	.line	481; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
00354e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
003550   f003
003552   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003554   f002
003556   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003558   f001
00355a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00355c   f000
00355e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003560   ffd9
003562   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	424; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void ServoAttach(unsigned char pin)
002aea   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002aec   ffe5
002aee   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002af0   ffd9
002af2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002af4   ffe5
002af6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002af8   ffe5
002afa   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002afc   ffe5
002afe   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002b00   ffe5
002b02   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002b04   ffe5
002b06   0e02     movlw   0x02             	MOVLW	0x02
002b08   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002b0a   f000
                                           ;	.line	426; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if(pin>=TotalPICpins) return;
002b0c   0e1e     movlw   0x1e             	MOVLW	0x1e
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00528_DS_
                                           ; #	GOTO	_00535_DS_
                                           ; #	MOVLW	LOW(_port)
                                           ;	.line	428; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[pin])
002b0e   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
002b10   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002b12   d0e1     bra     0x002cd6         	BRA	_00535_DS_
002b14   0e6a     movlw   0x6a             	MOVLW	LOW(_port)
002b16   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002b18   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002b1a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002b1c   0e38     movlw   0x38             	MOVLW	HIGH(_port)
002b1e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002b20   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002b22   0e00     movlw   0x00             	MOVLW	UPPER(_port)
002b24   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002b26   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002b28   fff6
002b2a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002b2c   fff7
002b2e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002b30   fff8
002b32   0009     tblrd*+                  	TBLRD*+	
002b34   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002b36   f001
002b38   0e05     movlw   0x05             	MOVLW	0x05
002b3a   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
002b3c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002b3e   d0cb     bra     0x002cd6         	BRA	_00535_DS_
002b40   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002b42   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
002b44   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
002b46   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002b48   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002b4a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002b4c   0bfc     andlw   0xfc             	ANDLW	0xfc
002b4e   0f5e     addlw   0x5e             	ADDLW	LOW(_00545_DS_)
002b50   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002b52   0e2b     movlw   0x2b             	MOVLW	HIGH(_00545_DS_)
002b54   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
002b56   0e00     movlw   0x00             	MOVLW	UPPER(_00545_DS_)
002b58   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002b5a   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002b5c   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00545_DS_:
002b5e   efb9     goto    0x002b72         	GOTO	_00529_DS_
002b60   f015
002b62   efdd     goto    0x002bba         	GOTO	_00530_DS_
002b64   f015
002b66   ef01     goto    0x002c02         	GOTO	_00531_DS_
002b68   f016
002b6a   ef25     goto    0x002c4a         	GOTO	_00532_DS_
002b6c   f016
002b6e   ef49     goto    0x002c92         	GOTO	_00533_DS_
002b70   f016
                                           _00529_DS_:
                                           ;	.line	431; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pA] = activatedservos[pA] | mask[pin];  // list pin as servo driver.
002b72   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002b74   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002b76   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002b78   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002b7a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002b7c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002b7e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002b80   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002b82   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002b84   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002b86   fff6
002b88   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002b8a   fff7
002b8c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002b8e   fff8
002b90   0009     tblrd*+                  	TBLRD*+	
002b92   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002b94   f004
002b96   0104     movlb   0x4              	BANKSEL	_activatedservos
002b98   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
002b9a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002b9c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002b9e   6ff1     movwf   0xf1, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	432; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISA = TRISA & (~mask[pin]); 					// set as output pin
002ba0   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002ba2   fff6
002ba4   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002ba6   fff7
002ba8   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002baa   fff8
002bac   0009     tblrd*+                  	TBLRD*+	
002bae   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002bb0   f001
002bb2   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002bb4   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002bb6   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	433; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002bb8   d08e     bra     0x002cd6         	BRA	_00535_DS_
                                           _00530_DS_:
                                           ;	.line	435; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pB] = activatedservos[pB] | mask[pin];  // list pin as servo driver.
002bba   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002bbc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002bbe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002bc0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002bc2   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002bc4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002bc6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002bc8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002bca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002bcc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002bce   fff6
002bd0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002bd2   fff7
002bd4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002bd6   fff8
002bd8   0009     tblrd*+                  	TBLRD*+	
002bda   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002bdc   f004
002bde   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
002be0   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
002be2   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002be4   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002be6   6ff2     movwf   0xf2, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	436; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISB = TRISB & (~mask[pin]); 					// set as output pin
002be8   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002bea   fff6
002bec   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002bee   fff7
002bf0   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002bf2   fff8
002bf4   0009     tblrd*+                  	TBLRD*+	
002bf6   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002bf8   f001
002bfa   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002bfc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002bfe   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	437; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c00   d06a     bra     0x002cd6         	BRA	_00535_DS_
                                           _00531_DS_:
                                           ;	.line	440; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pC] = activatedservos[pC] | mask[pin];  // list pin as servo driver.
002c02   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002c04   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c08   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c0a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002c0c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c0e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002c10   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002c12   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002c14   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c16   fff6
002c18   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c1a   fff7
002c1c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c1e   fff8
002c20   0009     tblrd*+                  	TBLRD*+	
002c22   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c24   f004
002c26   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
002c28   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
002c2a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c2c   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c2e   6ff3     movwf   0xf3, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	441; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISC = TRISC & (~mask[pin]); 					// set as output pin
002c30   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c32   fff6
002c34   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c36   fff7
002c38   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c3a   fff8
002c3c   0009     tblrd*+                  	TBLRD*+	
002c3e   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002c40   f001
002c42   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002c44   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002c46   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	442; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c48   d046     bra     0x002cd6         	BRA	_00535_DS_
                                           _00532_DS_:
                                           ;	.line	446; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pD] = activatedservos[pD] | mask[pin];  // list pin as servo driver.
002c4a   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002c4c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002c4e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002c50   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c52   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002c54   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002c56   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002c58   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002c5a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002c5c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c5e   fff6
002c60   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c62   fff7
002c64   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c66   fff8
002c68   0009     tblrd*+                  	TBLRD*+	
002c6a   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
002c6c   f004
002c6e   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
002c70   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
002c72   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
002c74   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
002c76   6ff4     movwf   0xf4, 0x1        	MOVWF	(_activatedservos + 3), B
                                           ;	.line	447; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISD = TRISD & (~mask[pin]); 					// set as output pin
002c78   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002c7a   fff6
002c7c   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002c7e   fff7
002c80   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002c82   fff8
002c84   0009     tblrd*+                  	TBLRD*+	
002c86   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002c88   f001
002c8a   1e01     comf    0x01, 0x1, 0x0   	COMF	r0x01, F
002c8c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002c8e   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	448; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
002c90   d022     bra     0x002cd6         	BRA	_00535_DS_
                                           _00533_DS_:
                                           ;	.line	452; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[pE] = activatedservos[pE] | mask[pin];  // list pin as servo driver.
002c92   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002c94   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002c96   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002c98   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002c9a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002c9c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002c9e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002ca0   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002ca2   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002ca4   fff6
002ca6   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002ca8   fff7
002caa   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002cac   fff8
002cae   0009     tblrd*+                  	TBLRD*+	
002cb0   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
002cb2   f003
002cb4   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
002cb6   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
002cb8   1203     iorwf   0x03, 0x1, 0x0   	IORWF	r0x03, F
002cba   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002cbc   6ff5     movwf   0xf5, 0x1        	MOVWF	(_activatedservos + 4), B
                                           ;	.line	453; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TRISE = TRISE & (~mask[pin]); 					// set as output pin
002cbe   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002cc0   fff6
002cc2   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002cc4   fff7
002cc6   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002cc8   fff8
002cca   0009     tblrd*+                  	TBLRD*+	
002ccc   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002cce   f000
002cd0   1e00     comf    0x00, 0x1, 0x0   	COMF	r0x00, F
002cd2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002cd4   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00535_DS_:
                                           ;	.line	456; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	}
002cd6   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002cd8   f004
002cda   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002cdc   f003
002cde   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002ce0   f002
002ce2   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002ce4   f001
002ce6   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002ce8   f000
002cea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002cec   ffd9
002cee   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	249; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void SortServoTimings()
000c1c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
000c1e   ffe5
000c20   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
000c22   ffe5
000c24   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
000c26   ffe5
000c28   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
000c2a   ffe5
000c2c   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
000c2e   ffe5
000c30   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
000c32   ffe5
000c34   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
000c36   ffe5
000c38   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000c3a   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00411_DS_:
000c3c   0e1e     movlw   0x1e             	MOVLW	0x1e
000c3e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000c40   5da4     subwf   0xa4, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_32, W, B
000c42   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000c44   d066     bra     0x000d12         	BRA	_00358_DS_
                                           ;	.line	256; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=255; 
000c46   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000c48   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000c4a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000c4c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000c4e   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000c50   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c52   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c54   ffe9
000c56   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c58   ffea
000c5a   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	257; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
000c5c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c5e   0d05     mullw   0x05             	MULLW	0x05
000c60   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c62   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c64   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c66   f000
000c68   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c6a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c6c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000c6e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c70   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c72   ffe9
000c74   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c76   ffea
000c78   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	258; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000c7a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c7c   0d05     mullw   0x05             	MULLW	0x05
000c7e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000c80   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000c82   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000c84   f000
000c86   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000c88   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000c8a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000c8c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000c8e   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000c90   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000c92   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000c94   ffe9
000c96   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000c98   ffea
000c9a   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	260; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000c9c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000c9e   0d05     mullw   0x05             	MULLW	0x05
000ca0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000ca2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ca4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ca6   f000
000ca8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000caa   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cac   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000cae   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cb0   0e02     movlw   0x02             	MOVLW	0x02
000cb2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cb4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cb6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cb8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000cba   ffe9
000cbc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000cbe   ffea
000cc0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	263; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000cc2   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000cc4   0d05     mullw   0x05             	MULLW	0x05
000cc6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cc8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cca   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ccc   f000
000cce   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cd0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cd2   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000cd4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cd6   0e03     movlw   0x03             	MOVLW	0x03
000cd8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cda   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000cdc   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000cde   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ce0   ffe9
000ce2   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ce4   ffea
000ce6   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	266; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000ce8   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000cea   0d05     mullw   0x05             	MULLW	0x05
000cec   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000cee   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000cf0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000cf2   f000
000cf4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000cf6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000cf8   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000cfa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000cfc   0e04     movlw   0x04             	MOVLW	0x04
000cfe   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000d00   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d02   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000d04   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d06   ffe9
000d08   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d0a   ffea
000d0c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	254; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICpins;t++)
000d0e   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
000d10   d795     bra     0x000c3c         	BRA	_00411_DS_
                                           _00358_DS_:
000d12   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d14   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00414_DS_:
000d16   0e05     movlw   0x05             	MOVLW	0x05
000d18   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000d1a   5da4     subwf   0xa4, 0x0, 0x1   	SUBWF	_SortServoTimings_t_1_32, W, B
000d1c   e20d     bc      0x000d38         	BC	_00359_DS_
                                           ;	.line	272; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[t]=0x00;
000d1e   0ef6     movlw   0xf6             	MOVLW	LOW(_mascaratotal)
                                           ; removed redundant BANKSEL
000d20   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000d22   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d24   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d26   0e04     movlw   0x04             	MOVLW	HIGH(_mascaratotal)
000d28   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d2a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000d2c   ffe9
000d2e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000d30   ffea
000d32   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	271; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(t=0;t<TotalPICports;t++)
000d34   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
000d36   d7ef     bra     0x000d16         	BRA	_00414_DS_
                                           _00359_DS_:
000d38   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_32
                                           ;	.line	274; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos=0; // Total servos revised. This helps to keep within "while"
000d3a   6ba5     clrf    0xa5, 0x1        	CLRF	_SortServoTimings_totalservos_1_32, B
000d3c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	275; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t=0;           // Index to go through timevalue and timings tables.
000d3e   6ba4     clrf    0xa4, 0x1        	CLRF	_SortServoTimings_t_1_32, B
                                           _00407_DS_:
                                           ;	.line	276; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	while(totalservos<TotalPICpins)
000d40   0e1e     movlw   0x1e             	MOVLW	0x1e
000d42   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_32
000d44   5da5     subwf   0xa5, 0x0, 0x1   	SUBWF	_SortServoTimings_totalservos_1_32, W, B
000d46   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d48   ef21     goto    0x001a42         	GOTO	_00409_DS_
000d4a   f00d
                                           ;	.line	278; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000d4c   0e01     movlw   0x01             	MOVLW	0x01
000d4e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
000d50   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
000d52   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
000d54   6ba7     clrf    0xa7, 0x1        	CLRF	_SortServoTimings_s_1_32, B
                                           _00417_DS_:
000d56   0e1e     movlw   0x1e             	MOVLW	0x1e
000d58   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000d5a   5da7     subwf   0xa7, 0x0, 0x1   	SUBWF	_SortServoTimings_s_1_32, W, B
000d5c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d5e   ef9d     goto    0x00193a         	GOTO	_00406_DS_
000d60   f00c
                                           ;	.line	283; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	switch (port[s])
000d62   0e6a     movlw   0x6a             	MOVLW	LOW(_port)
                                           ; removed redundant BANKSEL
000d64   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000d66   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000d68   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000d6a   0e38     movlw   0x38             	MOVLW	HIGH(_port)
000d6c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000d6e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000d70   0e00     movlw   0x00             	MOVLW	UPPER(_port)
000d72   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000d74   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000d76   fff6
000d78   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000d7a   fff7
000d7c   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000d7e   fff8
000d80   0009     tblrd*+                  	TBLRD*+	
000d82   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000d84   f000
000d86   0e05     movlw   0x05             	MOVLW	0x05
000d88   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000d8a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000d8c   ef99     goto    0x001932         	GOTO	_00418_DS_
000d8e   f00c
000d90   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
000d92   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
000d94   3400     rlcf    0x00, 0x0, 0x0   	RLCF	r0x00, W
000d96   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d98   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
000d9a   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
000d9c   0bfc     andlw   0xfc             	ANDLW	0xfc
000d9e   0fae     addlw   0xae             	ADDLW	LOW(_00498_DS_)
000da0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
000da2   0e0d     movlw   0x0d             	MOVLW	HIGH(_00498_DS_)
000da4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
000da6   0e00     movlw   0x00             	MOVLW	UPPER(_00498_DS_)
000da8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
000daa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
000dac   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00498_DS_:
000dae   efe1     goto    0x000dc2         	GOTO	_00360_DS_
000db0   f006
000db2   ef02     goto    0x001004         	GOTO	_00369_DS_
000db4   f008
000db6   ef27     goto    0x00124e         	GOTO	_00378_DS_
000db8   f009
000dba   ef50     goto    0x0014a0         	GOTO	_00387_DS_
000dbc   f00a
000dbe   ef76     goto    0x0016ec         	GOTO	_00396_DS_
000dc0   f00b
                                           _00360_DS_:
                                           ;	.line	286; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pA] & activatedservos[pA]){
000dc2   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
000dc4   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000dc6   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000dc8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000dca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000dcc   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
000dce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000dd0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000dd2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000dd4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000dd6   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
000dd8   fff6
000dda   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
000ddc   fff7
000dde   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
000de0   fff8
000de2   0009     tblrd*+                  	TBLRD*+	
000de4   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
000de6   f000
000de8   0104     movlb   0x4              	BANKSEL	_mascaratotal
000dea   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_mascaratotal, W, B
000dec   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000dee   0104     movlb   0x4              	BANKSEL	_activatedservos
000df0   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
000df2   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
000df4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000df6   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
000df8   ef99     goto    0x001932         	GOTO	_00418_DS_
000dfa   f00c
                                           ;	.line	289; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
000dfc   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000dfe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000e00   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e02   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e04   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e06   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e08   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e0a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e0c   ffe9
000e0e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e10   ffea
000e12   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000e14   f000
000e16   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
000e18   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000e1a   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000e1c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e1e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000e20   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000e22   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000e24   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000e26   ffe9
000e28   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000e2a   ffea
000e2c   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000e2e   f001
000e30   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
000e32   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
000e34   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000e36   d08d     bra     0x000f52         	BRA	_00364_DS_
                                           ;	.line	290; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
000e38   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
000e3a   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000e3c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000e3e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000e40   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000e42   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e44   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000e46   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000e48   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e4a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e4c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e4e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000e50   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e52   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000e54   ffe9
000e56   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000e58   ffea
000e5a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000e5c   f002
000e5e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000e60   ffe9
000e62   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000e64   ffea
000e66   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000e68   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
000e6a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	291; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=mask[s];
000e6c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000e6e   0d05     mullw   0x05             	MULLW	0x05
000e70   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000e72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000e74   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000e76   f000
000e78   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000e7a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000e7c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000e7e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000e80   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
000e82   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000e84   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000e86   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
000e88   6a03     clrf    0x03, 0x0        	CLRF	r0x03
000e8a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
000e8c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000e8e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
000e90   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000e92   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
000e94   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
000e96   fff6
000e98   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
000e9a   fff7
000e9c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
000e9e   fff8
000ea0   0009     tblrd*+                  	TBLRD*+	
000ea2   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
000ea4   f002
000ea6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ea8   ffe9
000eaa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000eac   ffea
000eae   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
000eb0   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
000eb2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
000eb4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000eb6   0d05     mullw   0x05             	MULLW	0x05
000eb8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000eba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ebc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ebe   f000
000ec0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ec2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ec4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000ec6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000ec8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
000eca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ecc   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ece   ffe9
000ed0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ed2   ffea
000ed4   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	294; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
000ed6   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000ed8   0d05     mullw   0x05             	MULLW	0x05
000eda   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000edc   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000ede   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000ee0   f000
000ee2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000ee4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000ee6   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000ee8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000eea   0e02     movlw   0x02             	MOVLW	0x02
000eec   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000eee   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000ef0   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000ef2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ef4   ffe9
000ef6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ef8   ffea
000efa   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	297; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
000efc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000efe   0d05     mullw   0x05             	MULLW	0x05
000f00   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f02   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f04   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f06   f000
000f08   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f0a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f0c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000f0e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f10   0e03     movlw   0x03             	MOVLW	0x03
000f12   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f14   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f16   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f18   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f1a   ffe9
000f1c   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f1e   ffea
000f20   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	300; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
000f22   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000f24   0d05     mullw   0x05             	MULLW	0x05
000f26   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f28   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f2a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f2c   f000
000f2e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000f30   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f32   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000f34   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f36   0e04     movlw   0x04             	MOVLW	0x04
000f38   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000f3a   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
000f3c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
000f3e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f40   ffe9
000f42   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f44   ffea
000f46   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	302; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
000f48   0e01     movlw   0x01             	MOVLW	0x01
000f4a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
000f4c   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
000f4e   ef99     goto    0x001932         	GOTO	_00418_DS_
000f50   f00c
                                           _00364_DS_:
                                           ;	.line	304; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
000f52   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
000f54   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000f56   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000f58   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
000f5a   6a01     clrf    0x01, 0x0        	CLRF	r0x01
000f5c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
000f5e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
000f60   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000f62   ffe9
000f64   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000f66   ffea
000f68   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
000f6a   f000
000f6c   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
000f6e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
000f70   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
000f72   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f74   6a02     clrf    0x02, 0x0        	CLRF	r0x02
000f76   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
000f78   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
000f7a   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
000f7c   ffe9
000f7e   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
000f80   ffea
000f82   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
000f84   f001
000f86   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
000f88   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
000f8a   e002     bz      0x000f90         	BZ	_00502_DS_
000f8c   ef99     goto    0x001932         	GOTO	_00418_DS_
000f8e   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00502_DS_:
000f90   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	305; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA] |= mask[s];
000f92   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000f94   0d05     mullw   0x05             	MULLW	0x05
000f96   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000f98   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
000f9a   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
000f9c   f000
000f9e   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fa0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
000fa2   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000fa4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
000fa6   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
000fa8   0d05     mullw   0x05             	MULLW	0x05
000faa   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
000fac   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
000fae   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
000fb0   f002
000fb2   0e00     movlw   0x00             	MOVLW	LOW(_timings)
000fb4   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
000fb6   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
000fb8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
000fba   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
000fbc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
000fbe   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
000fc0   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
000fc2   6a05     clrf    0x05, 0x0        	CLRF	r0x05
000fc4   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
000fc6   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
000fc8   6a06     clrf    0x06, 0x0        	CLRF	r0x06
000fca   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
000fcc   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
000fce   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
000fd0   fff6
000fd2   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
000fd4   fff7
000fd6   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
000fd8   fff8
000fda   0009     tblrd*+                  	TBLRD*+	
000fdc   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
000fde   f004
000fe0   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
000fe2   ffe9
000fe4   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
000fe6   ffea
000fe8   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
000fea   f002
000fec   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
000fee   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
000ff0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
000ff2   ffe9
000ff4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
000ff6   ffea
000ff8   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
000ffa   ffef
000ffc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	306; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
000ffe   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	308; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;      		
001000   ef99     goto    0x001932         	GOTO	_00418_DS_
001002   f00c
                                           _00369_DS_:
                                           ;	.line	311; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pB] & activatedservos[pB]){
001004   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
001006   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001008   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00100a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00100c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00100e   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
001010   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001012   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001014   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001016   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001018   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00101a   fff6
00101c   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
00101e   fff7
001020   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
001022   fff8
001024   0009     tblrd*+                  	TBLRD*+	
001026   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001028   f000
00102a   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 1)
00102c   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
00102e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001030   0104     movlb   0x4              	BANKSEL	(_activatedservos + 1)
001032   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
001034   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001036   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001038   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
00103a   ef99     goto    0x001932         	GOTO	_00418_DS_
00103c   f00c
                                           ;	.line	314; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
00103e   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001040   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001042   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001044   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001046   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001048   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00104a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00104c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00104e   ffe9
001050   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001052   ffea
001054   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001056   f000
001058   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00105a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
00105c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00105e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001060   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001062   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001064   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001066   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001068   ffe9
00106a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00106c   ffea
00106e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001070   f001
001072   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001074   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001076   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001078   d08d     bra     0x001194         	BRA	_00373_DS_
                                           ;	.line	315; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
00107a   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
00107c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00107e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001080   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001082   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001084   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001086   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001088   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00108a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00108c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00108e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001090   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001092   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001094   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001096   ffe9
001098   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
00109a   ffea
00109c   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00109e   f002
0010a0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010a2   ffe9
0010a4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010a6   ffea
0010a8   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0010aa   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0010ac   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0010ae   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0010b0   0d05     mullw   0x05             	MULLW	0x05
0010b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010b8   f000
0010ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010be   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0010c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010c2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0010c4   ffe9
0010c6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0010c8   ffea
0010ca   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=mask[s];
0010cc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0010ce   0d05     mullw   0x05             	MULLW	0x05
0010d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0010d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0010d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0010d6   f000
0010d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0010da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0010dc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0010de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0010e0   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0010e2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0010e4   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0010e6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0010e8   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0010ea   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0010ec   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0010ee   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0010f0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0010f2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0010f4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0010f6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0010f8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0010fa   fff6
0010fc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0010fe   fff7
001100   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001102   fff8
001104   0009     tblrd*+                  	TBLRD*+	
001106   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001108   f002
00110a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00110c   ffe9
00110e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001110   ffea
001112   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001114   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001116   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
001118   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00111a   0d05     mullw   0x05             	MULLW	0x05
00111c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00111e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001120   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001122   f000
001124   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001126   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001128   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00112a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00112c   0e02     movlw   0x02             	MOVLW	0x02
00112e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001130   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001132   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001134   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001136   ffe9
001138   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00113a   ffea
00113c   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	322; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
00113e   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001140   0d05     mullw   0x05             	MULLW	0x05
001142   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001144   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001146   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001148   f000
00114a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00114c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00114e   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001150   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001152   0e03     movlw   0x03             	MOVLW	0x03
001154   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001156   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001158   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00115a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00115c   ffe9
00115e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001160   ffea
001162   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	325; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001164   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001166   0d05     mullw   0x05             	MULLW	0x05
001168   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00116a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00116c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00116e   f000
001170   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001172   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001174   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001176   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001178   0e04     movlw   0x04             	MOVLW	0x04
00117a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00117c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00117e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001180   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001182   ffe9
001184   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001186   ffea
001188   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	327; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00118a   0e01     movlw   0x01             	MOVLW	0x01
00118c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
00118e   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
001190   ef99     goto    0x001932         	GOTO	_00418_DS_
001192   f00c
                                           _00373_DS_:
                                           ;	.line	329; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001194   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001196   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001198   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00119a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00119c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00119e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0011a0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011a2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0011a4   ffe9
0011a6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0011a8   ffea
0011aa   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0011ac   f000
0011ae   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0011b0   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0011b2   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0011b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011b6   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0011b8   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0011ba   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0011bc   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0011be   ffe9
0011c0   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0011c2   ffea
0011c4   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0011c6   f001
0011c8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0011ca   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0011cc   e002     bz      0x0011d2         	BZ	_00507_DS_
0011ce   ef99     goto    0x001932         	GOTO	_00418_DS_
0011d0   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00507_DS_:
0011d2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	330; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB] |= mask[s];
0011d4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0011d6   0d05     mullw   0x05             	MULLW	0x05
0011d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0011dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0011de   f000
0011e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0011e4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0011e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0011e8   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0011ea   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
0011ec   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0011ee   0d05     mullw   0x05             	MULLW	0x05
0011f0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0011f2   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0011f4   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0011f6   f002
0011f8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0011fa   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0011fc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0011fe   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001200   4a02     infsnz  0x02, 0x1, 0x0   	INFSNZ	r0x02, F
001202   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001204   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
001206   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001208   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00120a   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00120c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
00120e   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
001210   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001212   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001214   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001216   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001218   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00121a   fff6
00121c   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
00121e   fff7
001220   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001222   fff8
001224   0009     tblrd*+                  	TBLRD*+	
001226   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001228   f004
00122a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00122c   ffe9
00122e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001230   ffea
001232   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001234   f002
001236   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001238   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00123a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00123c   ffe9
00123e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001240   ffea
001242   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001244   ffef
001246   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	331; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001248   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	333; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00124a   ef99     goto    0x001932         	GOTO	_00418_DS_
00124c   f00c
                                           _00378_DS_:
                                           ;	.line	337; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pC] & activatedservos[pC]){
00124e   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
001250   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001252   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001254   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001256   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001258   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00125a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00125c   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00125e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001260   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001262   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001264   fff6
001266   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001268   fff7
00126a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00126c   fff8
00126e   0009     tblrd*+                  	TBLRD*+	
001270   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001272   f000
001274   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 2)
001276   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
001278   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00127a   0104     movlb   0x4              	BANKSEL	(_activatedservos + 2)
00127c   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00127e   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001280   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001282   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001284   ef99     goto    0x001932         	GOTO	_00418_DS_
001286   f00c
                                           ;	.line	340; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001288   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00128a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00128c   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00128e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001290   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001292   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001294   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001296   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001298   ffe9
00129a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00129c   ffea
00129e   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0012a0   f000
0012a2   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0012a4   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0012a6   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0012a8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0012aa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0012ac   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0012ae   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0012b0   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0012b2   ffe9
0012b4   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0012b6   ffea
0012b8   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0012ba   f001
0012bc   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0012be   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
0012c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0012c2   d08d     bra     0x0013de         	BRA	_00382_DS_
                                           ;	.line	341; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
0012c4   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
0012c6   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0012c8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0012ca   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0012cc   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0012ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0012d0   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0012d2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0012d4   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0012d6   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0012d8   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0012da   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0012dc   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0012de   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0012e0   ffe9
0012e2   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0012e4   ffea
0012e6   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0012e8   f002
0012ea   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0012ec   ffe9
0012ee   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0012f0   ffea
0012f2   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0012f4   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0012f6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	342; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
0012f8   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0012fa   0d05     mullw   0x05             	MULLW	0x05
0012fc   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0012fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001300   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001302   f000
001304   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001306   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001308   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00130a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00130c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00130e   ffe9
001310   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001312   ffea
001314   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	343; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001316   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001318   0d05     mullw   0x05             	MULLW	0x05
00131a   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00131c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00131e   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001320   f000
001322   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001324   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001326   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001328   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00132a   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00132c   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00132e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001330   ffe9
001332   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001334   ffea
001336   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	344; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=mask[s];
001338   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00133a   0d05     mullw   0x05             	MULLW	0x05
00133c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00133e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001340   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001342   f000
001344   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001346   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001348   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00134a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00134c   0e02     movlw   0x02             	MOVLW	0x02
00134e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001350   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001352   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001354   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
001356   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001358   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00135a   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00135c   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00135e   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
001360   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001362   6a04     clrf    0x04, 0x0        	CLRF	r0x04
001364   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001366   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001368   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00136a   fff6
00136c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00136e   fff7
001370   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
001372   fff8
001374   0009     tblrd*+                  	TBLRD*+	
001376   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001378   f002
00137a   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00137c   ffe9
00137e   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001380   ffea
001382   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001384   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001386   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	346; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
001388   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00138a   0d05     mullw   0x05             	MULLW	0x05
00138c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00138e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001390   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001392   f000
001394   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001396   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001398   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00139a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00139c   0e03     movlw   0x03             	MOVLW	0x03
00139e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013a2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013a4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013aa   ffea
0013ac   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	349; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
0013ae   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0013b0   0d05     mullw   0x05             	MULLW	0x05
0013b2   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0013b4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0013b6   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0013b8   f000
0013ba   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0013bc   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013be   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0013c0   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013c2   0e04     movlw   0x04             	MOVLW	0x04
0013c4   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0013c6   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0013c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0013ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013cc   ffe9
0013ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013d0   ffea
0013d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	351; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
0013d4   0e01     movlw   0x01             	MOVLW	0x01
0013d6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
0013d8   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
0013da   ef99     goto    0x001932         	GOTO	_00418_DS_
0013dc   f00c
                                           _00382_DS_:
                                           ;	.line	353; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
0013de   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0013e0   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0013e2   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0013e4   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0013e6   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0013e8   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0013ea   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0013ec   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0013ee   ffe9
0013f0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0013f2   ffea
0013f4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0013f6   f000
0013f8   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0013fa   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0013fc   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0013fe   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001400   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001402   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001404   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001406   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001408   ffe9
00140a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00140c   ffea
00140e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001410   f001
001412   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001414   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001416   e002     bz      0x00141c         	BZ	_00512_DS_
001418   ef99     goto    0x001932         	GOTO	_00418_DS_
00141a   f00c
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00512_DS_:
00141c   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	354; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC] |= mask[s];
00141e   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001420   0d05     mullw   0x05             	MULLW	0x05
001422   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001424   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001426   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001428   f000
00142a   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00142c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00142e   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001430   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001432   0e02     movlw   0x02             	MOVLW	0x02
001434   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001436   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001438   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
00143a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00143c   0d05     mullw   0x05             	MULLW	0x05
00143e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001440   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001442   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001444   f002
001446   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001448   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
00144a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00144c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00144e   0e02     movlw   0x02             	MOVLW	0x02
001450   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001452   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001454   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
001456   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
001458   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00145a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00145c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00145e   6a05     clrf    0x05, 0x0        	CLRF	r0x05
001460   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
001462   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
001464   6a06     clrf    0x06, 0x0        	CLRF	r0x06
001466   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
001468   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
00146a   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
00146c   fff6
00146e   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001470   fff7
001472   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
001474   fff8
001476   0009     tblrd*+                  	TBLRD*+	
001478   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
00147a   f004
00147c   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00147e   ffe9
001480   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001482   ffea
001484   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001486   f002
001488   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00148a   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
00148c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00148e   ffe9
001490   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001492   ffea
001494   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
001496   ffef
001498   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	355; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
00149a   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	357; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
00149c   ef99     goto    0x001932         	GOTO	_00418_DS_
00149e   f00c
                                           _00387_DS_:
                                           ;	.line	362; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pD] & activatedservos[pD]){
0014a0   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0014a2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0014a4   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0014a6   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014a8   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014aa   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0014ac   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014ae   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014b0   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0014b2   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0014b4   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
0014b6   fff6
0014b8   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0014ba   fff7
0014bc   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0014be   fff8
0014c0   0009     tblrd*+                  	TBLRD*+	
0014c2   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0014c4   f000
0014c6   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 3)
0014c8   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0014ca   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014cc   0104     movlb   0x4              	BANKSEL	(_activatedservos + 3)
0014ce   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
0014d0   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
0014d2   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0014d4   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
0014d6   ef99     goto    0x001932         	GOTO	_00418_DS_
0014d8   f00c
                                           ;	.line	365; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
0014da   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
0014dc   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0014de   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0014e0   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0014e2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0014e4   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
0014e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0014e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0014ea   ffe9
0014ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0014ee   ffea
0014f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0014f2   f000
0014f4   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0014f6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
0014f8   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
0014fa   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0014fc   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0014fe   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001500   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001502   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001504   ffe9
001506   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001508   ffea
00150a   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
00150c   f001
00150e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
001510   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
001512   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001514   d08c     bra     0x00162e         	BRA	_00391_DS_
                                           ;	.line	366; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001516   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001518   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00151a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00151c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00151e   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001520   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001522   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001524   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001526   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001528   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00152a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00152c   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00152e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
001530   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001532   ffe9
001534   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001536   ffea
001538   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00153a   f002
00153c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00153e   ffe9
001540   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001542   ffea
001544   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001546   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001548   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	367; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
00154a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00154c   0d05     mullw   0x05             	MULLW	0x05
00154e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001550   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001552   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001554   f000
001556   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001558   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00155a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00155c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00155e   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001560   ffe9
001562   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001564   ffea
001566   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	368; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
001568   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00156a   0d05     mullw   0x05             	MULLW	0x05
00156c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00156e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001570   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001572   f000
001574   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001576   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001578   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00157a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00157c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00157e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001580   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001582   ffe9
001584   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001586   ffea
001588   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	369; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
00158a   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00158c   0d05     mullw   0x05             	MULLW	0x05
00158e   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001590   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001592   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001594   f000
001596   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001598   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00159a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00159c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00159e   0e02     movlw   0x02             	MOVLW	0x02
0015a0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015a2   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015a4   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015a6   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015a8   ffe9
0015aa   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015ac   ffea
0015ae   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	370; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=mask[s];
0015b0   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0015b2   0d05     mullw   0x05             	MULLW	0x05
0015b4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0015b6   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0015b8   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0015ba   f000
0015bc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0015be   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c0   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0015c2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0015c4   0e03     movlw   0x03             	MOVLW	0x03
0015c6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0015c8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0015ca   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0015cc   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0015ce   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0015d0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0015d2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0015d4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0015d6   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0015d8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0015da   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0015dc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0015de   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0015e0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0015e2   fff6
0015e4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0015e6   fff7
0015e8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0015ea   fff8
0015ec   0009     tblrd*+                  	TBLRD*+	
0015ee   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0015f0   f002
0015f2   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0015f4   ffe9
0015f6   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0015f8   ffea
0015fa   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
0015fc   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0015fe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	372; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=0x00;
001600   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001602   0d05     mullw   0x05             	MULLW	0x05
001604   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001606   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001608   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00160a   f000
00160c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00160e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001610   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001612   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001614   0e04     movlw   0x04             	MOVLW	0x04
001616   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001618   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00161a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00161c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00161e   ffe9
001620   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001622   ffea
001624   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	374; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
001626   0e01     movlw   0x01             	MOVLW	0x01
001628   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
00162a   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
00162c   d182     bra     0x001932         	BRA	_00418_DS_
                                           _00391_DS_:
                                           ;	.line	376; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
00162e   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001630   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001632   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001634   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001636   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001638   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
00163a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00163c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00163e   ffe9
001640   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001642   ffea
001644   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001646   f000
001648   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
00164a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
00164c   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
00164e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001650   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001652   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
001654   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001656   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
001658   ffe9
00165a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
00165c   ffea
00165e   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001660   f001
001662   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001664   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
001666   e001     bz      0x00166a         	BZ	_00517_DS_
001668   d164     bra     0x001932         	BRA	_00418_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00517_DS_:
00166a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	377; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD] |= mask[s];
00166c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00166e   0d05     mullw   0x05             	MULLW	0x05
001670   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001672   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001674   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001676   f000
001678   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00167a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00167c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00167e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001680   0e03     movlw   0x03             	MOVLW	0x03
001682   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001684   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001686   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
001688   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00168a   0d05     mullw   0x05             	MULLW	0x05
00168c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00168e   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
001690   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
001692   f002
001694   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001696   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
001698   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00169a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00169c   0e03     movlw   0x03             	MOVLW	0x03
00169e   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0016a0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0016a2   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0016a4   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0016a6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0016a8   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0016aa   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0016ac   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0016ae   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0016b0   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0016b2   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0016b4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016b6   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
0016b8   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
0016ba   fff6
0016bc   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
0016be   fff7
0016c0   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
0016c2   fff8
0016c4   0009     tblrd*+                  	TBLRD*+	
0016c6   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
0016c8   f004
0016ca   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
0016cc   ffe9
0016ce   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
0016d0   ffea
0016d2   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
0016d4   f002
0016d6   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0016d8   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
0016da   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0016dc   ffe9
0016de   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0016e0   ffea
0016e2   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
0016e4   ffef
0016e6   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	378; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
0016e8   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           ;	.line	380; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	break;
0016ea   d123     bra     0x001932         	BRA	_00418_DS_
                                           _00396_DS_:
                                           ;	.line	385; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (mask[s] & mascaratotal[pE] & activatedservos[pE]){
0016ec   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0016ee   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0016f0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0016f2   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0016f4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0016f6   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0016f8   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0016fa   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0016fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0016fe   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
001700   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
001702   fff6
001704   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
001706   fff7
001708   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00170a   fff8
00170c   0009     tblrd*+                  	TBLRD*+	
00170e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
001710   f000
001712   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 4)
001714   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001716   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
001718   0104     movlb   0x4              	BANKSEL	(_activatedservos + 4)
00171a   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
00171c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
00171e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
001720   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
001722   d107     bra     0x001932         	BRA	_00418_DS_
                                           ;	.line	388; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] < timevalue[t]){
001724   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001726   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001728   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00172a   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00172c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00172e   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001730   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001732   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001734   ffe9
001736   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001738   ffea
00173a   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00173c   f000
00173e   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
001740   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
001742   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001744   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001746   6a02     clrf    0x02, 0x0        	CLRF	r0x02
001748   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00174a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00174c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
00174e   ffe9
001750   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
001752   ffea
001754   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
001756   f001
001758   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00175a   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
00175c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00175e   d08b     bra     0x001876         	BRA	_00400_DS_
                                           ;	.line	389; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timevalue[t]=servovalues[s];
001760   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
                                           ; removed redundant BANKSEL
001762   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001764   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
001766   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001768   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00176a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00176c   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
00176e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001770   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001772   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001774   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001776   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001778   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00177a   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
00177c   ffe9
00177e   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001780   ffea
001782   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
001784   f002
001786   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001788   ffe9
00178a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00178c   ffea
00178e   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
001790   ffef
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001792   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	390; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pA]=0x00;
001794   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001796   0d05     mullw   0x05             	MULLW	0x05
001798   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00179a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00179c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00179e   f000
0017a0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017a2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017a4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0017a6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017a8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017aa   ffe9
0017ac   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017ae   ffea
0017b0   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	391; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pB]=0x00;
0017b2   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017b4   0d05     mullw   0x05             	MULLW	0x05
0017b6   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017ba   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017bc   f000
0017be   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017c0   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017c2   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0017c4   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017c6   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
0017c8   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017ca   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017cc   ffe9
0017ce   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017d0   ffea
0017d2   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	392; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pC]=0x00;
0017d4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017d6   0d05     mullw   0x05             	MULLW	0x05
0017d8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0017da   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0017dc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0017de   f000
0017e0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0017e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017e4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0017e6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0017e8   0e02     movlw   0x02             	MOVLW	0x02
0017ea   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0017ec   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0017ee   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0017f0   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0017f2   ffe9
0017f4   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0017f6   ffea
0017f8   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	393; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pD]=0x00;
0017fa   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0017fc   0d05     mullw   0x05             	MULLW	0x05
0017fe   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001800   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001802   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001804   f000
001806   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001808   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00180a   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00180c   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00180e   0e03     movlw   0x03             	MOVLW	0x03
001810   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001812   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001814   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001816   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001818   ffe9
00181a   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00181c   ffea
00181e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	394; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE]=mask[s];
001820   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001822   0d05     mullw   0x05             	MULLW	0x05
001824   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001826   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001828   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00182a   f000
00182c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00182e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001830   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001832   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001834   0e04     movlw   0x04             	MOVLW	0x04
001836   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001838   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00183a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
00183c   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
00183e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
001840   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
001842   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
001844   6a03     clrf    0x03, 0x0        	CLRF	r0x03
001846   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
001848   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00184a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00184c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00184e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
001850   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
001852   fff6
001854   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
001856   fff7
001858   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00185a   fff8
00185c   0009     tblrd*+                  	TBLRD*+	
00185e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
001860   f002
001862   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001864   ffe9
001866   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001868   ffea
00186a   c002     movff   0x002, 0xfef     	MOVFF	r0x02, INDF0
00186c   ffef
                                           ;	.line	395; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos=1;
00186e   0e01     movlw   0x01             	MOVLW	0x01
001870   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
001872   6fa6     movwf   0xa6, 0x1        	MOVWF	_SortServoTimings_numservos_1_32, B
001874   d05e     bra     0x001932         	BRA	_00418_DS_
                                           _00400_DS_:
                                           ;	.line	397; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	else if (servovalues[s] == timevalue[t]){
001876   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
001878   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
00187a   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
00187c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
00187e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
001880   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
001882   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001884   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001886   ffe9
001888   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00188a   ffea
00188c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00188e   f000
001890   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
001892   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
001894   25a4     addwf   0xa4, 0x0, 0x1   	ADDWF	_SortServoTimings_t_1_32, W, B
001896   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001898   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00189a   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
00189c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00189e   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
0018a0   ffe9
0018a2   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
0018a4   ffea
0018a6   cfef     movff   0xfef, 0x001     	MOVFF	INDF0, r0x01
0018a8   f001
0018aa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0018ac   1801     xorwf   0x01, 0x0, 0x0   	XORWF	r0x01, W
0018ae   e001     bz      0x0018b2         	BZ	_00522_DS_
0018b0   d040     bra     0x001932         	BRA	_00418_DS_
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00522_DS_:
0018b2   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	398; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timings[t][pE] |= mask[s];
0018b4   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0018b6   0d05     mullw   0x05             	MULLW	0x05
0018b8   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018ba   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0018bc   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0018be   f000
0018c0   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018c2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018c4   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0018c6   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0018c8   0e04     movlw   0x04             	MOVLW	0x04
0018ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0018cc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ce   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x02
                                           ; removed redundant BANKSEL
0018d0   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0018d2   0d05     mullw   0x05             	MULLW	0x05
0018d4   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0018d6   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
0018d8   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
0018da   f002
0018dc   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0018de   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e0   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0018e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0018e4   0e04     movlw   0x04             	MOVLW	0x04
0018e6   2602     addwf   0x02, 0x1, 0x0   	ADDWF	r0x02, F
0018e8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0018ea   2a03     incf    0x03, 0x1, 0x0   	INCF	r0x03, F
0018ec   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0018ee   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
0018f0   25a7     addwf   0xa7, 0x0, 0x1   	ADDWF	_SortServoTimings_s_1_32, W, B
0018f2   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
0018f4   6a05     clrf    0x05, 0x0        	CLRF	r0x05
0018f6   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0018f8   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
0018fa   6a06     clrf    0x06, 0x0        	CLRF	r0x06
0018fc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0018fe   2206     addwfc  0x06, 0x1, 0x0   	ADDWFC	r0x06, F
001900   c004     movff   0x004, 0xff6     	MOVFF	r0x04, TBLPTRL
001902   fff6
001904   c005     movff   0x005, 0xff7     	MOVFF	r0x05, TBLPTRH
001906   fff7
001908   c006     movff   0x006, 0xff8     	MOVFF	r0x06, TBLPTRU
00190a   fff8
00190c   0009     tblrd*+                  	TBLRD*+	
00190e   cff5     movff   0xff5, 0x004     	MOVFF	TABLAT, r0x04
001910   f004
001912   c002     movff   0x002, 0xfe9     	MOVFF	r0x02, FSR0L
001914   ffe9
001916   c003     movff   0x003, 0xfea     	MOVFF	r0x03, FSR0H
001918   ffea
00191a   cfef     movff   0xfef, 0x002     	MOVFF	INDF0, r0x02
00191c   f002
00191e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
001920   1204     iorwf   0x04, 0x1, 0x0   	IORWF	r0x04, F
001922   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001924   ffe9
001926   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001928   ffea
00192a   c004     movff   0x004, 0xfef     	MOVFF	r0x04, INDF0
00192c   ffef
00192e   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	399; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	numservos++;
001930   2ba6     incf    0xa6, 0x1, 0x1   	INCF	_SortServoTimings_numservos_1_32, F, B
                                           _00418_DS_:
001932   0101     movlb   0x1              	BANKSEL	_SortServoTimings_s_1_32
                                           ;	.line	280; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(s=0;s<TotalPICpins;s++)
001934   2ba7     incf    0xa7, 0x1, 0x1   	INCF	_SortServoTimings_s_1_32, F, B
001936   efab     goto    0x000d56         	GOTO	_00417_DS_
001938   f006
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
                                           _00406_DS_:
00193a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	405; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pA] |= timings[t][pA];
00193c   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00193e   0d05     mullw   0x05             	MULLW	0x05
001940   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001942   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001944   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001946   f000
001948   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00194a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00194c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00194e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001950   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001952   ffe9
001954   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001956   ffea
001958   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00195a   f000
00195c   0104     movlb   0x4              	BANKSEL	_mascaratotal
00195e   51f6     movf    0xf6, 0x0, 0x1   	MOVF	_mascaratotal, W, B
001960   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001962   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001964   6ff6     movwf   0xf6, 0x1        	MOVWF	_mascaratotal, B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001966   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	406; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pB] |= timings[t][pB];
001968   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00196a   0d05     mullw   0x05             	MULLW	0x05
00196c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00196e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001970   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001972   f000
001974   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001976   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001978   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00197a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00197c   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
00197e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001980   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001982   ffe9
001984   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001986   ffea
001988   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00198a   f000
00198c   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 1)
00198e   51f7     movf    0xf7, 0x0, 0x1   	MOVF	(_mascaratotal + 1), W, B
001990   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001992   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001994   6ff7     movwf   0xf7, 0x1        	MOVWF	(_mascaratotal + 1), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
001996   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	408; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pC] |= timings[t][pC];
001998   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
00199a   0d05     mullw   0x05             	MULLW	0x05
00199c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00199e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019a0   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019a2   f000
0019a4   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019a8   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0019aa   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019ac   0e02     movlw   0x02             	MOVLW	0x02
0019ae   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019b0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019b2   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019b4   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019b6   ffe9
0019b8   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ba   ffea
0019bc   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019be   f000
0019c0   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 2)
0019c2   51f8     movf    0xf8, 0x0, 0x1   	MOVF	(_mascaratotal + 2), W, B
0019c4   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019c6   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019c8   6ff8     movwf   0xf8, 0x1        	MOVWF	(_mascaratotal + 2), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0019ca   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	411; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pD] |= timings[t][pD];
0019cc   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
0019ce   0d05     mullw   0x05             	MULLW	0x05
0019d0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0019d2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0019d4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0019d6   f000
0019d8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0019da   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019dc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0019de   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0019e0   0e03     movlw   0x03             	MOVLW	0x03
0019e2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0019e4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0019e6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0019e8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0019ea   ffe9
0019ec   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0019ee   ffea
0019f0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0019f2   f000
0019f4   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 3)
0019f6   51f9     movf    0xf9, 0x0, 0x1   	MOVF	(_mascaratotal + 3), W, B
0019f8   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
0019fa   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0019fc   6ff9     movwf   0xf9, 0x1        	MOVWF	(_mascaratotal + 3), B
                                           ; ;multiply lit val:0x05 by variable _SortServoTimings_t_1_32 and store in r0x00
0019fe   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	414; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	mascaratotal[pE] |= timings[t][pE];
001a00   51a4     movf    0xa4, 0x0, 0x1   	MOVF	_SortServoTimings_t_1_32, W, B
001a02   0d05     mullw   0x05             	MULLW	0x05
001a04   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
001a06   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
001a08   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
001a0a   f000
001a0c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
001a0e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a10   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
001a12   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
001a14   0e04     movlw   0x04             	MOVLW	0x04
001a16   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
001a18   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
001a1a   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
001a1c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
001a1e   ffe9
001a20   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
001a22   ffea
001a24   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
001a26   f000
001a28   0104     movlb   0x4              	BANKSEL	(_mascaratotal + 4)
001a2a   51fa     movf    0xfa, 0x0, 0x1   	MOVF	(_mascaratotal + 4), W, B
001a2c   1200     iorwf   0x00, 0x1, 0x0   	IORWF	r0x00, F
001a2e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001a30   6ffa     movwf   0xfa, 0x1        	MOVWF	(_mascaratotal + 4), B
001a32   0101     movlb   0x1              	BANKSEL	_SortServoTimings_numservos_1_32
                                           ;	.line	417; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	totalservos += numservos;
001a34   51a6     movf    0xa6, 0x0, 0x1   	MOVF	_SortServoTimings_numservos_1_32, W, B
001a36   0101     movlb   0x1              	BANKSEL	_SortServoTimings_totalservos_1_32
001a38   27a5     addwf   0xa5, 0x1, 0x1   	ADDWF	_SortServoTimings_totalservos_1_32, F, B
001a3a   0101     movlb   0x1              	BANKSEL	_SortServoTimings_t_1_32
                                           ;	.line	418; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	t++;
001a3c   2ba4     incf    0xa4, 0x1, 0x1   	INCF	_SortServoTimings_t_1_32, F, B
001a3e   efa0     goto    0x000d40         	GOTO	_00407_DS_
001a40   f006
                                           _00409_DS_:
001a42   0101     movlb   0x1              	BANKSEL	_needreordering
                                           ;	.line	421; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	needreordering=0;  // This indicates that servo timings are sorted.
001a44   6b01     clrf    0x01, 0x1        	CLRF	_needreordering, B
001a46   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
001a48   f006
001a4a   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
001a4c   f005
001a4e   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
001a50   f004
001a52   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
001a54   f003
001a56   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
001a58   f002
001a5a   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
001a5c   f001
001a5e   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
001a60   f000
001a62   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseUp	code
                                           _ServosPulseUp:
00583e   0104     movlb   0x4              	BANKSEL	_activatedservos
                                           ;	.line	232; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA | activatedservos[pA];
005840   51f1     movf    0xf1, 0x0, 0x1   	MOVF	_activatedservos, W, B
005842   1280     iorwf   0x80, 0x1, 0x0   	IORWF	_PORTA, F
                                           ; removed redundant BANKSEL
                                           ;	.line	233; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB | activatedservos[pB];
005844   51f2     movf    0xf2, 0x0, 0x1   	MOVF	(_activatedservos + 1), W, B
005846   1281     iorwf   0x81, 0x1, 0x0   	IORWF	_PORTB, F
                                           ; removed redundant BANKSEL
                                           ;	.line	235; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC | activatedservos[pC];
005848   51f3     movf    0xf3, 0x0, 0x1   	MOVF	(_activatedservos + 2), W, B
00584a   1282     iorwf   0x82, 0x1, 0x0   	IORWF	_PORTC, F
                                           ; removed redundant BANKSEL
                                           ;	.line	238; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD | activatedservos[pD];
00584c   51f4     movf    0xf4, 0x0, 0x1   	MOVF	(_activatedservos + 3), W, B
00584e   1283     iorwf   0x83, 0x1, 0x0   	IORWF	_PORTD, F
                                           ; removed redundant BANKSEL
                                           ;	.line	241; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE | activatedservos[pE];
005850   51f5     movf    0xf5, 0x0, 0x1   	MOVF	(_activatedservos + 4), W, B
005852   1284     iorwf   0x84, 0x1, 0x0   	IORWF	_PORTE, F
005854   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	185; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	static void ServosPulseDown()
0036da   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0036dc   ffe5
0036de   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0036e0   ffd9
0036e2   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0036e4   ffe5
0036e6   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0036e8   ffe5
0036ea   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_28
                                           ;	.line	187; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	volatile unsigned char timingindex = 0;
0036ec   6ba3     clrf    0xa3, 0x1        	CLRF	_ServosPulseDown_timingindex_1_28, B
0036ee   0101     movlb   0x1              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
0036f0   6b02     clrf    0x02, 0x1        	CLRF	_timedivision, B
                                           _00331_DS_:
                                           ;	.line	191; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	if (timevalue[timingindex] == timedivision)
0036f2   0ebc     movlw   0xbc             	MOVLW	LOW(_timevalue)
0036f4   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_28
0036f6   25a3     addwf   0xa3, 0x0, 0x1   	ADDWF	_ServosPulseDown_timingindex_1_28, W, B
0036f8   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
0036fa   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0036fc   0e04     movlw   0x04             	MOVLW	HIGH(_timevalue)
0036fe   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003700   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003702   ffe9
003704   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003706   ffea
003708   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00370a   f000
00370c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00370e   0101     movlb   0x1              	BANKSEL	_timedivision
003710   1902     xorwf   0x02, 0x0, 0x1   	XORWF	_timedivision, W, B
003712   e001     bz      0x003716         	BZ	_00342_DS_
003714   d06a     bra     0x0037ea         	BRA	_00329_DS_
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           _00342_DS_:
003716   0101     movlb   0x1              	BANKSEL	_ServosPulseDown_timingindex_1_28
                                           ;	.line	193; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTA = PORTA ^ timings[timingindex][pA];
003718   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
00371a   0d05     mullw   0x05             	MULLW	0x05
00371c   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00371e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003720   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003722   f000
003724   0e00     movlw   0x00             	MOVLW	LOW(_timings)
003726   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003728   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00372a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00372c   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
00372e   ffe9
003730   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003732   ffea
003734   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
003736   f000
003738   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00373a   1a80     xorwf   0x80, 0x1, 0x0   	XORWF	_PORTA, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTB = PORTB ^ timings[timingindex][pB];
00373c   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
00373e   0d05     mullw   0x05             	MULLW	0x05
003740   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003742   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003744   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
003746   f000
003748   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00374a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00374c   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
00374e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003750   4a00     infsnz  0x00, 0x1, 0x0   	INFSNZ	r0x00, F
003752   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
003754   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003756   ffe9
003758   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
00375a   ffea
00375c   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00375e   f000
003760   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003762   1a81     xorwf   0x81, 0x1, 0x0   	XORWF	_PORTB, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTC = PORTC ^ timings[timingindex][pC];
003764   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
003766   0d05     mullw   0x05             	MULLW	0x05
003768   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
00376a   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00376c   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00376e   f000
003770   0e00     movlw   0x00             	MOVLW	LOW(_timings)
003772   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
003774   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
003776   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
003778   0e02     movlw   0x02             	MOVLW	0x02
00377a   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00377c   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
00377e   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
003780   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
003782   ffe9
003784   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
003786   ffea
003788   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
00378a   f000
00378c   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00378e   1a82     xorwf   0x82, 0x1, 0x0   	XORWF	_PORTC, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	199; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTD = PORTD ^ timings[timingindex][pD];
003790   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
003792   0d05     mullw   0x05             	MULLW	0x05
003794   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
003796   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003798   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
00379a   f000
00379c   0e00     movlw   0x00             	MOVLW	LOW(_timings)
00379e   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0037a0   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0037a2   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0037a4   0e03     movlw   0x03             	MOVLW	0x03
0037a6   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0037a8   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0037aa   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0037ac   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0037ae   ffe9
0037b0   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0037b2   ffea
0037b4   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0037b6   f000
0037b8   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0037ba   1a83     xorwf   0x83, 0x1, 0x0   	XORWF	_PORTD, F
                                           ; ;multiply lit val:0x05 by variable _ServosPulseDown_timingindex_1_28 and store in r0x00
                                           ; removed redundant BANKSEL
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PORTE = PORTE ^ timings[timingindex][pE];
0037bc   51a3     movf    0xa3, 0x0, 0x1   	MOVF	_ServosPulseDown_timingindex_1_28, W, B
0037be   0d05     mullw   0x05             	MULLW	0x05
0037c0   50f4     movf    0xf4, 0x0, 0x0   	MOVF	PRODH, W
0037c2   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0037c4   cff3     movff   0xff3, 0x000     	MOVFF	PRODL, r0x00
0037c6   f000
0037c8   0e00     movlw   0x00             	MOVLW	LOW(_timings)
0037ca   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0037cc   0e06     movlw   0x06             	MOVLW	HIGH(_timings)
0037ce   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0037d0   0e04     movlw   0x04             	MOVLW	0x04
0037d2   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0037d4   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0037d6   2a01     incf    0x01, 0x1, 0x0   	INCF	r0x01, F
0037d8   c000     movff   0x000, 0xfe9     	MOVFF	r0x00, FSR0L
0037da   ffe9
0037dc   c001     movff   0x001, 0xfea     	MOVFF	r0x01, FSR0H
0037de   ffea
0037e0   cfef     movff   0xfef, 0x000     	MOVFF	INDF0, r0x00
0037e2   f000
0037e4   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0037e6   1a84     xorwf   0x84, 0x1, 0x0   	XORWF	_PORTE, F
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	timingindex++;
0037e8   2ba3     incf    0xa3, 0x1, 0x1   	INCF	_ServosPulseDown_timingindex_1_28, F, B
                                           _00329_DS_:
0037ea   0e07     movlw   0x07             	movlw	7
0037ec   6f9c     movwf   0x9c, 0x1        	movwf	_loopvar
                                           bucle:
0037ee   0000     nop                      	NOP
0037f0   0000     nop                      	NOP
0037f2   0000     nop                      	NOP
0037f4   0000     nop                      	NOP
0037f6   0000     nop                      	NOP
0037f8   0000     nop                      	NOP
0037fa   0000     nop                      	NOP
0037fc   0000     nop                      	NOP
0037fe   0000     nop                      	NOP
003800   0000     nop                      	NOP
003802   0000     nop                      	NOP
003804   2f9c     decfsz  0x9c, 0x1, 0x1   	decfsz	_loopvar,1
003806   eff7     goto    0x0037ee         	goto	bucle
003808   f01b
                                           	
00380a   0101     movlb   0x1              	BANKSEL	_timedivision
                                           ;	.line	189; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(timedivision=0;timedivision < 251;timedivision++)
00380c   2b02     incf    0x02, 0x1, 0x1   	INCF	_timedivision, F, B
00380e   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
003810   5d02     subwf   0x02, 0x0, 0x1   	SUBWF	_timedivision, W, B
003812   a0d8     btfss   0xd8, 0x0, 0x0   	BTFSS	STATUS, 0
003814   d76e     bra     0x0036f2         	BRA	_00331_DS_
003816   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003818   f001
00381a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00381c   f000
00381e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003820   ffd9
003822   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__servos_init	code
                                           _servos_init:
                                           ;	.line	152; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	void servos_init()
004b0c   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004b0e   ffe5
004b10   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004b12   ffe5
004b14   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004b16   ffe5
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
004b18   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00302_DS_:
                                           ;	.line	159; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	servovalues[a]=255;  //Filling up the servovalues table to 255.
004b1a   0ed6     movlw   0xd6             	MOVLW	LOW(_servovalues)
004b1c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004b1e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004b20   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004b22   0e06     movlw   0x06             	MOVLW	HIGH(_servovalues)
004b24   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004b26   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004b28   ffe9
004b2a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004b2c   ffea
004b2e   68ef     setf    0xef, 0x0        	SETF	INDF0
                                           ;	.line	160; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[0][a]= DefaultSERVOMIN; // Setting min servo position to 1000 usec.
004b30   0e80     movlw   0x80             	MOVLW	LOW(_maxminpos)
004b32   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004b34   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004b36   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004b38   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos)
004b3a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004b3c   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004b3e   ffe9
004b40   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004b42   ffea
004b44   0e40     movlw   0x40             	MOVLW	0x40
004b46   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	161; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	maxminpos[1][a]= DefaultSERVOMAX; // Setting max servo position to 2000 usec.
004b48   0e9e     movlw   0x9e             	MOVLW	LOW(_maxminpos + 30)
004b4a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004b4c   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004b4e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004b50   0e04     movlw   0x04             	MOVLW	HIGH(_maxminpos + 30)
004b52   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004b54   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004b56   ffe9
004b58   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004b5a   ffea
004b5c   0ec0     movlw   0xc0             	MOVLW	0xc0
004b5e   6eef     movwf   0xef, 0x0        	MOVWF	INDF0
                                           ;	.line	157; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICpins;a++)
004b60   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004b62   0e1e     movlw   0x1e             	MOVLW	0x1e
004b64   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004b66   e3d9     bnc     0x004b1a         	BNC	_00302_DS_
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
004b68   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00304_DS_:
                                           ;	.line	166; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	activatedservos[a]=0x00;  // Setting all pins as deactivated as servo.
004b6a   0ef1     movlw   0xf1             	MOVLW	LOW(_activatedservos)
004b6c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
004b6e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
004b70   6a02     clrf    0x02, 0x0        	CLRF	r0x02
004b72   0e04     movlw   0x04             	MOVLW	HIGH(_activatedservos)
004b74   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
004b76   c001     movff   0x001, 0xfe9     	MOVFF	r0x01, FSR0L
004b78   ffe9
004b7a   c002     movff   0x002, 0xfea     	MOVFF	r0x02, FSR0H
004b7c   ffea
004b7e   6aef     clrf    0xef, 0x0        	CLRF	INDF0
                                           ;	.line	165; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	for(a=0;a<TotalPICports;a++)
004b80   2a00     incf    0x00, 0x1, 0x0   	INCF	r0x00, F
004b82   0e05     movlw   0x05             	MOVLW	0x05
004b84   5c00     subwf   0x00, 0x0, 0x0   	SUBWF	r0x00, W
004b86   e3f1     bnc     0x004b6a         	BNC	_00304_DS_
                                           ;	.line	168; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 0; // Disable global HP interrupts
004b88   9ef2     bcf     0xf2, 0x7, 0x0   	BCF	_INTCONbits, 7
                                           ;	.line	169; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 0; // Disable global LP interrupts
004b8a   9cf2     bcf     0xf2, 0x6, 0x0   	BCF	_INTCONbits, 6
                                           ;	.line	171; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CON=0x01; 			//timer 1 prescaler 1 source is internal oscillator
004b8c   0e01     movlw   0x01             	MOVLW	0x01
004b8e   6ecd     movwf   0xcd, 0x0        	MOVWF	_T1CON
                                           ;	.line	172; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1H=0xFF; 			// First value on timer to start up...
004b90   0eff     movlw   0xff             	MOVLW	0xff
004b92   68cf     setf    0xcf, 0x0        	SETF	_TMR1H
                                           ;	.line	173; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	TMR1L=0x00; 			// ...now the first interrupt will be generated by timer after 9 ms.
004b94   6ace     clrf    0xce, 0x0        	CLRF	_TMR1L
                                           ;	.line	174; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	IPR1bits.TMR1IP = 1; 	// INT_HIGH_PRIORITY
004b96   809f     bsf     0x9f, 0x0, 0x0   	BSF	_IPR1bits, 0
                                           ;	.line	175; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIR1bits.TMR1IF = 0; 	// Setting flag to 0
004b98   909e     bcf     0x9e, 0x0, 0x0   	BCF	_PIR1bits, 0
                                           ;	.line	176; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	PIE1bits.TMR1IE = 1; 	// INT_ENABLE
004b9a   809d     bsf     0x9d, 0x0, 0x0   	BSF	_PIE1bits, 0
                                           ;	.line	177; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	T1CONbits.TMR1ON   = 1; // Starting TMR1
004b9c   80cd     bsf     0xcd, 0x0, 0x0   	BSF	_T1CONbits, 0
                                           ;	.line	179; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEH    = 1; // Enable global HP interrupts
004b9e   8ef2     bsf     0xf2, 0x7, 0x0   	BSF	_INTCONbits, 7
                                           ;	.line	180; /home/vbasel/.icaro/v4/firmware/libraries/servos.c	INTCONbits.GIEL    = 1; // Enable global LP interrupts
004ba0   8cf2     bsf     0xf2, 0x6, 0x0   	BSF	_INTCONbits, 6
004ba2   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004ba4   f002
004ba6   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004ba8   f001
004baa   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
004bac   f000
004bae   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__toggle	code
                                           _toggle:
                                           ;	.line	47; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	void toggle(u8 pin)
00565a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00565c   ffe5
00565e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005660   ffd9
005662   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
005664   ffe5
005666   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
005668   ffe5
00566a   0e02     movlw   0x02             	MOVLW	0x02
00566c   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
00566e   f000
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	state = digitalread(pin);
005670   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005672   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005674   ec4b     call    0x003096, 0x0call    0x003096, 0x0 	CALL	_digitalread
005676   f018
005678   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00567a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalt.c	digitalwrite(pin, state^1);
00567c   7001     btg     0x01, 0x0, 0x0   	BTG	r0x01, 0
00567e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
005680   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005682   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
005684   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
005686   ec09     call    0x002412, 0x0call    0x002412, 0x0 	CALL	_digitalwrite
005688   f012
00568a   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00568c   52e6     movf    0xe6, 0x1, 0x0   	MOVF	POSTINC1, F
00568e   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
005690   f001
005692   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
005694   f000
005696   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005698   ffd9
00569a   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digitalread	code
                                           _digitalread:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	u8 digitalread(u8 pin)
003096   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003098   ffe5
00309a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00309c   ffd9
00309e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0030a0   ffe5
0030a2   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0030a4   ffe5
0030a6   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0030a8   ffe5
0030aa   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0030ac   ffe5
0030ae   0e02     movlw   0x02             	MOVLW	0x02
0030b0   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0030b2   f000
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	switch (port[pin])
0030b4   0e6a     movlw   0x6a             	MOVLW	LOW(_port)
0030b6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0030b8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0030ba   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0030bc   0e38     movlw   0x38             	MOVLW	HIGH(_port)
0030be   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0030c0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0030c2   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0030c4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0030c6   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0030c8   fff6
0030ca   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0030cc   fff7
0030ce   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0030d0   fff8
0030d2   0009     tblrd*+                  	TBLRD*+	
0030d4   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0030d6   f001
0030d8   0e05     movlw   0x05             	MOVLW	0x05
0030da   5c01     subwf   0x01, 0x0, 0x0   	SUBWF	r0x01, W
0030dc   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0030de   d0a4     bra     0x003228         	BRA	_00258_DS_
0030e0   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0030e2   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0030e4   3401     rlcf    0x01, 0x0, 0x0   	RLCF	r0x01, W
0030e6   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0030e8   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0030ea   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0030ec   0bfc     andlw   0xfc             	ANDLW	0xfc
0030ee   0ffe     addlw   0xfe             	ADDLW	LOW(_00290_DS_)
0030f0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0030f2   0e30     movlw   0x30             	MOVLW	HIGH(_00290_DS_)
0030f4   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0030f6   0e00     movlw   0x00             	MOVLW	UPPER(_00290_DS_)
0030f8   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0030fa   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0030fc   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00290_DS_:
0030fe   ef89     goto    0x003112         	GOTO	_00253_DS_
003100   f018
003102   efa5     goto    0x00314a         	GOTO	_00254_DS_
003104   f018
003106   efc1     goto    0x003182         	GOTO	_00255_DS_
003108   f018
00310a   efdd     goto    0x0031ba         	GOTO	_00256_DS_
00310c   f018
00310e   eff9     goto    0x0031f2         	GOTO	_00257_DS_
003110   f018
                                           _00253_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTA & mask[pin])!=0);
003112   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
003114   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003116   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003118   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00311a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00311c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00311e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003120   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003122   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003124   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003126   fff6
003128   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00312a   fff7
00312c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00312e   fff8
003130   0009     tblrd*+                  	TBLRD*+	
003132   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
003134   f001
003136   5080     movf    0x80, 0x0, 0x0   	MOVF	_PORTA, W
003138   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
00313a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00313c   e003     bz      0x003144         	BZ	_00261_DS_
00313e   0e01     movlw   0x01             	MOVLW	0x01
003140   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003142   d001     bra     0x003146         	BRA	_00262_DS_
                                           _00261_DS_:
003144   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00262_DS_:
003146   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003148   d070     bra     0x00322a         	BRA	_00259_DS_
                                           _00254_DS_:
                                           ;	.line	60; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTB & mask[pin])!=0);
00314a   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
00314c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00314e   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003150   6a02     clrf    0x02, 0x0        	CLRF	r0x02
003152   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
003154   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003156   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003158   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00315a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00315c   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
00315e   fff6
003160   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
003162   fff7
003164   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
003166   fff8
003168   0009     tblrd*+                  	TBLRD*+	
00316a   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
00316c   f001
00316e   5081     movf    0x81, 0x0, 0x0   	MOVF	_PORTB, W
003170   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
003172   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003174   e003     bz      0x00317c         	BZ	_00263_DS_
003176   0e01     movlw   0x01             	MOVLW	0x01
003178   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00317a   d001     bra     0x00317e         	BRA	_00264_DS_
                                           _00263_DS_:
00317c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00264_DS_:
00317e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
003180   d054     bra     0x00322a         	BRA	_00259_DS_
                                           _00255_DS_:
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTC & mask[pin])!=0);
003182   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
003184   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
003186   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
003188   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00318a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00318c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00318e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
003190   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003192   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
003194   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
003196   fff6
003198   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00319a   fff7
00319c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00319e   fff8
0031a0   0009     tblrd*+                  	TBLRD*+	
0031a2   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0031a4   f001
0031a6   5082     movf    0x82, 0x0, 0x0   	MOVF	_PORTC, W
0031a8   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0031aa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031ac   e003     bz      0x0031b4         	BZ	_00265_DS_
0031ae   0e01     movlw   0x01             	MOVLW	0x01
0031b0   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031b2   d001     bra     0x0031b6         	BRA	_00266_DS_
                                           _00265_DS_:
0031b4   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00266_DS_:
0031b6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031b8   d038     bra     0x00322a         	BRA	_00259_DS_
                                           _00256_DS_:
                                           ;	.line	70; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTD & mask[pin])!=0);
0031ba   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0031bc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0031be   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031c0   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0031c2   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0031c4   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
0031c6   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0031c8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0031ca   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0031cc   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
0031ce   fff6
0031d0   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
0031d2   fff7
0031d4   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
0031d6   fff8
0031d8   0009     tblrd*+                  	TBLRD*+	
0031da   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
0031dc   f001
0031de   5083     movf    0x83, 0x0, 0x0   	MOVF	_PORTD, W
0031e0   1601     andwf   0x01, 0x1, 0x0   	ANDWF	r0x01, F
0031e2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031e4   e003     bz      0x0031ec         	BZ	_00267_DS_
0031e6   0e01     movlw   0x01             	MOVLW	0x01
0031e8   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
0031ea   d001     bra     0x0031ee         	BRA	_00268_DS_
                                           _00267_DS_:
0031ec   6a01     clrf    0x01, 0x0        	CLRF	r0x01
                                           _00268_DS_:
0031ee   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0031f0   d01c     bra     0x00322a         	BRA	_00259_DS_
                                           _00257_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return ((PORTE & mask[pin])!=0);
0031f2   6a01     clrf    0x01, 0x0        	CLRF	r0x01
0031f4   6a02     clrf    0x02, 0x0        	CLRF	r0x02
0031f6   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0031f8   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
0031fa   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0031fc   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
0031fe   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
003200   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
003202   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
003204   fff6
003206   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
003208   fff7
00320a   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
00320c   fff8
00320e   0009     tblrd*+                  	TBLRD*+	
003210   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
003212   f000
003214   5084     movf    0x84, 0x0, 0x0   	MOVF	_PORTE, W
003216   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
003218   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00321a   e003     bz      0x003222         	BZ	_00269_DS_
00321c   0e01     movlw   0x01             	MOVLW	0x01
00321e   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
003220   d001     bra     0x003224         	BRA	_00270_DS_
                                           _00269_DS_:
003222   6a00     clrf    0x00, 0x0        	CLRF	r0x00
                                           _00270_DS_:
003224   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
003226   d001     bra     0x00322a         	BRA	_00259_DS_
                                           _00258_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalr.c	return 0;
003228   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00259_DS_:
00322a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00322c   f003
00322e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
003230   f002
003232   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
003234   f001
003236   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
003238   f000
00323a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00323c   ffd9
00323e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	48; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	void digitalwrite(u8 pin, u8 state)
002412   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002414   ffe5
002416   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002418   ffd9
00241a   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00241c   ffe5
00241e   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002420   ffe5
002422   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002424   ffe5
002426   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002428   ffe5
00242a   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00242c   ffe5
00242e   0e02     movlw   0x02             	MOVLW	0x02
002430   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002432   f000
002434   0e03     movlw   0x03             	MOVLW	0x03
002436   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002438   f001
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	switch (port[pin])
00243a   0e6a     movlw   0x6a             	MOVLW	LOW(_port)
00243c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00243e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002440   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002442   0e38     movlw   0x38             	MOVLW	HIGH(_port)
002444   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002446   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002448   0e00     movlw   0x00             	MOVLW	UPPER(_port)
00244a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00244c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00244e   fff6
002450   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002452   fff7
002454   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002456   fff8
002458   0009     tblrd*+                  	TBLRD*+	
00245a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00245c   f002
00245e   0e05     movlw   0x05             	MOVLW	0x05
002460   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
002462   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
002464   d0f8     bra     0x002656         	BRA	_00227_DS_
002466   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
002468   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
00246a   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
00246c   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
00246e   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
002470   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
002472   0bfc     andlw   0xfc             	ANDLW	0xfc
002474   0f84     addlw   0x84             	ADDLW	LOW(_00248_DS_)
002476   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002478   0e24     movlw   0x24             	MOVLW	HIGH(_00248_DS_)
00247a   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
00247c   0e00     movlw   0x00             	MOVLW	UPPER(_00248_DS_)
00247e   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
002480   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
002482   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00248_DS_:
002484   ef4c     goto    0x002498         	GOTO	_00206_DS_
002486   f012
002488   ef79     goto    0x0024f2         	GOTO	_00210_DS_
00248a   f012
00248c   efa6     goto    0x00254c         	GOTO	_00214_DS_
00248e   f012
002490   efd3     goto    0x0025a6         	GOTO	_00218_DS_
002492   f012
002494   ef00     goto    0x002600         	GOTO	_00222_DS_
002496   f013
                                           _00206_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATA=LATA | mask[pin];
002498   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00249a   e015     bz      0x0024c6         	BZ	_00208_DS_
00249c   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
00249e   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024a0   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024a2   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024a4   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0024a6   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024a8   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0024aa   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024ac   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0024ae   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0024b0   fff6
0024b2   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0024b4   fff7
0024b6   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0024b8   fff8
0024ba   0009     tblrd*+                  	TBLRD*+	
0024bc   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0024be   f002
0024c0   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024c2   1289     iorwf   0x89, 0x1, 0x0   	IORWF	_LATA, F
0024c4   d0c8     bra     0x002656         	BRA	_00227_DS_
                                           _00208_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATA=LATA & (255-mask[pin]);
0024c6   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0024c8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024ca   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024cc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024ce   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0024d0   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0024d2   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0024d4   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0024d6   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0024d8   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0024da   fff6
0024dc   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0024de   fff7
0024e0   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0024e2   fff8
0024e4   0009     tblrd*+                  	TBLRD*+	
0024e6   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0024e8   f002
0024ea   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0024ec   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0024ee   1689     andwf   0x89, 0x1, 0x0   	ANDWF	_LATA, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0024f0   d0b2     bra     0x002656         	BRA	_00227_DS_
                                           _00210_DS_:
                                           ;	.line	61; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATB=LATB | mask[pin]; 
0024f2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0024f4   e015     bz      0x002520         	BZ	_00212_DS_
0024f6   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0024f8   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0024fa   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0024fc   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0024fe   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002500   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002502   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002504   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002506   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002508   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00250a   fff6
00250c   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00250e   fff7
002510   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002512   fff8
002514   0009     tblrd*+                  	TBLRD*+	
002516   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002518   f002
00251a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00251c   128a     iorwf   0x8a, 0x1, 0x0   	IORWF	_LATB, F
00251e   d09b     bra     0x002656         	BRA	_00227_DS_
                                           _00212_DS_:
                                           ;	.line	62; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATB=LATB & (255-mask[pin]);
002520   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002522   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002524   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002526   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002528   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00252a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00252c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00252e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002530   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002532   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002534   fff6
002536   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002538   fff7
00253a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00253c   fff8
00253e   0009     tblrd*+                  	TBLRD*+	
002540   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002542   f002
002544   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002546   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002548   168a     andwf   0x8a, 0x1, 0x0   	ANDWF	_LATB, F
                                           ;	.line	63; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
00254a   d085     bra     0x002656         	BRA	_00227_DS_
                                           _00214_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATC=LATC | mask[pin];
00254c   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00254e   e015     bz      0x00257a         	BZ	_00216_DS_
002550   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002552   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002554   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002556   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002558   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00255a   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00255c   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00255e   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002560   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002562   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002564   fff6
002566   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002568   fff7
00256a   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00256c   fff8
00256e   0009     tblrd*+                  	TBLRD*+	
002570   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002572   f002
002574   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002576   128b     iorwf   0x8b, 0x1, 0x0   	IORWF	_LATC, F
002578   d06e     bra     0x002656         	BRA	_00227_DS_
                                           _00216_DS_:
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATC=LATC & (255-mask[pin]);
00257a   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
00257c   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00257e   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002580   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002582   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002584   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002586   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002588   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00258a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00258c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00258e   fff6
002590   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002592   fff7
002594   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002596   fff8
002598   0009     tblrd*+                  	TBLRD*+	
00259a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00259c   f002
00259e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025a0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0025a2   168b     andwf   0x8b, 0x1, 0x0   	ANDWF	_LATC, F
                                           ;	.line	67; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0025a4   d058     bra     0x002656         	BRA	_00227_DS_
                                           _00218_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATD=LATD | mask[pin]; 
0025a6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0025a8   e015     bz      0x0025d4         	BZ	_00220_DS_
0025aa   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0025ac   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0025ae   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025b0   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0025b2   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0025b4   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0025b6   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0025b8   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0025ba   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0025bc   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0025be   fff6
0025c0   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0025c2   fff7
0025c4   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0025c6   fff8
0025c8   0009     tblrd*+                  	TBLRD*+	
0025ca   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0025cc   f002
0025ce   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025d0   128c     iorwf   0x8c, 0x1, 0x0   	IORWF	_LATD, F
0025d2   d041     bra     0x002656         	BRA	_00227_DS_
                                           _00220_DS_:
                                           ;	.line	73; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATD=LATD & (255-mask[pin]);
0025d4   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0025d6   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0025d8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0025da   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0025dc   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0025de   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0025e0   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0025e2   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0025e4   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0025e6   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0025e8   fff6
0025ea   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0025ec   fff7
0025ee   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0025f0   fff8
0025f2   0009     tblrd*+                  	TBLRD*+	
0025f4   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0025f6   f002
0025f8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0025fa   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0025fc   168c     andwf   0x8c, 0x1, 0x0   	ANDWF	_LATD, F
                                           ;	.line	74; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	break;
0025fe   d02b     bra     0x002656         	BRA	_00227_DS_
                                           _00222_DS_:
                                           ;	.line	76; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	if (state) LATE=LATE | mask[pin]; 
002600   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002602   e015     bz      0x00262e         	BZ	_00224_DS_
002604   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002606   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002608   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
00260a   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00260c   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00260e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002610   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002612   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002614   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002616   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002618   fff6
00261a   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00261c   fff7
00261e   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002620   fff8
002622   0009     tblrd*+                  	TBLRD*+	
002624   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002626   f001
002628   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00262a   128d     iorwf   0x8d, 0x1, 0x0   	IORWF	_LATE, F
00262c   d014     bra     0x002656         	BRA	_00227_DS_
                                           _00224_DS_:
                                           ;	.line	77; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	else LATE=LATE & (255-mask[pin]);
00262e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002630   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002632   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002634   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002636   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002638   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
00263a   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00263c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00263e   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002640   fff6
002642   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002644   fff7
002646   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002648   fff8
00264a   0009     tblrd*+                  	TBLRD*+	
00264c   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
00264e   f000
002650   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002652   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002654   168d     andwf   0x8d, 0x1, 0x0   	ANDWF	_LATE, F
                                           _00227_DS_:
                                           ;	.line	80; /home/vbasel/.icaro/v4/firmware/core/digitalw.c	}
002656   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002658   f004
00265a   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
00265c   f003
00265e   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002660   f002
002662   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002664   f001
002666   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002668   f000
00266a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00266c   ffd9
00266e   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__pinmode	code
                                           _pinmode:
                                           ;	.line	44; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	void pinmode(u8 pin, u8 state)
002670   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002672   ffe5
002674   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002676   ffd9
002678   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
00267a   ffe5
00267c   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
00267e   ffe5
002680   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002682   ffe5
002684   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002686   ffe5
002688   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
00268a   ffe5
00268c   0e02     movlw   0x02             	MOVLW	0x02
00268e   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
002690   f000
002692   0e03     movlw   0x03             	MOVLW	0x03
002694   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
002696   f001
                                           ;	.line	46; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	switch (port[pin])
002698   0e6a     movlw   0x6a             	MOVLW	LOW(_port)
00269a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00269c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00269e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0026a0   0e38     movlw   0x38             	MOVLW	HIGH(_port)
0026a2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0026a4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0026a6   0e00     movlw   0x00             	MOVLW	UPPER(_port)
0026a8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0026aa   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0026ac   fff6
0026ae   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0026b0   fff7
0026b2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0026b4   fff8
0026b6   0009     tblrd*+                  	TBLRD*+	
0026b8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0026ba   f002
0026bc   0e05     movlw   0x05             	MOVLW	0x05
0026be   5c02     subwf   0x02, 0x0, 0x0   	SUBWF	r0x02, W
0026c0   b0d8     btfsc   0xd8, 0x0, 0x0   	BTFSC	STATUS, 0
0026c2   d0f8     bra     0x0028b4         	BRA	_00180_DS_
0026c4   6afa     clrf    0xfa, 0x0        	CLRF	PCLATH
0026c6   6afb     clrf    0xfb, 0x0        	CLRF	PCLATU
0026c8   3402     rlcf    0x02, 0x0, 0x0   	RLCF	r0x02, W
0026ca   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0026cc   34e8     rlcf    0xe8, 0x0, 0x0   	RLCF	WREG, W
0026ce   36fa     rlcf    0xfa, 0x1, 0x0   	RLCF	PCLATH, F
0026d0   0bfc     andlw   0xfc             	ANDLW	0xfc
0026d2   0fe2     addlw   0xe2             	ADDLW	LOW(_00201_DS_)
0026d4   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0026d6   0e26     movlw   0x26             	MOVLW	HIGH(_00201_DS_)
0026d8   22fa     addwfc  0xfa, 0x1, 0x0   	ADDWFC	PCLATH, F
0026da   0e00     movlw   0x00             	MOVLW	UPPER(_00201_DS_)
0026dc   22fb     addwfc  0xfb, 0x1, 0x0   	ADDWFC	PCLATU, F
0026de   50e4     movf    0xe4, 0x0, 0x0   	MOVF	PREINC1, W
0026e0   6ef9     movwf   0xf9, 0x0        	MOVWF	PCL
                                           _00201_DS_:
0026e2   ef7b     goto    0x0026f6         	GOTO	_00159_DS_
0026e4   f013
0026e6   efa8     goto    0x002750         	GOTO	_00163_DS_
0026e8   f013
0026ea   efd5     goto    0x0027aa         	GOTO	_00167_DS_
0026ec   f013
0026ee   ef02     goto    0x002804         	GOTO	_00171_DS_
0026f0   f014
0026f2   ef2f     goto    0x00285e         	GOTO	_00175_DS_
0026f4   f014
                                           _00159_DS_:
                                           ;	.line	49; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISA=TRISA | mask[pin];
0026f6   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0026f8   e015     bz      0x002724         	BZ	_00161_DS_
0026fa   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0026fc   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0026fe   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002700   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002702   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002704   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002706   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002708   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00270a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00270c   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00270e   fff6
002710   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002712   fff7
002714   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002716   fff8
002718   0009     tblrd*+                  	TBLRD*+	
00271a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00271c   f002
00271e   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002720   1292     iorwf   0x92, 0x1, 0x0   	IORWF	_TRISA, F
002722   d0c8     bra     0x0028b4         	BRA	_00180_DS_
                                           _00161_DS_:
                                           ;	.line	50; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISA=TRISA & (255-mask[pin]);
002724   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002726   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002728   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00272a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00272c   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00272e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002730   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002732   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002734   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002736   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002738   fff6
00273a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00273c   fff7
00273e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002740   fff8
002742   0009     tblrd*+                  	TBLRD*+	
002744   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002746   f002
002748   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00274a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00274c   1692     andwf   0x92, 0x1, 0x0   	ANDWF	_TRISA, F
                                           ;	.line	51; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
00274e   d0b2     bra     0x0028b4         	BRA	_00180_DS_
                                           _00163_DS_:
                                           ;	.line	53; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISB=TRISB | mask[pin];
002750   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002752   e015     bz      0x00277e         	BZ	_00165_DS_
002754   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002756   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002758   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00275a   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00275c   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00275e   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002760   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002762   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002764   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002766   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002768   fff6
00276a   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00276c   fff7
00276e   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002770   fff8
002772   0009     tblrd*+                  	TBLRD*+	
002774   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002776   f002
002778   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00277a   1293     iorwf   0x93, 0x1, 0x0   	IORWF	_TRISB, F
00277c   d09b     bra     0x0028b4         	BRA	_00180_DS_
                                           _00165_DS_:
                                           ;	.line	54; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISB=TRISB & (255-mask[pin]);
00277e   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002780   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002782   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002784   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002786   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002788   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00278a   6a04     clrf    0x04, 0x0        	CLRF	r0x04
00278c   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00278e   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002790   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002792   fff6
002794   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002796   fff7
002798   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00279a   fff8
00279c   0009     tblrd*+                  	TBLRD*+	
00279e   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027a0   f002
0027a2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027a4   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0027a6   1693     andwf   0x93, 0x1, 0x0   	ANDWF	_TRISB, F
                                           ;	.line	55; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
0027a8   d085     bra     0x0028b4         	BRA	_00180_DS_
                                           _00167_DS_:
                                           ;	.line	57; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISC=TRISC | mask[pin];
0027aa   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
0027ac   e015     bz      0x0027d8         	BZ	_00169_DS_
0027ae   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0027b0   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027b2   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027b4   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027b6   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0027b8   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027ba   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0027bc   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027be   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0027c0   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0027c2   fff6
0027c4   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0027c6   fff7
0027c8   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0027ca   fff8
0027cc   0009     tblrd*+                  	TBLRD*+	
0027ce   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027d0   f002
0027d2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027d4   1294     iorwf   0x94, 0x1, 0x0   	IORWF	_TRISC, F
0027d6   d06e     bra     0x0028b4         	BRA	_00180_DS_
                                           _00169_DS_:
                                           ;	.line	58; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISC=TRISC & (255-mask[pin]);
0027d8   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
0027da   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
0027dc   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0027de   6a03     clrf    0x03, 0x0        	CLRF	r0x03
0027e0   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
0027e2   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
0027e4   6a04     clrf    0x04, 0x0        	CLRF	r0x04
0027e6   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
0027e8   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
0027ea   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
0027ec   fff6
0027ee   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
0027f0   fff7
0027f2   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
0027f4   fff8
0027f6   0009     tblrd*+                  	TBLRD*+	
0027f8   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
0027fa   f002
0027fc   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
0027fe   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
002800   1694     andwf   0x94, 0x1, 0x0   	ANDWF	_TRISC, F
                                           ;	.line	59; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
002802   d058     bra     0x0028b4         	BRA	_00180_DS_
                                           _00171_DS_:
                                           ;	.line	64; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISD=TRISD | mask[pin];
002804   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002806   e015     bz      0x002832         	BZ	_00173_DS_
002808   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
00280a   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
00280c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00280e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002810   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002812   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002814   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002816   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002818   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00281a   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
00281c   fff6
00281e   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
002820   fff7
002822   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
002824   fff8
002826   0009     tblrd*+                  	TBLRD*+	
002828   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
00282a   f002
00282c   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00282e   1295     iorwf   0x95, 0x1, 0x0   	IORWF	_TRISD, F
002830   d041     bra     0x0028b4         	BRA	_00180_DS_
                                           _00173_DS_:
                                           ;	.line	65; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISD=TRISD & (255-mask[pin]);
002832   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002834   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002836   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002838   6a03     clrf    0x03, 0x0        	CLRF	r0x03
00283a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00283c   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
00283e   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002840   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002842   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002844   c002     movff   0x002, 0xff6     	MOVFF	r0x02, TBLPTRL
002846   fff6
002848   c003     movff   0x003, 0xff7     	MOVFF	r0x03, TBLPTRH
00284a   fff7
00284c   c004     movff   0x004, 0xff8     	MOVFF	r0x04, TBLPTRU
00284e   fff8
002850   0009     tblrd*+                  	TBLRD*+	
002852   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002854   f002
002856   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002858   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00285a   1695     andwf   0x95, 0x1, 0x0   	ANDWF	_TRISD, F
                                           ;	.line	66; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	break;
00285c   d02b     bra     0x0028b4         	BRA	_00180_DS_
                                           _00175_DS_:
                                           ;	.line	68; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	if (state) TRISE=TRISE | mask[pin];
00285e   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002860   e015     bz      0x00288c         	BZ	_00177_DS_
002862   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002864   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002866   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002868   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00286a   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
00286c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00286e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002870   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
002872   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002874   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002876   fff6
002878   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
00287a   fff7
00287c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
00287e   fff8
002880   0009     tblrd*+                  	TBLRD*+	
002882   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002884   f001
002886   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002888   1296     iorwf   0x96, 0x1, 0x0   	IORWF	_TRISE, F
00288a   d014     bra     0x0028b4         	BRA	_00180_DS_
                                           _00177_DS_:
                                           ;	.line	69; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	else TRISE=TRISE & (255-mask[pin]);
00288c   6a01     clrf    0x01, 0x0        	CLRF	r0x01
00288e   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002890   0e4c     movlw   0x4c             	MOVLW	LOW(_mask)
002892   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002894   0e38     movlw   0x38             	MOVLW	HIGH(_mask)
002896   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002898   0e00     movlw   0x00             	MOVLW	UPPER(_mask)
00289a   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
00289c   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
00289e   fff6
0028a0   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
0028a2   fff7
0028a4   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
0028a6   fff8
0028a8   0009     tblrd*+                  	TBLRD*+	
0028aa   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
0028ac   f000
0028ae   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
0028b0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0028b2   1696     andwf   0x96, 0x1, 0x0   	ANDWF	_TRISE, F
                                           _00180_DS_:
                                           ;	.line	72; /home/vbasel/.icaro/v4/firmware/core/digitalp.c	}
0028b4   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
0028b6   f004
0028b8   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0028ba   f003
0028bc   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0028be   f002
0028c0   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0028c2   f001
0028c4   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0028c6   f000
0028c8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0028ca   ffd9
0028cc   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__Delayms	code
                                           _Delayms:
                                           ;	.line	93; /home/vbasel/.icaro/v4/firmware/core/delayms.c	void Delayms(u16 milliseconds)
004798   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00479a   ffe5
00479c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00479e   ffd9
0047a0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
0047a2   ffe5
0047a4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
0047a6   ffe5
0047a8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
0047aa   ffe5
0047ac   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
0047ae   ffe5
0047b0   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
0047b2   ffe5
0047b4   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
0047b6   ffe5
0047b8   0e02     movlw   0x02             	MOVLW	0x02
0047ba   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
0047bc   f000
0047be   0e03     movlw   0x03             	MOVLW	0x03
0047c0   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
0047c2   f001
                                           ;	.line	100; /home/vbasel/.icaro/v4/firmware/core/delayms.c	u16 n100tcy = System_getPeripheralFrequency() / 100000;
0047c4   ec78     call    0x002cf0, 0x0call    0x002cf0, 0x0 	CALL	_System_getCpuFrequency
0047c6   f016
0047c8   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
0047ca   cff3     movff   0xff3, 0x003     	MOVFF	PRODL, r0x03
0047cc   f003
0047ce   cff4     movff   0xff4, 0x004     	MOVFF	PRODH, r0x04
0047d0   f004
0047d2   cfe9     movff   0xfe9, 0x005     	MOVFF	FSR0L, r0x05
0047d4   f005
0047d6   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0047d8   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0047da   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0047dc   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0047de   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0047e0   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
0047e2   3205     rrcf    0x05, 0x1, 0x0   	RRCF	r0x05, F
0047e4   3204     rrcf    0x04, 0x1, 0x0   	RRCF	r0x04, F
0047e6   3203     rrcf    0x03, 0x1, 0x0   	RRCF	r0x03, F
0047e8   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
0047ea   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
0047ec   0e01     movlw   0x01             	MOVLW	0x01
0047ee   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047f0   0e86     movlw   0x86             	MOVLW	0x86
0047f2   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047f4   0ea0     movlw   0xa0             	MOVLW	0xa0
0047f6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047f8   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
0047fa   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
0047fc   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
0047fe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004800   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004802   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004804   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004806   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
004808   ec88     call    0x003d10, 0x0call    0x003d10, 0x0 	CALL	__divulong
00480a   f01e
00480c   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
00480e   0e08     movlw   0x08             	MOVLW	0x08
004810   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
                                           _00151_DS_:
                                           ;	.line	101; /home/vbasel/.icaro/v4/firmware/core/delayms.c	while (milliseconds--)
004812   c000     movff   0x000, 0x004     	MOVFF	r0x00, r0x04
004814   f004
004816   c001     movff   0x001, 0x005     	MOVFF	r0x01, r0x05
004818   f005
00481a   0eff     movlw   0xff             	MOVLW	0xff
00481c   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
00481e   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
004820   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004822   1005     iorwf   0x05, 0x0, 0x0   	IORWF	r0x05, W
004824   e008     bz      0x004836         	BZ	_00154_DS_
                                           ;	.line	102; /home/vbasel/.icaro/v4/firmware/core/delayms.c	delay100tcy(n100tcy-3);
004826   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004828   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00482a   0efd     movlw   0xfd             	MOVLW	0xfd
00482c   2604     addwf   0x04, 0x1, 0x0   	ADDWF	r0x04, F
00482e   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004830   ec96     call    0x00392c, 0x0call    0x00392c, 0x0 	CALL	_delay100tcy
004832   f01c
004834   d7ee     bra     0x004812         	BRA	_00151_DS_
                                           _00154_DS_:
004836   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
004838   f005
00483a   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00483c   f004
00483e   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
004840   f003
004842   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
004844   f002
004846   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
004848   f001
00484a   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
00484c   f000
00484e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004850   ffd9
004852   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__System_getCpuFrequency	code
                                           _System_getCpuFrequency:
                                           ;	.line	227; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u32 System_getCpuFrequency() 
002cf0   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
002cf2   ffe5
002cf4   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
002cf6   ffe5
002cf8   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
002cfa   ffe5
002cfc   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
002cfe   ffe5
002d00   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
002d02   ffe5
002d04   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
002d06   ffe5
                                           ;	.line	242; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 0)
002d08   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002d0a   0b03     andlw   0x03             	ANDLW	0x03
002d0c   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d0e   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002d10   a4d8     btfss   0xd8, 0x2, 0x0   	BTFSS	STATUS, 2
002d12   d091     bra     0x002e36         	BRA	_00116_DS_
                                           ;	.line	268; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV  = ( System_readFlashMemory(__CONFIG1L) & 0b00011000 ) >> 3;
002d14   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d16   0e30     movlw   0x30             	MOVLW	0x30
002d18   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d1a   0e00     movlw   0x00             	MOVLW	0x00
002d1c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d1e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d20   ec83     call    0x004906, 0x0call    0x004906, 0x0 	CALL	_System_readFlashMemory
002d22   f024
002d24   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002d26   0e04     movlw   0x04             	MOVLW	0x04
002d28   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002d2a   0e18     movlw   0x18             	MOVLW	0x18
002d2c   1600     andwf   0x00, 0x1, 0x0   	ANDWF	r0x00, F
002d2e   6a01     clrf    0x01, 0x0        	CLRF	r0x01
002d30   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d32   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002d34   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
002d36   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d38   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002d3a   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
002d3c   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002d3e   3201     rrcf    0x01, 0x1, 0x0   	RRCF	r0x01, F
002d40   3200     rrcf    0x00, 0x1, 0x0   	RRCF	r0x00, F
                                           ;	.line	269; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV_XTAL = cpudiv_xtal[CPUDIV];
002d42   0e28     movlw   0x28             	MOVLW	LOW(_cpudiv_xtal)
002d44   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002d46   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002d48   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002d4a   0e38     movlw   0x38             	MOVLW	HIGH(_cpudiv_xtal)
002d4c   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002d4e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
002d50   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv_xtal)
002d52   2203     addwfc  0x03, 0x1, 0x0   	ADDWFC	r0x03, F
002d54   c001     movff   0x001, 0xff6     	MOVFF	r0x01, TBLPTRL
002d56   fff6
002d58   c002     movff   0x002, 0xff7     	MOVFF	r0x02, TBLPTRH
002d5a   fff7
002d5c   c003     movff   0x003, 0xff8     	MOVFF	r0x03, TBLPTRU
002d5e   fff8
002d60   0009     tblrd*+                  	TBLRD*+	
002d62   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002d64   f001
                                           ;	.line	270; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc  = System_readFlashMemory(__CONFIG1H) & 0b00001111;
002d66   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d68   0e30     movlw   0x30             	MOVLW	0x30
002d6a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d6c   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002d6e   0e01     movlw   0x01             	MOVLW	0x01
002d70   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002d72   ec83     call    0x004906, 0x0call    0x004906, 0x0 	CALL	_System_readFlashMemory
002d74   f024
002d76   6e02     movwf   0x02, 0x0        	MOVWF	r0x02
002d78   0e04     movlw   0x04             	MOVLW	0x04
002d7a   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002d7c   0e0f     movlw   0x0f             	MOVLW	0x0f
002d7e   1602     andwf   0x02, 0x1, 0x0   	ANDWF	r0x02, F
                                           ;	.line	284; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	CPUDIV = cpudiv[CPUDIV];
002d80   0e24     movlw   0x24             	MOVLW	LOW(_cpudiv)
002d82   2400     addwf   0x00, 0x0, 0x0   	ADDWF	r0x00, W
002d84   6e03     movwf   0x03, 0x0        	MOVWF	r0x03
002d86   6a04     clrf    0x04, 0x0        	CLRF	r0x04
002d88   0e38     movlw   0x38             	MOVLW	HIGH(_cpudiv)
002d8a   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
002d8c   6a05     clrf    0x05, 0x0        	CLRF	r0x05
002d8e   0e00     movlw   0x00             	MOVLW	UPPER(_cpudiv)
002d90   2205     addwfc  0x05, 0x1, 0x0   	ADDWFC	r0x05, F
002d92   c003     movff   0x003, 0xff6     	MOVFF	r0x03, TBLPTRL
002d94   fff6
002d96   c004     movff   0x004, 0xff7     	MOVFF	r0x04, TBLPTRH
002d98   fff7
002d9a   c005     movff   0x005, 0xff8     	MOVFF	r0x05, TBLPTRU
002d9c   fff8
002d9e   0009     tblrd*+                  	TBLRD*+	
002da0   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002da2   f000
                                           ;	.line	292; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	fosc >>=1;
002da4   90d8     bcf     0xd8, 0x0, 0x0   	BCF	STATUS, 0
002da6   3202     rrcf    0x02, 0x1, 0x0   	RRCF	r0x02, F
                                           ;	.line	293; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if( (fosc==0) || (fosc==2) || (fosc==6) )
002da8   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002daa   e006     bz      0x002db8         	BZ	_00110_DS_
002dac   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002dae   0a02     xorlw   0x02             	XORLW	0x02
002db0   e003     bz      0x002db8         	BZ	_00110_DS_
002db2   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
002db4   0a06     xorlw   0x06             	XORLW	0x06
002db6   e11f     bnz     0x002df6         	BNZ	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	295; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return CRYSTAL / CPUDIV_XTAL;
002db8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dba   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dbc   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dbe   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002dc0   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dc2   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dc4   0e7a     movlw   0x7a             	MOVLW	0x7a
002dc6   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dc8   0e12     movlw   0x12             	MOVLW	0x12
002dca   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002dcc   0e00     movlw   0x00             	MOVLW	0x00
002dce   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dd0   ec20     call    0x003240, 0x0call    0x003240, 0x0 	CALL	__divslong
002dd2   f019
002dd4   6e01     movwf   0x01, 0x0        	MOVWF	r0x01
002dd6   cff3     movff   0xff3, 0x002     	MOVFF	PRODL, r0x02
002dd8   f002
002dda   cff4     movff   0xff4, 0x003     	MOVFF	PRODH, r0x03
002ddc   f003
002dde   cfe9     movff   0xfe9, 0x004     	MOVFF	FSR0L, r0x04
002de0   f004
002de2   0e08     movlw   0x08             	MOVLW	0x08
002de4   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002de6   c004     movff   0x004, 0xfe9     	MOVFF	r0x04, FSR0L
002de8   ffe9
002dea   c003     movff   0x003, 0xff4     	MOVFF	r0x03, PRODH
002dec   fff4
002dee   c002     movff   0x002, 0xff3     	MOVFF	r0x02, PRODL
002df0   fff3
002df2   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
002df4   d063     bra     0x002ebc         	BRA	_00121_DS_
                                           _00111_DS_:
                                           ;	.line	299; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 96000000UL / CPUDIV;
002df6   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002df8   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dfa   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002dfc   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002dfe   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e00   0e05     movlw   0x05             	MOVLW	0x05
002e02   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e04   0eb8     movlw   0xb8             	MOVLW	0xb8
002e06   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e08   0ed8     movlw   0xd8             	MOVLW	0xd8
002e0a   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e0c   0e00     movlw   0x00             	MOVLW	0x00
002e0e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e10   ec88     call    0x003d10, 0x0call    0x003d10, 0x0 	CALL	__divulong
002e12   f01e
002e14   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002e16   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002e18   f001
002e1a   cff4     movff   0xff4, 0x002     	MOVFF	PRODH, r0x02
002e1c   f002
002e1e   cfe9     movff   0xfe9, 0x003     	MOVFF	FSR0L, r0x03
002e20   f003
002e22   0e08     movlw   0x08             	MOVLW	0x08
002e24   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e26   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002e28   ffe9
002e2a   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002e2c   fff4
002e2e   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002e30   fff3
002e32   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002e34   d043     bra     0x002ebc         	BRA	_00121_DS_
                                           _00116_DS_:
                                           ;	.line	312; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS == 1)
002e36   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002e38   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002e3a   0a01     xorlw   0x01             	XORLW	0x01
002e3c   e106     bnz     0x002e4a         	BNZ	_00118_DS_
                                           ;	.line	313; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 32768;
002e3e   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002e40   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002e42   0e80     movlw   0x80             	MOVLW	0x80
002e44   6ef3     movwf   0xf3, 0x0        	MOVWF	PRODL
002e46   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
002e48   d039     bra     0x002ebc         	BRA	_00121_DS_
                                           _00118_DS_:
                                           ;	.line	316; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	if (OSCCONbits.SCS >= 2)
002e4a   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002e4c   0b03     andlw   0x03             	ANDLW	0x03
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002e4e   0f80     addlw   0x80             	ADDLW	0x80
002e50   0f7e     addlw   0x7e             	ADDLW	0x7e
002e52   e330     bnc     0x002eb4         	BNC	_00120_DS_
                                           ;	.line	317; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ircf[OSCCONbits.IRCF];
002e54   50d3     movf    0xd3, 0x0, 0x0   	MOVF	_OSCCONbits, W
002e56   38e8     swapf   0xe8, 0x0, 0x0   	SWAPF	WREG, W
002e58   0b07     andlw   0x07             	ANDLW	0x07
002e5a   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e5c   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e5e   6ae5     clrf    0xe5, 0x0        	CLRF	POSTDEC1
002e60   0e04     movlw   0x04             	MOVLW	0x04
002e62   6ee5     movwf   0xe5, 0x0        	MOVWF	POSTDEC1
002e64   ec1c     call    0x004e38, 0x0call    0x004e38, 0x0 	CALL	__mulint
002e66   f027
002e68   6e00     movwf   0x00, 0x0        	MOVWF	r0x00
002e6a   cff3     movff   0xff3, 0x001     	MOVFF	PRODL, r0x01
002e6c   f001
002e6e   0e04     movlw   0x04             	MOVLW	0x04
002e70   26e1     addwf   0xe1, 0x1, 0x0   	ADDWF	FSR1L, F
002e72   6a02     clrf    0x02, 0x0        	CLRF	r0x02
002e74   0e2c     movlw   0x2c             	MOVLW	LOW(_ircf)
002e76   2600     addwf   0x00, 0x1, 0x0   	ADDWF	r0x00, F
002e78   0e38     movlw   0x38             	MOVLW	HIGH(_ircf)
002e7a   2201     addwfc  0x01, 0x1, 0x0   	ADDWFC	r0x01, F
002e7c   0e00     movlw   0x00             	MOVLW	UPPER(_ircf)
002e7e   2202     addwfc  0x02, 0x1, 0x0   	ADDWFC	r0x02, F
002e80   c000     movff   0x000, 0xff6     	MOVFF	r0x00, TBLPTRL
002e82   fff6
002e84   c001     movff   0x001, 0xff7     	MOVFF	r0x01, TBLPTRH
002e86   fff7
002e88   c002     movff   0x002, 0xff8     	MOVFF	r0x02, TBLPTRU
002e8a   fff8
002e8c   0009     tblrd*+                  	TBLRD*+	
002e8e   cff5     movff   0xff5, 0x000     	MOVFF	TABLAT, r0x00
002e90   f000
002e92   0009     tblrd*+                  	TBLRD*+	
002e94   cff5     movff   0xff5, 0x001     	MOVFF	TABLAT, r0x01
002e96   f001
002e98   0009     tblrd*+                  	TBLRD*+	
002e9a   cff5     movff   0xff5, 0x002     	MOVFF	TABLAT, r0x02
002e9c   f002
002e9e   0009     tblrd*+                  	TBLRD*+	
002ea0   cff5     movff   0xff5, 0x003     	MOVFF	TABLAT, r0x03
002ea2   f003
002ea4   c003     movff   0x003, 0xfe9     	MOVFF	r0x03, FSR0L
002ea6   ffe9
002ea8   c002     movff   0x002, 0xff4     	MOVFF	r0x02, PRODH
002eaa   fff4
002eac   c001     movff   0x001, 0xff3     	MOVFF	r0x01, PRODL
002eae   fff3
002eb0   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
002eb2   d004     bra     0x002ebc         	BRA	_00121_DS_
                                           _00120_DS_:
                                           ;	.line	319; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return 0;
002eb4   6ae9     clrf    0xe9, 0x0        	CLRF	FSR0L
002eb6   6af4     clrf    0xf4, 0x0        	CLRF	PRODH
002eb8   6af3     clrf    0xf3, 0x0        	CLRF	PRODL
002eba   6ae8     clrf    0xe8, 0x0        	CLRF	WREG
                                           _00121_DS_:
002ebc   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
002ebe   f005
002ec0   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
002ec2   f004
002ec4   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
002ec6   f003
002ec8   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
002eca   f002
002ecc   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
002ece   f001
002ed0   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
002ed2   f000
002ed4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_tortucaro__System_readFlashMemory	code
                                           _System_readFlashMemory:
                                           ;	.line	190; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	u16 System_readFlashMemory(u32 address)
004906   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004908   ffe5
00490a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00490c   ffd9
00490e   c000     movff   0x000, 0xfe5     	MOVFF	r0x00, POSTDEC1
004910   ffe5
004912   c001     movff   0x001, 0xfe5     	MOVFF	r0x01, POSTDEC1
004914   ffe5
004916   c002     movff   0x002, 0xfe5     	MOVFF	r0x02, POSTDEC1
004918   ffe5
00491a   c003     movff   0x003, 0xfe5     	MOVFF	r0x03, POSTDEC1
00491c   ffe5
00491e   c004     movff   0x004, 0xfe5     	MOVFF	r0x04, POSTDEC1
004920   ffe5
004922   c005     movff   0x005, 0xfe5     	MOVFF	r0x05, POSTDEC1
004924   ffe5
004926   c006     movff   0x006, 0xfe5     	MOVFF	r0x06, POSTDEC1
004928   ffe5
00492a   c007     movff   0x007, 0xfe5     	MOVFF	r0x07, POSTDEC1
00492c   ffe5
00492e   0e02     movlw   0x02             	MOVLW	0x02
004930   cfdb     movff   0xfdb, 0x000     	MOVFF	PLUSW2, r0x00
004932   f000
004934   0e03     movlw   0x03             	MOVLW	0x03
004936   cfdb     movff   0xfdb, 0x001     	MOVFF	PLUSW2, r0x01
004938   f001
00493a   0e04     movlw   0x04             	MOVLW	0x04
00493c   cfdb     movff   0xfdb, 0x002     	MOVFF	PLUSW2, r0x02
00493e   f002
004940   0e05     movlw   0x05             	MOVLW	0x05
004942   cfdb     movff   0xfdb, 0x003     	MOVFF	PLUSW2, r0x03
004944   f003
                                           ;	.line	194; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRU = address >> 16;
004946   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
004948   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00494a   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
00494c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00494e   6a06     clrf    0x06, 0x0        	CLRF	r0x06
004950   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004952   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004954   6ef8     movwf   0xf8, 0x0        	MOVWF	_TBLPTRU
                                           ;	.line	195; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRH = address >> 8;
004956   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
004958   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00495a   5002     movf    0x02, 0x0, 0x0   	MOVF	r0x02, W
00495c   6e05     movwf   0x05, 0x0        	MOVWF	r0x05
00495e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004960   6e06     movwf   0x06, 0x0        	MOVWF	r0x06
004962   6a07     clrf    0x07, 0x0        	CLRF	r0x07
004964   5004     movf    0x04, 0x0, 0x0   	MOVF	r0x04, W
004966   6ef7     movwf   0xf7, 0x0        	MOVWF	_TBLPTRH
                                           ;	.line	196; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	TBLPTRL = address;
004968   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
00496a   6ef6     movwf   0xf6, 0x0        	MOVWF	_TBLPTRL
00496c   0009     tblrd*+                  	tblrd*+
                                           ;	.line	198; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	l8 = TABLAT;
00496e   cff5     movff   0xff5, 0x000     	MOVFF	_TABLAT, r0x00
004970   f000
004972   0009     tblrd*+                  	tblrd*+
                                           ;	.line	200; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	h8 = TABLAT;
004974   cff5     movff   0xff5, 0x001     	MOVFF	_TABLAT, r0x01
004976   f001
                                           ;	.line	202; /home/vbasel/.icaro/v4/firmware/core/oscillator.c	return ((h8 << 8) + l8);
004978   6a02     clrf    0x02, 0x0        	CLRF	r0x02
00497a   5001     movf    0x01, 0x0, 0x0   	MOVF	r0x01, W
00497c   6e04     movwf   0x04, 0x0        	MOVWF	r0x04
00497e   6a03     clrf    0x03, 0x0        	CLRF	r0x03
004980   6a05     clrf    0x05, 0x0        	CLRF	r0x05
004982   5000     movf    0x00, 0x0, 0x0   	MOVF	r0x00, W
004984   2603     addwf   0x03, 0x1, 0x0   	ADDWF	r0x03, F
004986   5005     movf    0x05, 0x0, 0x0   	MOVF	r0x05, W
004988   2204     addwfc  0x04, 0x1, 0x0   	ADDWFC	r0x04, F
00498a   c004     movff   0x004, 0xff3     	MOVFF	r0x04, PRODL
00498c   fff3
00498e   5003     movf    0x03, 0x0, 0x0   	MOVF	r0x03, W
004990   cfe4     movff   0xfe4, 0x007     	MOVFF	PREINC1, r0x07
004992   f007
004994   cfe4     movff   0xfe4, 0x006     	MOVFF	PREINC1, r0x06
004996   f006
004998   cfe4     movff   0xfe4, 0x005     	MOVFF	PREINC1, r0x05
00499a   f005
00499c   cfe4     movff   0xfe4, 0x004     	MOVFF	PREINC1, r0x04
00499e   f004
0049a0   cfe4     movff   0xfe4, 0x003     	MOVFF	PREINC1, r0x03
0049a2   f003
0049a4   cfe4     movff   0xfe4, 0x002     	MOVFF	PREINC1, r0x02
0049a6   f002
0049a8   cfe4     movff   0xfe4, 0x001     	MOVFF	PREINC1, r0x01
0049aa   f001
0049ac   cfe4     movff   0xfe4, 0x000     	MOVFF	PREINC1, r0x00
0049ae   f000
0049b0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0049b2   ffd9
0049b4   0012     return  0x0              	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _cpudiv:
003824   0302     mulwf   0x02, 0x1        	DB	0x02, 0x03, 0x04, 0x06
003826   0604     decf    0x04, 0x1, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _cpudiv_xtal:
003828   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x03, 0x04
00382a   0403     decf    0x03, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _ircf:
00382c   7a12     btg     0x12, 0x5, 0x0   	DB	0x12, 0x7a, 0x00, 0x00, 0x48, 0xe8, 0x01, 0x00, 0x90, 0xd0, 0x03, 0x00
00382e   0000     nop                      
003830   e848     dw      0xe848           
003832   0001     halt                     
003834   d090     bra     0x003956         
003836   0003     sleep                    
003838   a120     btfss   0x20, 0x0, 0x1   	DB	0x20, 0xa1, 0x07, 0x00, 0x40, 0x42, 0x0f, 0x00, 0x80, 0x84, 0x1e, 0x00
00383a   0007     daw                      
00383c   4240     rrncf   0x40, 0x1, 0x0   
00383e   000f     tblwt+*                  
003840   8480     bsf     0x80, 0x2, 0x0   
003842   001e     dw      0x001e           
003844   0900     iorlw   0x00             	DB	0x00, 0x09, 0x3d, 0x00, 0x00, 0x12, 0x7a, 0x00
003846   003d     dw      0x003d           
003848   1200     iorwf   0x00, 0x1, 0x0   
00384a   007a     dw      0x007a           
                                           ; ; Starting pCode block for Ival
                                           _mask:
00384c   0201     mulwf   0x01, 0x0        	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00384e   0804     sublw   0x04             
003850   2010     addwfc  0x10, 0x0, 0x0   
003852   8040     bsf     0x40, 0x0, 0x0   
003854   8040     bsf     0x40, 0x0, 0x0   
003856   0201     mulwf   0x01, 0x0        
003858   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
00385a   0402     decf    0x02, 0x0, 0x0   
00385c   2008     addwfc  0x08, 0x0, 0x0   
00385e   0201     mulwf   0x01, 0x0        
003860   0104     movlb   0x4              
003862   0402     decf    0x02, 0x0, 0x0   
003864   1008     iorwf   0x08, 0x0, 0x0   	DB	0x08, 0x10, 0x20, 0x40, 0x80, 0x10
003866   4020     rrncf   0x20, 0x0, 0x0   
003868   1080     iorwf   0x80, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _port:
00386a   0101     movlb   0x1              	DB	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x02
00386c   0101     movlb   0x1              
00386e   0101     movlb   0x1              
003870   0101     movlb   0x1              
003872   0202     mulwf   0x02, 0x0        
003874   0202     mulwf   0x02, 0x0        
003876   0002     dw      0x0002           	DB	0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
003878   0000     nop                      
00387a   0000     nop                      
00387c   0404     decf    0x04, 0x0, 0x0   
00387e   0304     mulwf   0x04, 0x1        
003880   0303     mulwf   0x03, 0x1        
003882   0303     mulwf   0x03, 0x1        	DB	0x03, 0x03, 0x03, 0x03, 0x03, 0x00
003884   0303     mulwf   0x03, 0x1        
003886   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _libdevice_descriptor:
003888   0112     dw      0x0112           	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
00388a   0200     mulwf   0x00, 0x0        
00388c   0002     dw      0x0002           
00388e   4000     rrncf   0x00, 0x0, 0x0   
003890   04d8     decf    0xd8, 0x0, 0x0   
003892   feab     dw      0xfeab           
003894   0000     nop                      	DB	0x00, 0x00, 0x01, 0x02, 0x00, 0x01
003896   0201     mulwf   0x01, 0x0        
003898   0100     movlb   0x0              
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
00389a   0209     mulwf   0x09, 0x0        	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0xc0, 0x14, 0x09, 0x04, 0x00
00389c   0043     dw      0x0043           
00389e   0102     movlb   0x2              
0038a0   c000     dw      0xc000           
0038a2   0914     iorlw   0x14             
0038a4   0004     clrwdt                   
0038a6   0100     movlb   0x0              	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
0038a8   0202     mulwf   0x02, 0x0        
0038aa   0001     halt                     
0038ac   2405     addwf   0x05, 0x0, 0x0   
0038ae   1000     iorwf   0x00, 0x0, 0x0   
0038b0   0401     decf    0x01, 0x0, 0x0   
0038b2   0224     mulwf   0x24, 0x0        	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
0038b4   0500     decf    0x00, 0x0, 0x1   
0038b6   0624     decf    0x24, 0x1, 0x0   
0038b8   0100     movlb   0x0              
0038ba   2405     addwf   0x05, 0x0, 0x0   
0038bc   0001     halt                     
0038be   0701     decf    0x01, 0x1, 0x1   	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
0038c0   8205     bsf     0x05, 0x1, 0x0   
0038c2   1003     iorwf   0x03, 0x0, 0x0   
0038c4   0200     mulwf   0x00, 0x0        
0038c6   0409     decf    0x09, 0x0, 0x0   
0038c8   0001     halt                     
0038ca   0a02     xorlw   0x02             	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
0038cc   0000     nop                      
0038ce   0700     decf    0x00, 0x1, 0x1   
0038d0   0305     mulwf   0x05, 0x1        
0038d2   4002     rrncf   0x02, 0x0, 0x0   
0038d4   0000     nop                      
0038d6   0507     decf    0x07, 0x0, 0x1   	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
0038d8   0283     mulwf   0x83, 0x0        
0038da   0040     dw      0x0040           
0038dc   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _lang:
0038de   0304     mulwf   0x04, 0x1        	DB	0x04, 0x03, 0x09, 0x04
0038e0   0409     decf    0x09, 0x0, 0x0   
                                           ; ; Starting pCode block for Ival
                                           _manu:
0038e2   0316     mulwf   0x16, 0x1        	DB	0x16, 0x03, 0x4a, 0x00, 0x50, 0x00, 0x20, 0x00, 0x4d, 0x00, 0x41, 0x00
0038e4   004a     dw      0x004a           
0038e6   0050     dw      0x0050           
0038e8   0020     dw      0x0020           
0038ea   004d     dw      0x004d           
0038ec   0041     dw      0x0041           
0038ee   004e     dw      0x004e           	DB	0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x4e, 0x00, 0x20, 0x00
0038f0   0044     dw      0x0044           
0038f2   004f     dw      0x004f           
0038f4   004e     dw      0x004e           
0038f6   0020     dw      0x0020           
                                           ; ; Starting pCode block for Ival
                                           _prod:
0038f8   0312     mulwf   0x12, 0x1        	DB	0x12, 0x03, 0x50, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x67, 0x00, 0x75, 0x00
0038fa   0050     dw      0x0050           
0038fc   0069     dw      0x0069           
0038fe   006e     dw      0x006e           
003900   0067     dw      0x0067           
003902   0075     dw      0x0075           
003904   0069     dw      0x0069           	DB	0x69, 0x00, 0x6e, 0x00, 0x6f, 0x00
003906   006e     dw      0x006e           
003908   006f     dw      0x006f           
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
00390a   38de     swapf   0xde, 0x0, 0x0   	DB	LOW(_lang), HIGH(_lang), UPPER(_lang), LOW(_manu), HIGH(_manu), UPPER(_manu), LOW(_prod), HIGH(_prod), UPPER(_prod)
00390c   e200     bc      0x00390e         
00390e   0038     dw      0x0038           
003910   38f8     swapf   0xf8, 0x0, 0x0   
003912   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_0:
003914   0030     dw      0x0030           	DB	0x30, 0x00
                                           ; ; Starting pCode block
                                           ___str_1:
003916   0031     dw      0x0031           	DB	0x31, 0x00
                                           ; ; Starting pCode block
                                           ___str_2:
003918   0a66     xorlw   0x66             	DB	0x66, 0x0a, 0x00
00391a   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_3:
00391c   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x32
00391e   7261     btg     0x61, 0x1, 0x0   
003920   206f     addwfc  0x6f, 0x0, 0x0   
003922   5355     movf    0x55, 0x1, 0x1   
003924   2042     addwfc  0x42, 0x0, 0x0   
003926   3230     rrcf    0x30, 0x1, 0x0   
003928   0a20     xorlw   0x20             	DB	0x20, 0x0a, 0x00
00392a   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	14254 (0x37ae) bytes (10.87%)
                                           ;           	 7127 (0x1bd7) words
                                           ; udata size:	  794 (0x031a) bytes (44.31%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
