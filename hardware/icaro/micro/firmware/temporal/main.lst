gplink-1.3.0 #1017 (Aug 16 2014)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 9-18-2015  14:20:56
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jul  4 2015) (Linux)
                                           ; This file was generated Fri Sep 18 14:20:54 2015
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	__i
                                           	global	__currline
                                           	global	__initialized
                                           	global	__rw_pin
                                           	global	_loopvar
                                           	global	_pulseEnable
                                           	global	_write4bits
                                           	global	_write8bits
                                           	global	_send
                                           	global	_write
                                           	global	_command
                                           	global	_setCursor
                                           	global	_lcdPrint
                                           	global	_printNumber
                                           	global	_printFloat
                                           	global	_home
                                           	global	_clear
                                           	global	_noDisplay
                                           	global	_display
                                           	global	_noCursor
                                           	global	_cursor
                                           	global	_noBlink
                                           	global	_blink
                                           	global	_scrollDisplayLeft
                                           	global	_scrollDisplayRight
                                           	global	_leftToRight
                                           	global	_rightToLeft
                                           	global	_autoscroll
                                           	global	_noAutoscroll
                                           	global	_begin
                                           	global	_init
                                           	global	_lcd
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timingindex
                                           	global	_timedivision
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	__pr2_plus1
                                           	global	__t2con
                                           	global	_rx
                                           	global	_wpointer
                                           	global	_rpointer
                                           	global	__rs_pin
                                           	global	__enable_pin
                                           	global	__data_pins
                                           	global	__displayfunction
                                           	global	__displaycontrol
                                           	global	__displaymode
                                           	global	__numlines
                                           	global	_caractere
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_pinmode
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_Delayms
                                           	global	_Delayus
                                           	global	_PWM_set_frequency
                                           	global	_PWM_set_dutycycle
                                           	global	_PWM_set_percent_dutycycle
                                           	global	_init_PWM11
                                           	global	_init_PWM12
                                           	global	_set_PWM
                                           	global	_epap_in
                                           	global	_epap_out
                                           	global	_epapin_init
                                           	global	_epapout_init
                                           	global	_printfmod
                                           	global	_serial_begin
                                           	global	_serial_available
                                           	global	_serial_putchar11
                                           	global	_serial_interrupt
                                           	global	_serial_read
                                           	global	_serial_flush
                                           	global	_serial_getkey
                                           	global	_serial_printf
                                           	global	_serial_write
                                           	global	_ping
                                           	global	_setup
                                           	global	_mens
                                           	global	_caminar
                                           	global	_parado
                                           	global	_loop
                                           	global	_pinguino_main
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	__gptrget3
                                           	extern	__gptrput1
                                           	extern	__gptrput3
                                           	extern	__gptrget1
                                           	extern	__gptrget2
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_usb_device_state
                                           	extern	_usb_active_cfg
                                           	extern	_usb_active_alt_setting
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_delay10ktcy
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	__divuint
                                           	extern	__moduint
                                           	extern	__mullong
                                           	extern	__modulong
                                           	extern	___fslt
                                           	extern	___fsdiv
                                           	extern	___fsadd
                                           	extern	___fs2ulong
                                           	extern	___ulong2fs
                                           	extern	___fssub
                                           	extern	___fsmul
                                           	extern	___fs2uint
                                           	extern	___sint2fs
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR1H	equ	0xfe2
                                           FSR2L	equ	0xfd9
                                           FSR2H	equ	0xfda
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW1	equ	0xfe3
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           __pr2_plus1	db	0x00, 0x01
                                           __rs_pin	db	0x08
                                           __rw_pin	db	0xff
                                           __enable_pin	db	0x09
                                           __i	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           r0x0d	res	1
                                           r0x0e	res	1
                                           r0x0f	res	1
                                           r0x10	res	1
                                           r0x11	res	1
                                           r0x12	res	1
                                           r0x13	res	1
                                           r0x14	res	1
                                           r0x15	res	1
                                           r0x16	res	1
                                           r0x17	res	1
                                           r0x18	res	1
                                           r0x19	res	1
                                           r0x1a	res	1
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _putchar1	res	3
                                           
                                           udata_main_2	udata
                                           __initialized	res	1
                                           
                                           udata_main_3	udata
                                           __currline	res	1
                                           
                                           udata_main_4	udata
                                           _servovalues	res	18
                                           
                                           udata_main_5	udata
                                           _timingindex	res	1
                                           
                                           udata_main_6	udata
                                           _timings	res	72
                                           
                                           udata_main_7	udata
                                           _SortServoTimings_mascaratotal_1_27	res	3
                                           
                                           udata_main_8	udata
                                           __t2con	res	1
                                           
                                           udata_main_9	udata
                                           _printi_print_buf_1_156	res	12
                                           
                                           udata_main_10	udata
                                           _print_scr_1_164	res	2
                                           
                                           udata_main_11	udata
                                           _wpointer	res	1
                                           
                                           udata_main_12	udata
                                           _rpointer	res	1
                                           
                                           udata_main_13	udata
                                           _rx	res	128
                                           
                                           udata_main_14	udata
                                           __data_pins	res	8
                                           
                                           udata_main_15	udata
                                           __displayfunction	res	1
                                           
                                           udata_main_16	udata
                                           _setCursor_row_offsets_1_254	res	8
                                           
                                           udata_main_17	udata
                                           __numlines	res	1
                                           
                                           udata_main_18	udata
                                           _printNumber_buf_1_260	res	32
                                           
                                           udata_main_19	udata
                                           __displaycontrol	res	1
                                           
                                           udata_main_20	udata
                                           __displaymode	res	1
                                           
                                           udata_main_21	udata
                                           _mens_p_1_306	res	74
                                           
                                           udata_main_22	udata
                                           _mens_n_1_306	res	2
                                           
                                           udata_main_23	udata
                                           _caminar_pder_1_314	res	8
                                           
                                           udata_main_24	udata
                                           _caminar_pizq_1_314	res	8
                                           
                                           udata_main_25	udata
                                           _caminar_cder_1_314	res	8
                                           
                                           udata_main_26	udata
                                           _caminar_cizq_1_314	res	8
                                           
                                           udata_main_27	udata
                                           _caractere	res	2
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	97; /home/valentin/.icaro/firmware/source/main.c	void high_priority_isr(void) __interrupt
002020   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002022   ffe5
002024   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002026   ffe5
002028   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00202a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00202c   ffe5
00202e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002030   ffe5
002032   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002034   ffe5
002036   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002038   ffe5
00203a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00203c   ffe5
                                           ;	.line	120; /home/valentin/.icaro/firmware/source/main.c	if (PIR1bits.RCIF) 
00203e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002040   ffe5
                                           ; #	MOVFF	FSR1L, FSR2L
                                           ; #	BTFSS	_PIR1bits, 5
                                           ; #	GOTO	_01654_DS_
                                           ; #	CALL	_serial_interrupt
                                           ; #	CALL	_servos_interrupt
                                           ;	.line	121; /home/valentin/.icaro/firmware/source/main.c	serial_interrupt();
002042   ba9e     btfsc   0x9e, 0x5, 0     	BTFSC	_PIR1bits, 5
                                           ;	.line	133; /home/valentin/.icaro/firmware/source/main.c	servos_interrupt();
002044   ec15     call    0x742a, 0        	CALL	_serial_interrupt
002046   f03a
002048   ec20     call    0x7640, 0        	CALL	_servos_interrupt
00204a   f03b
00204c   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
00204e   fffb
002050   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
002052   fffa
002054   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002056   ffea
002058   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
00205a   ffe9
00205c   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
00205e   fff4
002060   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
002062   fff3
002064   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002066   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002068   ffe0
00206a   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
00206c   ffd8
00206e   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	141; /home/valentin/.icaro/firmware/source/main.c	void low_priority_isr(void) __interrupt
004000   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004002   ffe5
004004   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004006   ffe5
004008   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00400a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00400c   ffe5
00400e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004010   ffe5
004012   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004014   ffe5
004016   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004018   ffe5
00401a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00401c   ffe5
00401e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004020   ffe5
                                           ;	.line	143; /home/valentin/.icaro/firmware/source/main.c	}
004022   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004024   fffb
004026   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004028   fffa
00402a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00402c   ffea
00402e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004030   ffe9
004032   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004034   fff4
004036   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004038   fff3
00403a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00403c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004042   ffd8
004044   0010     retfie  0                	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	53; /home/valentin/.icaro/firmware/source/main.c	PIE1=0;
007874   6a9d     clrf    0x9d, 0          	CLRF	_PIE1
                                           ;	.line	54; /home/valentin/.icaro/firmware/source/main.c	PIE2=0;
007876   6aa0     clrf    0xa0, 0          	CLRF	_PIE2
                                           ;	.line	55; /home/valentin/.icaro/firmware/source/main.c	ADCON1=0x0F;
007878   0e0f     movlw   0xf              	MOVLW	0x0f
00787a   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	60; /home/valentin/.icaro/firmware/source/main.c	setup();
00787c   ec3c     call    0x6078, 0        	CALL	_setup
00787e   f030
                                           ;	.line	68; /home/valentin/.icaro/firmware/source/main.c	servos_init();
007880   ecfc     call    0x75f8, 0        	CALL	_servos_init
007882   f03a
                                           ;	.line	76; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.PEIE=1;
007884   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	77; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.GIE=1;
007886   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           ;	.line	84; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.PEIE=1;
007888   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	85; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.GIE=1;
00788a   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           _01646_DS_:
                                           ;	.line	90; /home/valentin/.icaro/firmware/source/main.c	loop();
00788c   ecda     call    0x57b4, 0        	CALL	_loop
00788e   f02b
007890   d7fd     bra     0x788c           	BRA	_01646_DS_
007892   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	120; /home/valentin/.icaro/firmware/source/user.c	void loop()
0057b4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0057b6   ffe5
0057b8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0057ba   ffe5
0057bc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0057be   ffe5
0057c0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0057c2   ffe5
                                           ;	.line	123; /home/valentin/.icaro/firmware/source/user.c	parado();
0057c4   ecd4     call    0x75a8, 0        	CALL	_parado
0057c6   f03a
                                           ;	.line	124; /home/valentin/.icaro/firmware/source/user.c	Delayms(10);
0057c8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0057ca   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0057cc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0057ce   0e0a     movlw   0xa              	MOVLW	0x0a
0057d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0057d2   ecbe     call    0x6f7c, 0        	CALL	_Delayms
0057d4   f037
0057d6   0e04     movlw   0x4              	MOVLW	0x04
0057d8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	125; /home/valentin/.icaro/firmware/source/user.c	if (serial_available())
0057da   ecc0     call    0x7780, 0        	CALL	_serial_available
0057dc   f03b
0057de   6e00     movwf   0, 0             	MOVWF	r0x00
0057e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0057e2   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0057e4   d095     bra     0x5910           	BRA	_01608_DS_
0057e6   0103     movlb   0x3              	BANKSEL	_caractere
                                           ;	.line	127; /home/valentin/.icaro/firmware/source/user.c	if(caractere=='d')
0057e8   51c8     movf    0xc8, 0, 0x1     	MOVF	_caractere, W, B
0057ea   0a64     xorlw   0x64             	XORLW	0x64
0057ec   e102     bnz     0x57f2           	BNZ	_01631_DS_
                                           ; removed redundant BANKSEL
0057ee   51c9     movf    0xc9, 0, 0x1     	MOVF	(_caractere + 1), W, B
0057f0   e001     bz      0x57f4           	BZ	_01632_DS_
                                           _01631_DS_:
0057f2   d02c     bra     0x584c           	BRA	_01596_DS_
                                           _01632_DS_:
                                           ;	.line	130; /home/valentin/.icaro/firmware/source/user.c	valor=ping();
0057f4   ec1e     call    0x6e3c, 0        	CALL	_ping
0057f6   f037
0057f8   6e00     movwf   0, 0             	MOVWF	r0x00
0057fa   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0057fc   f001
                                           ;	.line	131; /home/valentin/.icaro/firmware/source/user.c	Delayms(100);
0057fe   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005800   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005802   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005804   0e64     movlw   0x64             	MOVLW	0x64
005806   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005808   ecbe     call    0x6f7c, 0        	CALL	_Delayms
00580a   f037
00580c   0e04     movlw   0x4              	MOVLW	0x04
00580e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	132; /home/valentin/.icaro/firmware/source/user.c	printNumber(valor,10);
005810   6ae8     clrf    0xe8, 0          	CLRF	WREG
005812   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
005814   0eff     movlw   0xff             	MOVLW	0xff
005816   6e02     movwf   0x2, 0           	MOVWF	r0x02
005818   6e03     movwf   0x3, 0           	MOVWF	r0x03
00581a   0e0a     movlw   0xa              	MOVLW	0x0a
00581c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00581e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
005820   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005822   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
005824   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005826   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005828   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00582a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00582c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00582e   ec7f     call    0x52fe, 0        	CALL	_printNumber
005830   f029
005832   0e05     movlw   0x5              	MOVLW	0x05
005834   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	133; /home/valentin/.icaro/firmware/source/user.c	home();
005836   ec68     call    0x78d0, 0        	CALL	_home
005838   f03c
                                           ;	.line	134; /home/valentin/.icaro/firmware/source/user.c	Delayms(100);
00583a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00583c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00583e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005840   0e64     movlw   0x64             	MOVLW	0x64
005842   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005844   ecbe     call    0x6f7c, 0        	CALL	_Delayms
005846   f037
005848   0e04     movlw   0x4              	MOVLW	0x04
00584a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _01596_DS_:
00584c   0103     movlb   0x3              	BANKSEL	_caractere
                                           ;	.line	136; /home/valentin/.icaro/firmware/source/user.c	if(caractere=='a')
00584e   51c8     movf    0xc8, 0, 0x1     	MOVF	_caractere, W, B
005850   0a61     xorlw   0x61             	XORLW	0x61
005852   e102     bnz     0x5858           	BNZ	_01633_DS_
                                           ; removed redundant BANKSEL
005854   51c9     movf    0xc9, 0, 0x1     	MOVF	(_caractere + 1), W, B
005856   e001     bz      0x585a           	BZ	_01634_DS_
                                           _01633_DS_:
005858   d015     bra     0x5884           	BRA	_01598_DS_
                                           _01634_DS_:
                                           ;	.line	138; /home/valentin/.icaro/firmware/source/user.c	caminar(200,0,1);
00585a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00585c   0e01     movlw   0x1              	MOVLW	0x01
00585e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005860   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005862   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005864   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005866   0ec8     movlw   0xc8             	MOVLW	0xc8
005868   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00586a   eca2     call    0x4d44, 0        	CALL	_caminar
00586c   f026
00586e   0e06     movlw   0x6              	MOVLW	0x06
005870   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	139; /home/valentin/.icaro/firmware/source/user.c	Delayms(100);
005872   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005874   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005876   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005878   0e64     movlw   0x64             	MOVLW	0x64
00587a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00587c   ecbe     call    0x6f7c, 0        	CALL	_Delayms
00587e   f037
005880   0e04     movlw   0x4              	MOVLW	0x04
005882   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _01598_DS_:
005884   0103     movlb   0x3              	BANKSEL	_caractere
                                           ;	.line	141; /home/valentin/.icaro/firmware/source/user.c	if(caractere=='t')
005886   51c8     movf    0xc8, 0, 0x1     	MOVF	_caractere, W, B
005888   0a74     xorlw   0x74             	XORLW	0x74
00588a   e102     bnz     0x5890           	BNZ	_01635_DS_
                                           ; removed redundant BANKSEL
00588c   51c9     movf    0xc9, 0, 0x1     	MOVF	(_caractere + 1), W, B
00588e   e001     bz      0x5892           	BZ	_01636_DS_
                                           _01635_DS_:
005890   d015     bra     0x58bc           	BRA	_01600_DS_
                                           _01636_DS_:
                                           ;	.line	143; /home/valentin/.icaro/firmware/source/user.c	caminar(200,3,-1);
005892   68e5     setf    0xe5, 0          	SETF	POSTDEC1
005894   68e5     setf    0xe5, 0          	SETF	POSTDEC1
005896   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005898   0e03     movlw   0x3              	MOVLW	0x03
00589a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00589c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00589e   0ec8     movlw   0xc8             	MOVLW	0xc8
0058a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0058a2   eca2     call    0x4d44, 0        	CALL	_caminar
0058a4   f026
0058a6   0e06     movlw   0x6              	MOVLW	0x06
0058a8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	144; /home/valentin/.icaro/firmware/source/user.c	Delayms(100);
0058aa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0058ac   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0058ae   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0058b0   0e64     movlw   0x64             	MOVLW	0x64
0058b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0058b4   ecbe     call    0x6f7c, 0        	CALL	_Delayms
0058b6   f037
0058b8   0e04     movlw   0x4              	MOVLW	0x04
0058ba   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _01600_DS_:
                                           ;	.line	146; /home/valentin/.icaro/firmware/source/user.c	caractere=serial_read();
0058bc   ecab     call    0x7556, 0        	CALL	_serial_read
0058be   f03a
0058c0   6e00     movwf   0, 0             	MOVWF	r0x00
0058c2   c000     movff   0, 0x3c8         	MOVFF	r0x00, _caractere
0058c4   f3c8
0058c6   0103     movlb   0x3              	BANKSEL	(_caractere + 1)
0058c8   6bc9     clrf    0xc9, 0x1        	CLRF	(_caractere + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	147; /home/valentin/.icaro/firmware/source/user.c	if(caractere=='<')
0058ca   51c8     movf    0xc8, 0, 0x1     	MOVF	_caractere, W, B
0058cc   0a3c     xorlw   0x3c             	XORLW	0x3c
0058ce   e102     bnz     0x58d4           	BNZ	_01637_DS_
                                           ; removed redundant BANKSEL
0058d0   51c9     movf    0xc9, 0, 0x1     	MOVF	(_caractere + 1), W, B
0058d2   e001     bz      0x58d6           	BZ	_01638_DS_
                                           _01637_DS_:
0058d4   d01d     bra     0x5910           	BRA	_01608_DS_
                                           _01638_DS_:
                                           ;	.line	149; /home/valentin/.icaro/firmware/source/user.c	setCursor(0,0);
0058d6   0e00     movlw   0                	MOVLW	0x00
0058d8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0058da   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0058dc   ece8     call    0x71d0, 0        	CALL	_setCursor
0058de   f038
0058e0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0058e2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _01601_DS_:
0058e4   0103     movlb   0x3              	BANKSEL	_caractere
                                           ;	.line	150; /home/valentin/.icaro/firmware/source/user.c	while(caractere!='>')
0058e6   51c8     movf    0xc8, 0, 0x1     	MOVF	_caractere, W, B
0058e8   0a3e     xorlw   0x3e             	XORLW	0x3e
0058ea   e102     bnz     0x58f0           	BNZ	_01640_DS_
                                           ; removed redundant BANKSEL
0058ec   51c9     movf    0xc9, 0, 0x1     	MOVF	(_caractere + 1), W, B
0058ee   e010     bz      0x5910           	BZ	_01608_DS_
                                           _01640_DS_:
                                           ;	.line	152; /home/valentin/.icaro/firmware/source/user.c	caractere=serial_read();
0058f0   ecab     call    0x7556, 0        	CALL	_serial_read
0058f2   f03a
0058f4   6e00     movwf   0, 0             	MOVWF	r0x00
0058f6   c000     movff   0, 0x3c8         	MOVFF	r0x00, _caractere
0058f8   f3c8
0058fa   0103     movlb   0x3              	BANKSEL	(_caractere + 1)
0058fc   6bc9     clrf    0xc9, 0x1        	CLRF	(_caractere + 1), B
                                           ;	.line	153; /home/valentin/.icaro/firmware/source/user.c	mens(caractere);
0058fe   51c9     movf    0xc9, 0, 0x1     	MOVF	(_caractere + 1), W, B
005900   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
005902   51c8     movf    0xc8, 0, 0x1     	MOVF	_caractere, W, B
005904   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005906   ec50     call    0x48a0, 0        	CALL	_mens
005908   f024
00590a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00590c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00590e   d7ea     bra     0x58e4           	BRA	_01601_DS_
                                           _01608_DS_:
005910   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
005912   f003
005914   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
005916   f002
005918   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00591a   f001
00591c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00591e   f000
005920   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__parado	code
                                           _parado:
                                           ;	.line	112; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(13,0);//no se usa
0075a8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0075aa   0e0d     movlw   0xd              	MOVLW	0x0d
0075ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075ae   ec49     call    0x7492, 0        	CALL	_ServoWrite
0075b0   f03a
0075b2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0075b4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	113; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(14,65);//pie derecho
0075b6   0e41     movlw   0x41             	MOVLW	0x41
0075b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075ba   0e0e     movlw   0xe              	MOVLW	0x0e
0075bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075be   ec49     call    0x7492, 0        	CALL	_ServoWrite
0075c0   f03a
0075c2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0075c4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	114; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(15,90);//pie izquierdo
0075c6   0e5a     movlw   0x5a             	MOVLW	0x5a
0075c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075ca   0e0f     movlw   0xf              	MOVLW	0x0f
0075cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075ce   ec49     call    0x7492, 0        	CALL	_ServoWrite
0075d0   f03a
0075d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0075d4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	115; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(16,70);//cadera derecha
0075d6   0e46     movlw   0x46             	MOVLW	0x46
0075d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075da   0e10     movlw   0x10             	MOVLW	0x10
0075dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075de   ec49     call    0x7492, 0        	CALL	_ServoWrite
0075e0   f03a
0075e2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0075e4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	116; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(17,110); //cadera izquierda
0075e6   0e6e     movlw   0x6e             	MOVLW	0x6e
0075e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075ea   0e11     movlw   0x11             	MOVLW	0x11
0075ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0075ee   ec49     call    0x7492, 0        	CALL	_ServoWrite
0075f0   f03a
0075f2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0075f4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0075f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__caminar	code
                                           _caminar:
                                           ;	.line	91; /home/valentin/.icaro/firmware/source/user.c	void caminar(int tiempo,int p, int n)
004d44   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d46   ffe5
004d48   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d4a   ffd9
004d4c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d4e   ffe5
004d50   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004d52   ffe5
004d54   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004d56   ffe5
004d58   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004d5a   ffe5
004d5c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004d5e   ffe5
004d60   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004d62   ffe5
004d64   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004d66   ffe5
004d68   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004d6a   ffe5
004d6c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
004d6e   ffe5
004d70   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
004d72   ffe5
004d74   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
004d76   ffe5
004d78   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
004d7a   ffe5
004d7c   0e02     movlw   0x2              	MOVLW	0x02
004d7e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004d80   f000
004d82   0e03     movlw   0x3              	MOVLW	0x03
004d84   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004d86   f001
004d88   0e04     movlw   0x4              	MOVLW	0x04
004d8a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004d8c   f002
004d8e   0e05     movlw   0x5              	MOVLW	0x05
004d90   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
004d92   f003
004d94   0e06     movlw   0x6              	MOVLW	0x06
004d96   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
004d98   f004
004d9a   0e07     movlw   0x7              	MOVLW	0x07
004d9c   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
004d9e   f005
                                           ;	.line	93; /home/valentin/.icaro/firmware/source/user.c	int pder[4]={10,75,75,10};
004da0   0e0a     movlw   0xa              	MOVLW	0x0a
004da2   0103     movlb   0x3              	BANKSEL	_caminar_pder_1_314
004da4   6f72     movwf   0x72, 0x1        	MOVWF	_caminar_pder_1_314, B
                                           ; removed redundant BANKSEL
004da6   6b73     clrf    0x73, 0x1        	CLRF	(_caminar_pder_1_314 + 1), B
004da8   0e4b     movlw   0x4b             	MOVLW	0x4b
                                           ; removed redundant BANKSEL
004daa   6f74     movwf   0x74, 0x1        	MOVWF	(_caminar_pder_1_314 + 2), B
                                           ; removed redundant BANKSEL
004dac   6b75     clrf    0x75, 0x1        	CLRF	(_caminar_pder_1_314 + 3), B
                                           ; removed redundant BANKSEL
004dae   6f76     movwf   0x76, 0x1        	MOVWF	(_caminar_pder_1_314 + 4), B
                                           ; removed redundant BANKSEL
004db0   6b77     clrf    0x77, 0x1        	CLRF	(_caminar_pder_1_314 + 5), B
004db2   0e0a     movlw   0xa              	MOVLW	0x0a
                                           ; removed redundant BANKSEL
004db4   6f78     movwf   0x78, 0x1        	MOVWF	(_caminar_pder_1_314 + 6), B
                                           ; removed redundant BANKSEL
004db6   6b79     clrf    0x79, 0x1        	CLRF	(_caminar_pder_1_314 + 7), B
                                           ;	.line	94; /home/valentin/.icaro/firmware/source/user.c	int pizq[4]={65,130,130,65};
004db8   0e41     movlw   0x41             	MOVLW	0x41
004dba   0103     movlb   0x3              	BANKSEL	_caminar_pizq_1_314
004dbc   6f7a     movwf   0x7a, 0x1        	MOVWF	_caminar_pizq_1_314, B
                                           ; removed redundant BANKSEL
004dbe   6b7b     clrf    0x7b, 0x1        	CLRF	(_caminar_pizq_1_314 + 1), B
004dc0   0e82     movlw   0x82             	MOVLW	0x82
                                           ; removed redundant BANKSEL
004dc2   6f7c     movwf   0x7c, 0x1        	MOVWF	(_caminar_pizq_1_314 + 2), B
                                           ; removed redundant BANKSEL
004dc4   6b7d     clrf    0x7d, 0x1        	CLRF	(_caminar_pizq_1_314 + 3), B
                                           ; removed redundant BANKSEL
004dc6   6f7e     movwf   0x7e, 0x1        	MOVWF	(_caminar_pizq_1_314 + 4), B
                                           ; removed redundant BANKSEL
004dc8   6b7f     clrf    0x7f, 0x1        	CLRF	(_caminar_pizq_1_314 + 5), B
004dca   0e41     movlw   0x41             	MOVLW	0x41
                                           ; removed redundant BANKSEL
004dcc   6f80     movwf   0x80, 0x1        	MOVWF	(_caminar_pizq_1_314 + 6), B
                                           ; removed redundant BANKSEL
004dce   6b81     clrf    0x81, 0x1        	CLRF	(_caminar_pizq_1_314 + 7), B
                                           ;	.line	95; /home/valentin/.icaro/firmware/source/user.c	int cder[4]={100,100,45,45};
004dd0   0e64     movlw   0x64             	MOVLW	0x64
004dd2   0103     movlb   0x3              	BANKSEL	_caminar_cder_1_314
004dd4   6f82     movwf   0x82, 0x1        	MOVWF	_caminar_cder_1_314, B
                                           ; removed redundant BANKSEL
004dd6   6b83     clrf    0x83, 0x1        	CLRF	(_caminar_cder_1_314 + 1), B
                                           ; removed redundant BANKSEL
004dd8   6f84     movwf   0x84, 0x1        	MOVWF	(_caminar_cder_1_314 + 2), B
                                           ; removed redundant BANKSEL
004dda   6b85     clrf    0x85, 0x1        	CLRF	(_caminar_cder_1_314 + 3), B
004ddc   0e2d     movlw   0x2d             	MOVLW	0x2d
                                           ; removed redundant BANKSEL
004dde   6f86     movwf   0x86, 0x1        	MOVWF	(_caminar_cder_1_314 + 4), B
                                           ; removed redundant BANKSEL
004de0   6b87     clrf    0x87, 0x1        	CLRF	(_caminar_cder_1_314 + 5), B
                                           ; removed redundant BANKSEL
004de2   6f88     movwf   0x88, 0x1        	MOVWF	(_caminar_cder_1_314 + 6), B
                                           ; removed redundant BANKSEL
004de4   6b89     clrf    0x89, 0x1        	CLRF	(_caminar_cder_1_314 + 7), B
                                           ;	.line	96; /home/valentin/.icaro/firmware/source/user.c	int cizq[4]={80,80,130,130};
004de6   0e50     movlw   0x50             	MOVLW	0x50
004de8   0103     movlb   0x3              	BANKSEL	_caminar_cizq_1_314
004dea   6f8a     movwf   0x8a, 0x1        	MOVWF	_caminar_cizq_1_314, B
                                           ; removed redundant BANKSEL
004dec   6b8b     clrf    0x8b, 0x1        	CLRF	(_caminar_cizq_1_314 + 1), B
                                           ; removed redundant BANKSEL
004dee   6f8c     movwf   0x8c, 0x1        	MOVWF	(_caminar_cizq_1_314 + 2), B
                                           ; removed redundant BANKSEL
004df0   6b8d     clrf    0x8d, 0x1        	CLRF	(_caminar_cizq_1_314 + 3), B
004df2   0e82     movlw   0x82             	MOVLW	0x82
                                           ; removed redundant BANKSEL
004df4   6f8e     movwf   0x8e, 0x1        	MOVWF	(_caminar_cizq_1_314 + 4), B
                                           ; removed redundant BANKSEL
004df6   6b8f     clrf    0x8f, 0x1        	CLRF	(_caminar_cizq_1_314 + 5), B
                                           ; removed redundant BANKSEL
004df8   6f90     movwf   0x90, 0x1        	MOVWF	(_caminar_cizq_1_314 + 6), B
                                           ; removed redundant BANKSEL
004dfa   6b91     clrf    0x91, 0x1        	CLRF	(_caminar_cizq_1_314 + 7), B
                                           ;	.line	98; /home/valentin/.icaro/firmware/source/user.c	for(i=0;i<4;i++)
004dfc   6a06     clrf    0x6, 0           	CLRF	r0x06
004dfe   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _01577_DS_:
                                           ;	.line	100; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(14,pder[p]);//pie derecho
004e00   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004e02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e04   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004e06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e08   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004e0a   0e02     movlw   0x2              	MOVLW	0x02
004e0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e0e   ec27     call    0x4e, 0          	CALL	__mulint
004e10   f000
004e12   6e08     movwf   0x8, 0           	MOVWF	r0x08
004e14   cff3     movff   0xff3, 0x9       	MOVFF	PRODL, r0x09
004e16   f009
004e18   0e04     movlw   0x4              	MOVLW	0x04
004e1a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004e1c   0e72     movlw   0x72             	MOVLW	LOW(_caminar_pder_1_314)
004e1e   2408     addwf   0x8, 0, 0        	ADDWF	r0x08, W
004e20   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
004e22   0e03     movlw   0x3              	MOVLW	HIGH(_caminar_pder_1_314)
004e24   2009     addwfc  0x9, 0, 0        	ADDWFC	r0x09, W
004e26   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
004e28   c00a     movff   0xa, 0xfe9       	MOVFF	r0x0a, FSR0L
004e2a   ffe9
004e2c   c00b     movff   0xb, 0xfea       	MOVFF	r0x0b, FSR0H
004e2e   ffea
004e30   cfee     movff   0xfee, 0xa       	MOVFF	POSTINC0, r0x0a
004e32   f00a
004e34   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
004e36   f00b
004e38   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
004e3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e3c   0e0e     movlw   0xe              	MOVLW	0x0e
004e3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e40   ec49     call    0x7492, 0        	CALL	_ServoWrite
004e42   f03a
004e44   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004e46   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	101; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(15,pizq[p]);//pie izquierdo
004e48   0e7a     movlw   0x7a             	MOVLW	LOW(_caminar_pizq_1_314)
004e4a   2408     addwf   0x8, 0, 0        	ADDWF	r0x08, W
004e4c   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
004e4e   0e03     movlw   0x3              	MOVLW	HIGH(_caminar_pizq_1_314)
004e50   2009     addwfc  0x9, 0, 0        	ADDWFC	r0x09, W
004e52   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
004e54   c00a     movff   0xa, 0xfe9       	MOVFF	r0x0a, FSR0L
004e56   ffe9
004e58   c00b     movff   0xb, 0xfea       	MOVFF	r0x0b, FSR0H
004e5a   ffea
004e5c   cfee     movff   0xfee, 0xa       	MOVFF	POSTINC0, r0x0a
004e5e   f00a
004e60   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
004e62   f00b
004e64   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
004e66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e68   0e0f     movlw   0xf              	MOVLW	0x0f
004e6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e6c   ec49     call    0x7492, 0        	CALL	_ServoWrite
004e6e   f03a
004e70   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004e72   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	102; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(16,cder[p]);//cadera derecha
004e74   0e82     movlw   0x82             	MOVLW	LOW(_caminar_cder_1_314)
004e76   2408     addwf   0x8, 0, 0        	ADDWF	r0x08, W
004e78   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
004e7a   0e03     movlw   0x3              	MOVLW	HIGH(_caminar_cder_1_314)
004e7c   2009     addwfc  0x9, 0, 0        	ADDWFC	r0x09, W
004e7e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
004e80   c00a     movff   0xa, 0xfe9       	MOVFF	r0x0a, FSR0L
004e82   ffe9
004e84   c00b     movff   0xb, 0xfea       	MOVFF	r0x0b, FSR0H
004e86   ffea
004e88   cfee     movff   0xfee, 0xa       	MOVFF	POSTINC0, r0x0a
004e8a   f00a
004e8c   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
004e8e   f00b
004e90   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
004e92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e94   0e10     movlw   0x10             	MOVLW	0x10
004e96   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004e98   ec49     call    0x7492, 0        	CALL	_ServoWrite
004e9a   f03a
004e9c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004e9e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	103; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(17,cizq[p]); //cadera izquierda
004ea0   0e8a     movlw   0x8a             	MOVLW	LOW(_caminar_cizq_1_314)
004ea2   2608     addwf   0x8, 0x1, 0      	ADDWF	r0x08, F
004ea4   0e03     movlw   0x3              	MOVLW	HIGH(_caminar_cizq_1_314)
004ea6   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
004ea8   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
004eaa   ffe9
004eac   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
004eae   ffea
004eb0   cfee     movff   0xfee, 0x8       	MOVFF	POSTINC0, r0x08
004eb2   f008
004eb4   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
004eb6   f009
004eb8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
004eba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ebc   0e11     movlw   0x11             	MOVLW	0x11
004ebe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ec0   ec49     call    0x7492, 0        	CALL	_ServoWrite
004ec2   f03a
004ec4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004ec6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	104; /home/valentin/.icaro/firmware/source/user.c	Delayms(tiempo);
004ec8   c000     movff   0, 0x8           	MOVFF	r0x00, r0x08
004eca   f008
004ecc   c001     movff   0x1, 0x9         	MOVFF	r0x01, r0x09
004ece   f009
004ed0   6ae8     clrf    0xe8, 0          	CLRF	WREG
004ed2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004ed4   0eff     movlw   0xff             	MOVLW	0xff
004ed6   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
004ed8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004eda   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
004edc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ede   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
004ee0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ee2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
004ee4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ee6   ecbe     call    0x6f7c, 0        	CALL	_Delayms
004ee8   f037
004eea   0e04     movlw   0x4              	MOVLW	0x04
004eec   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	105; /home/valentin/.icaro/firmware/source/user.c	p=p+n;
004eee   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004ef0   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
004ef2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004ef4   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
                                           ;	.line	98; /home/valentin/.icaro/firmware/source/user.c	for(i=0;i<4;i++)
004ef6   4a06     infsnz  0x6, 0x1, 0      	INFSNZ	r0x06, F
004ef8   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
004efa   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004efc   0f80     addlw   0x80             	ADDLW	0x80
004efe   0f80     addlw   0x80             	ADDLW	0x80
004f00   e102     bnz     0x4f06           	BNZ	_01585_DS_
004f02   0e04     movlw   0x4              	MOVLW	0x04
004f04   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _01585_DS_:
004f06   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
004f08   d77b     bra     0x4e00           	BRA	_01577_DS_
004f0a   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
004f0c   f00b
004f0e   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
004f10   f00a
004f12   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
004f14   f009
004f16   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
004f18   f008
004f1a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004f1c   f007
004f1e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004f20   f006
004f22   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004f24   f005
004f26   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004f28   f004
004f2a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004f2c   f003
004f2e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004f30   f002
004f32   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004f34   f001
004f36   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004f38   f000
004f3a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004f3c   ffd9
004f3e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__mens	code
                                           _mens:
                                           ;	.line	68; /home/valentin/.icaro/firmware/source/user.c	void mens(int val)
0048a0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0048a2   ffe5
0048a4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0048a6   ffd9
0048a8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0048aa   ffe5
0048ac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0048ae   ffe5
0048b0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0048b2   ffe5
0048b4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0048b6   ffe5
0048b8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0048ba   ffe5
0048bc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0048be   ffe5
0048c0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0048c2   ffe5
0048c4   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0048c6   ffe5
0048c8   0e02     movlw   0x2              	MOVLW	0x02
0048ca   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0048cc   f000
0048ce   0e03     movlw   0x3              	MOVLW	0x03
0048d0   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0048d2   f001
                                           ;	.line	70; /home/valentin/.icaro/firmware/source/user.c	int p[37]={'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','0','1','2','3','4','5','6','7','8','9',' '};
0048d4   0e61     movlw   0x61             	MOVLW	0x61
0048d6   0102     movlb   0x2              	BANKSEL	_mens_p_1_306
0048d8   6f80     movwf   0x80, 0x1        	MOVWF	_mens_p_1_306, B
                                           ; removed redundant BANKSEL
0048da   6b81     clrf    0x81, 0x1        	CLRF	(_mens_p_1_306 + 1), B
0048dc   0e62     movlw   0x62             	MOVLW	0x62
                                           ; removed redundant BANKSEL
0048de   6f82     movwf   0x82, 0x1        	MOVWF	(_mens_p_1_306 + 2), B
                                           ; removed redundant BANKSEL
0048e0   6b83     clrf    0x83, 0x1        	CLRF	(_mens_p_1_306 + 3), B
0048e2   0e63     movlw   0x63             	MOVLW	0x63
                                           ; removed redundant BANKSEL
0048e4   6f84     movwf   0x84, 0x1        	MOVWF	(_mens_p_1_306 + 4), B
                                           ; removed redundant BANKSEL
0048e6   6b85     clrf    0x85, 0x1        	CLRF	(_mens_p_1_306 + 5), B
0048e8   0e64     movlw   0x64             	MOVLW	0x64
                                           ; removed redundant BANKSEL
0048ea   6f86     movwf   0x86, 0x1        	MOVWF	(_mens_p_1_306 + 6), B
                                           ; removed redundant BANKSEL
0048ec   6b87     clrf    0x87, 0x1        	CLRF	(_mens_p_1_306 + 7), B
0048ee   0e65     movlw   0x65             	MOVLW	0x65
                                           ; removed redundant BANKSEL
0048f0   6f88     movwf   0x88, 0x1        	MOVWF	(_mens_p_1_306 + 8), B
                                           ; removed redundant BANKSEL
0048f2   6b89     clrf    0x89, 0x1        	CLRF	(_mens_p_1_306 + 9), B
0048f4   0e66     movlw   0x66             	MOVLW	0x66
                                           ; removed redundant BANKSEL
0048f6   6f8a     movwf   0x8a, 0x1        	MOVWF	(_mens_p_1_306 + 10), B
                                           ; removed redundant BANKSEL
0048f8   6b8b     clrf    0x8b, 0x1        	CLRF	(_mens_p_1_306 + 11), B
0048fa   0e67     movlw   0x67             	MOVLW	0x67
                                           ; removed redundant BANKSEL
0048fc   6f8c     movwf   0x8c, 0x1        	MOVWF	(_mens_p_1_306 + 12), B
                                           ; removed redundant BANKSEL
0048fe   6b8d     clrf    0x8d, 0x1        	CLRF	(_mens_p_1_306 + 13), B
004900   0e68     movlw   0x68             	MOVLW	0x68
                                           ; removed redundant BANKSEL
004902   6f8e     movwf   0x8e, 0x1        	MOVWF	(_mens_p_1_306 + 14), B
                                           ; removed redundant BANKSEL
004904   6b8f     clrf    0x8f, 0x1        	CLRF	(_mens_p_1_306 + 15), B
004906   0e69     movlw   0x69             	MOVLW	0x69
                                           ; removed redundant BANKSEL
004908   6f90     movwf   0x90, 0x1        	MOVWF	(_mens_p_1_306 + 16), B
                                           ; removed redundant BANKSEL
00490a   6b91     clrf    0x91, 0x1        	CLRF	(_mens_p_1_306 + 17), B
00490c   0e6a     movlw   0x6a             	MOVLW	0x6a
                                           ; removed redundant BANKSEL
00490e   6f92     movwf   0x92, 0x1        	MOVWF	(_mens_p_1_306 + 18), B
                                           ; removed redundant BANKSEL
004910   6b93     clrf    0x93, 0x1        	CLRF	(_mens_p_1_306 + 19), B
004912   0e6b     movlw   0x6b             	MOVLW	0x6b
                                           ; removed redundant BANKSEL
004914   6f94     movwf   0x94, 0x1        	MOVWF	(_mens_p_1_306 + 20), B
                                           ; removed redundant BANKSEL
004916   6b95     clrf    0x95, 0x1        	CLRF	(_mens_p_1_306 + 21), B
004918   0e6c     movlw   0x6c             	MOVLW	0x6c
                                           ; removed redundant BANKSEL
00491a   6f96     movwf   0x96, 0x1        	MOVWF	(_mens_p_1_306 + 22), B
                                           ; removed redundant BANKSEL
00491c   6b97     clrf    0x97, 0x1        	CLRF	(_mens_p_1_306 + 23), B
00491e   0e6d     movlw   0x6d             	MOVLW	0x6d
                                           ; removed redundant BANKSEL
004920   6f98     movwf   0x98, 0x1        	MOVWF	(_mens_p_1_306 + 24), B
                                           ; removed redundant BANKSEL
004922   6b99     clrf    0x99, 0x1        	CLRF	(_mens_p_1_306 + 25), B
004924   0e6e     movlw   0x6e             	MOVLW	0x6e
                                           ; removed redundant BANKSEL
004926   6f9a     movwf   0x9a, 0x1        	MOVWF	(_mens_p_1_306 + 26), B
                                           ; removed redundant BANKSEL
004928   6b9b     clrf    0x9b, 0x1        	CLRF	(_mens_p_1_306 + 27), B
00492a   0e6f     movlw   0x6f             	MOVLW	0x6f
                                           ; removed redundant BANKSEL
00492c   6f9c     movwf   0x9c, 0x1        	MOVWF	(_mens_p_1_306 + 28), B
                                           ; removed redundant BANKSEL
00492e   6b9d     clrf    0x9d, 0x1        	CLRF	(_mens_p_1_306 + 29), B
004930   0e70     movlw   0x70             	MOVLW	0x70
                                           ; removed redundant BANKSEL
004932   6f9e     movwf   0x9e, 0x1        	MOVWF	(_mens_p_1_306 + 30), B
                                           ; removed redundant BANKSEL
004934   6b9f     clrf    0x9f, 0x1        	CLRF	(_mens_p_1_306 + 31), B
004936   0e71     movlw   0x71             	MOVLW	0x71
                                           ; removed redundant BANKSEL
004938   6fa0     movwf   0xa0, 0x1        	MOVWF	(_mens_p_1_306 + 32), B
                                           ; removed redundant BANKSEL
00493a   6ba1     clrf    0xa1, 0x1        	CLRF	(_mens_p_1_306 + 33), B
00493c   0e72     movlw   0x72             	MOVLW	0x72
                                           ; removed redundant BANKSEL
00493e   6fa2     movwf   0xa2, 0x1        	MOVWF	(_mens_p_1_306 + 34), B
                                           ; removed redundant BANKSEL
004940   6ba3     clrf    0xa3, 0x1        	CLRF	(_mens_p_1_306 + 35), B
004942   0e73     movlw   0x73             	MOVLW	0x73
                                           ; removed redundant BANKSEL
004944   6fa4     movwf   0xa4, 0x1        	MOVWF	(_mens_p_1_306 + 36), B
                                           ; removed redundant BANKSEL
004946   6ba5     clrf    0xa5, 0x1        	CLRF	(_mens_p_1_306 + 37), B
004948   0e74     movlw   0x74             	MOVLW	0x74
                                           ; removed redundant BANKSEL
00494a   6fa6     movwf   0xa6, 0x1        	MOVWF	(_mens_p_1_306 + 38), B
                                           ; removed redundant BANKSEL
00494c   6ba7     clrf    0xa7, 0x1        	CLRF	(_mens_p_1_306 + 39), B
00494e   0e75     movlw   0x75             	MOVLW	0x75
                                           ; removed redundant BANKSEL
004950   6fa8     movwf   0xa8, 0x1        	MOVWF	(_mens_p_1_306 + 40), B
                                           ; removed redundant BANKSEL
004952   6ba9     clrf    0xa9, 0x1        	CLRF	(_mens_p_1_306 + 41), B
004954   0e76     movlw   0x76             	MOVLW	0x76
                                           ; removed redundant BANKSEL
004956   6faa     movwf   0xaa, 0x1        	MOVWF	(_mens_p_1_306 + 42), B
                                           ; removed redundant BANKSEL
004958   6bab     clrf    0xab, 0x1        	CLRF	(_mens_p_1_306 + 43), B
00495a   0e77     movlw   0x77             	MOVLW	0x77
                                           ; removed redundant BANKSEL
00495c   6fac     movwf   0xac, 0x1        	MOVWF	(_mens_p_1_306 + 44), B
                                           ; removed redundant BANKSEL
00495e   6bad     clrf    0xad, 0x1        	CLRF	(_mens_p_1_306 + 45), B
004960   0e78     movlw   0x78             	MOVLW	0x78
                                           ; removed redundant BANKSEL
004962   6fae     movwf   0xae, 0x1        	MOVWF	(_mens_p_1_306 + 46), B
                                           ; removed redundant BANKSEL
004964   6baf     clrf    0xaf, 0x1        	CLRF	(_mens_p_1_306 + 47), B
004966   0e79     movlw   0x79             	MOVLW	0x79
                                           ; removed redundant BANKSEL
004968   6fb0     movwf   0xb0, 0x1        	MOVWF	(_mens_p_1_306 + 48), B
                                           ; removed redundant BANKSEL
00496a   6bb1     clrf    0xb1, 0x1        	CLRF	(_mens_p_1_306 + 49), B
00496c   0e7a     movlw   0x7a             	MOVLW	0x7a
                                           ; removed redundant BANKSEL
00496e   6fb2     movwf   0xb2, 0x1        	MOVWF	(_mens_p_1_306 + 50), B
                                           ; removed redundant BANKSEL
004970   6bb3     clrf    0xb3, 0x1        	CLRF	(_mens_p_1_306 + 51), B
004972   0e30     movlw   0x30             	MOVLW	0x30
                                           ; removed redundant BANKSEL
004974   6fb4     movwf   0xb4, 0x1        	MOVWF	(_mens_p_1_306 + 52), B
                                           ; removed redundant BANKSEL
004976   6bb5     clrf    0xb5, 0x1        	CLRF	(_mens_p_1_306 + 53), B
004978   0e31     movlw   0x31             	MOVLW	0x31
                                           ; removed redundant BANKSEL
00497a   6fb6     movwf   0xb6, 0x1        	MOVWF	(_mens_p_1_306 + 54), B
                                           ; removed redundant BANKSEL
00497c   6bb7     clrf    0xb7, 0x1        	CLRF	(_mens_p_1_306 + 55), B
00497e   0e32     movlw   0x32             	MOVLW	0x32
                                           ; removed redundant BANKSEL
004980   6fb8     movwf   0xb8, 0x1        	MOVWF	(_mens_p_1_306 + 56), B
                                           ; removed redundant BANKSEL
004982   6bb9     clrf    0xb9, 0x1        	CLRF	(_mens_p_1_306 + 57), B
004984   0e33     movlw   0x33             	MOVLW	0x33
                                           ; removed redundant BANKSEL
004986   6fba     movwf   0xba, 0x1        	MOVWF	(_mens_p_1_306 + 58), B
                                           ; removed redundant BANKSEL
004988   6bbb     clrf    0xbb, 0x1        	CLRF	(_mens_p_1_306 + 59), B
00498a   0e34     movlw   0x34             	MOVLW	0x34
                                           ; removed redundant BANKSEL
00498c   6fbc     movwf   0xbc, 0x1        	MOVWF	(_mens_p_1_306 + 60), B
                                           ; removed redundant BANKSEL
00498e   6bbd     clrf    0xbd, 0x1        	CLRF	(_mens_p_1_306 + 61), B
004990   0e35     movlw   0x35             	MOVLW	0x35
                                           ; removed redundant BANKSEL
004992   6fbe     movwf   0xbe, 0x1        	MOVWF	(_mens_p_1_306 + 62), B
                                           ; removed redundant BANKSEL
004994   6bbf     clrf    0xbf, 0x1        	CLRF	(_mens_p_1_306 + 63), B
004996   0e36     movlw   0x36             	MOVLW	0x36
                                           ; removed redundant BANKSEL
004998   6fc0     movwf   0xc0, 0x1        	MOVWF	(_mens_p_1_306 + 64), B
                                           ; removed redundant BANKSEL
00499a   6bc1     clrf    0xc1, 0x1        	CLRF	(_mens_p_1_306 + 65), B
00499c   0e37     movlw   0x37             	MOVLW	0x37
                                           ; removed redundant BANKSEL
00499e   6fc2     movwf   0xc2, 0x1        	MOVWF	(_mens_p_1_306 + 66), B
                                           ; removed redundant BANKSEL
0049a0   6bc3     clrf    0xc3, 0x1        	CLRF	(_mens_p_1_306 + 67), B
0049a2   0e38     movlw   0x38             	MOVLW	0x38
                                           ; removed redundant BANKSEL
0049a4   6fc4     movwf   0xc4, 0x1        	MOVWF	(_mens_p_1_306 + 68), B
                                           ; removed redundant BANKSEL
0049a6   6bc5     clrf    0xc5, 0x1        	CLRF	(_mens_p_1_306 + 69), B
0049a8   0e39     movlw   0x39             	MOVLW	0x39
                                           ; removed redundant BANKSEL
0049aa   6fc6     movwf   0xc6, 0x1        	MOVWF	(_mens_p_1_306 + 70), B
                                           ; removed redundant BANKSEL
0049ac   6bc7     clrf    0xc7, 0x1        	CLRF	(_mens_p_1_306 + 71), B
0049ae   0e20     movlw   0x20             	MOVLW	0x20
                                           ; removed redundant BANKSEL
0049b0   6fc8     movwf   0xc8, 0x1        	MOVWF	(_mens_p_1_306 + 72), B
                                           ; removed redundant BANKSEL
0049b2   6bc9     clrf    0xc9, 0x1        	CLRF	(_mens_p_1_306 + 73), B
0049b4   0103     movlb   0x3              	BANKSEL	_mens_n_1_306
                                           ;	.line	71; /home/valentin/.icaro/firmware/source/user.c	char n[]=" ";
0049b6   6fc6     movwf   0xc6, 0x1        	MOVWF	_mens_n_1_306, B
                                           ; removed redundant BANKSEL
0049b8   6bc7     clrf    0xc7, 0x1        	CLRF	(_mens_n_1_306 + 1), B
                                           ;	.line	73; /home/valentin/.icaro/firmware/source/user.c	for (i=0;i<37;i++)
0049ba   6a02     clrf    0x2, 0           	CLRF	r0x02
0049bc   6a03     clrf    0x3, 0           	CLRF	r0x03
0049be   6a04     clrf    0x4, 0           	CLRF	r0x04
0049c0   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _01536_DS_:
                                           ;	.line	75; /home/valentin/.icaro/firmware/source/user.c	if (val==p[i]) 
0049c2   0e80     movlw   0x80             	MOVLW	LOW(_mens_p_1_306)
0049c4   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
0049c6   6e06     movwf   0x6, 0           	MOVWF	r0x06
0049c8   0e02     movlw   0x2              	MOVLW	HIGH(_mens_p_1_306)
0049ca   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
0049cc   6e07     movwf   0x7, 0           	MOVWF	r0x07
0049ce   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0049d0   ffe9
0049d2   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0049d4   ffea
0049d6   cfee     movff   0xfee, 0x6       	MOVFF	POSTINC0, r0x06
0049d8   f006
0049da   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
0049dc   f007
0049de   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049e0   1806     xorwf   0x6, 0, 0        	XORWF	r0x06, W
0049e2   e11b     bnz     0x4a1a           	BNZ	_01537_DS_
0049e4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0049e6   1807     xorwf   0x7, 0, 0        	XORWF	r0x07, W
0049e8   e001     bz      0x49ec           	BZ	_01562_DS_
                                           _01561_DS_:
0049ea   d017     bra     0x4a1a           	BRA	_01537_DS_
                                           _01562_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/source/user.c	n[0]=p[i];
0049ec   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0049ee   0103     movlb   0x3              	BANKSEL	_mens_n_1_306
0049f0   6fc6     movwf   0xc6, 0x1        	MOVWF	_mens_n_1_306, B
                                           ;	.line	78; /home/valentin/.icaro/firmware/source/user.c	lcdPrint(n);
0049f2   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x08
                                           ; #	MOVF	r0x08, W
0049f4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049f6   0e03     movlw   0x3              	MOVLW	HIGH(_mens_n_1_306)
0049f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049fa   0ec6     movlw   0xc6             	MOVLW	LOW(_mens_n_1_306)
0049fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0049fe   ec57     call    0x70ae, 0        	CALL	_lcdPrint
004a00   f038
004a02   0e03     movlw   0x3              	MOVLW	0x03
004a04   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	79; /home/valentin/.icaro/firmware/source/user.c	Delayms(1); 
004a06   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a08   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a0a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a0c   0e01     movlw   0x1              	MOVLW	0x01
004a0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a10   ecbe     call    0x6f7c, 0        	CALL	_Delayms
004a12   f037
004a14   0e04     movlw   0x4              	MOVLW	0x04
004a16   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	80; /home/valentin/.icaro/firmware/source/user.c	return;
004a18   d06a     bra     0x4aee           	BRA	_01538_DS_
                                           _01537_DS_:
                                           ;	.line	73; /home/valentin/.icaro/firmware/source/user.c	for (i=0;i<37;i++)
004a1a   0e02     movlw   0x2              	MOVLW	0x02
004a1c   2604     addwf   0x4, 0x1, 0      	ADDWF	r0x04, F
004a1e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004a20   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
004a22   4a02     infsnz  0x2, 0x1, 0      	INFSNZ	r0x02, F
004a24   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
004a26   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004a28   0f80     addlw   0x80             	ADDLW	0x80
004a2a   0f80     addlw   0x80             	ADDLW	0x80
004a2c   e102     bnz     0x4a32           	BNZ	_01563_DS_
004a2e   0e25     movlw   0x25             	MOVLW	0x25
004a30   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _01563_DS_:
004a32   e3c7     bnc     0x49c2           	BNC	_01536_DS_
                                           ;	.line	83; /home/valentin/.icaro/firmware/source/user.c	if (val=='?') {lcdPrint("?"); Delayms(1);return;}
004a34   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a36   0a3f     xorlw   0x3f             	XORLW	0x3f
004a38   e117     bnz     0x4a68           	BNZ	_01529_DS_
004a3a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004a3c   e001     bz      0x4a40           	BZ	_01565_DS_
                                           _01564_DS_:
004a3e   d014     bra     0x4a68           	BRA	_01529_DS_
                                           _01565_DS_:
004a40   0e00     movlw   0                	MOVLW	UPPER(___str_5)
004a42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a44   0e32     movlw   0x32             	MOVLW	HIGH(___str_5)
004a46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a48   0eee     movlw   0xee             	MOVLW	LOW(___str_5)
004a4a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a4c   ec57     call    0x70ae, 0        	CALL	_lcdPrint
004a4e   f038
004a50   0e03     movlw   0x3              	MOVLW	0x03
004a52   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004a54   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a56   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a58   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a5a   0e01     movlw   0x1              	MOVLW	0x01
004a5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a5e   ecbe     call    0x6f7c, 0        	CALL	_Delayms
004a60   f037
004a62   0e04     movlw   0x4              	MOVLW	0x04
004a64   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004a66   d043     bra     0x4aee           	BRA	_01538_DS_
                                           _01529_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/source/user.c	if (val=='!') {lcdPrint("!"); Delayms(1);return;}
004a68   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a6a   0a21     xorlw   0x21             	XORLW	0x21
004a6c   e117     bnz     0x4a9c           	BNZ	_01531_DS_
004a6e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004a70   e001     bz      0x4a74           	BZ	_01567_DS_
                                           _01566_DS_:
004a72   d014     bra     0x4a9c           	BRA	_01531_DS_
                                           _01567_DS_:
004a74   0e00     movlw   0                	MOVLW	UPPER(___str_6)
004a76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a78   0e32     movlw   0x32             	MOVLW	HIGH(___str_6)
004a7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a7c   0ef0     movlw   0xf0             	MOVLW	LOW(___str_6)
004a7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a80   ec57     call    0x70ae, 0        	CALL	_lcdPrint
004a82   f038
004a84   0e03     movlw   0x3              	MOVLW	0x03
004a86   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004a88   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a8a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a8c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a8e   0e01     movlw   0x1              	MOVLW	0x01
004a90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a92   ecbe     call    0x6f7c, 0        	CALL	_Delayms
004a94   f037
004a96   0e04     movlw   0x4              	MOVLW	0x04
004a98   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004a9a   d029     bra     0x4aee           	BRA	_01538_DS_
                                           _01531_DS_:
                                           ;	.line	85; /home/valentin/.icaro/firmware/source/user.c	if (val=='#') {clear(); Delayms(1);return;}
004a9c   5000     movf    0, 0, 0          	MOVF	r0x00, W
004a9e   0a23     xorlw   0x23             	XORLW	0x23
004aa0   e10f     bnz     0x4ac0           	BNZ	_01533_DS_
004aa2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004aa4   e001     bz      0x4aa8           	BZ	_01569_DS_
                                           _01568_DS_:
004aa6   d00c     bra     0x4ac0           	BRA	_01533_DS_
                                           _01569_DS_:
004aa8   ec5a     call    0x78b4, 0        	CALL	_clear
004aaa   f03c
004aac   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004aae   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ab0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ab2   0e01     movlw   0x1              	MOVLW	0x01
004ab4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ab6   ecbe     call    0x6f7c, 0        	CALL	_Delayms
004ab8   f037
004aba   0e04     movlw   0x4              	MOVLW	0x04
004abc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004abe   d017     bra     0x4aee           	BRA	_01538_DS_
                                           _01533_DS_:
                                           ;	.line	86; /home/valentin/.icaro/firmware/source/user.c	if (val=='$') {setCursor(0,1); Delayms(1);return;}
004ac0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004ac2   0a24     xorlw   0x24             	XORLW	0x24
004ac4   e114     bnz     0x4aee           	BNZ	_01538_DS_
004ac6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004ac8   e001     bz      0x4acc           	BZ	_01571_DS_
                                           _01570_DS_:
004aca   d011     bra     0x4aee           	BRA	_01538_DS_
                                           _01571_DS_:
004acc   0e01     movlw   0x1              	MOVLW	0x01
004ace   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ad0   0e00     movlw   0                	MOVLW	0x00
004ad2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ad4   ece8     call    0x71d0, 0        	CALL	_setCursor
004ad6   f038
004ad8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004ada   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004adc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ade   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ae0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004ae2   0e01     movlw   0x1              	MOVLW	0x01
004ae4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ae6   ecbe     call    0x6f7c, 0        	CALL	_Delayms
004ae8   f037
004aea   0e04     movlw   0x4              	MOVLW	0x04
004aec   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _01538_DS_:
004aee   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004af0   f007
004af2   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004af4   f006
004af6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004af8   f005
004afa   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004afc   f004
004afe   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004b00   f003
004b02   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004b04   f002
004b06   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b08   f001
004b0a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004b0c   f000
004b0e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004b10   ffd9
004b12   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	39; /home/valentin/.icaro/firmware/source/user.c	TRISB=0; //defino PORTB como salida
006078   6a93     clrf    0x93, 0          	CLRF	_TRISB
                                           ;	.line	40; /home/valentin/.icaro/firmware/source/user.c	PORTB=0; 
00607a   6a81     clrf    0x81, 0          	CLRF	_PORTB
                                           ;	.line	41; /home/valentin/.icaro/firmware/source/user.c	PORTD=0;
00607c   6a83     clrf    0x83, 0          	CLRF	_PORTD
                                           ;	.line	42; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG1,INPUT);
00607e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006080   0e01     movlw   0x1              	MOVLW	0x01
006082   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006084   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006086   0e15     movlw   0x15             	MOVLW	0x15
006088   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00608a   eca2     call    0x4344, 0        	CALL	_pinmode
00608c   f021
00608e   0e04     movlw   0x4              	MOVLW	0x04
006090   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	43; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG2,INPUT);
006092   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006094   0e01     movlw   0x1              	MOVLW	0x01
006096   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006098   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00609a   0e16     movlw   0x16             	MOVLW	0x16
00609c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00609e   eca2     call    0x4344, 0        	CALL	_pinmode
0060a0   f021
0060a2   0e04     movlw   0x4              	MOVLW	0x04
0060a4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	45; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG3,TRIG);
0060a6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060a8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060aa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060ac   0e17     movlw   0x17             	MOVLW	0x17
0060ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0060b0   eca2     call    0x4344, 0        	CALL	_pinmode
0060b2   f021
0060b4   0e04     movlw   0x4              	MOVLW	0x04
0060b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	46; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_DIG4,ECHO);
0060b8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060ba   0e01     movlw   0x1              	MOVLW	0x01
0060bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0060be   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060c0   0e18     movlw   0x18             	MOVLW	0x18
0060c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0060c4   eca2     call    0x4344, 0        	CALL	_pinmode
0060c6   f021
0060c8   0e04     movlw   0x4              	MOVLW	0x04
0060ca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	47; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P1,OUTPUT);
0060cc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060ce   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060d0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060d2   0e19     movlw   0x19             	MOVLW	0x19
0060d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0060d6   eca2     call    0x4344, 0        	CALL	_pinmode
0060d8   f021
0060da   0e04     movlw   0x4              	MOVLW	0x04
0060dc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	48; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P2,OUTPUT);
0060de   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060e0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060e2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060e4   0e1a     movlw   0x1a             	MOVLW	0x1a
0060e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0060e8   eca2     call    0x4344, 0        	CALL	_pinmode
0060ea   f021
0060ec   0e04     movlw   0x4              	MOVLW	0x04
0060ee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	49; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P3,OUTPUT);
0060f0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060f2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060f4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0060f6   0e1b     movlw   0x1b             	MOVLW	0x1b
0060f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0060fa   eca2     call    0x4344, 0        	CALL	_pinmode
0060fc   f021
0060fe   0e04     movlw   0x4              	MOVLW	0x04
006100   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	50; /home/valentin/.icaro/firmware/source/user.c	pinmode(ICR_l293_P4,OUTPUT);
006102   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006104   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006106   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006108   0e1c     movlw   0x1c             	MOVLW	0x1c
00610a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00610c   eca2     call    0x4344, 0        	CALL	_pinmode
00610e   f021
006110   0e04     movlw   0x4              	MOVLW	0x04
006112   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	51; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(13);
006114   0e0d     movlw   0xd              	MOVLW	0x0d
006116   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006118   ec1a     call    0x5e34, 0        	CALL	_ServoAttach
00611a   f02f
00611c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	52; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(14);
00611e   0e0e     movlw   0xe              	MOVLW	0x0e
006120   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006122   ec1a     call    0x5e34, 0        	CALL	_ServoAttach
006124   f02f
006126   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	53; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(15);
006128   0e0f     movlw   0xf              	MOVLW	0x0f
00612a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00612c   ec1a     call    0x5e34, 0        	CALL	_ServoAttach
00612e   f02f
006130   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	54; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(16);
006132   0e10     movlw   0x10             	MOVLW	0x10
006134   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006136   ec1a     call    0x5e34, 0        	CALL	_ServoAttach
006138   f02f
00613a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	55; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(17);
00613c   0e11     movlw   0x11             	MOVLW	0x11
00613e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006140   ec1a     call    0x5e34, 0        	CALL	_ServoAttach
006142   f02f
006144   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	59; /home/valentin/.icaro/firmware/source/user.c	lcd(4, 5, 0, 1, 2, 3, 0, 0, 0, 0); // RS, E, D4 ~ D8	
006146   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006148   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00614a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00614c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00614e   0e03     movlw   0x3              	MOVLW	0x03
006150   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006152   0e02     movlw   0x2              	MOVLW	0x02
006154   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006156   0e01     movlw   0x1              	MOVLW	0x01
006158   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00615a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00615c   0e05     movlw   0x5              	MOVLW	0x05
00615e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006160   0e04     movlw   0x4              	MOVLW	0x04
006162   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006164   ec84     call    0x5d08, 0        	CALL	_lcd
006166   f02e
006168   0e0a     movlw   0xa              	MOVLW	0x0a
00616a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	61; /home/valentin/.icaro/firmware/source/user.c	begin(8, 2);
00616c   0e02     movlw   0x2              	MOVLW	0x02
00616e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006170   0e08     movlw   0x8              	MOVLW	0x08
006172   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006174   ec91     call    0x5922, 0        	CALL	_begin
006176   f02c
006178   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00617a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	62; /home/valentin/.icaro/firmware/source/user.c	home();
00617c   ec68     call    0x78d0, 0        	CALL	_home
00617e   f03c
                                           ;	.line	64; /home/valentin/.icaro/firmware/source/user.c	serial_begin(9600);
006180   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006182   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006184   0e25     movlw   0x25             	MOVLW	0x25
006186   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006188   0e80     movlw   0x80             	MOVLW	0x80
00618a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00618c   ec51     call    0x66a2, 0        	CALL	_serial_begin
00618e   f033
006190   0e04     movlw   0x4              	MOVLW	0x04
006192   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006194   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ping	code
                                           _ping:
                                           ;	.line	27; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	int ping()
006e3c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006e3e   ffe5
006e40   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006e42   ffe5
006e44   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006e46   ffe5
                                           _01493_DS_:
                                           ;	.line	31; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	while (digitalread(24) == LOW) 
006e48   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e4a   0e18     movlw   0x18             	MOVLW	0x18
006e4c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e4e   ec97     call    0x512e, 0        	CALL	_digitalread
006e50   f028
006e52   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
006e54   f001
006e56   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006e58   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006e5a   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
006e5c   e11b     bnz     0x6e94           	BNZ	_01504_DS_
                                           ;	.line	33; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	digitalwrite(23, HIGH);//Activa el disparador
006e5e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e60   0e01     movlw   0x1              	MOVLW	0x01
006e62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e64   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e66   0e17     movlw   0x17             	MOVLW	0x17
006e68   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e6a   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
006e6c   f022
006e6e   0e04     movlw   0x4              	MOVLW	0x04
006e70   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	34; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	Delayus(50);//Espera 50 microsegundos (minimo 10)
006e72   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e74   0e32     movlw   0x32             	MOVLW	0x32
006e76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e78   ec7d     call    0x74fa, 0        	CALL	_Delayus
006e7a   f03a
006e7c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006e7e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	35; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	digitalwrite(23, LOW);//Desactiva el disparador
006e80   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e82   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e84   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e86   0e17     movlw   0x17             	MOVLW	0x17
006e88   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e8a   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
006e8c   f022
006e8e   0e04     movlw   0x4              	MOVLW	0x04
006e90   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006e92   d7da     bra     0x6e48           	BRA	_01493_DS_
                                           _01504_DS_:
                                           ;	.line	38; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	while (digitalread(24) == HIGH) 
006e94   6a00     clrf    0, 0             	CLRF	r0x00
006e96   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01496_DS_:
006e98   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e9a   0e18     movlw   0x18             	MOVLW	0x18
006e9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e9e   ec97     call    0x512e, 0        	CALL	_digitalread
006ea0   f028
006ea2   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
006ea4   f003
006ea6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006ea8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006eaa   0a01     xorlw   0x1              	XORLW	0x01
006eac   e102     bnz     0x6eb2           	BNZ	_01514_DS_
006eae   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006eb0   e001     bz      0x6eb4           	BZ	_01515_DS_
                                           _01514_DS_:
006eb2   d00a     bra     0x6ec8           	BRA	_01498_DS_
                                           _01515_DS_:
                                           ;	.line	40; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	Dato++;//El contador se incrementa hasta llegar el eco
006eb4   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
006eb6   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
                                           ;	.line	41; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	Delayus(58);//Tiempo en recorrer dos centimetros 1 de ida 1 de vuelta
006eb8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006eba   0e3a     movlw   0x3a             	MOVLW	0x3a
006ebc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006ebe   ec7d     call    0x74fa, 0        	CALL	_Delayus
006ec0   f03a
006ec2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006ec4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
006ec6   d7e8     bra     0x6e98           	BRA	_01496_DS_
                                           _01498_DS_:
                                           ;	.line	44; /home/valentin/.icaro/firmware/icaro_lib/sensores.h	return Dato;
006ec8   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
006eca   fff3
006ecc   5000     movf    0, 0, 0          	MOVF	r0x00, W
006ece   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006ed0   f003
006ed2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006ed4   f001
006ed6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006ed8   f000
006eda   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcd	code
                                           _lcd:
                                           ;	.line	336; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void lcd(uint8_t rs, uint8_t enable, uint8_t d0, uint8_t d1, uint8_t d2, uint8_t d3, 
005d08   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005d0a   ffe5
005d0c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005d0e   ffd9
005d10   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005d12   ffe5
005d14   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005d16   ffe5
005d18   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
005d1a   ffe5
005d1c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
005d1e   ffe5
005d20   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
005d22   ffe5
005d24   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
005d26   ffe5
005d28   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
005d2a   ffe5
005d2c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
005d2e   ffe5
005d30   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
005d32   ffe5
005d34   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
005d36   ffe5
005d38   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
005d3a   ffe5
005d3c   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
005d3e   ffe5
005d40   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
005d42   ffe5
005d44   c00d     movff   0xd, 0xfe5       	MOVFF	r0x0d, POSTDEC1
005d46   ffe5
005d48   0e02     movlw   0x2              	MOVLW	0x02
005d4a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005d4c   f000
005d4e   0e03     movlw   0x3              	MOVLW	0x03
005d50   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
005d52   f001
005d54   0e04     movlw   0x4              	MOVLW	0x04
005d56   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
005d58   f002
005d5a   0e05     movlw   0x5              	MOVLW	0x05
005d5c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
005d5e   f003
005d60   0e06     movlw   0x6              	MOVLW	0x06
005d62   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
005d64   f004
005d66   0e07     movlw   0x7              	MOVLW	0x07
005d68   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
005d6a   f005
005d6c   0e08     movlw   0x8              	MOVLW	0x08
005d6e   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
005d70   f006
005d72   0e09     movlw   0x9              	MOVLW	0x09
005d74   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
005d76   f007
005d78   0e0a     movlw   0xa              	MOVLW	0x0a
005d7a   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
005d7c   f008
005d7e   0e0b     movlw   0xb              	MOVLW	0x0b
005d80   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
005d82   f009
                                           ;	.line	339; /home/valentin/.icaro/firmware/tmp/lcdlib.c	init(((d4 + d5 + d6 + d7)==0), rs, -1, enable, d0, d1, d2, d3, d4, d5, d6, d7);		
005d84   c006     movff   0x6, 0xa         	MOVFF	r0x06, r0x0a
005d86   f00a
005d88   6a0b     clrf    0xb, 0           	CLRF	r0x0b
005d8a   c007     movff   0x7, 0xc         	MOVFF	r0x07, r0x0c
005d8c   f00c
005d8e   6a0d     clrf    0xd, 0           	CLRF	r0x0d
005d90   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
005d92   260a     addwf   0xa, 0x1, 0      	ADDWF	r0x0a, F
005d94   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
005d96   220b     addwfc  0xb, 0x1, 0      	ADDWFC	r0x0b, F
005d98   c008     movff   0x8, 0xc         	MOVFF	r0x08, r0x0c
005d9a   f00c
005d9c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
005d9e   260a     addwf   0xa, 0x1, 0      	ADDWF	r0x0a, F
005da0   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
005da2   220b     addwfc  0xb, 0x1, 0      	ADDWFC	r0x0b, F
005da4   c009     movff   0x9, 0xc         	MOVFF	r0x09, r0x0c
005da6   f00c
005da8   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
005daa   260a     addwf   0xa, 0x1, 0      	ADDWF	r0x0a, F
005dac   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
005dae   220b     addwfc  0xb, 0x1, 0      	ADDWFC	r0x0b, F
005db0   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
005db2   e105     bnz     0x5dbe           	BNZ	_01487_DS_
005db4   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
005db6   e103     bnz     0x5dbe           	BNZ	_01487_DS_
005db8   6a0a     clrf    0xa, 0           	CLRF	r0x0a
005dba   2a0a     incf    0xa, 0x1, 0      	INCF	r0x0a, F
005dbc   d001     bra     0x5dc0           	BRA	_01488_DS_
                                           _01487_DS_:
005dbe   6a0a     clrf    0xa, 0           	CLRF	r0x0a
                                           _01488_DS_:
005dc0   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
005dc2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dc4   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
005dc6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dc8   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
005dca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dcc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
005dce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dd0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
005dd2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dd4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
005dd6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dd8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
005dda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005ddc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
005dde   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005de0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005de2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005de4   68e5     setf    0xe5, 0          	SETF	POSTDEC1
005de6   5000     movf    0, 0, 0          	MOVF	r0x00, W
005de8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dea   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
005dec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005dee   ec61     call    0x54c2, 0        	CALL	_init
005df0   f02a
005df2   0e0c     movlw   0xc              	MOVLW	0x0c
005df4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
005df6   cfe4     movff   0xfe4, 0xd       	MOVFF	PREINC1, r0x0d
005df8   f00d
005dfa   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
005dfc   f00c
005dfe   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
005e00   f00b
005e02   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
005e04   f00a
005e06   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
005e08   f009
005e0a   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
005e0c   f008
005e0e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
005e10   f007
005e12   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
005e14   f006
005e16   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
005e18   f005
005e1a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
005e1c   f004
005e1e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
005e20   f003
005e22   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
005e24   f002
005e26   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005e28   f001
005e2a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005e2c   f000
005e2e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005e30   ffd9
005e32   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init	code
                                           _init:
                                           ;	.line	299; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void init(uint8_t fourbitmode, uint8_t rs, uint8_t rw, uint8_t enable, 
0054c2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0054c4   ffe5
0054c6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0054c8   ffd9
0054ca   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0054cc   ffe5
0054ce   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0054d0   ffe5
0054d2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0054d4   ffe5
0054d6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0054d8   ffe5
0054da   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0054dc   ffe5
0054de   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0054e0   ffe5
0054e2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0054e4   ffe5
0054e6   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0054e8   ffe5
0054ea   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0054ec   ffe5
0054ee   0e02     movlw   0x2              	MOVLW	0x02
0054f0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0054f2   f000
0054f4   0e03     movlw   0x3              	MOVLW	0x03
0054f6   cfdb     movff   0xfdb, 0x351     	MOVFF	PLUSW2, __rs_pin
0054f8   f351
0054fa   0e04     movlw   0x4              	MOVLW	0x04
0054fc   cfdb     movff   0xfdb, 0x352     	MOVFF	PLUSW2, __rw_pin
0054fe   f352
005500   0e05     movlw   0x5              	MOVLW	0x05
005502   cfdb     movff   0xfdb, 0x353     	MOVFF	PLUSW2, __enable_pin
005504   f353
005506   0e06     movlw   0x6              	MOVLW	0x06
005508   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00550a   f001
00550c   0e07     movlw   0x7              	MOVLW	0x07
00550e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
005510   f002
005512   0e08     movlw   0x8              	MOVLW	0x08
005514   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
005516   f003
005518   0e09     movlw   0x9              	MOVLW	0x09
00551a   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
00551c   f004
00551e   0e0a     movlw   0xa              	MOVLW	0x0a
005520   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
005522   f005
005524   0e0b     movlw   0xb              	MOVLW	0x0b
005526   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
005528   f006
00552a   0e0c     movlw   0xc              	MOVLW	0x0c
00552c   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
00552e   f007
005530   0e0d     movlw   0xd              	MOVLW	0x0d
005532   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
005534   f008
                                           ;	.line	307; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[0] = d0;
005536   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005538   0103     movlb   0x3              	BANKSEL	__data_pins
00553a   6f62     movwf   0x62, 0x1        	MOVWF	__data_pins, B
                                           ;	.line	308; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[1] = d1;
00553c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
00553e   6f63     movwf   0x63, 0x1        	MOVWF	(__data_pins + 1), B
                                           ;	.line	309; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[2] = d2;
005540   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
005542   6f64     movwf   0x64, 0x1        	MOVWF	(__data_pins + 2), B
                                           ;	.line	310; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[3] = d3; 
005544   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
005546   6f65     movwf   0x65, 0x1        	MOVWF	(__data_pins + 3), B
                                           ;	.line	311; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[4] = d4;
005548   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
                                           ; removed redundant BANKSEL
00554a   6f66     movwf   0x66, 0x1        	MOVWF	(__data_pins + 4), B
                                           ;	.line	312; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[5] = d5;
00554c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
                                           ; removed redundant BANKSEL
00554e   6f67     movwf   0x67, 0x1        	MOVWF	(__data_pins + 5), B
                                           ;	.line	313; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[6] = d6;
005550   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
                                           ; removed redundant BANKSEL
005552   6f68     movwf   0x68, 0x1        	MOVWF	(__data_pins + 6), B
                                           ;	.line	314; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_data_pins[7] = d7; 
005554   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
                                           ; removed redundant BANKSEL
005556   6f69     movwf   0x69, 0x1        	MOVWF	(__data_pins + 7), B
                                           ;	.line	316; /home/valentin/.icaro/firmware/tmp/lcdlib.c	pinmode(_rs_pin, OUTPUT);
005558   c351     movff   0x351, 0x1       	MOVFF	__rs_pin, r0x01
00555a   f001
00555c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00555e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005560   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005562   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005564   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005566   eca2     call    0x4344, 0        	CALL	_pinmode
005568   f021
00556a   0e04     movlw   0x4              	MOVLW	0x04
00556c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/lcdlib.c	pinmode(_enable_pin, OUTPUT);
00556e   c353     movff   0x353, 0x1       	MOVFF	__enable_pin, r0x01
005570   f001
005572   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005574   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005576   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005578   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00557a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00557c   eca2     call    0x4344, 0        	CALL	_pinmode
00557e   f021
005580   0e04     movlw   0x4              	MOVLW	0x04
005582   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	320; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (fourbitmode){
005584   5000     movf    0, 0, 0          	MOVF	r0x00, W
005586   e023     bz      0x55ce           	BZ	_01457_DS_
005588   0103     movlb   0x3              	BANKSEL	__displayfunction
                                           ;	.line	321; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displayfunction = LCD_4BITMODE | LCD_1LINE | LCD_5x8DOTS;
00558a   6bd1     clrf    0xd1, 0x1        	CLRF	__displayfunction, B
                                           ;	.line	322; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 4; i++) {
00558c   6a00     clrf    0, 0             	CLRF	r0x00
00558e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01459_DS_:
                                           ;	.line	323; /home/valentin/.icaro/firmware/tmp/lcdlib.c	pinmode(_data_pins[i], OUTPUT);
005590   0e62     movlw   0x62             	MOVLW	LOW(__data_pins)
005592   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
005594   6e02     movwf   0x2, 0           	MOVWF	r0x02
005596   0e03     movlw   0x3              	MOVLW	HIGH(__data_pins)
005598   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00559a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00559c   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
00559e   ffe9
0055a0   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0055a2   ffea
0055a4   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0055a6   f002
0055a8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0055aa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0055ac   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0055ae   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0055b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0055b2   eca2     call    0x4344, 0        	CALL	_pinmode
0055b4   f021
0055b6   0e04     movlw   0x4              	MOVLW	0x04
0055b8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	322; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 4; i++) {
0055ba   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
0055bc   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
0055be   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0055c0   0f80     addlw   0x80             	ADDLW	0x80
0055c2   0f80     addlw   0x80             	ADDLW	0x80
0055c4   e102     bnz     0x55ca           	BNZ	_01479_DS_
0055c6   0e04     movlw   0x4              	MOVLW	0x04
0055c8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _01479_DS_:
0055ca   e3e2     bnc     0x5590           	BNC	_01459_DS_
0055cc   d023     bra     0x5614           	BRA	_01463_DS_
                                           _01457_DS_:
                                           ;	.line	327; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displayfunction = LCD_8BITMODE | LCD_1LINE | LCD_5x8DOTS;
0055ce   0e10     movlw   0x10             	MOVLW	0x10
0055d0   0103     movlb   0x3              	BANKSEL	__displayfunction
0055d2   6fd1     movwf   0xd1, 0x1        	MOVWF	__displayfunction, B
                                           ;	.line	328; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 8; i++) {
0055d4   6a00     clrf    0, 0             	CLRF	r0x00
0055d6   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01461_DS_:
                                           ;	.line	329; /home/valentin/.icaro/firmware/tmp/lcdlib.c	pinmode(_data_pins[i], OUTPUT);
0055d8   0e62     movlw   0x62             	MOVLW	LOW(__data_pins)
0055da   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0055dc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0055de   0e03     movlw   0x3              	MOVLW	HIGH(__data_pins)
0055e0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0055e2   6e03     movwf   0x3, 0           	MOVWF	r0x03
0055e4   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0055e6   ffe9
0055e8   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
0055ea   ffea
0055ec   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
0055ee   f002
0055f0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0055f2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0055f4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0055f6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0055f8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0055fa   eca2     call    0x4344, 0        	CALL	_pinmode
0055fc   f021
0055fe   0e04     movlw   0x4              	MOVLW	0x04
005600   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	328; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 8; i++) {
005602   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
005604   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
005606   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005608   0f80     addlw   0x80             	ADDLW	0x80
00560a   0f80     addlw   0x80             	ADDLW	0x80
00560c   e102     bnz     0x5612           	BNZ	_01480_DS_
00560e   0e08     movlw   0x8              	MOVLW	0x08
005610   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _01480_DS_:
005612   e3e2     bnc     0x55d8           	BNC	_01461_DS_
                                           _01463_DS_:
005614   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
005616   f008
005618   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00561a   f007
00561c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00561e   f006
005620   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
005622   f005
005624   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
005626   f004
005628   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00562a   f003
00562c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00562e   f002
005630   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005632   f001
005634   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005636   f000
005638   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00563a   ffd9
00563c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__begin	code
                                           _begin:
                                           ;	.line	225; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void begin(uint8_t lines, uint8_t dotsize) {
005922   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005924   ffe5
005926   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005928   ffd9
00592a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00592c   ffe5
00592e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005930   ffe5
005932   0e02     movlw   0x2              	MOVLW	0x02
005934   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005936   f000
005938   0e03     movlw   0x3              	MOVLW	0x03
00593a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00593c   f001
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (lines > 1) {
00593e   0e02     movlw   0x2              	MOVLW	0x02
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_01423_DS_
                                           ; #	BSF	__displayfunction, 3, B
                                           ; #	MOVFF	r0x00, __numlines
                                           ;	.line	227; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displayfunction |= LCD_2LINE;
005940   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	229; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_numlines = lines;
005942   e302     bnc     0x5948           	BNC	_11660_DS_
005944   0103     movlb   0x3              	BANKSEL	__displayfunction
005946   87d1     bsf     0xd1, 0x3, 0x1   	BSF	__displayfunction, 3, B
                                           _11660_DS_:
005948   c000     movff   0, 0x3d2         	MOVFF	r0x00, __numlines
00594a   f3d2
00594c   0103     movlb   0x3              	BANKSEL	__currline
                                           ;	.line	230; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_currline = 0;
00594e   6bcc     clrf    0xcc, 0x1        	CLRF	__currline, B
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if ((dotsize != 0) && (lines == 1)) {
005950   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005952   e005     bz      0x595e           	BZ	_01425_DS_
005954   5000     movf    0, 0, 0          	MOVF	r0x00, W
005956   0a01     xorlw   0x1              	XORLW	0x01
005958   e102     bnz     0x595e           	BNZ	_01425_DS_
                                           _01447_DS_:
00595a   0103     movlb   0x3              	BANKSEL	__displayfunction
                                           ;	.line	234; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displayfunction |= LCD_5x10DOTS;
00595c   85d1     bsf     0xd1, 0x2, 0x1   	BSF	__displayfunction, 2, B
                                           _01425_DS_:
                                           ;	.line	237; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(50000); //Pinguino needs it? long delay on startup time!
00595e   0ec3     movlw   0xc3             	MOVLW	0xc3
005960   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005962   0e50     movlw   0x50             	MOVLW	0x50
005964   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005966   ec7d     call    0x74fa, 0        	CALL	_Delayus
005968   f03a
00596a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00596c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	239; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_rs_pin, LOW);
00596e   c351     movff   0x351, 0         	MOVFF	__rs_pin, r0x00
005970   f000
005972   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005974   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005976   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005978   5000     movf    0, 0, 0          	MOVF	r0x00, W
00597a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00597c   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
00597e   f022
005980   0e04     movlw   0x4              	MOVLW	0x04
005982   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	240; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_enable_pin, LOW);
005984   c353     movff   0x353, 0         	MOVFF	__enable_pin, r0x00
005986   f000
005988   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00598a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00598c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00598e   5000     movf    0, 0, 0          	MOVF	r0x00, W
005990   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005992   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
005994   f022
005996   0e04     movlw   0x4              	MOVLW	0x04
005998   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00599a   0103     movlb   0x3              	BANKSEL	__displayfunction
                                           ;	.line	243; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (! (_displayfunction & LCD_8BITMODE)) {
00599c   b9d1     btfsc   0xd1, 0x4, 0x1   	BTFSC	__displayfunction, 4, B
00599e   d02c     bra     0x59f8           	BRA	_01428_DS_
                                           ;	.line	248; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write4bits(0x03);
0059a0   0e03     movlw   0x3              	MOVLW	0x03
0059a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059a4   ec74     call    0x6ce8, 0        	CALL	_write4bits
0059a6   f036
0059a8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	249; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(4500); // wait min 4.1ms
0059aa   0e11     movlw   0x11             	MOVLW	0x11
0059ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059ae   0e94     movlw   0x94             	MOVLW	0x94
0059b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059b2   ec7d     call    0x74fa, 0        	CALL	_Delayus
0059b4   f03a
0059b6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0059b8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	252; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write4bits(0x03);
0059ba   0e03     movlw   0x3              	MOVLW	0x03
0059bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059be   ec74     call    0x6ce8, 0        	CALL	_write4bits
0059c0   f036
0059c2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	253; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(4500); // wait min 4.1ms
0059c4   0e11     movlw   0x11             	MOVLW	0x11
0059c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059c8   0e94     movlw   0x94             	MOVLW	0x94
0059ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059cc   ec7d     call    0x74fa, 0        	CALL	_Delayus
0059ce   f03a
0059d0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0059d2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	256; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write4bits(0x03); 
0059d4   0e03     movlw   0x3              	MOVLW	0x03
0059d6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059d8   ec74     call    0x6ce8, 0        	CALL	_write4bits
0059da   f036
0059dc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	257; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(150);
0059de   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0059e0   0e96     movlw   0x96             	MOVLW	0x96
0059e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059e4   ec7d     call    0x74fa, 0        	CALL	_Delayus
0059e6   f03a
0059e8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0059ea   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	260; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write4bits(0x02); 
0059ec   0e02     movlw   0x2              	MOVLW	0x02
0059ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0059f0   ec74     call    0x6ce8, 0        	CALL	_write4bits
0059f2   f036
0059f4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0059f6   d024     bra     0x5a40           	BRA	_01429_DS_
                                           _01428_DS_:
                                           ;	.line	266; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_FUNCTIONSET | _displayfunction);
0059f8   0e20     movlw   0x20             	MOVLW	0x20
0059fa   0103     movlb   0x3              	BANKSEL	__displayfunction
0059fc   11d1     iorwf   0xd1, 0, 0x1     	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0059fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a00   ecab     call    0x7756, 0        	CALL	_command
005a02   f03b
005a04   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	267; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(4500);  // wait more than 4.1ms
005a06   0e11     movlw   0x11             	MOVLW	0x11
005a08   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a0a   0e94     movlw   0x94             	MOVLW	0x94
005a0c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a0e   ec7d     call    0x74fa, 0        	CALL	_Delayus
005a10   f03a
005a12   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
005a14   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	270; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_FUNCTIONSET | _displayfunction);
005a16   0e20     movlw   0x20             	MOVLW	0x20
005a18   0103     movlb   0x3              	BANKSEL	__displayfunction
005a1a   11d1     iorwf   0xd1, 0, 0x1     	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005a1c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a1e   ecab     call    0x7756, 0        	CALL	_command
005a20   f03b
005a22   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	271; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(150);
005a24   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
005a26   0e96     movlw   0x96             	MOVLW	0x96
005a28   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a2a   ec7d     call    0x74fa, 0        	CALL	_Delayus
005a2c   f03a
005a2e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
005a30   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_FUNCTIONSET | _displayfunction);
005a32   0e20     movlw   0x20             	MOVLW	0x20
005a34   0103     movlb   0x3              	BANKSEL	__displayfunction
005a36   11d1     iorwf   0xd1, 0, 0x1     	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005a38   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a3a   ecab     call    0x7756, 0        	CALL	_command
005a3c   f03b
005a3e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _01429_DS_:
                                           ;	.line	278; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_FUNCTIONSET | _displayfunction);  
005a40   0e20     movlw   0x20             	MOVLW	0x20
005a42   0103     movlb   0x3              	BANKSEL	__displayfunction
005a44   11d1     iorwf   0xd1, 0, 0x1     	IORWF	__displayfunction, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005a46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a48   ecab     call    0x7756, 0        	CALL	_command
005a4a   f03b
005a4c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	281; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol = LCD_DISPLAYON | LCD_CURSOROFF | LCD_BLINKOFF;  
005a4e   0e04     movlw   0x4              	MOVLW	0x04
005a50   0103     movlb   0x3              	BANKSEL	__displaycontrol
005a52   6fd3     movwf   0xd3, 0x1        	MOVWF	__displaycontrol, B
                                           ;	.line	282; /home/valentin/.icaro/firmware/tmp/lcdlib.c	display();
005a54   eca6     call    0x794c, 0        	CALL	_display
005a56   f03c
                                           ;	.line	285; /home/valentin/.icaro/firmware/tmp/lcdlib.c	clear();
005a58   ec5a     call    0x78b4, 0        	CALL	_clear
005a5a   f03c
                                           ;	.line	288; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaymode = LCD_ENTRYLEFT | LCD_ENTRYSHIFTDECREMENT;
005a5c   0e02     movlw   0x2              	MOVLW	0x02
005a5e   0103     movlb   0x3              	BANKSEL	__displaymode
005a60   6fd4     movwf   0xd4, 0x1        	MOVWF	__displaymode, B
                                           ;	.line	290; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_ENTRYMODESET | _displaymode);
005a62   0e06     movlw   0x6              	MOVLW	0x06
005a64   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005a66   ecab     call    0x7756, 0        	CALL	_command
005a68   f03b
005a6a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
005a6c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005a6e   f001
005a70   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005a72   f000
005a74   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005a76   ffd9
005a78   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__noAutoscroll	code
                                           _noAutoscroll:
                                           ;	.line	219; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void noAutoscroll(void) {
0077ca   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0077cc   ffe5
0077ce   0103     movlb   0x3              	BANKSEL	__displaymode
                                           ;	.line	220; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaymode &= ~LCD_ENTRYSHIFTINCREMENT;
0077d0   51d4     movf    0xd4, 0, 0x1     	MOVF	__displaymode, W, B
0077d2   6e00     movwf   0, 0             	MOVWF	r0x00
0077d4   0efe     movlw   0xfe             	MOVLW	0xfe
0077d6   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
                                           ; removed redundant BANKSEL
0077d8   6fd4     movwf   0xd4, 0x1        	MOVWF	__displaymode, B
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_ENTRYMODESET | _displaymode);
0077da   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0077dc   11d4     iorwf   0xd4, 0, 0x1     	IORWF	__displaymode, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0077de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0077e0   ecab     call    0x7756, 0        	CALL	_command
0077e2   f03b
0077e4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0077e6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0077e8   f000
0077ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__autoscroll	code
                                           _autoscroll:
007904   0103     movlb   0x3              	BANKSEL	__displaymode
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaymode |= LCD_ENTRYSHIFTINCREMENT;
007906   81d4     bsf     0xd4, 0, 0x1     	BSF	__displaymode, 0, B
                                           ;	.line	215; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_ENTRYMODESET | _displaymode);
007908   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00790a   11d4     iorwf   0xd4, 0, 0x1     	IORWF	__displaymode, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00790c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00790e   ecab     call    0x7756, 0        	CALL	_command
007910   f03b
007912   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007914   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__rightToLeft	code
                                           _rightToLeft:
                                           ;	.line	207; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void rightToLeft(void) {
0077ec   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0077ee   ffe5
0077f0   0103     movlb   0x3              	BANKSEL	__displaymode
                                           ;	.line	208; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaymode &= ~LCD_ENTRYLEFT;
0077f2   51d4     movf    0xd4, 0, 0x1     	MOVF	__displaymode, W, B
0077f4   6e00     movwf   0, 0             	MOVWF	r0x00
0077f6   0efd     movlw   0xfd             	MOVLW	0xfd
0077f8   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
                                           ; removed redundant BANKSEL
0077fa   6fd4     movwf   0xd4, 0x1        	MOVWF	__displaymode, B
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_ENTRYMODESET | _displaymode);
0077fc   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
0077fe   11d4     iorwf   0xd4, 0, 0x1     	IORWF	__displaymode, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007800   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007802   ecab     call    0x7756, 0        	CALL	_command
007804   f03b
007806   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007808   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00780a   f000
00780c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__leftToRight	code
                                           _leftToRight:
007916   0103     movlb   0x3              	BANKSEL	__displaymode
                                           ;	.line	202; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaymode |= LCD_ENTRYLEFT;
007918   83d4     bsf     0xd4, 0x1, 0x1   	BSF	__displaymode, 1, B
                                           ;	.line	203; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_ENTRYMODESET | _displaymode);
00791a   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00791c   11d4     iorwf   0xd4, 0, 0x1     	IORWF	__displaymode, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00791e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007920   ecab     call    0x7756, 0        	CALL	_command
007922   f03b
007924   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007926   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__scrollDisplayRight	code
                                           _scrollDisplayRight:
                                           ;	.line	197; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVERIGHT);
00798c   0e1c     movlw   0x1c             	MOVLW	0x1c
00798e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007990   ecab     call    0x7756, 0        	CALL	_command
007992   f03b
007994   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007996   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__scrollDisplayLeft	code
                                           _scrollDisplayLeft:
                                           ;	.line	194; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_CURSORSHIFT | LCD_DISPLAYMOVE | LCD_MOVELEFT);
007998   0e18     movlw   0x18             	MOVLW	0x18
00799a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00799c   ecab     call    0x7756, 0        	CALL	_command
00799e   f03b
0079a0   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0079a2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__blink	code
                                           _blink:
007928   0103     movlb   0x3              	BANKSEL	__displaycontrol
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol |= LCD_BLINKON;
00792a   81d3     bsf     0xd3, 0, 0x1     	BSF	__displaycontrol, 0, B
                                           ;	.line	189; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_DISPLAYCONTROL | _displaycontrol);
00792c   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
00792e   11d3     iorwf   0xd3, 0, 0x1     	IORWF	__displaycontrol, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007930   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007932   ecab     call    0x7756, 0        	CALL	_command
007934   f03b
007936   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007938   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__noBlink	code
                                           _noBlink:
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void noBlink() {
00780e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007810   ffe5
007812   0103     movlb   0x3              	BANKSEL	__displaycontrol
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol &= ~LCD_BLINKON;
007814   51d3     movf    0xd3, 0, 0x1     	MOVF	__displaycontrol, W, B
007816   6e00     movwf   0, 0             	MOVWF	r0x00
007818   0efe     movlw   0xfe             	MOVLW	0xfe
00781a   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
                                           ; removed redundant BANKSEL
00781c   6fd3     movwf   0xd3, 0x1        	MOVWF	__displaycontrol, B
                                           ;	.line	185; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_DISPLAYCONTROL | _displaycontrol);
00781e   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
007820   11d3     iorwf   0xd3, 0, 0x1     	IORWF	__displaycontrol, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007822   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007824   ecab     call    0x7756, 0        	CALL	_command
007826   f03b
007828   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00782a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00782c   f000
00782e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__cursor	code
                                           _cursor:
00793a   0103     movlb   0x3              	BANKSEL	__displaycontrol
                                           ;	.line	178; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol |= LCD_CURSORON;
00793c   83d3     bsf     0xd3, 0x1, 0x1   	BSF	__displaycontrol, 1, B
                                           ;	.line	179; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_DISPLAYCONTROL | _displaycontrol);
00793e   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
007940   11d3     iorwf   0xd3, 0, 0x1     	IORWF	__displaycontrol, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007942   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007944   ecab     call    0x7756, 0        	CALL	_command
007946   f03b
007948   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00794a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__noCursor	code
                                           _noCursor:
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void noCursor() {
007830   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007832   ffe5
007834   0103     movlb   0x3              	BANKSEL	__displaycontrol
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol &= ~LCD_CURSORON;
007836   51d3     movf    0xd3, 0, 0x1     	MOVF	__displaycontrol, W, B
007838   6e00     movwf   0, 0             	MOVWF	r0x00
00783a   0efd     movlw   0xfd             	MOVLW	0xfd
00783c   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
                                           ; removed redundant BANKSEL
00783e   6fd3     movwf   0xd3, 0x1        	MOVWF	__displaycontrol, B
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_DISPLAYCONTROL | _displaycontrol);
007840   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
007842   11d3     iorwf   0xd3, 0, 0x1     	IORWF	__displaycontrol, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007844   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007846   ecab     call    0x7756, 0        	CALL	_command
007848   f03b
00784a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00784c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00784e   f000
007850   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__display	code
                                           _display:
00794c   0103     movlb   0x3              	BANKSEL	__displaycontrol
                                           ;	.line	168; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol |= LCD_DISPLAYON;
00794e   85d3     bsf     0xd3, 0x2, 0x1   	BSF	__displaycontrol, 2, B
                                           ;	.line	169; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_DISPLAYCONTROL | _displaycontrol);
007950   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
007952   11d3     iorwf   0xd3, 0, 0x1     	IORWF	__displaycontrol, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007954   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007956   ecab     call    0x7756, 0        	CALL	_command
007958   f03b
00795a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00795c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__noDisplay	code
                                           _noDisplay:
                                           ;	.line	163; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void noDisplay() {
007852   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007854   ffe5
007856   0103     movlb   0x3              	BANKSEL	__displaycontrol
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/lcdlib.c	_displaycontrol &= ~LCD_DISPLAYON;
007858   51d3     movf    0xd3, 0, 0x1     	MOVF	__displaycontrol, W, B
00785a   6e00     movwf   0, 0             	MOVWF	r0x00
00785c   0efb     movlw   0xfb             	MOVLW	0xfb
00785e   1400     andwf   0, 0, 0          	ANDWF	r0x00, W
                                           ; removed redundant BANKSEL
007860   6fd3     movwf   0xd3, 0x1        	MOVWF	__displaycontrol, B
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_DISPLAYCONTROL | _displaycontrol);
007862   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
007864   11d3     iorwf   0xd3, 0, 0x1     	IORWF	__displaycontrol, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
007866   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007868   ecab     call    0x7756, 0        	CALL	_command
00786a   f03b
00786c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00786e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
007870   f000
007872   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__clear	code
                                           _clear:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_CLEARDISPLAY);  // clear display, set cursor position to zero
0078b4   0e01     movlw   0x1              	MOVLW	0x01
0078b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0078b8   ecab     call    0x7756, 0        	CALL	_command
0078ba   f03b
0078bc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	159; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(2000);  // this command takes a long time!
0078be   0e07     movlw   0x7              	MOVLW	0x07
0078c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0078c2   0ed0     movlw   0xd0             	MOVLW	0xd0
0078c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0078c6   ec7d     call    0x74fa, 0        	CALL	_Delayus
0078c8   f03a
0078ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0078cc   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0078ce   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__home	code
                                           _home:
                                           ;	.line	152; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_RETURNHOME);
0078d0   0e02     movlw   0x2              	MOVLW	0x02
0078d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0078d4   ecab     call    0x7756, 0        	CALL	_command
0078d6   f03b
0078d8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	153; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(2000);
0078da   0e07     movlw   0x7              	MOVLW	0x07
0078dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0078de   0ed0     movlw   0xd0             	MOVLW	0xd0
0078e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0078e2   ec7d     call    0x74fa, 0        	CALL	_Delayus
0078e4   f03a
0078e6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0078e8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0078ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__printFloat	code
                                           _printFloat:
                                           ;	.line	114; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void printFloat(float number, uint8_t digits) { 
003d0e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003d10   ffe5
003d12   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003d14   ffd9
003d16   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003d18   ffe5
003d1a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003d1c   ffe5
003d1e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003d20   ffe5
003d22   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003d24   ffe5
003d26   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003d28   ffe5
003d2a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003d2c   ffe5
003d2e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003d30   ffe5
003d32   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003d34   ffe5
003d36   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003d38   ffe5
003d3a   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
003d3c   ffe5
003d3e   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
003d40   ffe5
003d42   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
003d44   ffe5
003d46   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
003d48   ffe5
003d4a   0e02     movlw   0x2              	MOVLW	0x02
003d4c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003d4e   f000
003d50   0e03     movlw   0x3              	MOVLW	0x03
003d52   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003d54   f001
003d56   0e04     movlw   0x4              	MOVLW	0x04
003d58   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003d5a   f002
003d5c   0e05     movlw   0x5              	MOVLW	0x05
003d5e   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003d60   f003
003d62   0e06     movlw   0x6              	MOVLW	0x06
003d64   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003d66   f004
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (number < 0.0) {
003d68   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d6a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d6c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d6e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d70   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003d72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d74   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003d76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d78   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003d7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d7c   5000     movf    0, 0, 0          	MOVF	r0x00, W
003d7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d80   eccb     call    0x6196, 0        	CALL	___fslt
003d82   f030
003d84   6e05     movwf   0x5, 0           	MOVWF	r0x05
003d86   0e08     movlw   0x8              	MOVLW	0x08
003d88   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003d8a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003d8c   e006     bz      0x3d9a           	BZ	_01315_DS_
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write('-');
003d8e   0e2d     movlw   0x2d             	MOVLW	0x2d
003d90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003d92   ece3     call    0x3fc6, 0        	CALL	_write
003d94   f01f
003d96   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	122; /home/valentin/.icaro/firmware/tmp/lcdlib.c	number = -number;
003d98   7e03     btg     0x3, 0x7, 0      	BTG	r0x03, 7
                                           _01315_DS_:
                                           ;	.line	126; /home/valentin/.icaro/firmware/tmp/lcdlib.c	rounding = 0.5;
003d9a   6a05     clrf    0x5, 0           	CLRF	r0x05
003d9c   6a06     clrf    0x6, 0           	CLRF	r0x06
003d9e   6a07     clrf    0x7, 0           	CLRF	r0x07
003da0   0e3f     movlw   0x3f             	MOVLW	0x3f
003da2   6e08     movwf   0x8, 0           	MOVWF	r0x08
                                           ;	.line	127; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i=0; i<digits; ++i)
003da4   6a09     clrf    0x9, 0           	CLRF	r0x09
                                           _01323_DS_:
003da6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003da8   5c09     subwf   0x9, 0, 0        	SUBWF	r0x09, W
003daa   e21b     bc      0x3de2           	BC	_01316_DS_
                                           ;	.line	128; /home/valentin/.icaro/firmware/tmp/lcdlib.c	rounding /= 10.0;
003dac   0e41     movlw   0x41             	MOVLW	0x41
003dae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003db0   0e20     movlw   0x20             	MOVLW	0x20
003db2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003db4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003db6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003db8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003dba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dbc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003dbe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dc0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003dc2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dc4   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003dc6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dc8   ec43     call    0x3686, 0        	CALL	___fsdiv
003dca   f01b
003dcc   6e05     movwf   0x5, 0           	MOVWF	r0x05
003dce   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003dd0   f006
003dd2   cff4     movff   0xff4, 0x7       	MOVFF	PRODH, r0x07
003dd4   f007
003dd6   cfe9     movff   0xfe9, 0x8       	MOVFF	FSR0L, r0x08
003dd8   f008
003dda   0e08     movlw   0x8              	MOVLW	0x08
003ddc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	127; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i=0; i<digits; ++i)
003dde   2a09     incf    0x9, 0x1, 0      	INCF	r0x09, F
003de0   d7e2     bra     0x3da6           	BRA	_01323_DS_
                                           _01316_DS_:
                                           ;	.line	130; /home/valentin/.icaro/firmware/tmp/lcdlib.c	number += rounding;
003de2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003de4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003de6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003de8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dea   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003dec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dee   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003df0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003df2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003df4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003df6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003df8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dfa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003dfc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dfe   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e02   ecd8     call    0x2bb0, 0        	CALL	___fsadd
003e04   f015
003e06   6e00     movwf   0, 0             	MOVWF	r0x00
003e08   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003e0a   f001
003e0c   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003e0e   f002
003e10   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003e12   f003
003e14   0e08     movlw   0x8              	MOVLW	0x08
003e16   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/lcdlib.c	int_part = (unsigned long)number;
003e18   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003e1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e1c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e20   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003e22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e24   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e28   ecd7     call    0x65ae, 0        	CALL	___fs2ulong
003e2a   f032
003e2c   6e05     movwf   0x5, 0           	MOVWF	r0x05
003e2e   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003e30   f006
003e32   cff4     movff   0xff4, 0x7       	MOVFF	PRODH, r0x07
003e34   f007
003e36   cfe9     movff   0xfe9, 0x8       	MOVFF	FSR0L, r0x08
003e38   f008
003e3a   0e04     movlw   0x4              	MOVLW	0x04
003e3c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	134; /home/valentin/.icaro/firmware/tmp/lcdlib.c	remainder = number - (float)int_part;
003e3e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003e40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e42   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003e44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e46   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003e48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e4a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003e4c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e4e   ec1f     call    0x563e, 0        	CALL	___ulong2fs
003e50   f02b
003e52   6e09     movwf   0x9, 0           	MOVWF	r0x09
003e54   cff3     movff   0xff3, 0xa       	MOVFF	PRODL, r0x0a
003e56   f00a
003e58   cff4     movff   0xff4, 0xb       	MOVFF	PRODH, r0x0b
003e5a   f00b
003e5c   cfe9     movff   0xfe9, 0xc       	MOVFF	FSR0L, r0x0c
003e5e   f00c
003e60   0e04     movlw   0x4              	MOVLW	0x04
003e62   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003e64   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
003e66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e68   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
003e6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e6c   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
003e6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e70   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
003e72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e74   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003e76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e78   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e7c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003e7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e80   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e82   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e84   ec3d     call    0x5a7a, 0        	CALL	___fssub
003e86   f02d
003e88   6e00     movwf   0, 0             	MOVWF	r0x00
003e8a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003e8c   f001
003e8e   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003e90   f002
003e92   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003e94   f003
003e96   0e08     movlw   0x8              	MOVLW	0x08
003e98   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/lcdlib.c	printNumber(int_part, 10);
003e9a   0e0a     movlw   0xa              	MOVLW	0x0a
003e9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e9e   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003ea0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ea2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003ea4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ea6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003ea8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003eaa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003eac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003eae   ec7f     call    0x52fe, 0        	CALL	_printNumber
003eb0   f029
003eb2   0e05     movlw   0x5              	MOVLW	0x05
003eb4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (digits > 0)
003eb6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003eb8   e005     bz      0x3ec4           	BZ	_01319_DS_
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write('.'); 
003eba   0e2e     movlw   0x2e             	MOVLW	0x2e
003ebc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ebe   ece3     call    0x3fc6, 0        	CALL	_write
003ec0   f01f
003ec2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _01319_DS_:
                                           ;	.line	142; /home/valentin/.icaro/firmware/tmp/lcdlib.c	while (digits-- > 0) {
003ec4   c004     movff   0x4, 0x5         	MOVFF	r0x04, r0x05
003ec6   f005
003ec8   0604     decf    0x4, 0x1, 0      	DECF	r0x04, F
003eca   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003ecc   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003ece   d05e     bra     0x3f8c           	BRA	_01325_DS_
                                           ;	.line	143; /home/valentin/.icaro/firmware/tmp/lcdlib.c	remainder *= 10.0;
003ed0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003ed2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ed4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ed6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ed8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003eda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003edc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003ede   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ee0   0e41     movlw   0x41             	MOVLW	0x41
003ee2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ee4   0e20     movlw   0x20             	MOVLW	0x20
003ee6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ee8   0e00     movlw   0                	MOVLW	0x00
003eea   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003eec   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003eee   ec79     call    0x32f2, 0        	CALL	___fsmul
003ef0   f019
003ef2   6e00     movwf   0, 0             	MOVWF	r0x00
003ef4   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003ef6   f001
003ef8   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003efa   f002
003efc   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003efe   f003
003f00   0e08     movlw   0x8              	MOVLW	0x08
003f02   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/lcdlib.c	toPrint = (unsigned int)remainder; //Integer part without use of math.h lib, I think better! (Fazzi)
003f04   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003f06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f08   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f0c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003f0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f10   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f14   eca0     call    0x7140, 0        	CALL	___fs2uint
003f16   f038
003f18   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f1a   0e04     movlw   0x4              	MOVLW	0x04
003f1c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/lcdlib.c	printNumber(toPrint, 10);
003f1e   c005     movff   0x5, 0x6         	MOVFF	r0x05, r0x06
003f20   f006
003f22   0e0a     movlw   0xa              	MOVLW	0x0a
003f24   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f26   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003f28   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003f2a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003f2c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003f2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f30   ec7f     call    0x52fe, 0        	CALL	_printNumber
003f32   f029
003f34   0e05     movlw   0x5              	MOVLW	0x05
003f36   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/lcdlib.c	remainder -= toPrint; 
003f38   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003f3a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003f3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f3e   ec69     call    0x72d2, 0        	CALL	___sint2fs
003f40   f039
003f42   6e05     movwf   0x5, 0           	MOVWF	r0x05
003f44   cff3     movff   0xff3, 0x6       	MOVFF	PRODL, r0x06
003f46   f006
003f48   cff4     movff   0xff4, 0x7       	MOVFF	PRODH, r0x07
003f4a   f007
003f4c   cfe9     movff   0xfe9, 0x8       	MOVFF	FSR0L, r0x08
003f4e   f008
003f50   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003f52   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003f54   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003f56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f58   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003f5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f5c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003f5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f60   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003f62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f64   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003f66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f68   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003f6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f6c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003f6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f70   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003f74   ec3d     call    0x5a7a, 0        	CALL	___fssub
003f76   f02d
003f78   6e00     movwf   0, 0             	MOVWF	r0x00
003f7a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003f7c   f001
003f7e   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
003f80   f002
003f82   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
003f84   f003
003f86   0e08     movlw   0x8              	MOVLW	0x08
003f88   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003f8a   d79c     bra     0x3ec4           	BRA	_01319_DS_
                                           _01325_DS_:
003f8c   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
003f8e   f00c
003f90   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
003f92   f00b
003f94   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
003f96   f00a
003f98   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
003f9a   f009
003f9c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003f9e   f008
003fa0   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003fa2   f007
003fa4   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003fa6   f006
003fa8   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003faa   f005
003fac   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003fae   f004
003fb0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003fb2   f003
003fb4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003fb6   f002
003fb8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003fba   f001
003fbc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003fbe   f000
003fc0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003fc2   ffd9
003fc4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__printNumber	code
                                           _printNumber:
                                           ;	.line	93; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void printNumber(unsigned long n, uint8_t base) {  
0052fe   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005300   ffe5
005302   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005304   ffd9
005306   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005308   ffe5
00530a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00530c   ffe5
00530e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
005310   ffe5
005312   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
005314   ffe5
005316   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
005318   ffe5
00531a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00531c   ffe5
00531e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
005320   ffe5
005322   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
005324   ffe5
005326   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
005328   ffe5
00532a   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
00532c   ffe5
00532e   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
005330   ffe5
005332   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
005334   ffe5
005336   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
005338   ffe5
00533a   c00d     movff   0xd, 0xfe5       	MOVFF	r0x0d, POSTDEC1
00533c   ffe5
00533e   c00e     movff   0xe, 0xfe5       	MOVFF	r0x0e, POSTDEC1
005340   ffe5
005342   c00f     movff   0xf, 0xfe5       	MOVFF	r0x0f, POSTDEC1
005344   ffe5
005346   0e02     movlw   0x2              	MOVLW	0x02
005348   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00534a   f000
00534c   0e03     movlw   0x3              	MOVLW	0x03
00534e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
005350   f001
005352   0e04     movlw   0x4              	MOVLW	0x04
005354   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
005356   f002
005358   0e05     movlw   0x5              	MOVLW	0x05
00535a   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00535c   f003
00535e   0e06     movlw   0x6              	MOVLW	0x06
005360   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
005362   f004
                                           ;	.line	97; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (n == 0) {
005364   5000     movf    0, 0, 0          	MOVF	r0x00, W
005366   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
005368   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
00536a   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00536c   e106     bnz     0x537a           	BNZ	_01290_DS_
                                           ;	.line	98; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write('0');
00536e   0e30     movlw   0x30             	MOVLW	0x30
005370   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005372   ece3     call    0x3fc6, 0        	CALL	_write
005374   f01f
005376   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/lcdlib.c	return;
005378   d081     bra     0x547c           	BRA	_01282_DS_
                                           _01290_DS_:
                                           ;	.line	102; /home/valentin/.icaro/firmware/tmp/lcdlib.c	while (n > 0) {
00537a   6a05     clrf    0x5, 0           	CLRF	r0x05
00537c   6a06     clrf    0x6, 0           	CLRF	r0x06
00537e   6a07     clrf    0x7, 0           	CLRF	r0x07
005380   6a08     clrf    0x8, 0           	CLRF	r0x08
                                           _01275_DS_:
005382   5000     movf    0, 0, 0          	MOVF	r0x00, W
005384   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
005386   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
005388   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00538a   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00538c   d047     bra     0x541c           	BRA	_01293_DS_
                                           ;	.line	103; /home/valentin/.icaro/firmware/tmp/lcdlib.c	buf[i++] = n % base;
00538e   c005     movff   0x5, 0x9         	MOVFF	r0x05, r0x09
005390   f009
005392   c006     movff   0x6, 0xa         	MOVFF	r0x06, r0x0a
005394   f00a
005396   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
005398   e304     bnc     0x53a2           	BNC	_01308_DS_
00539a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
00539c   e302     bnc     0x53a2           	BNC	_01308_DS_
00539e   4a07     infsnz  0x7, 0x1, 0      	INFSNZ	r0x07, F
0053a0   2a08     incf    0x8, 0x1, 0      	INCF	r0x08, F
                                           _01308_DS_:
0053a2   0eca     movlw   0xca             	MOVLW	LOW(_printNumber_buf_1_260)
0053a4   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
0053a6   0e02     movlw   0x2              	MOVLW	HIGH(_printNumber_buf_1_260)
0053a8   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
0053aa   c004     movff   0x4, 0xb         	MOVFF	r0x04, r0x0b
0053ac   f00b
0053ae   6a0c     clrf    0xc, 0           	CLRF	r0x0c
0053b0   6a0d     clrf    0xd, 0           	CLRF	r0x0d
0053b2   6a0e     clrf    0xe, 0           	CLRF	r0x0e
0053b4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0053b6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0053b8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0053ba   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0053bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053be   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0053c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053c2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0053c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053c6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0053c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053ca   5000     movf    0, 0, 0          	MOVF	r0x00, W
0053cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053ce   ece7     call    0x5bce, 0        	CALL	__modulong
0053d0   f02d
0053d2   6e0f     movwf   0xf, 0           	MOVWF	r0x0f
0053d4   0e08     movlw   0x8              	MOVLW	0x08
0053d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0053d8   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
0053da   ffe9
0053dc   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
0053de   ffea
0053e0   c00f     movff   0xf, 0xfef       	MOVFF	r0x0f, INDF0
0053e2   ffef
                                           ;	.line	104; /home/valentin/.icaro/firmware/tmp/lcdlib.c	n /= base;
0053e4   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
0053e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053e8   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0053ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053ec   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0053ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053f0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0053f2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053f4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0053f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053f8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0053fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0053fc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0053fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005400   5000     movf    0, 0, 0          	MOVF	r0x00, W
005402   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005404   ecac     call    0x5f58, 0        	CALL	__divulong
005406   f02f
005408   6e00     movwf   0, 0             	MOVWF	r0x00
00540a   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00540c   f001
00540e   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
005410   f002
005412   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
005414   f003
005416   0e08     movlw   0x8              	MOVLW	0x08
005418   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00541a   d7b3     bra     0x5382           	BRA	_01275_DS_
                                           _01293_DS_:
00541c   c005     movff   0x5, 0           	MOVFF	r0x05, r0x00
00541e   f000
005420   c006     movff   0x6, 0x1         	MOVFF	r0x06, r0x01
005422   f001
005424   c007     movff   0x7, 0x2         	MOVFF	r0x07, r0x02
005426   f002
005428   c008     movff   0x8, 0x3         	MOVFF	r0x08, r0x03
00542a   f003
                                           _01280_DS_:
                                           ;	.line	107; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (; i > 0; i--)
00542c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00542e   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
005430   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
005432   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
005434   e023     bz      0x547c           	BZ	_01282_DS_
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x04
                                           ; #	DECF	r0x04, F
                                           ;	.line	108; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write((char) (buf[i - 1] < 10 ?
005436   0400     decf    0, 0, 0          	DECF	r0x00, W
005438   6e04     movwf   0x4, 0           	MOVWF	r0x04
00543a   6a05     clrf    0x5, 0           	CLRF	r0x05
00543c   0eca     movlw   0xca             	MOVLW	LOW(_printNumber_buf_1_260)
00543e   2604     addwf   0x4, 0x1, 0      	ADDWF	r0x04, F
005440   0e02     movlw   0x2              	MOVLW	HIGH(_printNumber_buf_1_260)
005442   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
005444   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
005446   ffe9
005448   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00544a   ffea
00544c   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
00544e   f004
005450   0e0a     movlw   0xa              	MOVLW	0x0a
005452   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
005454   e205     bc      0x5460           	BC	_01286_DS_
                                           ;	.line	109; /home/valentin/.icaro/firmware/tmp/lcdlib.c	'0' + buf[i - 1] :
005456   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
005458   6e05     movwf   0x5, 0           	MOVWF	r0x05
00545a   0e30     movlw   0x30             	MOVLW	0x30
00545c   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
00545e   d003     bra     0x5466           	BRA	_01287_DS_
                                           _01286_DS_:
                                           ;	.line	110; /home/valentin/.icaro/firmware/tmp/lcdlib.c	'A' + buf[i - 1] - 10));
005460   0e37     movlw   0x37             	MOVLW	0x37
005462   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
005464   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           _01287_DS_:
005466   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
005468   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00546a   ece3     call    0x3fc6, 0        	CALL	_write
00546c   f01f
00546e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	107; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (; i > 0; i--)
005470   0eff     movlw   0xff             	MOVLW	0xff
005472   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
005474   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
005476   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
005478   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00547a   d7d8     bra     0x542c           	BRA	_01280_DS_
                                           _01282_DS_:
00547c   cfe4     movff   0xfe4, 0xf       	MOVFF	PREINC1, r0x0f
00547e   f00f
005480   cfe4     movff   0xfe4, 0xe       	MOVFF	PREINC1, r0x0e
005482   f00e
005484   cfe4     movff   0xfe4, 0xd       	MOVFF	PREINC1, r0x0d
005486   f00d
005488   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
00548a   f00c
00548c   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
00548e   f00b
005490   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
005492   f00a
005494   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
005496   f009
005498   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00549a   f008
00549c   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00549e   f007
0054a0   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0054a2   f006
0054a4   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0054a6   f005
0054a8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0054aa   f004
0054ac   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0054ae   f003
0054b0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0054b2   f002
0054b4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0054b6   f001
0054b8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0054ba   f000
0054bc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0054be   ffd9
0054c0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__lcdPrint	code
                                           _lcdPrint:
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void lcdPrint(char *string) {
0070ae   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0070b0   ffe5
0070b2   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0070b4   ffd9
0070b6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0070b8   ffe5
0070ba   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0070bc   ffe5
0070be   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0070c0   ffe5
0070c2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0070c4   ffe5
0070c6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0070c8   ffe5
0070ca   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0070cc   ffe5
0070ce   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0070d0   ffe5
0070d2   0e02     movlw   0x2              	MOVLW	0x02
0070d4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0070d6   f000
0070d8   0e03     movlw   0x3              	MOVLW	0x03
0070da   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0070dc   f001
0070de   0e04     movlw   0x4              	MOVLW	0x04
0070e0   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0070e2   f002
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for( i=0; string[i]; i++) {
0070e4   6a03     clrf    0x3, 0           	CLRF	r0x03
0070e6   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _01266_DS_:
0070e8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0070ea   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0070ec   6e05     movwf   0x5, 0           	MOVWF	r0x05
0070ee   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0070f0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0070f2   6e06     movwf   0x6, 0           	MOVWF	r0x06
0070f4   6ae8     clrf    0xe8, 0          	CLRF	WREG
0070f6   be04     btfsc   0x4, 0x7, 0      	BTFSC	r0x04, 7
0070f8   68e8     setf    0xe8, 0          	SETF	WREG
0070fa   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0070fc   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0070fe   ffe9
007100   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
007102   fff3
007104   ec29     call    0x52, 0          	CALL	__gptrget1
007106   f000
007108   6e05     movwf   0x5, 0           	MOVWF	r0x05
00710a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00710c   e008     bz      0x711e           	BZ	_01268_DS_
                                           ;	.line	88; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write(string[i]);
00710e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
007110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007112   ece3     call    0x3fc6, 0        	CALL	_write
007114   f01f
007116   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for( i=0; string[i]; i++) {
007118   4a03     infsnz  0x3, 0x1, 0      	INFSNZ	r0x03, F
00711a   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
00711c   d7e5     bra     0x70e8           	BRA	_01266_DS_
                                           _01268_DS_:
00711e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
007120   f006
007122   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
007124   f005
007126   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
007128   f004
00712a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00712c   f003
00712e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
007130   f002
007132   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
007134   f001
007136   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
007138   f000
00713a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00713c   ffd9
00713e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setCursor	code
                                           _setCursor:
                                           ;	.line	76; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void setCursor(uint8_t col, uint8_t row) {
0071d0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0071d2   ffe5
0071d4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0071d6   ffd9
0071d8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0071da   ffe5
0071dc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0071de   ffe5
0071e0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0071e2   ffe5
0071e4   0e02     movlw   0x2              	MOVLW	0x02
0071e6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0071e8   f000
0071ea   0e03     movlw   0x3              	MOVLW	0x03
0071ec   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0071ee   f001
0071f0   0103     movlb   0x3              	BANKSEL	_setCursor_row_offsets_1_254
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/lcdlib.c	int row_offsets[] = { 0x00, 0x40, 0x14, 0x54 };
0071f2   6b6a     clrf    0x6a, 0x1        	CLRF	_setCursor_row_offsets_1_254, B
                                           ; removed redundant BANKSEL
0071f4   6b6b     clrf    0x6b, 0x1        	CLRF	(_setCursor_row_offsets_1_254 + 1), B
0071f6   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0071f8   6f6c     movwf   0x6c, 0x1        	MOVWF	(_setCursor_row_offsets_1_254 + 2), B
                                           ; removed redundant BANKSEL
0071fa   6b6d     clrf    0x6d, 0x1        	CLRF	(_setCursor_row_offsets_1_254 + 3), B
0071fc   0e14     movlw   0x14             	MOVLW	0x14
                                           ; removed redundant BANKSEL
0071fe   6f6e     movwf   0x6e, 0x1        	MOVWF	(_setCursor_row_offsets_1_254 + 4), B
                                           ; removed redundant BANKSEL
007200   6b6f     clrf    0x6f, 0x1        	CLRF	(_setCursor_row_offsets_1_254 + 5), B
007202   0e54     movlw   0x54             	MOVLW	0x54
                                           ; removed redundant BANKSEL
007204   6f70     movwf   0x70, 0x1        	MOVWF	(_setCursor_row_offsets_1_254 + 6), B
                                           ; removed redundant BANKSEL
007206   6b71     clrf    0x71, 0x1        	CLRF	(_setCursor_row_offsets_1_254 + 7), B
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if ( row > _numlines ) {
007208   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00720a   0103     movlb   0x3              	BANKSEL	__numlines
00720c   5dd2     subwf   0xd2, 0, 0x1     	SUBWF	__numlines, W, B
00720e   e202     bc      0x7214           	BC	_01253_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/lcdlib.c	row = _numlines-1;    // we count rows starting w/0
007210   05d2     decf    0xd2, 0, 0x1     	DECF	__numlines, W, B
007212   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; ;multiply lit val:0x02 by variable r0x01 and store in r0x01
                                           _01253_DS_:
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/lcdlib.c	command(LCD_SETDDRAMADDR | (col + row_offsets[row]));
007214   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
007216   0d02     mullw   0x2              	MULLW	0x02
007218   50f4     movf    0xf4, 0, 0       	MOVF	PRODH, W
00721a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00721c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00721e   f001
007220   0e6a     movlw   0x6a             	MOVLW	LOW(_setCursor_row_offsets_1_254)
007222   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
007224   0e03     movlw   0x3              	MOVLW	HIGH(_setCursor_row_offsets_1_254)
007226   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
007228   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00722a   ffe9
00722c   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00722e   ffea
007230   cfee     movff   0xfee, 0x1       	MOVFF	POSTINC0, r0x01
007232   f001
007234   cfef     movff   0xfef, 0x2       	MOVFF	INDF0, r0x02
007236   f002
007238   5000     movf    0, 0, 0          	MOVF	r0x00, W
00723a   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00723c   8e01     bsf     0x1, 0x7, 0      	BSF	r0x01, 7
00723e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
007240   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007242   ecab     call    0x7756, 0        	CALL	_command
007244   f03b
007246   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007248   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00724a   f002
00724c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00724e   f001
007250   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
007252   f000
007254   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007256   ffd9
007258   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__command	code
                                           _command:
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void command(uchar value) {
007756   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007758   ffe5
00775a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00775c   ffd9
00775e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007760   ffe5
007762   0e02     movlw   0x2              	MOVLW	0x02
007764   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
007766   f000
                                           ;	.line	72; /home/valentin/.icaro/firmware/tmp/lcdlib.c	send(value, LOW);
007768   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00776a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00776c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00776e   eca3     call    0x7346, 0        	CALL	_send
007770   f039
007772   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007774   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007776   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
007778   f000
00777a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00777c   ffd9
00777e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__write	code
                                           _write:
                                           ;	.line	65; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void write(uchar value) {
003fc6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003fc8   ffe5
003fca   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003fcc   ffd9
003fce   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003fd0   ffe5
003fd2   0e02     movlw   0x2              	MOVLW	0x02
003fd4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003fd6   f000
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/lcdlib.c	send(value, HIGH);
003fd8   0e01     movlw   0x1              	MOVLW	0x01
003fda   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003fdc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003fde   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003fe0   eca3     call    0x7346, 0        	CALL	_send
003fe2   f039
003fe4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003fe6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003fe8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003fea   f000
003fec   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003fee   ffd9
003ff0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__send	code
                                           _send:
                                           ;	.line	53; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void send(uint8_t value, uint8_t mode) {
007346   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007348   ffe5
00734a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00734c   ffd9
00734e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007350   ffe5
007352   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
007354   ffe5
007356   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
007358   ffe5
00735a   0e02     movlw   0x2              	MOVLW	0x02
00735c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00735e   f000
007360   0e03     movlw   0x3              	MOVLW	0x03
007362   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
007364   f001
                                           ;	.line	54; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_rs_pin, mode);
007366   c351     movff   0x351, 0x2       	MOVFF	__rs_pin, r0x02
007368   f002
00736a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00736c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00736e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007370   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
007372   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
007374   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007376   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
007378   f022
00737a   0e04     movlw   0x4              	MOVLW	0x04
00737c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00737e   0103     movlb   0x3              	BANKSEL	__displayfunction
                                           ;	.line	56; /home/valentin/.icaro/firmware/tmp/lcdlib.c	if (_displayfunction & LCD_8BITMODE) {
007380   a9d1     btfss   0xd1, 0x4, 0x1   	BTFSS	__displayfunction, 4, B
007382   d006     bra     0x7390           	BRA	_01230_DS_
                                           ;	.line	57; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write8bits(value); 
007384   5000     movf    0, 0, 0          	MOVF	r0x00, W
007386   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007388   ec1e     call    0x6c3c, 0        	CALL	_write8bits
00738a   f036
00738c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00738e   d00b     bra     0x73a6           	BRA	_01232_DS_
                                           _01230_DS_:
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write4bits(value>>4);
007390   3800     swapf   0, 0, 0          	SWAPF	r0x00, W
007392   0b0f     andlw   0xf              	ANDLW	0x0f
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
007394   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007396   ec74     call    0x6ce8, 0        	CALL	_write4bits
007398   f036
00739a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	60; /home/valentin/.icaro/firmware/tmp/lcdlib.c	write4bits(value);
00739c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00739e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0073a0   ec74     call    0x6ce8, 0        	CALL	_write4bits
0073a2   f036
0073a4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _01232_DS_:
0073a6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0073a8   f002
0073aa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0073ac   f001
0073ae   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0073b0   f000
0073b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0073b4   ffd9
0073b6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__write8bits	code
                                           _write8bits:
                                           ;	.line	44; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void write8bits(uint8_t value) {
006c3c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006c3e   ffe5
006c40   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006c42   ffd9
006c44   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006c46   ffe5
006c48   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006c4a   ffe5
006c4c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006c4e   ffe5
006c50   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006c52   ffe5
006c54   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006c56   ffe5
006c58   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
006c5a   ffe5
006c5c   0e02     movlw   0x2              	MOVLW	0x02
006c5e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006c60   f000
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 8; i++) {		
006c62   6a01     clrf    0x1, 0           	CLRF	r0x01
006c64   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _01208_DS_:
                                           ;	.line	47; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_data_pins[i], (value >> i) & 0x01);
006c66   0e62     movlw   0x62             	MOVLW	LOW(__data_pins)
006c68   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
006c6a   6e03     movwf   0x3, 0           	MOVWF	r0x03
006c6c   0e03     movlw   0x3              	MOVLW	HIGH(__data_pins)
006c6e   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
006c70   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
006c72   ffe9
                                           ; =DF= MOVFF: SRC op r0x04 replaced by WREG
006c74   6eea     movwf   0xea, 0          	MOVWF	FSR0H
006c76   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
006c78   f003
006c7a   6a04     clrf    0x4, 0           	CLRF	r0x04
006c7c   c000     movff   0, 0x5           	MOVFF	r0x00, r0x05
006c7e   f005
006c80   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006c82   e00b     bz      0x6c9a           	BZ	_01219_DS_
006c84   e606     bn      0x6c92           	BN	_01222_DS_
006c86   6ce8     negf    0xe8, 0          	NEGF	WREG
006c88   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _01220_DS_:
006c8a   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
006c8c   0f01     addlw   0x1              	ADDLW	0x01
006c8e   e3fd     bnc     0x6c8a           	BNC	_01220_DS_
006c90   d004     bra     0x6c9a           	BRA	_01219_DS_
                                           _01222_DS_:
006c92   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _01221_DS_:
006c94   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
006c96   0f01     addlw   0x1              	ADDLW	0x01
006c98   e3fd     bnc     0x6c94           	BNC	_01221_DS_
                                           _01219_DS_:
006c9a   0e01     movlw   0x1              	MOVLW	0x01
006c9c   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
006c9e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006ca0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
006ca2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006ca4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006ca6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006ca8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006caa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006cac   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
006cae   f022
006cb0   0e04     movlw   0x4              	MOVLW	0x04
006cb2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 8; i++) {		
006cb4   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
006cb6   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
006cb8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006cba   0f80     addlw   0x80             	ADDLW	0x80
006cbc   0f80     addlw   0x80             	ADDLW	0x80
006cbe   e102     bnz     0x6cc4           	BNZ	_01224_DS_
006cc0   0e08     movlw   0x8              	MOVLW	0x08
006cc2   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01224_DS_:
006cc4   e3d0     bnc     0x6c66           	BNC	_01208_DS_
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/lcdlib.c	pulseEnable();
006cc6   ec2d     call    0x725a, 0        	CALL	_pulseEnable
006cc8   f039
006cca   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
006ccc   f005
006cce   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
006cd0   f004
006cd2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006cd4   f003
006cd6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
006cd8   f002
006cda   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006cdc   f001
006cde   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006ce0   f000
006ce2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006ce4   ffd9
006ce6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__write4bits	code
                                           _write4bits:
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void write4bits(uint8_t value) {
006ce8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006cea   ffe5
006cec   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006cee   ffd9
006cf0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006cf2   ffe5
006cf4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006cf6   ffe5
006cf8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006cfa   ffe5
006cfc   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006cfe   ffe5
006d00   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006d02   ffe5
006d04   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
006d06   ffe5
006d08   0e02     movlw   0x2              	MOVLW	0x02
006d0a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006d0c   f000
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 4; i++) {		
006d0e   6a01     clrf    0x1, 0           	CLRF	r0x01
006d10   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _01186_DS_:
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_data_pins[i], (value >> i) & 0x01);
006d12   0e62     movlw   0x62             	MOVLW	LOW(__data_pins)
006d14   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
006d16   6e03     movwf   0x3, 0           	MOVWF	r0x03
006d18   0e03     movlw   0x3              	MOVLW	HIGH(__data_pins)
006d1a   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
006d1c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
006d1e   ffe9
                                           ; =DF= MOVFF: SRC op r0x04 replaced by WREG
006d20   6eea     movwf   0xea, 0          	MOVWF	FSR0H
006d22   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
006d24   f003
006d26   6a04     clrf    0x4, 0           	CLRF	r0x04
006d28   c000     movff   0, 0x5           	MOVFF	r0x00, r0x05
006d2a   f005
006d2c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006d2e   e00b     bz      0x6d46           	BZ	_01197_DS_
006d30   e606     bn      0x6d3e           	BN	_01200_DS_
006d32   6ce8     negf    0xe8, 0          	NEGF	WREG
006d34   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _01198_DS_:
006d36   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
006d38   0f01     addlw   0x1              	ADDLW	0x01
006d3a   e3fd     bnc     0x6d36           	BNC	_01198_DS_
006d3c   d004     bra     0x6d46           	BRA	_01197_DS_
                                           _01200_DS_:
006d3e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           _01199_DS_:
006d40   3605     rlcf    0x5, 0x1, 0      	RLCF	r0x05, F
006d42   0f01     addlw   0x1              	ADDLW	0x01
006d44   e3fd     bnc     0x6d40           	BNC	_01199_DS_
                                           _01197_DS_:
006d46   0e01     movlw   0x1              	MOVLW	0x01
006d48   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
006d4a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006d4c   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
006d4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006d50   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006d52   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006d54   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006d56   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006d58   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
006d5a   f022
006d5c   0e04     movlw   0x4              	MOVLW	0x04
006d5e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/lcdlib.c	for (i = 0; i < 4; i++) {		
006d60   4a01     infsnz  0x1, 0x1, 0      	INFSNZ	r0x01, F
006d62   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
006d64   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006d66   0f80     addlw   0x80             	ADDLW	0x80
006d68   0f80     addlw   0x80             	ADDLW	0x80
006d6a   e102     bnz     0x6d70           	BNZ	_01202_DS_
006d6c   0e04     movlw   0x4              	MOVLW	0x04
006d6e   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _01202_DS_:
006d70   e3d0     bnc     0x6d12           	BNC	_01186_DS_
                                           ;	.line	40; /home/valentin/.icaro/firmware/tmp/lcdlib.c	pulseEnable();
006d72   ec2d     call    0x725a, 0        	CALL	_pulseEnable
006d74   f039
006d76   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
006d78   f005
006d7a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
006d7c   f004
006d7e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006d80   f003
006d82   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
006d84   f002
006d86   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006d88   f001
006d8a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006d8c   f000
006d8e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006d90   ffd9
006d92   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pulseEnable	code
                                           _pulseEnable:
                                           ;	.line	24; /home/valentin/.icaro/firmware/tmp/lcdlib.c	void pulseEnable(void) {
00725a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00725c   ffe5
                                           ;	.line	25; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_enable_pin, LOW);
00725e   c353     movff   0x353, 0         	MOVFF	__enable_pin, r0x00
007260   f000
007262   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
007264   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
007266   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
007268   5000     movf    0, 0, 0          	MOVF	r0x00, W
00726a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00726c   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
00726e   f022
007270   0e04     movlw   0x4              	MOVLW	0x04
007272   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	26; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(1);    
007274   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
007276   0e01     movlw   0x1              	MOVLW	0x01
007278   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00727a   ec7d     call    0x74fa, 0        	CALL	_Delayus
00727c   f03a
00727e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
007280   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	27; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_enable_pin, HIGH);
007282   c353     movff   0x353, 0         	MOVFF	__enable_pin, r0x00
007284   f000
007286   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
007288   0e01     movlw   0x1              	MOVLW	0x01
00728a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00728c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00728e   5000     movf    0, 0, 0          	MOVF	r0x00, W
007290   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007292   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
007294   f022
007296   0e04     movlw   0x4              	MOVLW	0x04
007298   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	28; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(1);    // enable pulse must be >450ns
00729a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00729c   0e01     movlw   0x1              	MOVLW	0x01
00729e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0072a0   ec7d     call    0x74fa, 0        	CALL	_Delayus
0072a2   f03a
0072a4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0072a6   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/lcdlib.c	digitalwrite(_enable_pin, LOW);
0072a8   c353     movff   0x353, 0         	MOVFF	__enable_pin, r0x00
0072aa   f000
0072ac   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0072ae   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0072b0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0072b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0072b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0072b6   ecf9     call    0x45f2, 0        	CALL	_digitalwrite
0072b8   f022
0072ba   0e04     movlw   0x4              	MOVLW	0x04
0072bc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/lcdlib.c	Delayus(100);   // commands need > 37us to settle
0072be   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0072c0   0e64     movlw   0x64             	MOVLW	0x64
0072c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0072c4   ec7d     call    0x74fa, 0        	CALL	_Delayus
0072c6   f03a
0072c8   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0072ca   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
0072cc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0072ce   f000
0072d0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_write	code
                                           _serial_write:
                                           ;	.line	391; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	void serial_write(char *fmt,...)
004046   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004048   ffe5
00404a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00404c   ffd9
00404e   0e08     movlw   0x8              	MOVLW	0x08
004050   5ee1     subwf   0xe1, 0x1, 0     	SUBWF	FSR1L, F
004052   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
004054   06e2     decf    0xe2, 0x1, 0     	DECF	FSR1H, F
004056   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004058   ffe5
00405a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00405c   ffe5
00405e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004060   ffe5
004062   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004064   ffe5
004066   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004068   ffe5
00406a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00406c   ffe5
                                           ;	.line	398; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	s=va_start(ap,fmt);
00406e   0e02     movlw   0x2              	MOVLW	0x02
004070   24d9     addwf   0xd9, 0, 0       	ADDWF	FSR2L, W
004072   6e00     movwf   0, 0             	MOVWF	r0x00
004074   0e00     movlw   0                	MOVLW	0x00
004076   20da     addwfc  0xda, 0, 0       	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
004078   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
00407a   0e80     movlw   0x80             	MOVLW	0x80
00407c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00407e   0e03     movlw   0x3              	MOVLW	0x03
004080   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004082   0e00     movlw   0                	MOVLW	0x00
004084   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004086   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
                                           ;	.line	399; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	switch (*s)
004088   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00408a   ffe9
00408c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00408e   fff3
004090   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004092   ec29     call    0x52, 0          	CALL	__gptrget1
004094   f000
004096   6e00     movwf   0, 0             	MOVWF	r0x00
004098   0e01     movlw   0x1              	MOVLW	0x01
00409a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00409c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00409e   d108     bra     0x42b0           	BRA	_01163_DS_
0040a0   0e06     movlw   0x6              	MOVLW	0x06
0040a2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0040a4   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0040a6   d104     bra     0x42b0           	BRA	_01163_DS_
0040a8   0600     decf    0, 0x1, 0        	DECF	r0x00, F
0040aa   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0040ac   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0040ae   3400     rlcf    0, 0, 0          	RLCF	r0x00, W
0040b0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0040b2   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0040b4   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0040b6   0bfc     andlw   0xfc             	ANDLW	0xfc
0040b8   0fc8     addlw   0xc8             	ADDLW	LOW(_01175_DS_)
0040ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0040bc   0e40     movlw   0x40             	MOVLW	HIGH(_01175_DS_)
0040be   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0040c0   0e00     movlw   0                	MOVLW	UPPER(_01175_DS_)
0040c2   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0040c4   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0040c6   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01175_DS_:
0040c8   ef6e     goto    0x40dc           	GOTO	_01158_DS_
0040ca   f020
0040cc   efba     goto    0x4174           	GOTO	_01160_DS_
0040ce   f020
0040d0   ef94     goto    0x4128           	GOTO	_01159_DS_
0040d2   f020
0040d4   efdc     goto    0x41b8           	GOTO	_01161_DS_
0040d6   f020
0040d8   ef1a     goto    0x4234           	GOTO	_01162_DS_
0040da   f021
                                           _01158_DS_:
                                           ;	.line	401; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	case DEC:       serial_printf("%d",(int)fmt);
0040dc   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0040de   ffe5
0040e0   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0040e2   ffe5
0040e4   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0040e6   ffe5
0040e8   0e02     movlw   0x2              	MOVLW	0x02
0040ea   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
0040ec   f007
0040ee   0e03     movlw   0x3              	MOVLW	0x03
0040f0   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
0040f2   f008
0040f4   0e04     movlw   0x4              	MOVLW	0x04
0040f6   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
0040f8   f009
0040fa   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0040fc   6e00     movwf   0, 0             	MOVWF	r0x00
0040fe   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
004100   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
004102   f009
004104   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
004106   f008
004108   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00410a   f007
00410c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00410e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004110   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004112   0e00     movlw   0                	MOVLW	UPPER(___str_2)
004114   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004116   0e32     movlw   0x32             	MOVLW	HIGH(___str_2)
004118   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00411a   0ee6     movlw   0xe6             	MOVLW	LOW(___str_2)
00411c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00411e   ecdc     call    0x73b8, 0        	CALL	_serial_printf
004120   f039
004122   0e05     movlw   0x5              	MOVLW	0x05
004124   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	402; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	break;
004126   d0f8     bra     0x4318           	BRA	_01165_DS_
                                           _01159_DS_:
                                           ;	.line	403; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	case HEX: 		serial_printf("%x",(int)fmt);
004128   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00412a   ffe5
00412c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00412e   ffe5
004130   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
004132   ffe5
004134   0e02     movlw   0x2              	MOVLW	0x02
004136   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
004138   f007
00413a   0e03     movlw   0x3              	MOVLW	0x03
00413c   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
00413e   f008
004140   0e04     movlw   0x4              	MOVLW	0x04
004142   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
004144   f009
004146   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004148   6e00     movwf   0, 0             	MOVWF	r0x00
00414a   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00414c   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00414e   f009
004150   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
004152   f008
004154   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004156   f007
004158   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00415a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00415c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00415e   0e00     movlw   0                	MOVLW	UPPER(___str_3)
004160   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004162   0e32     movlw   0x32             	MOVLW	HIGH(___str_3)
004164   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004166   0eea     movlw   0xea             	MOVLW	LOW(___str_3)
004168   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00416a   ecdc     call    0x73b8, 0        	CALL	_serial_printf
00416c   f039
00416e   0e05     movlw   0x5              	MOVLW	0x05
004170   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	404; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	break;
004172   d0d2     bra     0x4318           	BRA	_01165_DS_
                                           _01160_DS_:
                                           ;	.line	405; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	case BYTE: 		serial_printf("%d",(unsigned char)fmt);
004174   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004176   ffe5
004178   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00417a   ffe5
00417c   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
00417e   ffe5
004180   0e02     movlw   0x2              	MOVLW	0x02
004182   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
004184   f007
004186   0e03     movlw   0x3              	MOVLW	0x03
004188   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
00418a   f008
00418c   0e04     movlw   0x4              	MOVLW	0x04
00418e   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
004190   f009
004192   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004194   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
004196   f009
004198   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00419a   f008
00419c   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00419e   f007
0041a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a2   0e00     movlw   0                	MOVLW	UPPER(___str_2)
0041a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041a6   0e32     movlw   0x32             	MOVLW	HIGH(___str_2)
0041a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041aa   0ee6     movlw   0xe6             	MOVLW	LOW(___str_2)
0041ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041ae   ecdc     call    0x73b8, 0        	CALL	_serial_printf
0041b0   f039
0041b2   0e04     movlw   0x4              	MOVLW	0x04
0041b4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	406; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	break;
0041b6   d0b0     bra     0x4318           	BRA	_01165_DS_
                                           _01161_DS_:
                                           ;	.line	407; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	case OCTAL:     uitoamod((int)fmt,chaine,8);
0041b8   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0041ba   ffe5
0041bc   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0041be   ffe5
0041c0   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0041c2   ffe5
0041c4   0e02     movlw   0x2              	MOVLW	0x02
0041c6   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
0041c8   f007
0041ca   0e03     movlw   0x3              	MOVLW	0x03
0041cc   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
0041ce   f008
0041d0   0e04     movlw   0x4              	MOVLW	0x04
0041d2   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
0041d4   f009
0041d6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0041d8   6e00     movwf   0, 0             	MOVWF	r0x00
0041da   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0041dc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0041de   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0041e0   f009
0041e2   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0041e4   f008
0041e6   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0041e8   f007
0041ea   0ef9     movlw   0xf9             	MOVLW	0xf9
0041ec   24d9     addwf   0xd9, 0, 0       	ADDWF	FSR2L, W
0041ee   6e02     movwf   0x2, 0           	MOVWF	r0x02
0041f0   0eff     movlw   0xff             	MOVLW	0xff
0041f2   20da     addwfc  0xda, 0, 0       	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
0041f4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0041f6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0041f8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0041fa   6e04     movwf   0x4, 0           	MOVWF	r0x04
0041fc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041fe   0e08     movlw   0x8              	MOVLW	0x08
004200   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004202   0e80     movlw   0x80             	MOVLW	0x80
004204   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004206   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004208   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00420a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00420c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00420e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004210   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004212   5000     movf    0, 0, 0          	MOVF	r0x00, W
004214   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004216   eca0     call    0x4f40, 0        	CALL	_uitoamod
004218   f027
00421a   0e07     movlw   0x7              	MOVLW	0x07
00421c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x02
                                           ;	.line	408; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	serial_printf(chaine);
00421e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004220   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004222   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004224   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004226   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004228   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00422a   ecdc     call    0x73b8, 0        	CALL	_serial_printf
00422c   f039
00422e   0e03     movlw   0x3              	MOVLW	0x03
004230   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	409; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	break;
004232   d072     bra     0x4318           	BRA	_01165_DS_
                                           _01162_DS_:
                                           ;	.line	410; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	case BIN:       uitoamod((int)fmt,chaine,2);
004234   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004236   ffe5
004238   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00423a   ffe5
00423c   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
00423e   ffe5
004240   0e02     movlw   0x2              	MOVLW	0x02
004242   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
004244   f007
004246   0e03     movlw   0x3              	MOVLW	0x03
004248   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
00424a   f008
00424c   0e04     movlw   0x4              	MOVLW	0x04
00424e   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
004250   f009
004252   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004254   6e00     movwf   0, 0             	MOVWF	r0x00
004256   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
004258   6e01     movwf   0x1, 0           	MOVWF	r0x01
00425a   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00425c   f009
00425e   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
004260   f008
004262   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004264   f007
004266   0ef9     movlw   0xf9             	MOVLW	0xf9
004268   24d9     addwf   0xd9, 0, 0       	ADDWF	FSR2L, W
00426a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00426c   0eff     movlw   0xff             	MOVLW	0xff
00426e   20da     addwfc  0xda, 0, 0       	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
004270   6e03     movwf   0x3, 0           	MOVWF	r0x03
004272   6e05     movwf   0x5, 0           	MOVWF	r0x05
004274   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004276   6e04     movwf   0x4, 0           	MOVWF	r0x04
004278   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00427a   0e02     movlw   0x2              	MOVLW	0x02
00427c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00427e   0e80     movlw   0x80             	MOVLW	0x80
004280   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004282   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004284   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004286   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004288   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00428a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00428c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00428e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004290   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004292   eca0     call    0x4f40, 0        	CALL	_uitoamod
004294   f027
004296   0e07     movlw   0x7              	MOVLW	0x07
004298   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x02
                                           ;	.line	411; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	serial_printf(chaine);
00429a   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00429c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00429e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0042a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042a2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0042a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042a6   ecdc     call    0x73b8, 0        	CALL	_serial_printf
0042a8   f039
0042aa   0e03     movlw   0x3              	MOVLW	0x03
0042ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	412; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	break;           
0042ae   d034     bra     0x4318           	BRA	_01165_DS_
                                           _01163_DS_:
                                           ;	.line	413; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	default:	serial_printf(fmt);
0042b0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0042b2   ffe5
0042b4   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0042b6   ffe5
0042b8   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0042ba   ffe5
0042bc   0e02     movlw   0x2              	MOVLW	0x02
0042be   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
0042c0   f007
0042c2   0e03     movlw   0x3              	MOVLW	0x03
0042c4   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
0042c6   f008
0042c8   0e04     movlw   0x4              	MOVLW	0x04
0042ca   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
0042cc   f009
0042ce   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0042d0   f009
0042d2   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0042d4   f008
0042d6   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0042d8   f007
0042da   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0042dc   ffe5
0042de   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0042e0   ffe5
0042e2   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0042e4   ffe5
0042e6   0e02     movlw   0x2              	MOVLW	0x02
0042e8   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
0042ea   f007
0042ec   0e03     movlw   0x3              	MOVLW	0x03
0042ee   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
0042f0   f008
0042f2   0e04     movlw   0x4              	MOVLW	0x04
0042f4   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
0042f6   f009
0042f8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
0042fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042fc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0042fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004300   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004302   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004304   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
004306   f009
004308   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00430a   f008
00430c   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00430e   f007
004310   ecdc     call    0x73b8, 0        	CALL	_serial_printf
004312   f039
004314   0e03     movlw   0x3              	MOVLW	0x03
004316   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _01165_DS_:
                                           ;	.line	416; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	va_end(ap);
004318   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00431a   f005
00431c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00431e   f004
004320   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004322   f003
004324   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004326   f002
004328   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00432a   f001
00432c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00432e   f000
004330   6ee6     movwf   0xe6, 0          	MOVWF	POSTINC1
004332   0e07     movlw   0x7              	MOVLW	0x07
004334   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004336   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004338   2ae2     incf    0xe2, 0x1, 0     	INCF	FSR1H, F
00433a   1ee8     comf    0xe8, 0x1, 0     	COMF	WREG, F
00433c   50e3     movf    0xe3, 0, 0       	MOVF	PLUSW1, W
00433e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004340   ffd9
004342   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__uitoamod	code
                                           _uitoamod:
                                           ;	.line	367; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	static void uitoamod(unsigned int num, char * bf, unsigned int base)
004f40   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004f42   ffe5
004f44   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004f46   ffd9
004f48   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004f4a   ffe5
004f4c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004f4e   ffe5
004f50   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004f52   ffe5
004f54   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004f56   ffe5
004f58   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004f5a   ffe5
004f5c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004f5e   ffe5
004f60   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004f62   ffe5
004f64   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004f66   ffe5
004f68   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
004f6a   ffe5
004f6c   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
004f6e   ffe5
004f70   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
004f72   ffe5
004f74   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
004f76   ffe5
004f78   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
004f7a   ffe5
004f7c   c00d     movff   0xd, 0xfe5       	MOVFF	r0x0d, POSTDEC1
004f7e   ffe5
004f80   c00e     movff   0xe, 0xfe5       	MOVFF	r0x0e, POSTDEC1
004f82   ffe5
004f84   c00f     movff   0xf, 0xfe5       	MOVFF	r0x0f, POSTDEC1
004f86   ffe5
004f88   c010     movff   0x10, 0xfe5      	MOVFF	r0x10, POSTDEC1
004f8a   ffe5
004f8c   0e02     movlw   0x2              	MOVLW	0x02
004f8e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004f90   f000
004f92   0e03     movlw   0x3              	MOVLW	0x03
004f94   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004f96   f001
004f98   0e04     movlw   0x4              	MOVLW	0x04
004f9a   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004f9c   f002
004f9e   0e05     movlw   0x5              	MOVLW	0x05
004fa0   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
004fa2   f003
004fa4   0e06     movlw   0x6              	MOVLW	0x06
004fa6   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
004fa8   f004
004faa   0e07     movlw   0x7              	MOVLW	0x07
004fac   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
004fae   f005
004fb0   0e08     movlw   0x8              	MOVLW	0x08
004fb2   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
004fb4   f006
                                           ;	.line	370; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	unsigned int d=1;
004fb6   0e01     movlw   0x1              	MOVLW	0x01
004fb8   6e07     movwf   0x7, 0           	MOVWF	r0x07
004fba   6a08     clrf    0x8, 0           	CLRF	r0x08
                                           _01114_DS_:
                                           ;	.line	372; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	while (num/d >= base)
004fbc   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
004fbe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004fc0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004fc2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004fc4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004fc6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004fc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
004fca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004fcc   ecc6     call    0x6b8c, 0        	CALL	__divuint
004fce   f035
004fd0   6e09     movwf   0x9, 0           	MOVWF	r0x09
004fd2   cff3     movff   0xff3, 0xa       	MOVFF	PRODL, r0x0a
004fd4   f00a
004fd6   0e04     movlw   0x4              	MOVLW	0x04
004fd8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004fda   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
004fdc   5c0a     subwf   0xa, 0, 0        	SUBWF	r0x0a, W
004fde   e102     bnz     0x4fe4           	BNZ	_01150_DS_
004fe0   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004fe2   5c09     subwf   0x9, 0, 0        	SUBWF	r0x09, W
                                           _01150_DS_:
004fe4   e310     bnc     0x5006           	BNC	_01133_DS_
                                           ;	.line	373; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	d*=base;		
004fe6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
004fe8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004fea   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004fec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004fee   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
004ff0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ff2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004ff4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ff6   ec27     call    0x4e, 0          	CALL	__mulint
004ff8   f000
004ffa   6e07     movwf   0x7, 0           	MOVWF	r0x07
004ffc   cff3     movff   0xff3, 0x8       	MOVFF	PRODL, r0x08
004ffe   f008
005000   0e04     movlw   0x4              	MOVLW	0x04
005002   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
005004   d7db     bra     0x4fbc           	BRA	_01114_DS_
                                           _01133_DS_:
                                           ;	.line	375; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	while (d!=0)
005006   6a09     clrf    0x9, 0           	CLRF	r0x09
005008   6a0a     clrf    0xa, 0           	CLRF	r0x0a
                                           _01121_DS_:
00500a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00500c   1008     iorwf   0x8, 0, 0        	IORWF	r0x08, W
00500e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
005010   d061     bra     0x50d4           	BRA	_01123_DS_
                                           ;	.line	377; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	int dgt = num / d;
005012   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
005014   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005016   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
005018   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00501a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00501c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00501e   5000     movf    0, 0, 0          	MOVF	r0x00, W
005020   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005022   ecc6     call    0x6b8c, 0        	CALL	__divuint
005024   f035
005026   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
005028   cff3     movff   0xff3, 0xc       	MOVFF	PRODL, r0x0c
00502a   f00c
00502c   0e04     movlw   0x4              	MOVLW	0x04
00502e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	378; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	num%= d;
005030   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
005032   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005034   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
005036   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005038   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00503a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00503c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00503e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005040   ec69     call    0x6ad2, 0        	CALL	__moduint
005042   f035
005044   6e00     movwf   0, 0             	MOVWF	r0x00
005046   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
005048   f001
00504a   0e04     movlw   0x4              	MOVLW	0x04
00504c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	379; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	d/=base;
00504e   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
005050   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005052   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
005054   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005056   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
005058   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00505a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00505c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00505e   ecc6     call    0x6b8c, 0        	CALL	__divuint
005060   f035
005062   6e07     movwf   0x7, 0           	MOVWF	r0x07
005064   cff3     movff   0xff3, 0x8       	MOVFF	PRODL, r0x08
005066   f008
005068   0e04     movlw   0x4              	MOVLW	0x04
00506a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	380; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (n || dgt>0 || d==0)
00506c   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00506e   100a     iorwf   0xa, 0, 0        	IORWF	r0x0a, W
005070   e10b     bnz     0x5088           	BNZ	_01117_DS_
005072   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
005074   0f80     addlw   0x80             	ADDLW	0x80
005076   0f80     addlw   0x80             	ADDLW	0x80
005078   e102     bnz     0x507e           	BNZ	_01151_DS_
00507a   0e01     movlw   0x1              	MOVLW	0x01
00507c   5c0b     subwf   0xb, 0, 0        	SUBWF	r0x0b, W
                                           _01151_DS_:
00507e   e204     bc      0x5088           	BC	_01117_DS_
005080   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
005082   1008     iorwf   0x8, 0, 0        	IORWF	r0x08, W
005084   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
005086   d7c1     bra     0x500a           	BRA	_01121_DS_
                                           _01117_DS_:
                                           ;	.line	382; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	*bf++ = dgt+(dgt<10 ? '0' : 'A'-10);
005088   c002     movff   0x2, 0xd         	MOVFF	r0x02, r0x0d
00508a   f00d
00508c   c003     movff   0x3, 0xe         	MOVFF	r0x03, r0x0e
00508e   f00e
005090   c004     movff   0x4, 0xf         	MOVFF	r0x04, r0x0f
005092   f00f
005094   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
005096   e302     bnc     0x509c           	BNC	_01152_DS_
005098   4a03     infsnz  0x3, 0x1, 0      	INFSNZ	r0x03, F
00509a   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           _01152_DS_:
00509c   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00509e   6e10     movwf   0x10, 0          	MOVWF	r0x10
0050a0   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0050a2   0f80     addlw   0x80             	ADDLW	0x80
0050a4   0f80     addlw   0x80             	ADDLW	0x80
0050a6   e102     bnz     0x50ac           	BNZ	_01153_DS_
0050a8   0e0a     movlw   0xa              	MOVLW	0x0a
0050aa   5c0b     subwf   0xb, 0, 0        	SUBWF	r0x0b, W
                                           _01153_DS_:
0050ac   e203     bc      0x50b4           	BC	_01126_DS_
0050ae   0e30     movlw   0x30             	MOVLW	0x30
0050b0   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0050b2   d002     bra     0x50b8           	BRA	_01127_DS_
                                           _01126_DS_:
0050b4   0e37     movlw   0x37             	MOVLW	0x37
0050b6   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
                                           _01127_DS_:
0050b8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0050ba   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
0050bc   c010     movff   0x10, 0xfe5      	MOVFF	r0x10, POSTDEC1
0050be   ffe5
0050c0   c00d     movff   0xd, 0xfe9       	MOVFF	r0x0d, FSR0L
0050c2   ffe9
0050c4   c00e     movff   0xe, 0xff3       	MOVFF	r0x0e, PRODL
0050c6   fff3
0050c8   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
0050ca   ec31     call    0x62, 0          	CALL	__gptrput1
0050cc   f000
                                           ;	.line	383; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++n;
0050ce   4a09     infsnz  0x9, 0x1, 0      	INFSNZ	r0x09, F
0050d0   2a0a     incf    0xa, 0x1, 0      	INCF	r0x0a, F
0050d2   d79b     bra     0x500a           	BRA	_01121_DS_
                                           _01123_DS_:
                                           ;	.line	386; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	*bf=0;
0050d4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0050d6   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0050d8   ffe9
0050da   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
0050dc   fff3
0050de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0050e0   ec31     call    0x62, 0          	CALL	__gptrput1
0050e2   f000
0050e4   cfe4     movff   0xfe4, 0x10      	MOVFF	PREINC1, r0x10
0050e6   f010
0050e8   cfe4     movff   0xfe4, 0xf       	MOVFF	PREINC1, r0x0f
0050ea   f00f
0050ec   cfe4     movff   0xfe4, 0xe       	MOVFF	PREINC1, r0x0e
0050ee   f00e
0050f0   cfe4     movff   0xfe4, 0xd       	MOVFF	PREINC1, r0x0d
0050f2   f00d
0050f4   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
0050f6   f00c
0050f8   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
0050fa   f00b
0050fc   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
0050fe   f00a
005100   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
005102   f009
005104   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
005106   f008
005108   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00510a   f007
00510c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00510e   f006
005110   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
005112   f005
005114   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
005116   f004
005118   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00511a   f003
00511c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00511e   f002
005120   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005122   f001
005124   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005126   f000
005128   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00512a   ffd9
00512c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_printf	code
                                           _serial_printf:
                                           ;	.line	354; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	void serial_printf(char *fmt, ...)
0073b8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0073ba   ffe5
0073bc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0073be   ffd9
0073c0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0073c2   ffe5
0073c4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0073c6   ffe5
0073c8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0073ca   ffe5
                                           ;	.line	358; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	va_start(args, fmt);
0073cc   0e02     movlw   0x2              	MOVLW	0x02
0073ce   24d9     addwf   0xd9, 0, 0       	ADDWF	FSR2L, W
0073d0   6e00     movwf   0, 0             	MOVWF	r0x00
0073d2   0e00     movlw   0                	MOVLW	0x00
0073d4   20da     addwfc  0xda, 0, 0       	ADDWFC	FSR2H, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVWF	r0x01
0073d6   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
0073d8   0e80     movlw   0x80             	MOVLW	0x80
0073da   6e02     movwf   0x2, 0           	MOVWF	r0x02
0073dc   0e03     movlw   0x3              	MOVLW	0x03
0073de   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0073e0   0e00     movlw   0                	MOVLW	0x00
0073e2   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0073e4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
                                           ;	.line	359; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	printfmod(serial_putchar11, fmt, args);
0073e6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0073e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0073ea   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0073ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0073ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
0073f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0073f2   0e04     movlw   0x4              	MOVLW	0x04
0073f4   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
0073f6   ffe5
0073f8   0e03     movlw   0x3              	MOVLW	0x03
0073fa   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
0073fc   ffe5
0073fe   0e02     movlw   0x2              	MOVLW	0x02
007400   cfdb     movff   0xfdb, 0xfe5     	MOVFF	PLUSW2, POSTDEC1
007402   ffe5
007404   0e00     movlw   0                	MOVLW	UPPER(_serial_putchar11)
007406   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007408   0e77     movlw   0x77             	MOVLW	HIGH(_serial_putchar11)
00740a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00740c   0ea6     movlw   0xa6             	MOVLW	LOW(_serial_putchar11)
00740e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
007410   ecca     call    0x6d94, 0        	CALL	_printfmod
007412   f036
007414   0e09     movlw   0x9              	MOVLW	0x09
007416   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	360; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	va_end(args);
007418   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00741a   f002
00741c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00741e   f001
007420   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
007422   f000
007424   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007426   ffd9
007428   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_getkey	code
                                           _serial_getkey:
                                           ;	.line	344; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	unsigned char serial_getkey()
007894   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007896   ffe5
                                           _01101_DS_:
                                           ;	.line	347; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	while (!(serial_available()));
007898   ecc0     call    0x7780, 0        	CALL	_serial_available
00789a   f03b
00789c   6e00     movwf   0, 0             	MOVWF	r0x00
00789e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0078a0   e0fb     bz      0x7898           	BZ	_01101_DS_
                                           ;	.line	348; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	c = serial_read();
0078a2   ecab     call    0x7556, 0        	CALL	_serial_read
0078a4   f03a
0078a6   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	349; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	serial_flush();
0078a8   ecd2     call    0x79a4, 0        	CALL	_serial_flush
0078aa   f03c
                                           ;	.line	350; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return (c);
0078ac   5000     movf    0, 0, 0          	MOVF	r0x00, W
0078ae   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0078b0   f000
0078b2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_flush	code
                                           _serial_flush:
                                           ; #	MOVLW	0x01
                                           ; #	MOVWF	_wpointer, B
                                           ; #	MOVLW	0x01
                                           ;	.line	338; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	wpointer=1;
0079a4   0e01     movlw   0x1              	MOVLW	0x01
0079a6   0103     movlb   0x3              	BANKSEL	_wpointer
                                           ;	.line	339; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	rpointer=1;
0079a8   6fcf     movwf   0xcf, 0x1        	MOVWF	_wpointer, B
0079aa   0103     movlb   0x3              	BANKSEL	_rpointer
0079ac   6fd0     movwf   0xd0, 0x1        	MOVWF	_rpointer, B
0079ae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_read	code
                                           _serial_read:
                                           ;	.line	322; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	unsigned char serial_read()
007556   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007558   ffe5
00755a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00755c   ffe5
00755e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
007560   ffe5
                                           ;	.line	324; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	unsigned char caractere=0;
007562   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	326; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (serial_available())
007564   ecc0     call    0x7780, 0        	CALL	_serial_available
007566   f03b
007568   6e01     movwf   0x1, 0           	MOVWF	r0x01
00756a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00756c   e015     bz      0x7598           	BZ	_01081_DS_
                                           ;	.line	328; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	caractere=rx[rpointer++];
00756e   c3d0     movff   0x3d0, 0x1       	MOVFF	_rpointer, r0x01
007570   f001
007572   0103     movlb   0x3              	BANKSEL	_rpointer
007574   2bd0     incf    0xd0, 0x1, 0x1   	INCF	_rpointer, F, B
007576   6a02     clrf    0x2, 0           	CLRF	r0x02
007578   0e00     movlw   0                	MOVLW	LOW(_rx)
00757a   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00757c   0e02     movlw   0x2              	MOVLW	HIGH(_rx)
00757e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
007580   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
007582   ffe9
007584   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
007586   ffea
007588   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00758a   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	329; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (rpointer==RXBUFFERLENGTH)
00758c   51d0     movf    0xd0, 0, 0x1     	MOVF	_rpointer, W, B
00758e   0a80     xorlw   0x80             	XORLW	0x80
007590   e103     bnz     0x7598           	BNZ	_01081_DS_
                                           ;	.line	330; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	rpointer=1;
007592   0e01     movlw   0x1              	MOVLW	0x01
007594   0103     movlb   0x3              	BANKSEL	_rpointer
007596   6fd0     movwf   0xd0, 0x1        	MOVWF	_rpointer, B
                                           _01081_DS_:
                                           ;	.line	332; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return(caractere);
007598   5000     movf    0, 0, 0          	MOVF	r0x00, W
00759a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00759c   f002
00759e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0075a0   f001
0075a2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0075a4   f000
0075a6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_interrupt	code
                                           _serial_interrupt:
                                           ;	.line	302; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	void serial_interrupt(void)
00742a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00742c   ffe5
00742e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
007430   ffe5
007432   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
007434   ffe5
                                           ;	.line	307; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	PIR1bits.RCIF=0;				// clear RX interrupt flag
007436   9a9e     bcf     0x9e, 0x5, 0     	BCF	_PIR1bits, 5
                                           ;	.line	308; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	caractere=RCREG;				// take received char
007438   cfae     movff   0xfae, 0         	MOVFF	_RCREG, r0x00
00743a   f000
00743c   0103     movlb   0x3              	BANKSEL	_wpointer
                                           ;	.line	309; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (wpointer!=RXBUFFERLENGTH-1)	// if not last place in buffer
00743e   51cf     movf    0xcf, 0, 0x1     	MOVF	_wpointer, W, B
007440   0a7f     xorlw   0x7f             	XORLW	0x7f
007442   e004     bz      0x744c           	BZ	_01051_DS_
                                           _01069_DS_:
007444   0103     movlb   0x3              	BANKSEL	_wpointer
                                           ;	.line	310; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	newwp=wpointer+1;			// place=place+1
007446   29cf     incf    0xcf, 0, 0x1     	INCF	_wpointer, W, B
007448   6e01     movwf   0x1, 0           	MOVWF	r0x01
00744a   d002     bra     0x7450           	BRA	_01052_DS_
                                           _01051_DS_:
                                           ;	.line	312; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	newwp=1;					// else place=1
00744c   0e01     movlw   0x1              	MOVLW	0x01
00744e   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _01052_DS_:
007450   0103     movlb   0x3              	BANKSEL	_rpointer
                                           ;	.line	314; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (rpointer!=newwp)			// if read pointer!=write pointer
007452   51d0     movf    0xd0, 0, 0x1     	MOVF	_rpointer, W, B
007454   1801     xorwf   0x1, 0, 0        	XORWF	r0x01, W
007456   e00f     bz      0x7476           	BZ	_01054_DS_
                                           ;	.line	315; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	rx[wpointer++]=caractere;	// store received char
007458   c3cf     movff   0x3cf, 0x1       	MOVFF	_wpointer, r0x01
00745a   f001
00745c   0103     movlb   0x3              	BANKSEL	_wpointer
00745e   2bcf     incf    0xcf, 0x1, 0x1   	INCF	_wpointer, F, B
007460   6a02     clrf    0x2, 0           	CLRF	r0x02
007462   0e00     movlw   0                	MOVLW	LOW(_rx)
007464   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
007466   0e02     movlw   0x2              	MOVLW	HIGH(_rx)
007468   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00746a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00746c   ffe9
00746e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
007470   ffea
007472   c000     movff   0, 0xfef         	MOVFF	r0x00, INDF0
007474   ffef
                                           _01054_DS_:
007476   0103     movlb   0x3              	BANKSEL	_wpointer
                                           ;	.line	317; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (wpointer==RXBUFFERLENGTH)	// if write pointer=length buffer
007478   51cf     movf    0xcf, 0, 0x1     	MOVF	_wpointer, W, B
00747a   0a80     xorlw   0x80             	XORLW	0x80
00747c   e103     bnz     0x7484           	BNZ	_01057_DS_
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	wpointer=1;					// write pointer = 1
00747e   0e01     movlw   0x1              	MOVLW	0x01
007480   0103     movlb   0x3              	BANKSEL	_wpointer
007482   6fcf     movwf   0xcf, 0x1        	MOVWF	_wpointer, B
                                           _01057_DS_:
007484   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
007486   f002
007488   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00748a   f001
00748c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00748e   f000
007490   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_putchar11	code
                                           _serial_putchar11:
                                           ;	.line	295; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	void serial_putchar11(unsigned char caractere)
0077a6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0077a8   ffe5
0077aa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0077ac   ffd9
0077ae   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0077b0   ffe5
0077b2   0e02     movlw   0x2              	MOVLW	0x02
0077b4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0077b6   f000
                                           _01042_DS_:
                                           ;	.line	297; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	while (!TXSTAbits.TRMT);
0077b8   a2ac     btfss   0xac, 0x1, 0     	BTFSS	_TXSTAbits, 1
0077ba   d7fe     bra     0x77b8           	BRA	_01042_DS_
                                           ;	.line	298; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	TXREG=caractere;		        // yes, send char
0077bc   c000     movff   0, 0xfad         	MOVFF	r0x00, _TXREG
0077be   ffad
0077c0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0077c2   f000
0077c4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0077c6   ffd9
0077c8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_available	code
                                           _serial_available:
                                           ;	.line	289; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	unsigned char serial_available()
007780   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007782   ffe5
                                           ;	.line	291; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return(wpointer!=rpointer);
007784   6a00     clrf    0, 0             	CLRF	r0x00
007786   0103     movlb   0x3              	BANKSEL	_wpointer
007788   51cf     movf    0xcf, 0, 0x1     	MOVF	_wpointer, W, B
00778a   0103     movlb   0x3              	BANKSEL	_rpointer
00778c   19d0     xorwf   0xd0, 0, 0x1     	XORWF	_rpointer, W, B
00778e   e101     bnz     0x7792           	BNZ	_01037_DS_
007790   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           _01037_DS_:
007792   5000     movf    0, 0, 0          	MOVF	r0x00, W
007794   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
007796   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
007798   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00779a   6a00     clrf    0, 0             	CLRF	r0x00
00779c   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
00779e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0077a0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0077a2   f000
0077a4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serial_begin	code
                                           _serial_begin:
                                           ;	.line	265; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	void serial_begin(unsigned long baudrate)
0066a2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0066a4   ffe5
0066a6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0066a8   ffd9
0066aa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0066ac   ffe5
0066ae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0066b0   ffe5
0066b2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0066b4   ffe5
0066b6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0066b8   ffe5
0066ba   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0066bc   ffe5
0066be   0e02     movlw   0x2              	MOVLW	0x02
0066c0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0066c2   f000
0066c4   0e03     movlw   0x3              	MOVLW	0x03
0066c6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0066c8   f001
0066ca   0e04     movlw   0x4              	MOVLW	0x04
0066cc   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0066ce   f002
0066d0   0e05     movlw   0x5              	MOVLW	0x05
0066d2   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0066d4   f003
                                           ;	.line	270; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	spbrg=(48000000/(4*baudrate))-1;
0066d6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0066d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0066da   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0066dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0066de   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0066e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0066e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0066e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0066e6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0066e8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0066ea   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0066ec   0e04     movlw   0x4              	MOVLW	0x04
0066ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0066f0   ec25     call    0x4a, 0          	CALL	__mullong
0066f2   f000
0066f4   6e00     movwf   0, 0             	MOVWF	r0x00
0066f6   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0066f8   f001
0066fa   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
0066fc   f002
0066fe   cfe9     movff   0xfe9, 0x3       	MOVFF	FSR0L, r0x03
006700   f003
006702   0e08     movlw   0x8              	MOVLW	0x08
006704   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006706   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006708   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00670a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00670c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00670e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006710   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006712   5000     movf    0, 0, 0          	MOVF	r0x00, W
006714   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006716   0e02     movlw   0x2              	MOVLW	0x02
006718   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00671a   0edc     movlw   0xdc             	MOVLW	0xdc
00671c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00671e   0e6c     movlw   0x6c             	MOVLW	0x6c
006720   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006722   0e00     movlw   0                	MOVLW	0x00
006724   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006726   ecac     call    0x5f58, 0        	CALL	__divulong
006728   f02f
00672a   6e00     movwf   0, 0             	MOVWF	r0x00
00672c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00672e   f001
006730   0e08     movlw   0x8              	MOVLW	0x08
006732   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006734   0eff     movlw   0xff             	MOVLW	0xff
006736   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
006738   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
                                           ;	.line	271; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	highbyte=spbrg/256;
00673a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ;	.line	272; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	lowbyte=spbrg%256;
00673c   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	273; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	TXSTAbits.BRGH=1;               	  	// set BRGH bit
00673e   84ac     bsf     0xac, 0x2, 0     	BSF	_TXSTAbits, 2
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	BAUDCONbits.BRG16=1;					// set 16 bits SPBRG
006740   86b8     bsf     0xb8, 0x3, 0     	BSF	_BAUDCONbits, 3
                                           ;	.line	275; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	SPBRGH=highbyte;                        // set UART speed SPBRGH
006742   c004     movff   0x4, 0xfb0       	MOVFF	r0x04, _SPBRGH
006744   ffb0
                                           ;	.line	276; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	SPBRG=lowbyte;   						// set UART speed SPBRGL
006746   c000     movff   0, 0xfaf         	MOVFF	r0x00, _SPBRG
006748   ffaf
                                           ;	.line	277; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	RCSTA=0x90;                             // set RCEN and SPEN
00674a   0e90     movlw   0x90             	MOVLW	0x90
00674c   6eab     movwf   0xab, 0          	MOVWF	_RCSTA
                                           ;	.line	278; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	BAUDCONbits.RCIDL=1;			// set receive active
00674e   8cb8     bsf     0xb8, 0x6, 0     	BSF	_BAUDCONbits, 6
                                           ;	.line	279; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	PIE1bits.RCIE=1;                        // enable interrupt on RX
006750   8a9d     bsf     0x9d, 0x5, 0     	BSF	_PIE1bits, 5
                                           ;	.line	280; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	INTCONbits.PEIE=1;                      // enable peripheral interrupts
006752   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	281; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	IPR1bits.RCIP=1;                        // define high priority for RX interrupt
006754   8a9f     bsf     0x9f, 0x5, 0     	BSF	_IPR1bits, 5
                                           ; #	MOVLW	0x01
                                           ; #	MOVWF	_wpointer, B
                                           ; #	MOVLW	0x01
                                           ;	.line	282; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	wpointer=1;                             // initialize write pointer
006756   0e01     movlw   0x1              	MOVLW	0x01
006758   0103     movlb   0x3              	BANKSEL	_wpointer
                                           ;	.line	283; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	rpointer=1;                             // initialize read pointer
00675a   6fcf     movwf   0xcf, 0x1        	MOVWF	_wpointer, B
00675c   0103     movlb   0x3              	BANKSEL	_rpointer
00675e   6fd0     movwf   0xd0, 0x1        	MOVWF	_rpointer, B
                                           ;	.line	284; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	TXSTAbits.TXEN=1;                       // enable TX
006760   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	285; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	INTCONbits.GIE=1;
006762   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
006764   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
006766   f004
006768   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00676a   f003
00676c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00676e   f002
006770   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006772   f001
006774   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006776   f000
006778   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00677a   ffd9
00677c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__printfmod	code
                                           _printfmod:
                                           ;	.line	254; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	int printfmod(stdout1 func, const char *format, va_list args)
006d94   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006d96   ffe5
006d98   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006d9a   ffd9
006d9c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006d9e   ffe5
006da0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006da2   ffe5
006da4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006da6   ffe5
006da8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006daa   ffe5
006dac   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006dae   ffe5
006db0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
006db2   ffe5
006db4   0e02     movlw   0x2              	MOVLW	0x02
006db6   cfdb     movff   0xfdb, 0x3be     	MOVFF	PLUSW2, _putchar1
006db8   f3be
006dba   0e03     movlw   0x3              	MOVLW	0x03
006dbc   cfdb     movff   0xfdb, 0x3bf     	MOVFF	PLUSW2, (_putchar1 + 1)
006dbe   f3bf
006dc0   0e04     movlw   0x4              	MOVLW	0x04
006dc2   cfdb     movff   0xfdb, 0x3c0     	MOVFF	PLUSW2, (_putchar1 + 2)
006dc4   f3c0
006dc6   0e05     movlw   0x5              	MOVLW	0x05
006dc8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006dca   f000
006dcc   0e06     movlw   0x6              	MOVLW	0x06
006dce   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
006dd0   f001
006dd2   0e07     movlw   0x7              	MOVLW	0x07
006dd4   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
006dd6   f002
006dd8   0e08     movlw   0x8              	MOVLW	0x08
006dda   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
006ddc   f003
006dde   0e09     movlw   0x9              	MOVLW	0x09
006de0   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
006de2   f004
006de4   0e0a     movlw   0xa              	MOVLW	0x0a
006de6   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
006de8   f005
                                           ;	.line	260; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return print(0, format, args );
006dea   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
006dec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006dee   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006df0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006df2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006df4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006df6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006df8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006dfa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006dfc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006dfe   5000     movf    0, 0, 0          	MOVF	r0x00, W
006e00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006e02   0e00     movlw   0                	MOVLW	0x00
006e04   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e06   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e08   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006e0a   ec38     call    0x2070, 0        	CALL	_print
006e0c   f010
006e0e   6e00     movwf   0, 0             	MOVWF	r0x00
006e10   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
006e12   f001
006e14   0e09     movlw   0x9              	MOVLW	0x09
006e16   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006e18   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
006e1a   fff3
006e1c   5000     movf    0, 0, 0          	MOVF	r0x00, W
006e1e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
006e20   f005
006e22   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
006e24   f004
006e26   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006e28   f003
006e2a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
006e2c   f002
006e2e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006e30   f001
006e32   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006e34   f000
006e36   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006e38   ffd9
006e3a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__print	code
                                           _print:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	static int print(char **out, const char *format, va_list args )
002070   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002072   ffe5
002074   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002076   ffd9
002078   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00207a   ffe5
00207c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00207e   ffe5
002080   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002082   ffe5
002084   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002086   ffe5
002088   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00208a   ffe5
00208c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00208e   ffe5
002090   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002092   ffe5
002094   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002096   ffe5
002098   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00209a   ffe5
00209c   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
00209e   ffe5
0020a0   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
0020a2   ffe5
0020a4   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
0020a6   ffe5
0020a8   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
0020aa   ffe5
0020ac   c00d     movff   0xd, 0xfe5       	MOVFF	r0x0d, POSTDEC1
0020ae   ffe5
0020b0   c00e     movff   0xe, 0xfe5       	MOVFF	r0x0e, POSTDEC1
0020b2   ffe5
0020b4   c00f     movff   0xf, 0xfe5       	MOVFF	r0x0f, POSTDEC1
0020b6   ffe5
0020b8   c010     movff   0x10, 0xfe5      	MOVFF	r0x10, POSTDEC1
0020ba   ffe5
0020bc   c011     movff   0x11, 0xfe5      	MOVFF	r0x11, POSTDEC1
0020be   ffe5
0020c0   c012     movff   0x12, 0xfe5      	MOVFF	r0x12, POSTDEC1
0020c2   ffe5
0020c4   c013     movff   0x13, 0xfe5      	MOVFF	r0x13, POSTDEC1
0020c6   ffe5
0020c8   c014     movff   0x14, 0xfe5      	MOVFF	r0x14, POSTDEC1
0020ca   ffe5
0020cc   c015     movff   0x15, 0xfe5      	MOVFF	r0x15, POSTDEC1
0020ce   ffe5
0020d0   0e02     movlw   0x2              	MOVLW	0x02
0020d2   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0020d4   f000
0020d6   0e03     movlw   0x3              	MOVLW	0x03
0020d8   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0020da   f001
0020dc   0e04     movlw   0x4              	MOVLW	0x04
0020de   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0020e0   f002
0020e2   0e05     movlw   0x5              	MOVLW	0x05
0020e4   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0020e6   f003
0020e8   0e06     movlw   0x6              	MOVLW	0x06
0020ea   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
0020ec   f004
0020ee   0e07     movlw   0x7              	MOVLW	0x07
0020f0   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
0020f2   f005
0020f4   0e08     movlw   0x8              	MOVLW	0x08
0020f6   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
0020f8   f006
0020fa   0e09     movlw   0x9              	MOVLW	0x09
0020fc   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
0020fe   f007
002100   0e0a     movlw   0xa              	MOVLW	0x0a
002102   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
002104   f008
                                           ;	.line	161; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	int pc = 0;
002106   6a09     clrf    0x9, 0           	CLRF	r0x09
002108   6a0a     clrf    0xa, 0           	CLRF	r0x0a
                                           _00911_DS_:
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for (; *format != 0; ++format)
00210a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00210c   ffe9
00210e   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
002110   fff3
002112   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002114   ec29     call    0x52, 0          	CALL	__gptrget1
002116   f000
002118   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
00211a   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00211c   e102     bnz     0x2122           	BNZ	_00985_DS_
00211e   ef93     goto    0x2726           	GOTO	_00903_DS_
002120   f013
                                           _00985_DS_:
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (*format == '%')
002122   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002124   0a25     xorlw   0x25             	XORLW	0x25
002126   e002     bz      0x212c           	BZ	_00987_DS_
002128   ef79     goto    0x26f2           	GOTO	_00898_DS_
00212a   f013
                                           _00987_DS_:
                                           ;	.line	169; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++format;
00212c   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00212e   e302     bnc     0x2134           	BNC	_00988_DS_
002130   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
002132   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
                                           _00988_DS_:
                                           ;	.line	170; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	width = pad = 0;
002134   6a0b     clrf    0xb, 0           	CLRF	r0x0b
002136   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002138   6a0d     clrf    0xd, 0           	CLRF	r0x0d
00213a   6a0e     clrf    0xe, 0           	CLRF	r0x0e
                                           ;	.line	171; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (*format == '\0') break;
00213c   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00213e   ffe9
002140   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
002142   fff3
002144   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002146   ec29     call    0x52, 0          	CALL	__gptrget1
002148   f000
00214a   6e0f     movwf   0xf, 0           	MOVWF	r0x0f
00214c   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
00214e   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
002150   ef93     goto    0x2726           	GOTO	_00903_DS_
002152   f013
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (*format == '%') goto out;
002154   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
002156   0a25     xorlw   0x25             	XORLW	0x25
002158   e102     bnz     0x215e           	BNZ	_00990_DS_
00215a   ef79     goto    0x26f2           	GOTO	_00898_DS_
00215c   f013
                                           _00990_DS_:
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (*format == '-')
00215e   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
002160   0a2d     xorlw   0x2d             	XORLW	0x2d
002162   e107     bnz     0x2172           	BNZ	_00922_DS_
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++format;
002164   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
002166   e302     bnc     0x216c           	BNC	_00993_DS_
002168   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
00216a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
                                           _00993_DS_:
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pad = PAD_RIGHT;
00216c   0e01     movlw   0x1              	MOVLW	0x01
00216e   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002170   6a0c     clrf    0xc, 0           	CLRF	r0x0c
                                           _00922_DS_:
                                           ;	.line	178; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	while (*format == '0')
002172   c003     movff   0x3, 0xf         	MOVFF	r0x03, r0x0f
002174   f00f
002176   c004     movff   0x4, 0x10        	MOVFF	r0x04, r0x10
002178   f010
00217a   c005     movff   0x5, 0x11        	MOVFF	r0x05, r0x11
00217c   f011
                                           _00876_DS_:
00217e   c00f     movff   0xf, 0xfe9       	MOVFF	r0x0f, FSR0L
002180   ffe9
002182   c010     movff   0x10, 0xff3      	MOVFF	r0x10, PRODL
002184   fff3
002186   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
002188   ec29     call    0x52, 0          	CALL	__gptrget1
00218a   f000
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
00218c   0a30     xorlw   0x30             	XORLW	0x30
00218e   e106     bnz     0x219c           	BNZ	_00908_DS_
                                           ;	.line	180; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++format;
002190   2a0f     incf    0xf, 0x1, 0      	INCF	r0x0f, F
002192   e302     bnc     0x2198           	BNC	_00996_DS_
002194   4a10     infsnz  0x10, 0x1, 0     	INFSNZ	r0x10, F
002196   2a11     incf    0x11, 0x1, 0     	INCF	r0x11, F
                                           _00996_DS_:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pad |= PAD_ZERO;
002198   820b     bsf     0xb, 0x1, 0      	BSF	r0x0b, 1
00219a   d7f1     bra     0x217e           	BRA	_00876_DS_
                                           _00908_DS_:
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; *format >= '0' && *format <= '9'; ++format)
00219c   c00f     movff   0xf, 0xfe9       	MOVFF	r0x0f, FSR0L
00219e   ffe9
0021a0   c010     movff   0x10, 0xff3      	MOVFF	r0x10, PRODL
0021a2   fff3
0021a4   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0021a6   ec29     call    0x52, 0          	CALL	__gptrget1
0021a8   f000
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
0021aa   6e12     movwf   0x12, 0          	MOVWF	r0x12
0021ac   0f80     addlw   0x80             	ADDLW	0x80
0021ae   0f50     addlw   0x50             	ADDLW	0x50
0021b0   e322     bnc     0x21f6           	BNC	_00939_DS_
0021b2   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
0021b4   0f80     addlw   0x80             	ADDLW	0x80
0021b6   0f46     addlw   0x46             	ADDLW	0x46
0021b8   e21e     bc      0x21f6           	BC	_00939_DS_
                                           ;	.line	185; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	width *= 10;
0021ba   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
0021bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0021be   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0021c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0021c2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0021c4   0e0a     movlw   0xa              	MOVLW	0x0a
0021c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0021c8   ec27     call    0x4e, 0          	CALL	__mulint
0021ca   f000
0021cc   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
0021ce   cff3     movff   0xff3, 0xe       	MOVFF	PRODL, r0x0e
0021d0   f00e
0021d2   0e04     movlw   0x4              	MOVLW	0x04
0021d4   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	width += *format - '0';
0021d6   6a13     clrf    0x13, 0          	CLRF	r0x13
0021d8   be12     btfsc   0x12, 0x7, 0     	BTFSC	r0x12, 7
0021da   6813     setf    0x13, 0          	SETF	r0x13
0021dc   0ed0     movlw   0xd0             	MOVLW	0xd0
0021de   2612     addwf   0x12, 0x1, 0     	ADDWF	r0x12, F
0021e0   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0021e2   0613     decf    0x13, 0x1, 0     	DECF	r0x13, F
0021e4   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
0021e6   260d     addwf   0xd, 0x1, 0      	ADDWF	r0x0d, F
0021e8   5013     movf    0x13, 0, 0       	MOVF	r0x13, W
0021ea   220e     addwfc  0xe, 0x1, 0      	ADDWFC	r0x0e, F
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; *format >= '0' && *format <= '9'; ++format)
0021ec   2a0f     incf    0xf, 0x1, 0      	INCF	r0x0f, F
0021ee   e302     bnc     0x21f4           	BNC	_01000_DS_
0021f0   4a10     infsnz  0x10, 0x1, 0     	INFSNZ	r0x10, F
0021f2   2a11     incf    0x11, 0x1, 0     	INCF	r0x11, F
                                           _01000_DS_:
0021f4   d7d3     bra     0x219c           	BRA	_00908_DS_
                                           _00939_DS_:
0021f6   c00f     movff   0xf, 0x3         	MOVFF	r0x0f, r0x03
0021f8   f003
0021fa   c010     movff   0x10, 0x4        	MOVFF	r0x10, r0x04
0021fc   f004
0021fe   c011     movff   0x11, 0x5        	MOVFF	r0x11, r0x05
002200   f005
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 's' )
002202   c00f     movff   0xf, 0xfe9       	MOVFF	r0x0f, FSR0L
002204   ffe9
002206   c010     movff   0x10, 0xff3      	MOVFF	r0x10, PRODL
002208   fff3
00220a   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
00220c   ec29     call    0x52, 0          	CALL	__gptrget1
00220e   f000
                                           ; #	MOVWF	r0x0f
                                           ; #	MOVF	r0x0f, W
002210   6e0f     movwf   0xf, 0           	MOVWF	r0x0f
002212   0a73     xorlw   0x73             	XORLW	0x73
002214   e001     bz      0x2218           	BZ	_01002_DS_
002216   d057     bra     0x22c6           	BRA	_00881_DS_
                                           _01002_DS_:
                                           ;	.line	191; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	char *s = va_arg(args, char*);
002218   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00221a   0f03     addlw   0x3              	ADDLW	0x03
00221c   6e10     movwf   0x10, 0          	MOVWF	r0x10
00221e   0e00     movlw   0                	MOVLW	0x00
002220   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
002222   6e11     movwf   0x11, 0          	MOVWF	r0x11
002224   0e00     movlw   0                	MOVLW	0x00
002226   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
002228   6e12     movwf   0x12, 0          	MOVWF	r0x12
00222a   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
00222c   f006
00222e   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
002230   f007
002232   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
002234   f008
002236   0efd     movlw   0xfd             	MOVLW	0xfd
002238   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
00223a   0eff     movlw   0xff             	MOVLW	0xff
00223c   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
00223e   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
002240   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
002242   ffe9
002244   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
002246   fff3
002248   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
00224a   ec2d     call    0x5a, 0          	CALL	__gptrget3
00224c   f000
00224e   6e10     movwf   0x10, 0          	MOVWF	r0x10
002250   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
002252   f011
002254   cff4     movff   0xff4, 0x12      	MOVFF	PRODH, r0x12
002256   f012
002258   c010     movff   0x10, 0x13       	MOVFF	r0x10, r0x13
00225a   f013
00225c   c011     movff   0x11, 0x14       	MOVFF	r0x11, r0x14
00225e   f014
002260   c012     movff   0x12, 0x15       	MOVFF	r0x12, r0x15
002262   f015
                                           ;	.line	193; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += prints (out, s?s:"(null)", width, pad);
002264   1011     iorwf   0x11, 0, 0       	IORWF	r0x11, W
002266   1012     iorwf   0x12, 0, 0       	IORWF	r0x12, W
002268   e007     bz      0x2278           	BZ	_00914_DS_
00226a   c013     movff   0x13, 0x10       	MOVFF	r0x13, r0x10
00226c   f010
00226e   c014     movff   0x14, 0x11       	MOVFF	r0x14, r0x11
002270   f011
002272   c015     movff   0x15, 0x12       	MOVFF	r0x15, r0x12
002274   f012
002276   d006     bra     0x2284           	BRA	_00915_DS_
                                           _00914_DS_:
002278   0e00     movlw   0                	MOVLW	UPPER(___str_0)
00227a   6e12     movwf   0x12, 0          	MOVWF	r0x12
00227c   0e32     movlw   0x32             	MOVLW	HIGH(___str_0)
00227e   6e11     movwf   0x11, 0          	MOVWF	r0x11
002280   0ec8     movlw   0xc8             	MOVLW	LOW(___str_0)
002282   6e10     movwf   0x10, 0          	MOVWF	r0x10
                                           _00915_DS_:
002284   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
002286   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002288   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
00228a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00228c   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
00228e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002290   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
002292   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002294   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
002296   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002298   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
00229a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00229c   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
00229e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022a0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0022a2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022a4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0022a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022a8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0022aa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0022ac   ec8a     call    0x4b14, 0        	CALL	_prints
0022ae   f025
0022b0   6e10     movwf   0x10, 0          	MOVWF	r0x10
0022b2   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
0022b4   f011
0022b6   0e0a     movlw   0xa              	MOVLW	0x0a
0022b8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0022ba   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
0022bc   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
0022be   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0022c0   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	194; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
0022c2   ef8d     goto    0x271a           	GOTO	_00902_DS_
0022c4   f013
                                           _00881_DS_:
                                           ;	.line	196; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'd' )
0022c6   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
0022c8   0a64     xorlw   0x64             	XORLW	0x64
0022ca   e001     bz      0x22ce           	BZ	_01004_DS_
0022cc   d045     bra     0x2358           	BRA	_00883_DS_
                                           _01004_DS_:
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += printi (out, va_arg(args, int), 10, 1, width, pad, 'a');
0022ce   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0022d0   0f02     addlw   0x2              	ADDLW	0x02
0022d2   6e10     movwf   0x10, 0          	MOVWF	r0x10
0022d4   0e00     movlw   0                	MOVLW	0x00
0022d6   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
0022d8   6e11     movwf   0x11, 0          	MOVWF	r0x11
0022da   0e00     movlw   0                	MOVLW	0x00
0022dc   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
0022de   6e12     movwf   0x12, 0          	MOVWF	r0x12
0022e0   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
0022e2   f006
0022e4   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
0022e6   f007
0022e8   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
0022ea   f008
0022ec   0efe     movlw   0xfe             	MOVLW	0xfe
0022ee   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
0022f0   0eff     movlw   0xff             	MOVLW	0xff
0022f2   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
0022f4   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
0022f6   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
0022f8   ffe9
0022fa   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
0022fc   fff3
0022fe   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
002300   ec2b     call    0x56, 0          	CALL	__gptrget2
002302   f000
002304   6e10     movwf   0x10, 0          	MOVWF	r0x10
002306   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
002308   f011
00230a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00230c   0e61     movlw   0x61             	MOVLW	0x61
00230e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002310   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
002312   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002314   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002316   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002318   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
00231a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00231c   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
00231e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002320   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002322   0e01     movlw   0x1              	MOVLW	0x01
002324   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002326   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002328   0e0a     movlw   0xa              	MOVLW	0x0a
00232a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00232c   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
00232e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002330   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002332   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002334   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002336   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002338   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00233a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00233c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00233e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002340   ec00     call    0x3a00, 0        	CALL	_printi
002342   f01d
002344   6e10     movwf   0x10, 0          	MOVWF	r0x10
002346   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
002348   f011
00234a   0e0f     movlw   0xf              	MOVLW	0x0f
00234c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00234e   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002350   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
002352   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
002354   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
002356   d1e1     bra     0x271a           	BRA	_00902_DS_
                                           _00883_DS_:
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'x' )
002358   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
00235a   0a78     xorlw   0x78             	XORLW	0x78
00235c   e001     bz      0x2360           	BZ	_01006_DS_
00235e   d044     bra     0x23e8           	BRA	_00885_DS_
                                           _01006_DS_:
                                           ;	.line	203; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += printi (out, va_arg(args, int), 16, 0, width, pad, 'a');
002360   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002362   0f02     addlw   0x2              	ADDLW	0x02
002364   6e10     movwf   0x10, 0          	MOVWF	r0x10
002366   0e00     movlw   0                	MOVLW	0x00
002368   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
00236a   6e11     movwf   0x11, 0          	MOVWF	r0x11
00236c   0e00     movlw   0                	MOVLW	0x00
00236e   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
002370   6e12     movwf   0x12, 0          	MOVWF	r0x12
002372   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
002374   f006
002376   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
002378   f007
00237a   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
00237c   f008
00237e   0efe     movlw   0xfe             	MOVLW	0xfe
002380   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
002382   0eff     movlw   0xff             	MOVLW	0xff
002384   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
002386   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
002388   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
00238a   ffe9
00238c   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
00238e   fff3
002390   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
002392   ec2b     call    0x56, 0          	CALL	__gptrget2
002394   f000
002396   6e10     movwf   0x10, 0          	MOVWF	r0x10
002398   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
00239a   f011
00239c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00239e   0e61     movlw   0x61             	MOVLW	0x61
0023a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023a2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0023a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023a6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0023a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023aa   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
0023ac   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023ae   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0023b0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023b2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0023b4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0023b6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0023b8   0e10     movlw   0x10             	MOVLW	0x10
0023ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023bc   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0023be   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023c0   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
0023c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023c4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0023c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023c8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0023ca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023cc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0023ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0023d0   ec00     call    0x3a00, 0        	CALL	_printi
0023d2   f01d
0023d4   6e10     movwf   0x10, 0          	MOVWF	r0x10
0023d6   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
0023d8   f011
0023da   0e0f     movlw   0xf              	MOVLW	0x0f
0023dc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0023de   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
0023e0   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
0023e2   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0023e4   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
0023e6   d199     bra     0x271a           	BRA	_00902_DS_
                                           _00885_DS_:
                                           ;	.line	206; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'X' )
0023e8   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
0023ea   0a58     xorlw   0x58             	XORLW	0x58
0023ec   e001     bz      0x23f0           	BZ	_01008_DS_
0023ee   d044     bra     0x2478           	BRA	_00887_DS_
                                           _01008_DS_:
                                           ;	.line	208; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += printi (out, va_arg(args, int), 16, 0, width, pad, 'A');
0023f0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0023f2   0f02     addlw   0x2              	ADDLW	0x02
0023f4   6e10     movwf   0x10, 0          	MOVWF	r0x10
0023f6   0e00     movlw   0                	MOVLW	0x00
0023f8   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
0023fa   6e11     movwf   0x11, 0          	MOVWF	r0x11
0023fc   0e00     movlw   0                	MOVLW	0x00
0023fe   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
002400   6e12     movwf   0x12, 0          	MOVWF	r0x12
002402   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
002404   f006
002406   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
002408   f007
00240a   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
00240c   f008
00240e   0efe     movlw   0xfe             	MOVLW	0xfe
002410   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
002412   0eff     movlw   0xff             	MOVLW	0xff
002414   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
002416   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
002418   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
00241a   ffe9
00241c   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
00241e   fff3
002420   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
002422   ec2b     call    0x56, 0          	CALL	__gptrget2
002424   f000
002426   6e10     movwf   0x10, 0          	MOVWF	r0x10
002428   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
00242a   f011
00242c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00242e   0e41     movlw   0x41             	MOVLW	0x41
002430   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002432   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
002434   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002436   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002438   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00243a   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
00243c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00243e   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
002440   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002442   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002444   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002446   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002448   0e10     movlw   0x10             	MOVLW	0x10
00244a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00244c   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
00244e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002450   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002452   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002454   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002456   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002458   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00245a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00245c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00245e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002460   ec00     call    0x3a00, 0        	CALL	_printi
002462   f01d
002464   6e10     movwf   0x10, 0          	MOVWF	r0x10
002466   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
002468   f011
00246a   0e0f     movlw   0xf              	MOVLW	0x0f
00246c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00246e   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002470   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
002472   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
002474   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
002476   d151     bra     0x271a           	BRA	_00902_DS_
                                           _00887_DS_:
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'b' )
002478   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
00247a   0a62     xorlw   0x62             	XORLW	0x62
00247c   e001     bz      0x2480           	BZ	_01010_DS_
00247e   d044     bra     0x2508           	BRA	_00889_DS_
                                           _01010_DS_:
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += printi (out, va_arg(args, int), 2, 0, width, pad, 'a');
002480   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002482   0f02     addlw   0x2              	ADDLW	0x02
002484   6e10     movwf   0x10, 0          	MOVWF	r0x10
002486   0e00     movlw   0                	MOVLW	0x00
002488   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
00248a   6e11     movwf   0x11, 0          	MOVWF	r0x11
00248c   0e00     movlw   0                	MOVLW	0x00
00248e   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
002490   6e12     movwf   0x12, 0          	MOVWF	r0x12
002492   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
002494   f006
002496   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
002498   f007
00249a   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
00249c   f008
00249e   0efe     movlw   0xfe             	MOVLW	0xfe
0024a0   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
0024a2   0eff     movlw   0xff             	MOVLW	0xff
0024a4   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
0024a6   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
0024a8   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
0024aa   ffe9
0024ac   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
0024ae   fff3
0024b0   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
0024b2   ec2b     call    0x56, 0          	CALL	__gptrget2
0024b4   f000
0024b6   6e10     movwf   0x10, 0          	MOVWF	r0x10
0024b8   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
0024ba   f011
0024bc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0024be   0e61     movlw   0x61             	MOVLW	0x61
0024c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024c2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0024c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024c6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0024c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024ca   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
0024cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024ce   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0024d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024d2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0024d4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0024d6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0024d8   0e02     movlw   0x2              	MOVLW	0x02
0024da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024dc   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0024de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024e0   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
0024e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0024e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024e8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0024ea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024ec   5000     movf    0, 0, 0          	MOVF	r0x00, W
0024ee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0024f0   ec00     call    0x3a00, 0        	CALL	_printi
0024f2   f01d
0024f4   6e10     movwf   0x10, 0          	MOVWF	r0x10
0024f6   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
0024f8   f011
0024fa   0e0f     movlw   0xf              	MOVLW	0x0f
0024fc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0024fe   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002500   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
002502   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
002504   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
002506   d109     bra     0x271a           	BRA	_00902_DS_
                                           _00889_DS_:
                                           ;	.line	216; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'o' )
002508   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
00250a   0a6f     xorlw   0x6f             	XORLW	0x6f
00250c   e001     bz      0x2510           	BZ	_01012_DS_
00250e   d044     bra     0x2598           	BRA	_00891_DS_
                                           _01012_DS_:
                                           ;	.line	218; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += printi (out, va_arg(args, int), 8, 0, width, pad, 'a');
002510   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002512   0f02     addlw   0x2              	ADDLW	0x02
002514   6e10     movwf   0x10, 0          	MOVWF	r0x10
002516   0e00     movlw   0                	MOVLW	0x00
002518   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
00251a   6e11     movwf   0x11, 0          	MOVWF	r0x11
00251c   0e00     movlw   0                	MOVLW	0x00
00251e   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
002520   6e12     movwf   0x12, 0          	MOVWF	r0x12
002522   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
002524   f006
002526   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
002528   f007
00252a   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
00252c   f008
00252e   0efe     movlw   0xfe             	MOVLW	0xfe
002530   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
002532   0eff     movlw   0xff             	MOVLW	0xff
002534   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
002536   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
002538   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
00253a   ffe9
00253c   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
00253e   fff3
002540   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
002542   ec2b     call    0x56, 0          	CALL	__gptrget2
002544   f000
002546   6e10     movwf   0x10, 0          	MOVWF	r0x10
002548   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
00254a   f011
00254c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00254e   0e61     movlw   0x61             	MOVLW	0x61
002550   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002552   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
002554   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002556   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002558   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00255a   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
00255c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00255e   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
002560   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002562   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002564   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002566   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002568   0e08     movlw   0x8              	MOVLW	0x08
00256a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00256c   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
00256e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002570   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002572   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002574   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002576   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002578   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00257a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00257c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00257e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002580   ec00     call    0x3a00, 0        	CALL	_printi
002582   f01d
002584   6e10     movwf   0x10, 0          	MOVWF	r0x10
002586   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
002588   f011
00258a   0e0f     movlw   0xf              	MOVLW	0x0f
00258c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00258e   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002590   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
002592   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
002594   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	219; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
002596   d0c1     bra     0x271a           	BRA	_00902_DS_
                                           _00891_DS_:
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'u' )
002598   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
00259a   0a75     xorlw   0x75             	XORLW	0x75
00259c   e001     bz      0x25a0           	BZ	_01014_DS_
00259e   d044     bra     0x2628           	BRA	_00893_DS_
                                           _01014_DS_:
                                           ;	.line	223; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += printi (out, va_arg(args, int), 10, 0, width, pad, 'a');
0025a0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0025a2   0f02     addlw   0x2              	ADDLW	0x02
0025a4   6e10     movwf   0x10, 0          	MOVWF	r0x10
0025a6   0e00     movlw   0                	MOVLW	0x00
0025a8   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
0025aa   6e11     movwf   0x11, 0          	MOVWF	r0x11
0025ac   0e00     movlw   0                	MOVLW	0x00
0025ae   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
0025b0   6e12     movwf   0x12, 0          	MOVWF	r0x12
0025b2   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
0025b4   f006
0025b6   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
0025b8   f007
0025ba   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
0025bc   f008
0025be   0efe     movlw   0xfe             	MOVLW	0xfe
0025c0   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
0025c2   0eff     movlw   0xff             	MOVLW	0xff
0025c4   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
0025c6   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
0025c8   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
0025ca   ffe9
0025cc   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
0025ce   fff3
0025d0   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
0025d2   ec2b     call    0x56, 0          	CALL	__gptrget2
0025d4   f000
0025d6   6e10     movwf   0x10, 0          	MOVWF	r0x10
0025d8   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
0025da   f011
0025dc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0025de   0e61     movlw   0x61             	MOVLW	0x61
0025e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025e2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0025e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025e6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0025e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025ea   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
0025ec   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025ee   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0025f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025f2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0025f4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0025f6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0025f8   0e0a     movlw   0xa              	MOVLW	0x0a
0025fa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0025fc   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0025fe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002600   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002602   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002604   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002606   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002608   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00260a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00260c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00260e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002610   ec00     call    0x3a00, 0        	CALL	_printi
002612   f01d
002614   6e10     movwf   0x10, 0          	MOVWF	r0x10
002616   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
002618   f011
00261a   0e0f     movlw   0xf              	MOVLW	0x0f
00261c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00261e   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
002620   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
002622   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
002624   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	224; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
002626   d079     bra     0x271a           	BRA	_00902_DS_
                                           _00893_DS_:
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'c' )
002628   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
00262a   0a63     xorlw   0x63             	XORLW	0x63
00262c   e001     bz      0x2630           	BZ	_01016_DS_
00262e   d03e     bra     0x26ac           	BRA	_00895_DS_
                                           _01016_DS_:
                                           ;	.line	229; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	scr[0] = (char)va_arg( args, int);
002630   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002632   0f02     addlw   0x2              	ADDLW	0x02
002634   6e10     movwf   0x10, 0          	MOVWF	r0x10
002636   0e00     movlw   0                	MOVLW	0x00
002638   2007     addwfc  0x7, 0, 0        	ADDWFC	r0x07, W
00263a   6e11     movwf   0x11, 0          	MOVWF	r0x11
00263c   0e00     movlw   0                	MOVLW	0x00
00263e   2008     addwfc  0x8, 0, 0        	ADDWFC	r0x08, W
002640   6e12     movwf   0x12, 0          	MOVWF	r0x12
002642   c010     movff   0x10, 0x6        	MOVFF	r0x10, r0x06
002644   f006
002646   c011     movff   0x11, 0x7        	MOVFF	r0x11, r0x07
002648   f007
00264a   c012     movff   0x12, 0x8        	MOVFF	r0x12, r0x08
00264c   f008
00264e   0efe     movlw   0xfe             	MOVLW	0xfe
002650   2610     addwf   0x10, 0x1, 0     	ADDWF	r0x10, F
002652   0eff     movlw   0xff             	MOVLW	0xff
002654   2211     addwfc  0x11, 0x1, 0     	ADDWFC	r0x11, F
002656   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVWF	r0x12
                                           ; #	MOVF	r0x12, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVWF	r0x11
                                           ; #	MOVF	r0x11, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVF	r0x10, W
                                           ; #	MOVWF	r0x10
002658   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
00265a   ffe9
00265c   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
00265e   fff3
002660   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
002662   ec2b     call    0x56, 0          	CALL	__gptrget2
002664   f000
002666   0103     movlb   0x3              	BANKSEL	_print_scr_1_164
002668   6fc4     movwf   0xc4, 0x1        	MOVWF	_print_scr_1_164, B
                                           ; removed redundant BANKSEL
                                           ;	.line	231; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	scr[1] = '\0';
00266a   6bc5     clrf    0xc5, 0x1        	CLRF	(_print_scr_1_164 + 1), B
                                           ;	.line	232; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += prints (out, scr, width, pad);
00266c   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
00266e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002670   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002672   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002674   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
002676   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002678   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
00267a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00267c   0e80     movlw   0x80             	MOVLW	0x80
00267e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002680   0e03     movlw   0x3              	MOVLW	HIGH(_print_scr_1_164)
002682   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002684   0ec4     movlw   0xc4             	MOVLW	LOW(_print_scr_1_164)
002686   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002688   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00268a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00268c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00268e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002690   5000     movf    0, 0, 0          	MOVF	r0x00, W
002692   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002694   ec8a     call    0x4b14, 0        	CALL	_prints
002696   f025
002698   6e10     movwf   0x10, 0          	MOVWF	r0x10
00269a   cff3     movff   0xff3, 0x11      	MOVFF	PRODL, r0x11
00269c   f011
00269e   0e0a     movlw   0xa              	MOVLW	0x0a
0026a0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0026a2   5010     movf    0x10, 0, 0       	MOVF	r0x10, W
0026a4   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
0026a6   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
0026a8   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
0026aa   d037     bra     0x271a           	BRA	_00902_DS_
                                           _00895_DS_:
                                           ;	.line	235; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( *format == 'f' )
0026ac   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
0026ae   0a66     xorlw   0x66             	XORLW	0x66
0026b0   e134     bnz     0x271a           	BNZ	_00902_DS_
                                           ;	.line	237; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	pc += prints (out, "not yet implemented\0", width, pad);
0026b2   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0026b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026b6   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0026b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026ba   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
0026bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026be   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
0026c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026c2   0e00     movlw   0                	MOVLW	UPPER(___str_1)
0026c4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026c6   0e32     movlw   0x32             	MOVLW	HIGH(___str_1)
0026c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026ca   0ed0     movlw   0xd0             	MOVLW	LOW(___str_1)
0026cc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026ce   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0026d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026d2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0026d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0026d8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0026da   ec8a     call    0x4b14, 0        	CALL	_prints
0026dc   f025
0026de   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0026e0   cff3     movff   0xff3, 0xc       	MOVFF	PRODL, r0x0c
0026e2   f00c
0026e4   0e0a     movlw   0xa              	MOVLW	0x0a
0026e6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0026e8   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
0026ea   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
0026ec   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
0026ee   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
                                           ;	.line	238; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	continue;
0026f0   d014     bra     0x271a           	BRA	_00902_DS_
                                           _00898_DS_:
                                           ;	.line	244; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	printchar (out, *format);
0026f2   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0026f4   ffe9
0026f6   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
0026f8   fff3
0026fa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0026fc   ec29     call    0x52, 0          	CALL	__gptrget1
0026fe   f000
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
002700   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002702   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002704   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002706   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
002708   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00270a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00270c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00270e   ece0     call    0x63c0, 0        	CALL	_printchar
002710   f031
002712   0e04     movlw   0x4              	MOVLW	0x04
002714   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	245; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++pc;
002716   4a09     infsnz  0x9, 0x1, 0      	INFSNZ	r0x09, F
002718   2a0a     incf    0xa, 0x1, 0      	INCF	r0x0a, F
                                           _00902_DS_:
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for (; *format != 0; ++format)
00271a   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00271c   e302     bnc     0x2722           	BNC	_01019_DS_
00271e   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
002720   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
                                           _01019_DS_:
002722   ef85     goto    0x210a           	GOTO	_00911_DS_
002724   f010
                                           _00903_DS_:
                                           ;	.line	248; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (out) **out = '\0';
002726   5000     movf    0, 0, 0          	MOVF	r0x00, W
002728   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
00272a   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
00272c   e014     bz      0x2756           	BZ	_00905_DS_
00272e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
002730   ffe9
002732   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
002734   fff3
002736   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002738   ec2d     call    0x5a, 0          	CALL	__gptrget3
00273a   f000
00273c   6e00     movwf   0, 0             	MOVWF	r0x00
00273e   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
002740   f001
002742   cff4     movff   0xff4, 0x2       	MOVFF	PRODH, r0x02
002744   f002
002746   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
002748   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00274a   ffe9
00274c   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00274e   fff3
002750   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002752   ec31     call    0x62, 0          	CALL	__gptrput1
002754   f000
                                           _00905_DS_:
                                           ;	.line	250; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return pc;
002756   c00a     movff   0xa, 0xff3       	MOVFF	r0x0a, PRODL
002758   fff3
00275a   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
00275c   cfe4     movff   0xfe4, 0x15      	MOVFF	PREINC1, r0x15
00275e   f015
002760   cfe4     movff   0xfe4, 0x14      	MOVFF	PREINC1, r0x14
002762   f014
002764   cfe4     movff   0xfe4, 0x13      	MOVFF	PREINC1, r0x13
002766   f013
002768   cfe4     movff   0xfe4, 0x12      	MOVFF	PREINC1, r0x12
00276a   f012
00276c   cfe4     movff   0xfe4, 0x11      	MOVFF	PREINC1, r0x11
00276e   f011
002770   cfe4     movff   0xfe4, 0x10      	MOVFF	PREINC1, r0x10
002772   f010
002774   cfe4     movff   0xfe4, 0xf       	MOVFF	PREINC1, r0x0f
002776   f00f
002778   cfe4     movff   0xfe4, 0xe       	MOVFF	PREINC1, r0x0e
00277a   f00e
00277c   cfe4     movff   0xfe4, 0xd       	MOVFF	PREINC1, r0x0d
00277e   f00d
002780   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
002782   f00c
002784   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
002786   f00b
002788   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
00278a   f00a
00278c   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00278e   f009
002790   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002792   f008
002794   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002796   f007
002798   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00279a   f006
00279c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00279e   f005
0027a0   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0027a2   f004
0027a4   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0027a6   f003
0027a8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0027aa   f002
0027ac   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0027ae   f001
0027b0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0027b2   f000
0027b4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0027b6   ffd9
0027b8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__printi	code
                                           _printi:
                                           ;	.line	108; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
003a00   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003a02   ffe5
003a04   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003a06   ffd9
003a08   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003a0a   ffe5
003a0c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003a0e   ffe5
003a10   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003a12   ffe5
003a14   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003a16   ffe5
003a18   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003a1a   ffe5
003a1c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003a1e   ffe5
003a20   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003a22   ffe5
003a24   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003a26   ffe5
003a28   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003a2a   ffe5
003a2c   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
003a2e   ffe5
003a30   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
003a32   ffe5
003a34   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
003a36   ffe5
003a38   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
003a3a   ffe5
003a3c   c00d     movff   0xd, 0xfe5       	MOVFF	r0x0d, POSTDEC1
003a3e   ffe5
003a40   c00e     movff   0xe, 0xfe5       	MOVFF	r0x0e, POSTDEC1
003a42   ffe5
003a44   c00f     movff   0xf, 0xfe5       	MOVFF	r0x0f, POSTDEC1
003a46   ffe5
003a48   c010     movff   0x10, 0xfe5      	MOVFF	r0x10, POSTDEC1
003a4a   ffe5
003a4c   c011     movff   0x11, 0xfe5      	MOVFF	r0x11, POSTDEC1
003a4e   ffe5
003a50   c012     movff   0x12, 0xfe5      	MOVFF	r0x12, POSTDEC1
003a52   ffe5
003a54   c013     movff   0x13, 0xfe5      	MOVFF	r0x13, POSTDEC1
003a56   ffe5
003a58   c014     movff   0x14, 0xfe5      	MOVFF	r0x14, POSTDEC1
003a5a   ffe5
003a5c   c015     movff   0x15, 0xfe5      	MOVFF	r0x15, POSTDEC1
003a5e   ffe5
003a60   c016     movff   0x16, 0xfe5      	MOVFF	r0x16, POSTDEC1
003a62   ffe5
003a64   c017     movff   0x17, 0xfe5      	MOVFF	r0x17, POSTDEC1
003a66   ffe5
003a68   c018     movff   0x18, 0xfe5      	MOVFF	r0x18, POSTDEC1
003a6a   ffe5
003a6c   c019     movff   0x19, 0xfe5      	MOVFF	r0x19, POSTDEC1
003a6e   ffe5
003a70   c01a     movff   0x1a, 0xfe5      	MOVFF	r0x1a, POSTDEC1
003a72   ffe5
003a74   0e02     movlw   0x2              	MOVLW	0x02
003a76   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003a78   f000
003a7a   0e03     movlw   0x3              	MOVLW	0x03
003a7c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003a7e   f001
003a80   0e04     movlw   0x4              	MOVLW	0x04
003a82   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003a84   f002
003a86   0e05     movlw   0x5              	MOVLW	0x05
003a88   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
003a8a   f003
003a8c   0e06     movlw   0x6              	MOVLW	0x06
003a8e   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
003a90   f004
003a92   0e07     movlw   0x7              	MOVLW	0x07
003a94   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
003a96   f005
003a98   0e08     movlw   0x8              	MOVLW	0x08
003a9a   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
003a9c   f006
003a9e   0e09     movlw   0x9              	MOVLW	0x09
003aa0   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
003aa2   f007
003aa4   0e0a     movlw   0xa              	MOVLW	0x0a
003aa6   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
003aa8   f008
003aaa   0e0b     movlw   0xb              	MOVLW	0x0b
003aac   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
003aae   f009
003ab0   0e0c     movlw   0xc              	MOVLW	0x0c
003ab2   cfdb     movff   0xfdb, 0xa       	MOVFF	PLUSW2, r0x0a
003ab4   f00a
003ab6   0e0d     movlw   0xd              	MOVLW	0x0d
003ab8   cfdb     movff   0xfdb, 0xb       	MOVFF	PLUSW2, r0x0b
003aba   f00b
003abc   0e0e     movlw   0xe              	MOVLW	0x0e
003abe   cfdb     movff   0xfdb, 0xc       	MOVFF	PLUSW2, r0x0c
003ac0   f00c
003ac2   0e0f     movlw   0xf              	MOVLW	0x0f
003ac4   cfdb     movff   0xfdb, 0xd       	MOVFF	PLUSW2, r0x0d
003ac6   f00d
003ac8   0e10     movlw   0x10             	MOVLW	0x10
003aca   cfdb     movff   0xfdb, 0xe       	MOVFF	PLUSW2, r0x0e
003acc   f00e
                                           ;	.line	112; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	int t, neg = 0, pc = 0;
003ace   6a0f     clrf    0xf, 0           	CLRF	r0x0f
003ad0   6a10     clrf    0x10, 0          	CLRF	r0x10
003ad2   6a11     clrf    0x11, 0          	CLRF	r0x11
003ad4   6a12     clrf    0x12, 0          	CLRF	r0x12
                                           ;	.line	113; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	unsigned int u = i;
003ad6   c003     movff   0x3, 0x13        	MOVFF	r0x03, r0x13
003ad8   f013
003ada   c004     movff   0x4, 0x14        	MOVFF	r0x04, r0x14
003adc   f014
                                           ;	.line	115; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (i == 0)
003ade   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003ae0   1004     iorwf   0x4, 0, 0        	IORWF	r0x04, W
003ae2   e123     bnz     0x3b2a           	BNZ	_00812_DS_
                                           ;	.line	117; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	print_buf[0] = '0';
003ae4   0e30     movlw   0x30             	MOVLW	0x30
003ae6   0103     movlb   0x3              	BANKSEL	_printi_print_buf_1_156
003ae8   6f56     movwf   0x56, 0x1        	MOVWF	_printi_print_buf_1_156, B
                                           ; removed redundant BANKSEL
                                           ;	.line	118; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	print_buf[1] = '\0';
003aea   6b57     clrf    0x57, 0x1        	CLRF	(_printi_print_buf_1_156 + 1), B
                                           ;	.line	119; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return prints (out, print_buf, width, pad);
003aec   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
003aee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003af0   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
003af2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003af4   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
003af6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003af8   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
003afa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003afc   0e80     movlw   0x80             	MOVLW	0x80
003afe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b00   0e03     movlw   0x3              	MOVLW	HIGH(_printi_print_buf_1_156)
003b02   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b04   0e56     movlw   0x56             	MOVLW	LOW(_printi_print_buf_1_156)
003b06   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b08   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003b0a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b0c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003b0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b10   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b14   ec8a     call    0x4b14, 0        	CALL	_prints
003b16   f025
003b18   6e15     movwf   0x15, 0          	MOVWF	r0x15
003b1a   cff3     movff   0xff3, 0x16      	MOVFF	PRODL, r0x16
003b1c   f016
003b1e   0e0a     movlw   0xa              	MOVLW	0x0a
003b20   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003b22   c016     movff   0x16, 0xff3      	MOVFF	r0x16, PRODL
003b24   fff3
003b26   5015     movf    0x15, 0, 0       	MOVF	r0x15, W
003b28   d0b9     bra     0x3c9c           	BRA	_00828_DS_
                                           _00812_DS_:
                                           ;	.line	122; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (sg && b == 10 && i < 0)
003b2a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003b2c   1008     iorwf   0x8, 0, 0        	IORWF	r0x08, W
003b2e   e013     bz      0x3b56           	BZ	_00814_DS_
003b30   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003b32   0a0a     xorlw   0xa              	XORLW	0x0a
003b34   e110     bnz     0x3b56           	BNZ	_00814_DS_
003b36   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003b38   e001     bz      0x3b3c           	BZ	_00862_DS_
                                           _00861_DS_:
003b3a   d00d     bra     0x3b56           	BRA	_00814_DS_
                                           _00862_DS_:
003b3c   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003b3e   ae04     btfss   0x4, 0x7, 0      	BTFSS	r0x04, 7
003b40   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003b42   e309     bnc     0x3b56           	BNC	_00814_DS_
                                           ;	.line	124; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	neg = 1;
003b44   0e01     movlw   0x1              	MOVLW	0x01
003b46   6e0f     movwf   0xf, 0           	MOVWF	r0x0f
003b48   6a10     clrf    0x10, 0          	CLRF	r0x10
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	u = -i;
003b4a   1c04     comf    0x4, 0, 0        	COMF	r0x04, W
003b4c   6e14     movwf   0x14, 0          	MOVWF	r0x14
003b4e   1c03     comf    0x3, 0, 0        	COMF	r0x03, W
003b50   6e13     movwf   0x13, 0          	MOVWF	r0x13
003b52   4a13     infsnz  0x13, 0x1, 0     	INFSNZ	r0x13, F
003b54   2a14     incf    0x14, 0x1, 0     	INCF	r0x14, F
                                           _00814_DS_:
                                           ;	.line	128; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	s = print_buf + PRINT_BUF_LEN-1;
003b56   0e03     movlw   0x3              	MOVLW	HIGH(_printi_print_buf_1_156 + 11)
003b58   6e04     movwf   0x4, 0           	MOVWF	r0x04
003b5a   0e61     movlw   0x61             	MOVLW	LOW(_printi_print_buf_1_156 + 11)
003b5c   6e03     movwf   0x3, 0           	MOVWF	r0x03
003b5e   0e80     movlw   0x80             	MOVLW	0x80
003b60   6e07     movwf   0x7, 0           	MOVWF	r0x07
                                           ;	.line	129; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	*s = '\0';
003b62   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003b64   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003b66   ffe9
003b68   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
003b6a   fff3
003b6c   ec31     call    0x62, 0          	CALL	__gptrput1
003b6e   f000
                                           ;	.line	131; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	while (u)
003b70   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
003b72   0fc6     addlw   0xc6             	ADDLW	0xc6
003b74   6e0d     movwf   0xd, 0           	MOVWF	r0x0d
003b76   c003     movff   0x3, 0xe         	MOVFF	r0x03, r0x0e
003b78   f00e
003b7a   c004     movff   0x4, 0x15        	MOVFF	r0x04, r0x15
003b7c   f015
003b7e   c007     movff   0x7, 0x16        	MOVFF	r0x07, r0x16
003b80   f016
                                           _00819_DS_:
003b82   5013     movf    0x13, 0, 0       	MOVF	r0x13, W
003b84   1014     iorwf   0x14, 0, 0       	IORWF	r0x14, W
003b86   e03a     bz      0x3bfc           	BZ	_00840_DS_
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	t = u % b;
003b88   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003b8a   6e17     movwf   0x17, 0          	MOVWF	r0x17
                                           ; #	MOVF	r0x06, W
                                           ; #	MOVWF	r0x18
                                           ; #	MOVF	r0x18, W
003b8c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003b8e   6e18     movwf   0x18, 0          	MOVWF	r0x18
003b90   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b92   5017     movf    0x17, 0, 0       	MOVF	r0x17, W
003b94   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b96   5014     movf    0x14, 0, 0       	MOVF	r0x14, W
003b98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b9a   5013     movf    0x13, 0, 0       	MOVF	r0x13, W
003b9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b9e   ec69     call    0x6ad2, 0        	CALL	__moduint
003ba0   f035
003ba2   6e19     movwf   0x19, 0          	MOVWF	r0x19
003ba4   cff3     movff   0xff3, 0x1a      	MOVFF	PRODL, r0x1a
003ba6   f01a
003ba8   0e04     movlw   0x4              	MOVLW	0x04
003baa   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	134; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( t >= 10 )
003bac   501a     movf    0x1a, 0, 0       	MOVF	r0x1a, W
003bae   0f80     addlw   0x80             	ADDLW	0x80
003bb0   0f80     addlw   0x80             	ADDLW	0x80
003bb2   e102     bnz     0x3bb8           	BNZ	_00864_DS_
003bb4   0e0a     movlw   0xa              	MOVLW	0x0a
003bb6   5c19     subwf   0x19, 0, 0       	SUBWF	r0x19, W
                                           _00864_DS_:
003bb8   e302     bnc     0x3bbe           	BNC	_00818_DS_
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	t += letbase - '0' - 10;
003bba   500d     movf    0xd, 0, 0        	MOVF	r0x0d, W
003bbc   2619     addwf   0x19, 0x1, 0     	ADDWF	r0x19, F
                                           _00818_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	*--s = t + '0';
003bbe   0eff     movlw   0xff             	MOVLW	0xff
003bc0   260e     addwf   0xe, 0x1, 0      	ADDWF	r0x0e, F
003bc2   2215     addwfc  0x15, 0x1, 0     	ADDWFC	r0x15, F
003bc4   2216     addwfc  0x16, 0x1, 0     	ADDWFC	r0x16, F
003bc6   0e30     movlw   0x30             	MOVLW	0x30
003bc8   2619     addwf   0x19, 0x1, 0     	ADDWF	r0x19, F
003bca   c019     movff   0x19, 0xfe5      	MOVFF	r0x19, POSTDEC1
003bcc   ffe5
003bce   c00e     movff   0xe, 0xfe9       	MOVFF	r0x0e, FSR0L
003bd0   ffe9
003bd2   c015     movff   0x15, 0xff3      	MOVFF	r0x15, PRODL
003bd4   fff3
003bd6   5016     movf    0x16, 0, 0       	MOVF	r0x16, W
003bd8   ec31     call    0x62, 0          	CALL	__gptrput1
003bda   f000
                                           ;	.line	137; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	u /= b;
003bdc   5018     movf    0x18, 0, 0       	MOVF	r0x18, W
003bde   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003be0   5017     movf    0x17, 0, 0       	MOVF	r0x17, W
003be2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003be4   5014     movf    0x14, 0, 0       	MOVF	r0x14, W
003be6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003be8   5013     movf    0x13, 0, 0       	MOVF	r0x13, W
003bea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003bec   ecc6     call    0x6b8c, 0        	CALL	__divuint
003bee   f035
003bf0   6e13     movwf   0x13, 0          	MOVWF	r0x13
003bf2   cff3     movff   0xff3, 0x14      	MOVFF	PRODL, r0x14
003bf4   f014
003bf6   0e04     movlw   0x4              	MOVLW	0x04
003bf8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003bfa   d7c3     bra     0x3b82           	BRA	_00819_DS_
                                           _00840_DS_:
003bfc   c00e     movff   0xe, 0x3         	MOVFF	r0x0e, r0x03
003bfe   f003
003c00   c015     movff   0x15, 0x4        	MOVFF	r0x15, r0x04
003c02   f004
003c04   c016     movff   0x16, 0x7        	MOVFF	r0x16, r0x07
003c06   f007
                                           ;	.line	140; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (neg)
003c08   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
003c0a   1010     iorwf   0x10, 0, 0       	IORWF	r0x10, W
003c0c   e025     bz      0x3c58           	BZ	_00827_DS_
                                           ;	.line	142; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if( width && (pad & PAD_ZERO) )
003c0e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
003c10   100a     iorwf   0xa, 0, 0        	IORWF	r0x0a, W
003c12   e015     bz      0x3c3e           	BZ	_00823_DS_
003c14   a20b     btfss   0xb, 0x1, 0      	BTFSS	r0x0b, 1
003c16   d013     bra     0x3c3e           	BRA	_00823_DS_
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	printchar (out, '-');
003c18   0e2d     movlw   0x2d             	MOVLW	0x2d
003c1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c1c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c20   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c24   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c28   ece0     call    0x63c0, 0        	CALL	_printchar
003c2a   f031
003c2c   0e04     movlw   0x4              	MOVLW	0x04
003c2e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++pc;
003c30   0e01     movlw   0x1              	MOVLW	0x01
003c32   6e11     movwf   0x11, 0          	MOVWF	r0x11
003c34   6a12     clrf    0x12, 0          	CLRF	r0x12
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	--width;
003c36   0eff     movlw   0xff             	MOVLW	0xff
003c38   2609     addwf   0x9, 0x1, 0      	ADDWF	r0x09, F
003c3a   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
003c3c   d00d     bra     0x3c58           	BRA	_00827_DS_
                                           _00823_DS_:
                                           ;	.line	150; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	*--s = '-';
003c3e   0eff     movlw   0xff             	MOVLW	0xff
003c40   2603     addwf   0x3, 0x1, 0      	ADDWF	r0x03, F
003c42   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003c44   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
003c46   0e2d     movlw   0x2d             	MOVLW	0x2d
003c48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c4a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003c4c   ffe9
003c4e   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
003c50   fff3
003c52   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c54   ec31     call    0x62, 0          	CALL	__gptrput1
003c56   f000
                                           _00827_DS_:
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return pc + prints (out, s, width, pad);
003c58   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
003c5a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c5c   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
003c5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c60   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
003c62   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c64   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
003c66   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c68   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003c6a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c6c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003c6e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c70   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003c72   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c74   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003c76   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c78   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c7a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c7c   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c7e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003c80   ec8a     call    0x4b14, 0        	CALL	_prints
003c82   f025
003c84   6e00     movwf   0, 0             	MOVWF	r0x00
003c86   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003c88   f001
003c8a   0e0a     movlw   0xa              	MOVLW	0x0a
003c8c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003c8e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c90   2611     addwf   0x11, 0x1, 0     	ADDWF	r0x11, F
003c92   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c94   2212     addwfc  0x12, 0x1, 0     	ADDWFC	r0x12, F
003c96   c012     movff   0x12, 0xff3      	MOVFF	r0x12, PRODL
003c98   fff3
003c9a   5011     movf    0x11, 0, 0       	MOVF	r0x11, W
                                           _00828_DS_:
003c9c   cfe4     movff   0xfe4, 0x1a      	MOVFF	PREINC1, r0x1a
003c9e   f01a
003ca0   cfe4     movff   0xfe4, 0x19      	MOVFF	PREINC1, r0x19
003ca2   f019
003ca4   cfe4     movff   0xfe4, 0x18      	MOVFF	PREINC1, r0x18
003ca6   f018
003ca8   cfe4     movff   0xfe4, 0x17      	MOVFF	PREINC1, r0x17
003caa   f017
003cac   cfe4     movff   0xfe4, 0x16      	MOVFF	PREINC1, r0x16
003cae   f016
003cb0   cfe4     movff   0xfe4, 0x15      	MOVFF	PREINC1, r0x15
003cb2   f015
003cb4   cfe4     movff   0xfe4, 0x14      	MOVFF	PREINC1, r0x14
003cb6   f014
003cb8   cfe4     movff   0xfe4, 0x13      	MOVFF	PREINC1, r0x13
003cba   f013
003cbc   cfe4     movff   0xfe4, 0x12      	MOVFF	PREINC1, r0x12
003cbe   f012
003cc0   cfe4     movff   0xfe4, 0x11      	MOVFF	PREINC1, r0x11
003cc2   f011
003cc4   cfe4     movff   0xfe4, 0x10      	MOVFF	PREINC1, r0x10
003cc6   f010
003cc8   cfe4     movff   0xfe4, 0xf       	MOVFF	PREINC1, r0x0f
003cca   f00f
003ccc   cfe4     movff   0xfe4, 0xe       	MOVFF	PREINC1, r0x0e
003cce   f00e
003cd0   cfe4     movff   0xfe4, 0xd       	MOVFF	PREINC1, r0x0d
003cd2   f00d
003cd4   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
003cd6   f00c
003cd8   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
003cda   f00b
003cdc   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
003cde   f00a
003ce0   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
003ce2   f009
003ce4   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003ce6   f008
003ce8   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003cea   f007
003cec   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003cee   f006
003cf0   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003cf2   f005
003cf4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003cf6   f004
003cf8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003cfa   f003
003cfc   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003cfe   f002
003d00   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003d02   f001
003d04   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003d06   f000
003d08   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003d0a   ffd9
003d0c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__prints	code
                                           _prints:
                                           ;	.line	69; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	static int prints(char **out, const char *string, int width, int pad)
004b14   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b16   ffe5
004b18   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b1a   ffd9
004b1c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b1e   ffe5
004b20   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b22   ffe5
004b24   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b26   ffe5
004b28   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b2a   ffe5
004b2c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004b2e   ffe5
004b30   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004b32   ffe5
004b34   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004b36   ffe5
004b38   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004b3a   ffe5
004b3c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
004b3e   ffe5
004b40   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
004b42   ffe5
004b44   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
004b46   ffe5
004b48   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
004b4a   ffe5
004b4c   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
004b4e   ffe5
004b50   c00e     movff   0xe, 0xfe5       	MOVFF	r0x0e, POSTDEC1
004b52   ffe5
004b54   c00f     movff   0xf, 0xfe5       	MOVFF	r0x0f, POSTDEC1
004b56   ffe5
004b58   c010     movff   0x10, 0xfe5      	MOVFF	r0x10, POSTDEC1
004b5a   ffe5
004b5c   c011     movff   0x11, 0xfe5      	MOVFF	r0x11, POSTDEC1
004b5e   ffe5
004b60   c012     movff   0x12, 0xfe5      	MOVFF	r0x12, POSTDEC1
004b62   ffe5
004b64   c013     movff   0x13, 0xfe5      	MOVFF	r0x13, POSTDEC1
004b66   ffe5
004b68   0e02     movlw   0x2              	MOVLW	0x02
004b6a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b6c   f000
004b6e   0e03     movlw   0x3              	MOVLW	0x03
004b70   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b72   f001
004b74   0e04     movlw   0x4              	MOVLW	0x04
004b76   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004b78   f002
004b7a   0e05     movlw   0x5              	MOVLW	0x05
004b7c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
004b7e   f003
004b80   0e06     movlw   0x6              	MOVLW	0x06
004b82   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
004b84   f004
004b86   0e07     movlw   0x7              	MOVLW	0x07
004b88   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
004b8a   f005
004b8c   0e08     movlw   0x8              	MOVLW	0x08
004b8e   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
004b90   f006
004b92   0e09     movlw   0x9              	MOVLW	0x09
004b94   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
004b96   f007
004b98   0e0a     movlw   0xa              	MOVLW	0x0a
004b9a   cfdb     movff   0xfdb, 0x8       	MOVFF	PLUSW2, r0x08
004b9c   f008
004b9e   0e0b     movlw   0xb              	MOVLW	0x0b
004ba0   cfdb     movff   0xfdb, 0x9       	MOVFF	PLUSW2, r0x09
004ba2   f009
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	int pc = 0;
004ba4   6a0a     clrf    0xa, 0           	CLRF	r0x0a
004ba6   6a0b     clrf    0xb, 0           	CLRF	r0x0b
                                           ;	.line	72; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	int padchar = ' ';
004ba8   0e20     movlw   0x20             	MOVLW	0x20
004baa   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
                                           ;	.line	76; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (width > 0)
004bac   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004bae   0f80     addlw   0x80             	ADDLW	0x80
004bb0   0f80     addlw   0x80             	ADDLW	0x80
004bb2   e102     bnz     0x4bb8           	BNZ	_00799_DS_
004bb4   0e01     movlw   0x1              	MOVLW	0x01
004bb6   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
                                           _00799_DS_:
004bb8   e32e     bnc     0x4c16           	BNC	_00740_DS_
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for (ptr = string; *ptr; ++ptr) ++len;
004bba   6a0e     clrf    0xe, 0           	CLRF	r0x0e
004bbc   6a0f     clrf    0xf, 0           	CLRF	r0x0f
004bbe   c003     movff   0x3, 0x10        	MOVFF	r0x03, r0x10
004bc0   f010
004bc2   c004     movff   0x4, 0x11        	MOVFF	r0x04, r0x11
004bc4   f011
004bc6   c005     movff   0x5, 0x12        	MOVFF	r0x05, r0x12
004bc8   f012
                                           _00747_DS_:
004bca   c010     movff   0x10, 0xfe9      	MOVFF	r0x10, FSR0L
004bcc   ffe9
004bce   c011     movff   0x11, 0xff3      	MOVFF	r0x11, PRODL
004bd0   fff3
004bd2   5012     movf    0x12, 0, 0       	MOVF	r0x12, W
004bd4   ec29     call    0x52, 0          	CALL	__gptrget1
004bd6   f000
004bd8   6e13     movwf   0x13, 0          	MOVWF	r0x13
004bda   5013     movf    0x13, 0, 0       	MOVF	r0x13, W
004bdc   e007     bz      0x4bec           	BZ	_00733_DS_
004bde   4a0e     infsnz  0xe, 0x1, 0      	INFSNZ	r0x0e, F
004be0   2a0f     incf    0xf, 0x1, 0      	INCF	r0x0f, F
004be2   2a10     incf    0x10, 0x1, 0     	INCF	r0x10, F
004be4   e3f2     bnc     0x4bca           	BNC	_00747_DS_
004be6   4a11     infsnz  0x11, 0x1, 0     	INFSNZ	r0x11, F
004be8   2a12     incf    0x12, 0x1, 0     	INCF	r0x12, F
                                           _00800_DS_:
004bea   d7ef     bra     0x4bca           	BRA	_00747_DS_
                                           _00733_DS_:
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (len >= width) width = 0;
004bec   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
004bee   0f80     addlw   0x80             	ADDLW	0x80
004bf0   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
004bf2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
004bf4   0f80     addlw   0x80             	ADDLW	0x80
004bf6   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
004bf8   e102     bnz     0x4bfe           	BNZ	_00801_DS_
004bfa   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
004bfc   5c0e     subwf   0xe, 0, 0        	SUBWF	r0x0e, W
                                           _00801_DS_:
004bfe   e303     bnc     0x4c06           	BNC	_00735_DS_
004c00   6a06     clrf    0x6, 0           	CLRF	r0x06
004c02   6a07     clrf    0x7, 0           	CLRF	r0x07
004c04   d004     bra     0x4c0e           	BRA	_00736_DS_
                                           _00735_DS_:
                                           ;	.line	80; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	else width -= len;
004c06   500e     movf    0xe, 0, 0        	MOVF	r0x0e, W
004c08   5e06     subwf   0x6, 0x1, 0      	SUBWF	r0x06, F
004c0a   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
004c0c   5a07     subwfb  0x7, 0x1, 0      	SUBWFB	r0x07, F
                                           _00736_DS_:
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (pad & PAD_ZERO) padchar = '0';
004c0e   a208     btfss   0x8, 0x1, 0      	BTFSS	r0x08, 1
004c10   d002     bra     0x4c16           	BRA	_00740_DS_
004c12   0e30     movlw   0x30             	MOVLW	0x30
004c14   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
                                           _00740_DS_:
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (!(pad & PAD_RIGHT))
004c16   b008     btfsc   0x8, 0, 0        	BTFSC	r0x08, 0
004c18   d027     bra     0x4c68           	BRA	_00768_DS_
004c1a   6a08     clrf    0x8, 0           	CLRF	r0x08
004c1c   6a09     clrf    0x9, 0           	CLRF	r0x09
004c1e   c006     movff   0x6, 0xe         	MOVFF	r0x06, r0x0e
004c20   f00e
004c22   c007     movff   0x7, 0xf         	MOVFF	r0x07, r0x0f
004c24   f00f
                                           _00750_DS_:
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; width > 0; --width)
004c26   500f     movf    0xf, 0, 0        	MOVF	r0x0f, W
004c28   0f80     addlw   0x80             	ADDLW	0x80
004c2a   0f80     addlw   0x80             	ADDLW	0x80
004c2c   e102     bnz     0x4c32           	BNZ	_00804_DS_
004c2e   0e01     movlw   0x1              	MOVLW	0x01
004c30   5c0e     subwf   0xe, 0, 0        	SUBWF	r0x0e, W
                                           _00804_DS_:
004c32   e312     bnc     0x4c58           	BNC	_00772_DS_
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x10
                                           ; #	MOVF	r0x10, W
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	printchar (out, padchar);
004c34   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
004c36   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c38   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c3a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c3c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c3e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c40   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c42   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c44   ece0     call    0x63c0, 0        	CALL	_printchar
004c46   f031
004c48   0e04     movlw   0x4              	MOVLW	0x04
004c4a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	88; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++pc;
004c4c   4a08     infsnz  0x8, 0x1, 0      	INFSNZ	r0x08, F
004c4e   2a09     incf    0x9, 0x1, 0      	INCF	r0x09, F
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; width > 0; --width)
004c50   0eff     movlw   0xff             	MOVLW	0xff
004c52   260e     addwf   0xe, 0x1, 0      	ADDWF	r0x0e, F
004c54   220f     addwfc  0xf, 0x1, 0      	ADDWFC	r0x0f, F
004c56   d7e7     bra     0x4c26           	BRA	_00750_DS_
                                           _00772_DS_:
004c58   c008     movff   0x8, 0xa         	MOVFF	r0x08, r0x0a
004c5a   f00a
004c5c   c009     movff   0x9, 0xb         	MOVFF	r0x09, r0x0b
004c5e   f00b
004c60   c00e     movff   0xe, 0x6         	MOVFF	r0x0e, r0x06
004c62   f006
004c64   c00f     movff   0xf, 0x7         	MOVFF	r0x0f, r0x07
004c66   f007
                                           _00768_DS_:
004c68   c00a     movff   0xa, 0x8         	MOVFF	r0x0a, r0x08
004c6a   f008
004c6c   c00b     movff   0xb, 0x9         	MOVFF	r0x0b, r0x09
004c6e   f009
                                           _00753_DS_:
                                           ;	.line	91; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; *string ; ++string)
004c70   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
004c72   ffe9
004c74   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004c76   fff3
004c78   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004c7a   ec29     call    0x52, 0          	CALL	__gptrget1
004c7c   f000
004c7e   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
004c80   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
004c82   e013     bz      0x4caa           	BZ	_00770_DS_
                                           ;	.line	93; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	printchar (out, *string);
004c84   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
004c86   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c88   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004c8a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c8c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004c8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c90   5000     movf    0, 0, 0          	MOVF	r0x00, W
004c92   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004c94   ece0     call    0x63c0, 0        	CALL	_printchar
004c96   f031
004c98   0e04     movlw   0x4              	MOVLW	0x04
004c9a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	94; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++pc;
004c9c   4a08     infsnz  0x8, 0x1, 0      	INFSNZ	r0x08, F
004c9e   2a09     incf    0x9, 0x1, 0      	INCF	r0x09, F
                                           ;	.line	91; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; *string ; ++string)
004ca0   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
004ca2   e3e6     bnc     0x4c70           	BNC	_00753_DS_
004ca4   4a04     infsnz  0x4, 0x1, 0      	INFSNZ	r0x04, F
004ca6   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
                                           _00805_DS_:
004ca8   d7e3     bra     0x4c70           	BRA	_00753_DS_
                                           _00770_DS_:
004caa   c008     movff   0x8, 0x3         	MOVFF	r0x08, r0x03
004cac   f003
004cae   c009     movff   0x9, 0x4         	MOVFF	r0x09, r0x04
004cb0   f004
004cb2   c006     movff   0x6, 0x5         	MOVFF	r0x06, r0x05
004cb4   f005
004cb6   c007     movff   0x7, 0x6         	MOVFF	r0x07, r0x06
004cb8   f006
                                           _00756_DS_:
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; width > 0; --width)
004cba   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
004cbc   0f80     addlw   0x80             	ADDLW	0x80
004cbe   0f80     addlw   0x80             	ADDLW	0x80
004cc0   e102     bnz     0x4cc6           	BNZ	_00806_DS_
004cc2   0e01     movlw   0x1              	MOVLW	0x01
004cc4   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
                                           _00806_DS_:
004cc6   e312     bnc     0x4cec           	BNC	_00745_DS_
                                           ; #	MOVF	r0x0c, W
                                           ; #	MOVWF	r0x07
                                           ; #	MOVF	r0x07, W
                                           ;	.line	98; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	printchar (out, padchar);
004cc8   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
004cca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004ccc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004cce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004cd0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004cd2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004cd4   5000     movf    0, 0, 0          	MOVF	r0x00, W
004cd6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004cd8   ece0     call    0x63c0, 0        	CALL	_printchar
004cda   f031
004cdc   0e04     movlw   0x4              	MOVLW	0x04
004cde   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++pc;
004ce0   4a03     infsnz  0x3, 0x1, 0      	INFSNZ	r0x03, F
004ce2   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	for ( ; width > 0; --width)
004ce4   0eff     movlw   0xff             	MOVLW	0xff
004ce6   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
004ce8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004cea   d7e7     bra     0x4cba           	BRA	_00756_DS_
                                           _00745_DS_:
                                           ;	.line	102; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	return pc;
004cec   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
004cee   fff3
004cf0   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004cf2   cfe4     movff   0xfe4, 0x13      	MOVFF	PREINC1, r0x13
004cf4   f013
004cf6   cfe4     movff   0xfe4, 0x12      	MOVFF	PREINC1, r0x12
004cf8   f012
004cfa   cfe4     movff   0xfe4, 0x11      	MOVFF	PREINC1, r0x11
004cfc   f011
004cfe   cfe4     movff   0xfe4, 0x10      	MOVFF	PREINC1, r0x10
004d00   f010
004d02   cfe4     movff   0xfe4, 0xf       	MOVFF	PREINC1, r0x0f
004d04   f00f
004d06   cfe4     movff   0xfe4, 0xe       	MOVFF	PREINC1, r0x0e
004d08   f00e
004d0a   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
004d0c   f00c
004d0e   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
004d10   f00b
004d12   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
004d14   f00a
004d16   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
004d18   f009
004d1a   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
004d1c   f008
004d1e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004d20   f007
004d22   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004d24   f006
004d26   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004d28   f005
004d2a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004d2c   f004
004d2e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004d30   f003
004d32   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004d34   f002
004d36   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004d38   f001
004d3a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004d3c   f000
004d3e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d40   ffd9
004d42   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__printchar	code
                                           _printchar:
                                           ;	.line	50; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	static void printchar(char **str, char c)
0063c0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0063c2   ffe5
0063c4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0063c6   ffd9
0063c8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0063ca   ffe5
0063cc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0063ce   ffe5
0063d0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0063d2   ffe5
0063d4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0063d6   ffe5
0063d8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0063da   ffe5
0063dc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0063de   ffe5
0063e0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0063e2   ffe5
0063e4   0e02     movlw   0x2              	MOVLW	0x02
0063e6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0063e8   f000
0063ea   0e03     movlw   0x3              	MOVLW	0x03
0063ec   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0063ee   f001
0063f0   0e04     movlw   0x4              	MOVLW	0x04
0063f2   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0063f4   f002
0063f6   0e05     movlw   0x5              	MOVLW	0x05
0063f8   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0063fa   f003
                                           ;	.line	54; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	if (str)
0063fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0063fe   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
006400   1002     iorwf   0x2, 0, 0        	IORWF	r0x02, W
006402   e033     bz      0x646a           	BZ	_00720_DS_
                                           ;	.line	56; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	**str = c;
006404   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
006406   ffe9
006408   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00640a   fff3
00640c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00640e   ec2d     call    0x5a, 0          	CALL	__gptrget3
006410   f000
006412   6e04     movwf   0x4, 0           	MOVWF	r0x04
006414   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
006416   f005
006418   cff4     movff   0xff4, 0x6       	MOVFF	PRODH, r0x06
00641a   f006
00641c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00641e   ffe5
006420   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
006422   ffe9
006424   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
006426   fff3
006428   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00642a   ec31     call    0x62, 0          	CALL	__gptrput1
00642c   f000
                                           ;	.line	57; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	++(*str);
00642e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
006430   ffe9
006432   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
006434   fff3
006436   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006438   ec2d     call    0x5a, 0          	CALL	__gptrget3
00643a   f000
00643c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00643e   cff3     movff   0xff3, 0x5       	MOVFF	PRODL, r0x05
006440   f005
006442   cff4     movff   0xff4, 0x6       	MOVFF	PRODH, r0x06
006444   f006
006446   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
006448   e302     bnc     0x644e           	BNC	_00727_DS_
00644a   4a05     infsnz  0x5, 0x1, 0      	INFSNZ	r0x05, F
00644c   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
                                           _00727_DS_:
00644e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006450   ffe5
006452   c005     movff   0x5, 0xff4       	MOVFF	r0x05, PRODH
006454   fff4
006456   c006     movff   0x6, 0xff6       	MOVFF	r0x06, TBLPTRL
006458   fff6
00645a   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00645c   ffe9
00645e   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
006460   fff3
006462   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006464   ec35     call    0x6a, 0          	CALL	__gptrput3
006466   f000
006468   d016     bra     0x6496           	BRA	_00722_DS_
                                           _00720_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/uart18f2550.c	putchar1(c);
00646a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00646c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00646e   cff2     movff   0xff2, 0xfe5     	MOVFF	INTCON, POSTDEC1
006470   ffe5
006472   9ef2     bcf     0xf2, 0x7, 0     	BCF	INTCON, 7
006474   0005     push                     	PUSH	
006476   0e94     movlw   0x94             	MOVLW	LOW(_00728_DS_)
006478   6efd     movwf   0xfd, 0          	MOVWF	TOSL
00647a   0e64     movlw   0x64             	MOVLW	HIGH(_00728_DS_)
00647c   6efe     movwf   0xfe, 0          	MOVWF	TOSH
00647e   0e00     movlw   0                	MOVLW	UPPER(_00728_DS_)
006480   6eff     movwf   0xff, 0          	MOVWF	TOSU
006482   bee4     btfsc   0xe4, 0x7, 0     	BTFSC	PREINC1, 7
006484   8ef2     bsf     0xf2, 0x7, 0     	BSF	INTCON, 7
006486   c3c0     movff   0x3c0, 0xffb     	MOVFF	(_putchar1 + 2), PCLATU
006488   fffb
00648a   c3bf     movff   0x3bf, 0xffa     	MOVFF	(_putchar1 + 1), PCLATH
00648c   fffa
00648e   0103     movlb   0x3              	BANKSEL	_putchar1
006490   51be     movf    0xbe, 0, 0x1     	MOVF	_putchar1, W, B
006492   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00728_DS_:
006494   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           _00722_DS_:
006496   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
006498   f006
00649a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00649c   f005
00649e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0064a0   f004
0064a2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0064a4   f003
0064a6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0064a8   f002
0064aa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0064ac   f001
0064ae   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0064b0   f000
0064b2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0064b4   ffd9
0064b6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	41; /home/valentin/.icaro/firmware/source/main.c	void epapout_init() { return; }
0079ba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	40; /home/valentin/.icaro/firmware/source/main.c	void epapin_init() { return; }
0079bc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	39; /home/valentin/.icaro/firmware/source/main.c	void epap_out() { return; }
0079be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	38; /home/valentin/.icaro/firmware/source/main.c	void epap_in() { return; }
0079c0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__set_PWM	code
                                           _set_PWM:
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/pwm.c	void set_PWM(int input, int value)
006a00   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006a02   ffe5
006a04   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006a06   ffd9
006a08   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006a0a   ffe5
006a0c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006a0e   ffe5
006a10   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006a12   ffe5
006a14   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006a16   ffe5
006a18   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006a1a   ffe5
006a1c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
006a1e   ffe5
006a20   0e02     movlw   0x2              	MOVLW	0x02
006a22   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006a24   f000
006a26   0e03     movlw   0x3              	MOVLW	0x03
006a28   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
006a2a   f001
006a2c   0e04     movlw   0x4              	MOVLW	0x04
006a2e   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
006a30   f002
006a32   0e05     movlw   0x5              	MOVLW	0x05
006a34   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
006a36   f003
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/pwm.c	if (input==11)
006a38   5000     movf    0, 0, 0          	MOVF	r0x00, W
006a3a   0a0b     xorlw   0xb              	XORLW	0x0b
006a3c   e102     bnz     0x6a42           	BNZ	_00686_DS_
006a3e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006a40   e001     bz      0x6a44           	BZ	_00687_DS_
                                           _00686_DS_:
006a42   d018     bra     0x6a74           	BRA	_00667_DS_
                                           _00687_DS_:
                                           ;	.line	195; /home/valentin/.icaro/firmware/tmp/pwm.c	if ((CCP2CON & 0x0F)==0) init_PWM11();
006a44   50ba     movf    0xba, 0, 0       	MOVF	_CCP2CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00665_DS_
                                           ; #	CALL	_init_PWM11
                                           ; #	MOVLW	0x03
                                           ;	.line	196; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
006a46   0b0f     andlw   0xf              	ANDLW	0x0f
006a48   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
006a4a   ecb7     call    0x796e, 0        	CALL	_init_PWM11
006a4c   f03c
006a4e   0e03     movlw   0x3              	MOVLW	0x03
006a50   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
006a52   6e04     movwf   0x4, 0           	MOVWF	r0x04
006a54   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           ;	.line	197; /home/valentin/.icaro/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
006a56   3804     swapf   0x4, 0, 0        	SWAPF	r0x04, W
006a58   0bf0     andlw   0xf0             	ANDLW	0xf0
006a5a   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON&=0x0F;		// reset bit 4:5
006a5c   0e0f     movlw   0xf              	MOVLW	0x0f
006a5e   16ba     andwf   0xba, 0x1, 0     	ANDWF	_CCP2CON, F
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON|=octet;		// put in CCP2CON 4:5
006a60   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006a62   12ba     iorwf   0xba, 0x1, 0     	IORWF	_CCP2CON, F
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
006a64   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
006a66   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
006a68   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
006a6a   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
006a6c   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
006a6e   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value;		// in octet
006a70   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; =DF= MOVFF: SRC op r0x04 replaced by WREG
                                           ;	.line	202; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L=octet;		// put in CCPR2L
006a72   6ebb     movwf   0xbb, 0          	MOVWF	_CCPR2L
                                           _00667_DS_:
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/pwm.c	if (input==12)
006a74   5000     movf    0, 0, 0          	MOVF	r0x00, W
006a76   0a0c     xorlw   0xc              	XORLW	0x0c
006a78   e102     bnz     0x6a7e           	BNZ	_00692_DS_
006a7a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006a7c   e001     bz      0x6a80           	BZ	_00693_DS_
                                           _00692_DS_:
006a7e   d01a     bra     0x6ab4           	BRA	_00672_DS_
                                           _00693_DS_:
                                           ;	.line	207; /home/valentin/.icaro/firmware/tmp/pwm.c	if ((CCP1CON & 0x0F)==0) init_PWM12();		
006a80   50bd     movf    0xbd, 0, 0       	MOVF	_CCP1CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00669_DS_
                                           ; #	CALL	_init_PWM12
                                           ; #	MOVLW	0x03
                                           ;	.line	208; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
006a82   0b0f     andlw   0xf              	ANDLW	0x0f
006a84   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
006a86   ecaf     call    0x795e, 0        	CALL	_init_PWM12
006a88   f03c
006a8a   0e03     movlw   0x3              	MOVLW	0x03
006a8c   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
006a8e   6e00     movwf   0, 0             	MOVWF	r0x00
006a90   6a01     clrf    0x1, 0           	CLRF	r0x01
006a92   5000     movf    0, 0, 0          	MOVF	r0x00, W
006a94   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
006a96   3804     swapf   0x4, 0, 0        	SWAPF	r0x04, W
006a98   0bf0     andlw   0xf0             	ANDLW	0xf0
006a9a   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	210; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON&=0x0F;		// reset bit 4:5
006a9c   0e0f     movlw   0xf              	MOVLW	0x0f
006a9e   16bd     andwf   0xbd, 0x1, 0     	ANDWF	_CCP1CON, F
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON|=octet;		// put in CCP2CON 4:5
006aa0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006aa2   12bd     iorwf   0xbd, 0x1, 0     	IORWF	_CCP1CON, F
                                           ;	.line	212; /home/valentin/.icaro/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
006aa4   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
006aa6   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
006aa8   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
006aaa   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
006aac   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
006aae   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value;		// in octet
006ab0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006ab2   6ebe     movwf   0xbe, 0          	MOVWF	_CCPR1L
                                           _00672_DS_:
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L=octet;		// put in CCPR1L			
006ab4   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
006ab6   f005
006ab8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
006aba   f004
006abc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006abe   f003
006ac0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
006ac2   f002
006ac4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006ac6   f001
006ac8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006aca   f000
006acc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006ace   ffd9
006ad0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_PWM12	code
                                           _init_PWM12:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/pwm.c	TRISCbits.TRISC2=0;		// C2 is an output
00795e   9494     bcf     0x94, 0x2, 0     	BCF	_TRISCbits, 2
                                           ;	.line	182; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
007960   68cb     setf    0xcb, 0          	SETF	_PR2
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
007962   0e05     movlw   0x5              	MOVLW	0x05
007964   6eca     movwf   0xca, 0          	MOVWF	_T2CON
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L=0;				// 8 bits MSB output = 0
007966   6abe     clrf    0xbe, 0          	CLRF	_CCPR1L
                                           ;	.line	185; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON=0x0F;			// configure for PWM 2 bits LSB = 0
007968   0e0f     movlw   0xf              	MOVLW	0x0f
00796a   6ebd     movwf   0xbd, 0          	MOVWF	_CCP1CON
00796c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_PWM11	code
                                           _init_PWM11:
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/pwm.c	TRISCbits.TRISC1=0;		// C1 is an output
00796e   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
007970   68cb     setf    0xcb, 0          	SETF	_PR2
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
007972   0e05     movlw   0x5              	MOVLW	0x05
007974   6eca     movwf   0xca, 0          	MOVWF	_T2CON
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L=0;				// 8 bits MSB output = 0
007976   6abb     clrf    0xbb, 0          	CLRF	_CCPR2L
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON=0x0F;			// configure for PWM 2 bits LSB = 0	
007978   0e0f     movlw   0xf              	MOVLW	0x0f
00797a   6eba     movwf   0xba, 0          	MOVWF	_CCP2CON
00797c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__PWM_set_percent_dutycycle	code
                                           _PWM_set_percent_dutycycle:
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_percent_dutycycle(u8 pin, u8 percent)
00677e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006780   ffe5
006782   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006784   ffd9
006786   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006788   ffe5
00678a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00678c   ffe5
00678e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006790   ffe5
006792   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006794   ffe5
006796   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006798   ffe5
00679a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00679c   ffe5
00679e   0e02     movlw   0x2              	MOVLW	0x02
0067a0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0067a2   f000
0067a4   0e03     movlw   0x3              	MOVLW	0x03
0067a6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0067a8   f001
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/pwm.c	if (percent == 0)
0067aa   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0067ac   e103     bnz     0x67b4           	BNZ	_00639_DS_
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = 0;
0067ae   6a02     clrf    0x2, 0           	CLRF	r0x02
0067b0   6a03     clrf    0x3, 0           	CLRF	r0x03
0067b2   d030     bra     0x6814           	BRA	_00640_DS_
                                           _00639_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/pwm.c	else if (percent >= 100)
0067b4   0e64     movlw   0x64             	MOVLW	0x64
0067b6   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0067b8   e308     bnc     0x67ca           	BNC	_00636_DS_
0067ba   0103     movlb   0x3              	BANKSEL	__pr2_plus1
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = _pr2_plus1 - 1;
0067bc   514f     movf    0x4f, 0, 0x1     	MOVF	__pr2_plus1, W, B
0067be   0fff     addlw   0xff             	ADDLW	0xff
0067c0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0067c2   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
0067c4   2150     addwfc  0x50, 0, 0x1     	ADDWFC	(__pr2_plus1 + 1), W, B
0067c6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0067c8   d025     bra     0x6814           	BRA	_00640_DS_
                                           _00636_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = percent * (_pr2_plus1 / 4) / 25;	// (factor PR2/100)
0067ca   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0067cc   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
0067ce   3150     rrcf    0x50, 0, 0x1     	RRCF	(__pr2_plus1 + 1), W, B
0067d0   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ; removed redundant BANKSEL
0067d2   314f     rrcf    0x4f, 0, 0x1     	RRCF	__pr2_plus1, W, B
0067d4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0067d6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0067d8   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
0067da   3204     rrcf    0x4, 0x1, 0      	RRCF	r0x04, F
0067dc   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0067de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0067e0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0067e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0067e4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0067e6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0067e8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0067ea   ec27     call    0x4e, 0          	CALL	__mulint
0067ec   f000
0067ee   6e01     movwf   0x1, 0           	MOVWF	r0x01
0067f0   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0067f2   f004
0067f4   0e04     movlw   0x4              	MOVLW	0x04
0067f6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0067f8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0067fa   0e19     movlw   0x19             	MOVLW	0x19
0067fc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0067fe   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006800   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006802   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006804   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006806   ecc6     call    0x6b8c, 0        	CALL	__divuint
006808   f035
00680a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00680c   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
00680e   f003
006810   0e04     movlw   0x4              	MOVLW	0x04
006812   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00640_DS_:
                                           ;	.line	166; /home/valentin/.icaro/firmware/tmp/pwm.c	PWM_set_dutycycle(pin, duty << 2);
006814   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006816   6e01     movwf   0x1, 0           	MOVWF	r0x01
006818   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
00681a   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00681c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00681e   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
006820   3601     rlcf    0x1, 0x1, 0      	RLCF	r0x01, F
006822   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
006824   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
006826   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006828   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00682a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00682c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00682e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006830   ec5a     call    0x62b4, 0        	CALL	_PWM_set_dutycycle
006832   f031
006834   0e03     movlw   0x3              	MOVLW	0x03
006836   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006838   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00683a   f005
00683c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00683e   f004
006840   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006842   f003
006844   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
006846   f002
006848   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00684a   f001
00684c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00684e   f000
006850   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006852   ffd9
006854   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__PWM_set_dutycycle	code
                                           _PWM_set_dutycycle:
                                           ;	.line	98; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_dutycycle(u8 pin, u16 duty)
0062b4   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0062b6   ffe5
0062b8   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0062ba   ffd9
0062bc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0062be   ffe5
0062c0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0062c2   ffe5
0062c4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0062c6   ffe5
0062c8   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0062ca   ffe5
0062cc   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0062ce   ffe5
0062d0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0062d2   ffe5
0062d4   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0062d6   ffe5
0062d8   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0062da   ffe5
0062dc   0e02     movlw   0x2              	MOVLW	0x02
0062de   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0062e0   f000
0062e2   0e03     movlw   0x3              	MOVLW	0x03
0062e4   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0062e6   f001
0062e8   0e04     movlw   0x4              	MOVLW	0x04
0062ea   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0062ec   f002
                                           ;	.line	102; /home/valentin/.icaro/firmware/tmp/pwm.c	if (duty > 1023) duty = 1023;		// upper limit (10-bit)
0062ee   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
0062f0   e102     bnz     0x62f6           	BNZ	_00624_DS_
0062f2   0e00     movlw   0                	MOVLW	0x00
0062f4   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00624_DS_:
0062f6   e303     bnc     0x62fe           	BNC	_00599_DS_
0062f8   6801     setf    0x1, 0           	SETF	r0x01
0062fa   0e03     movlw   0x3              	MOVLW	0x03
0062fc   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _00599_DS_:
                                           ;	.line	105; /home/valentin/.icaro/firmware/tmp/pwm.c	pinmode(pin, INPUT);				// PWM pin as INPUT
0062fe   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
006300   f003
006302   6a04     clrf    0x4, 0           	CLRF	r0x04
006304   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006306   0e01     movlw   0x1              	MOVLW	0x01
006308   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00630a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00630c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00630e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006310   eca2     call    0x4344, 0        	CALL	_pinmode
006312   f021
006314   0e04     movlw   0x4              	MOVLW	0x04
006316   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
006318   0103     movlb   0x3              	BANKSEL	__pr2_plus1
                                           ;	.line	107; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2 = _pr2_plus1 - 1;				// set PR2
00631a   514f     movf    0x4f, 0, 0x1     	MOVF	__pr2_plus1, W, B
00631c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00631e   0405     decf    0x5, 0, 0        	DECF	r0x05, W
006320   6ecb     movwf   0xcb, 0          	MOVWF	_PR2
                                           ;	.line	109; /home/valentin/.icaro/firmware/tmp/pwm.c	if (pin == 11)
006322   5000     movf    0, 0, 0          	MOVF	r0x00, W
006324   0a0b     xorlw   0xb              	XORLW	0x0b
006326   e113     bnz     0x634e           	BNZ	_00601_DS_
                                           ;	.line	112; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON = Bin(00001111);		// reset also 2 LSbits of duty cycle
006328   0e0f     movlw   0xf              	MOVLW	0x0f
00632a   6eba     movwf   0xba, 0          	MOVWF	_CCP2CON
                                           ;	.line	114; /home/valentin/.icaro/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of duty
00632c   0e03     movlw   0x3              	MOVLW	0x03
00632e   1401     andwf   0x1, 0, 0        	ANDWF	r0x01, W
006330   6e05     movwf   0x5, 0           	MOVWF	r0x05
006332   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           ;	.line	115; /home/valentin/.icaro/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
006334   3805     swapf   0x5, 0, 0        	SWAPF	r0x05, W
006336   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	116; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON |= temp;				// put in CCP2CON 4:5  (DCBx1 and DCBx0)
006338   12ba     iorwf   0xba, 0x1, 0     	IORWF	_CCP2CON, F
                                           ;	.line	117; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L = duty >> 2;				// 8 MSbits of duty
00633a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00633c   3002     rrcf    0x2, 0, 0        	RRCF	r0x02, W
00633e   6e07     movwf   0x7, 0           	MOVWF	r0x07
006340   3001     rrcf    0x1, 0, 0        	RRCF	r0x01, W
006342   6e06     movwf   0x6, 0           	MOVWF	r0x06
006344   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
006346   3207     rrcf    0x7, 0x1, 0      	RRCF	r0x07, F
006348   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
00634a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
00634c   6ebb     movwf   0xbb, 0          	MOVWF	_CCPR2L
                                           _00601_DS_:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/pwm.c	if (pin == 12)
00634e   5000     movf    0, 0, 0          	MOVF	r0x00, W
006350   0a0c     xorlw   0xc              	XORLW	0x0c
006352   e113     bnz     0x637a           	BNZ	_00603_DS_
                                           ;	.line	123; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON = Bin(00001111);
006354   0e0f     movlw   0xf              	MOVLW	0x0f
006356   6ebd     movwf   0xbd, 0          	MOVWF	_CCP1CON
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of the duty
006358   0e03     movlw   0x3              	MOVLW	0x03
00635a   1401     andwf   0x1, 0, 0        	ANDWF	r0x01, W
00635c   6e00     movwf   0, 0             	MOVWF	r0x00
00635e   6a06     clrf    0x6, 0           	CLRF	r0x06
006360   5000     movf    0, 0, 0          	MOVF	r0x00, W
006362   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ;	.line	126; /home/valentin/.icaro/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
006364   3805     swapf   0x5, 0, 0        	SWAPF	r0x05, W
006366   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	127; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON |= temp;				// put in CCP2CON 4:5
006368   12bd     iorwf   0xbd, 0x1, 0     	IORWF	_CCP1CON, F
                                           ;	.line	128; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L = duty >> 2;				// 8 MSbits of the duty
00636a   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00636c   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
00636e   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
006370   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
006372   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
006374   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
006376   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006378   6ebe     movwf   0xbe, 0          	MOVWF	_CCPR1L
                                           _00603_DS_:
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/pwm.c	PIR1bits.TMR2IF = 0;				// reset this flag for the next test
00637a   929e     bcf     0x9e, 0x1, 0     	BCF	_PIR1bits, 1
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON = _t2con;						// Timer2 prescaler
00637c   c3ce     movff   0x3ce, 0xfca     	MOVFF	__t2con, _T2CON
00637e   ffca
                                           ;	.line	134; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CONbits.TMR2ON = ON;				// enable Timer2
006380   84ca     bsf     0xca, 0x2, 0     	BSF	_T2CONbits, 2
                                           _00604_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/pwm.c	while (PIR1bits.TMR2IF == 0);		// Wait until TMR2 overflows
006382   a29e     btfss   0x9e, 0x1, 0     	BTFSS	_PIR1bits, 1
006384   d7fe     bra     0x6382           	BRA	_00604_DS_
                                           ;	.line	137; /home/valentin/.icaro/firmware/tmp/pwm.c	pinmode(pin, OUTPUT);				// PWM pin as OUTPUT
006386   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006388   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00638a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00638c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00638e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006390   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006392   eca2     call    0x4344, 0        	CALL	_pinmode
006394   f021
006396   0e04     movlw   0x4              	MOVLW	0x04
006398   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00639a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00639c   f007
00639e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0063a0   f006
0063a2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0063a4   f005
0063a6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0063a8   f004
0063aa   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0063ac   f003
0063ae   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0063b0   f002
0063b2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0063b4   f001
0063b6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0063b8   f000
0063ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0063bc   ffd9
0063be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__PWM_set_frequency	code
                                           _PWM_set_frequency:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_frequency(u32 freq)
006856   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006858   ffe5
00685a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00685c   ffd9
00685e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006860   ffe5
006862   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006864   ffe5
006866   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006868   ffe5
00686a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00686c   ffe5
00686e   0e02     movlw   0x2              	MOVLW	0x02
006870   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006872   f000
006874   0e03     movlw   0x3              	MOVLW	0x03
006876   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
006878   f001
00687a   0e04     movlw   0x4              	MOVLW	0x04
00687c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00687e   f002
006880   0e05     movlw   0x5              	MOVLW	0x05
006882   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
006884   f003
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = MIPS / freq;				// FOSC / (4 * PWM Frequency)
006886   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006888   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00688a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00688c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00688e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006890   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006892   5000     movf    0, 0, 0          	MOVF	r0x00, W
006894   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
006896   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
006898   0eb7     movlw   0xb7             	MOVLW	0xb7
00689a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00689c   0e1b     movlw   0x1b             	MOVLW	0x1b
00689e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0068a0   0e00     movlw   0                	MOVLW	0x00
0068a2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0068a4   ecac     call    0x5f58, 0        	CALL	__divulong
0068a6   f02f
0068a8   6e00     movwf   0, 0             	MOVWF	r0x00
0068aa   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
0068ac   f001
0068ae   0e08     movlw   0x8              	MOVLW	0x08
0068b0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0068b2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0068b4   0103     movlb   0x3              	BANKSEL	__pr2_plus1
0068b6   6f4f     movwf   0x4f, 0x1        	MOVWF	__pr2_plus1, B
0068b8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0068ba   6f50     movwf   0x50, 0x1        	MOVWF	(__pr2_plus1 + 1), B
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/pwm.c	if (_pr2_plus1 <= 4096)					// check if it's not too high
0068bc   0e10     movlw   0x10             	MOVLW	0x10
                                           ; removed redundant BANKSEL
0068be   5d50     subwf   0x50, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
0068c0   e102     bnz     0x68c6           	BNZ	_00591_DS_
0068c2   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0068c4   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00591_DS_:
0068c6   e227     bc      0x6916           	BC	_00580_DS_
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/pwm.c	if (_pr2_plus1 <= 256)				// no needs of any prescaler
0068c8   0e01     movlw   0x1              	MOVLW	0x01
0068ca   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
0068cc   5d50     subwf   0x50, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
0068ce   e102     bnz     0x68d4           	BNZ	_00592_DS_
0068d0   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0068d2   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00592_DS_:
0068d4   e203     bc      0x68dc           	BC	_00576_DS_
0068d6   0103     movlb   0x3              	BANKSEL	__t2con
                                           ;	.line	68; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(00);				// prescaler is 1
0068d8   6bce     clrf    0xce, 0x1        	CLRF	__t2con, B
0068da   d01d     bra     0x6916           	BRA	_00580_DS_
                                           _00576_DS_:
                                           ;	.line	70; /home/valentin/.icaro/firmware/tmp/pwm.c	else if (_pr2_plus1 <= 1024)		// needs prescaler 1:4
0068dc   0e04     movlw   0x4              	MOVLW	0x04
0068de   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
0068e0   5d50     subwf   0x50, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
0068e2   e102     bnz     0x68e8           	BNZ	_00593_DS_
0068e4   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
0068e6   5d4f     subwf   0x4f, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00593_DS_:
0068e8   e20b     bc      0x6900           	BC	_00573_DS_
                                           ;	.line	72; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 2;	// divided by 4
0068ea   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0068ec   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
0068ee   3350     rrcf    0x50, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
0068f0   334f     rrcf    0x4f, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
0068f2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           ; removed redundant BANKSEL
0068f4   3350     rrcf    0x50, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
0068f6   334f     rrcf    0x4f, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(01);				// prescaler is 4
0068f8   0e01     movlw   0x1              	MOVLW	0x01
0068fa   0103     movlb   0x3              	BANKSEL	__t2con
0068fc   6fce     movwf   0xce, 0x1        	MOVWF	__t2con, B
0068fe   d00b     bra     0x6916           	BRA	_00580_DS_
                                           _00573_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 4;	// divided by 16
006900   0ef0     movlw   0xf0             	MOVLW	0xf0
006902   0103     movlb   0x3              	BANKSEL	__pr2_plus1
006904   174f     andwf   0x4f, 0x1, 0x1   	ANDWF	__pr2_plus1, F, B
006906   3b4f     swapf   0x4f, 0x1, 0x1   	SWAPF	__pr2_plus1, F, B
                                           ; removed redundant BANKSEL
006908   3b50     swapf   0x50, 0x1, 0x1   	SWAPF	(__pr2_plus1 + 1), F, B
00690a   1550     andwf   0x50, 0, 0x1     	ANDWF	(__pr2_plus1 + 1), W, B
00690c   1b50     xorwf   0x50, 0x1, 0x1   	XORWF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
00690e   274f     addwf   0x4f, 0x1, 0x1   	ADDWF	__pr2_plus1, F, B
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(10);				// prescaler is 16
006910   0e02     movlw   0x2              	MOVLW	0x02
006912   0103     movlb   0x3              	BANKSEL	__t2con
006914   6fce     movwf   0xce, 0x1        	MOVWF	__t2con, B
                                           _00580_DS_:
006916   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
006918   f003
00691a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00691c   f002
00691e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006920   f001
006922   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006924   f000
006926   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006928   ffd9
00692a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayus(int microsecondes)
0074fa   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0074fc   ffe5
0074fe   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007500   ffd9
007502   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007504   ffe5
007506   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
007508   ffe5
00750a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00750c   ffe5
00750e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
007510   ffe5
007512   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
007514   ffe5
007516   0e02     movlw   0x2              	MOVLW	0x02
007518   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00751a   f000
00751c   0e03     movlw   0x3              	MOVLW	0x03
00751e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
007520   f001
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<microsecondes;i++);
007522   6a02     clrf    0x2, 0           	CLRF	r0x02
007524   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00556_DS_:
007526   5000     movf    0, 0, 0          	MOVF	r0x00, W
007528   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
00752a   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00752c   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00752e   e102     bnz     0x7534           	BNZ	_00567_DS_
007530   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
007532   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00567_DS_:
007534   e203     bc      0x753c           	BC	_00558_DS_
007536   4a02     infsnz  0x2, 0x1, 0      	INFSNZ	r0x02, F
007538   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00753a   d7f5     bra     0x7526           	BRA	_00556_DS_
                                           _00558_DS_:
00753c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00753e   f004
007540   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
007542   f003
007544   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
007546   f002
007548   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00754a   f001
00754c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00754e   f000
007550   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007552   ffd9
007554   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayms(unsigned long milliseconde)
006f7c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006f7e   ffe5
006f80   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006f82   ffd9
006f84   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006f86   ffe5
006f88   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006f8a   ffe5
006f8c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
006f8e   ffe5
006f90   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006f92   ffe5
006f94   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
006f96   ffe5
006f98   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
006f9a   ffe5
006f9c   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
006f9e   ffe5
006fa0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
006fa2   ffe5
006fa4   0e02     movlw   0x2              	MOVLW	0x02
006fa6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006fa8   f000
006faa   0e03     movlw   0x3              	MOVLW	0x03
006fac   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
006fae   f001
006fb0   0e04     movlw   0x4              	MOVLW	0x04
006fb2   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
006fb4   f002
006fb6   0e05     movlw   0x5              	MOVLW	0x05
006fb8   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
006fba   f003
                                           ;	.line	13; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
006fbc   6a04     clrf    0x4, 0           	CLRF	r0x04
006fbe   6a05     clrf    0x5, 0           	CLRF	r0x05
006fc0   6a06     clrf    0x6, 0           	CLRF	r0x06
006fc2   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00537_DS_:
006fc4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
006fc6   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
006fc8   e108     bnz     0x6fda           	BNZ	_00548_DS_
006fca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
006fcc   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
006fce   e105     bnz     0x6fda           	BNZ	_00548_DS_
006fd0   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
006fd2   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
006fd4   e102     bnz     0x6fda           	BNZ	_00548_DS_
006fd6   5000     movf    0, 0, 0          	MOVF	r0x00, W
006fd8   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00548_DS_:
006fda   e20a     bc      0x6ff0           	BC	_00539_DS_
006fdc   0e01     movlw   0x1              	MOVLW	0x01
006fde   ec37     call    0x6e, 0          	CALL	_delay10ktcy
006fe0   f000
006fe2   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
006fe4   e3ef     bnc     0x6fc4           	BNC	_00537_DS_
006fe6   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
006fe8   e3ed     bnc     0x6fc4           	BNC	_00537_DS_
006fea   4a06     infsnz  0x6, 0x1, 0      	INFSNZ	r0x06, F
006fec   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
                                           _00549_DS_:
006fee   d7ea     bra     0x6fc4           	BRA	_00537_DS_
                                           _00539_DS_:
006ff0   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
006ff2   f007
006ff4   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
006ff6   f006
006ff8   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
006ffa   f005
006ffc   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
006ffe   f004
007000   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
007002   f003
007004   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
007006   f002
007008   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00700a   f001
00700c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00700e   f000
007010   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007012   ffd9
007014   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	289; /home/valentin/.icaro/firmware/tmp/servos.c	if (PIR1bits.TMR1IF) {
007640   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
007642   d020     bra     0x7684           	BRA	_00530_DS_
                                           ;	.line	290; /home/valentin/.icaro/firmware/tmp/servos.c	PIR1bits.TMR1IF=0;
007644   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           ;	.line	291; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x00;
007646   6acd     clrf    0xcd, 0          	CLRF	_T1CON
007648   0103     movlb   0x3              	BANKSEL	_phase
                                           ;	.line	292; /home/valentin/.icaro/firmware/tmp/servos.c	if (phase) {
00764a   5149     movf    0x49, 0, 0x1     	MOVF	_phase, W, B
00764c   e00b     bz      0x7664           	BZ	_00526_DS_
                                           ;	.line	294; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseUp();
00764e   ecd8     call    0x79b0, 0        	CALL	_ServosPulseUp
007650   f03c
                                           ;	.line	296; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0xd3;
007652   0ed3     movlw   0xd3             	MOVLW	0xd3
007654   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	297; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x8f;
007656   0e8f     movlw   0x8f             	MOVLW	0x8f
007658   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	299; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=1;
00765a   0e01     movlw   0x1              	MOVLW	0x01
00765c   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
00765e   0103     movlb   0x3              	BANKSEL	_phase
                                           ;	.line	300; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 0;
007660   6b49     clrf    0x49, 0x1        	CLRF	_phase, B
007662   d010     bra     0x7684           	BRA	_00530_DS_
                                           _00526_DS_:
                                           ;	.line	305; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseDown();
007664   ec6e     call    0x6edc, 0        	CALL	_ServosPulseDown
007666   f037
                                           ;	.line	309; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0x2d;
007668   0e2d     movlw   0x2d             	MOVLW	0x2d
00766a   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	310; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x0f;
00766c   0e0f     movlw   0xf              	MOVLW	0x0f
00766e   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00524_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
007670   0103     movlb   0x3              	BANKSEL	_needreordering
                                           ;	.line	312; /home/valentin/.icaro/firmware/tmp/servos.c	if (needreordering)	
007672   514a     movf    0x4a, 0, 0x1     	MOVF	_needreordering, W, B
                                           ;	.line	313; /home/valentin/.icaro/firmware/tmp/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
007674   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	314; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
007676   ecdd     call    0x27ba, 0        	CALL	_SortServoTimings
007678   f013
00767a   0e21     movlw   0x21             	MOVLW	0x21
00767c   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	315; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
00767e   0e01     movlw   0x1              	MOVLW	0x01
007680   0103     movlb   0x3              	BANKSEL	_phase
007682   6f49     movwf   0x49, 0x1        	MOVWF	_phase, B
                                           _00530_DS_:
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/servos.c	return;
007684   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMaximumPulse(uchar servo)
007686   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007688   ffe5
00768a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00768c   ffd9
00768e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
007690   ffe5
007692   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
007694   ffe5
007696   0e02     movlw   0x2              	MOVLW	0x02
007698   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00769a   f000
                                           ;	.line	276; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
00769c   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00512_DS_
                                           ; #	GOTO	_00513_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	277; /home/valentin/.icaro/firmware/tmp/servos.c	return;
00769e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	279; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
0076a0   e20e     bc      0x76be           	BC	_00513_DS_
0076a2   6a01     clrf    0x1, 0           	CLRF	r0x01
0076a4   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
0076a6   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0076a8   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0076aa   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0076ac   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0076ae   ffe9
0076b0   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0076b2   ffea
0076b4   0efa     movlw   0xfa             	MOVLW	0xfa
0076b6   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	281; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0076b8   0e01     movlw   0x1              	MOVLW	0x01
0076ba   0103     movlb   0x3              	BANKSEL	_needreordering
0076bc   6f4a     movwf   0x4a, 0x1        	MOVWF	_needreordering, B
                                           _00513_DS_:
0076be   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0076c0   f001
0076c2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0076c4   f000
0076c6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0076c8   ffd9
0076ca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	263; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMinimumPulse(uchar servo)
007712   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007714   ffe5
007716   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007718   ffd9
00771a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00771c   ffe5
00771e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
007720   ffe5
007722   0e02     movlw   0x2              	MOVLW	0x02
007724   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
007726   f000
                                           ;	.line	265; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
007728   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00500_DS_
                                           ; #	GOTO	_00501_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	266; /home/valentin/.icaro/firmware/tmp/servos.c	return;
00772a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	268; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
00772c   e20d     bc      0x7748           	BC	_00501_DS_
00772e   6a01     clrf    0x1, 0           	CLRF	r0x01
007730   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
007732   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
007734   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
007736   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
007738   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00773a   ffe9
00773c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00773e   ffea
007740   0e01     movlw   0x1              	MOVLW	0x01
007742   6eef     movwf   0xef, 0          	MOVWF	INDF0
007744   0103     movlb   0x3              	BANKSEL	_needreordering
                                           ;	.line	270; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
007746   6f4a     movwf   0x4a, 0x1        	MOVWF	_needreordering, B
                                           _00501_DS_:
007748   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00774a   f001
00774c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00774e   f000
007750   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
007752   ffd9
007754   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	255; /home/valentin/.icaro/firmware/tmp/servos.c	unsigned char ServoRead(uchar servo)
0076cc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0076ce   ffe5
0076d0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0076d2   ffd9
0076d4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0076d6   ffe5
0076d8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0076da   ffe5
0076dc   0e02     movlw   0x2              	MOVLW	0x02
0076de   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0076e0   f000
                                           ;	.line	257; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
0076e2   0e12     movlw   0x12             	MOVLW	0x12
0076e4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0076e6   e302     bnc     0x76ec           	BNC	_00488_DS_
                                           ;	.line	258; /home/valentin/.icaro/firmware/tmp/servos.c	return 0;
0076e8   6ae8     clrf    0xe8, 0          	CLRF	WREG
0076ea   d00c     bra     0x7704           	BRA	_00489_DS_
                                           _00488_DS_:
                                           ;	.line	259; /home/valentin/.icaro/firmware/tmp/servos.c	return servovalues[servo];
0076ec   6a01     clrf    0x1, 0           	CLRF	r0x01
0076ee   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
0076f0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0076f2   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0076f4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0076f6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0076f8   ffe9
0076fa   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0076fc   ffea
0076fe   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
007700   f000
007702   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00489_DS_:
007704   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
007706   f001
007708   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00770a   f000
00770c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00770e   ffd9
007710   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	240; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoWrite(uchar servo, uchar value)
007492   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
007494   ffe5
007496   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
007498   ffd9
00749a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00749c   ffe5
00749e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0074a0   ffe5
0074a2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0074a4   ffe5
0074a6   0e02     movlw   0x2              	MOVLW	0x02
0074a8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0074aa   f000
0074ac   0e03     movlw   0x3              	MOVLW	0x03
0074ae   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0074b0   f001
                                           ;	.line	242; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
0074b2   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00464_DS_
                                           ; #	GOTO	_00469_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	243; /home/valentin/.icaro/firmware/tmp/servos.c	return;
0074b4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	245; /home/valentin/.icaro/firmware/tmp/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
0074b6   e218     bc      0x74e8           	BC	_00469_DS_
0074b8   0e01     movlw   0x1              	MOVLW	0x01
0074ba   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0074bc   e202     bc      0x74c2           	BC	_00466_DS_
                                           ;	.line	246; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMIN;
0074be   0e01     movlw   0x1              	MOVLW	0x01
0074c0   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00466_DS_:
                                           ;	.line	247; /home/valentin/.icaro/firmware/tmp/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
0074c2   0efb     movlw   0xfb             	MOVLW	0xfb
0074c4   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0074c6   e302     bnc     0x74cc           	BNC	_00468_DS_
                                           ;	.line	248; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMAX;
0074c8   0efa     movlw   0xfa             	MOVLW	0xfa
0074ca   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00468_DS_:
                                           ;	.line	249; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=value;
0074cc   6a02     clrf    0x2, 0           	CLRF	r0x02
0074ce   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
0074d0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0074d2   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0074d4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0074d6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0074d8   ffe9
0074da   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0074dc   ffea
0074de   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
0074e0   ffef
                                           ;	.line	251; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0074e2   0e01     movlw   0x1              	MOVLW	0x01
0074e4   0103     movlb   0x3              	BANKSEL	_needreordering
0074e6   6f4a     movwf   0x4a, 0x1        	MOVWF	_needreordering, B
                                           _00469_DS_:
0074e8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0074ea   f002
0074ec   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0074ee   f001
0074f0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0074f2   f000
0074f4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0074f6   ffd9
0074f8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoDetach(uchar pin)
00692c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00692e   ffe5
006930   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006932   ffd9
006934   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006936   ffe5
006938   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00693a   ffe5
00693c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00693e   ffe5
006940   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
006942   ffe5
006944   0e02     movlw   0x2              	MOVLW	0x02
006946   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
006948   f000
                                           ;	.line	228; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
00694a   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00437_DS_
                                           ; #	GOTO	_00444_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	230; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
00694c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00694e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
006950   d04c     bra     0x69ea           	BRA	_00444_DS_
006952   0e08     movlw   0x8              	MOVLW	0x08
006954   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
006956   e218     bc      0x6988           	BC	_00442_DS_
                                           ;	.line	231; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
006958   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
00695a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00695c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00695e   6a02     clrf    0x2, 0           	CLRF	r0x02
006960   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
006962   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
006964   6a03     clrf    0x3, 0           	CLRF	r0x03
006966   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
006968   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00696a   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
00696c   fff6
00696e   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
006970   fff7
006972   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
006974   fff8
006976   0009     tblrd   *+               	TBLRD*+	
006978   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
00697a   f001
00697c   0103     movlb   0x3              	BANKSEL	_activatedservos
00697e   514c     movf    0x4c, 0, 0x1     	MOVF	_activatedservos, W, B
006980   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
006982   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
006984   6f4c     movwf   0x4c, 0x1        	MOVWF	_activatedservos, B
006986   d031     bra     0x69ea           	BRA	_00444_DS_
                                           _00442_DS_:
                                           ;	.line	232; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
006988   0e0d     movlw   0xd              	MOVLW	0x0d
00698a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00698c   e318     bnc     0x69be           	BNC	_00439_DS_
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
00698e   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
006990   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
006992   6e01     movwf   0x1, 0           	MOVWF	r0x01
006994   6a02     clrf    0x2, 0           	CLRF	r0x02
006996   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
006998   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00699a   6a03     clrf    0x3, 0           	CLRF	r0x03
00699c   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00699e   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0069a0   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0069a2   fff6
0069a4   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0069a6   fff7
0069a8   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0069aa   fff8
0069ac   0009     tblrd   *+               	TBLRD*+	
0069ae   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
0069b0   f001
0069b2   0103     movlb   0x3              	BANKSEL	(_activatedservos + 2)
0069b4   514e     movf    0x4e, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
0069b6   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
0069b8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0069ba   6f4e     movwf   0x4e, 0x1        	MOVWF	(_activatedservos + 2), B
0069bc   d016     bra     0x69ea           	BRA	_00444_DS_
                                           _00439_DS_:
                                           ;	.line	235; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
0069be   6a01     clrf    0x1, 0           	CLRF	r0x01
0069c0   6a02     clrf    0x2, 0           	CLRF	r0x02
0069c2   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
0069c4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0069c6   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
0069c8   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0069ca   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0069cc   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0069ce   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
0069d0   fff6
0069d2   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
0069d4   fff7
0069d6   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
0069d8   fff8
0069da   0009     tblrd   *+               	TBLRD*+	
0069dc   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
0069de   f000
0069e0   0103     movlb   0x3              	BANKSEL	(_activatedservos + 1)
0069e2   514d     movf    0x4d, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
0069e4   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
0069e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0069e8   6f4d     movwf   0x4d, 0x1        	MOVWF	(_activatedservos + 1), B
                                           _00444_DS_:
0069ea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0069ec   f003
0069ee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0069f0   f002
0069f2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0069f4   f001
0069f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0069f8   f000
0069fa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0069fc   ffd9
0069fe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoAttach(uchar pin)
005e34   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005e36   ffe5
005e38   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005e3a   ffd9
005e3c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005e3e   ffe5
005e40   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
005e42   ffe5
005e44   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
005e46   ffe5
005e48   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
005e4a   ffe5
005e4c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
005e4e   ffe5
005e50   0e02     movlw   0x2              	MOVLW	0x02
005e52   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
005e54   f000
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
005e56   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00409_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
005e58   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
005e5a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
005e5c   d070     bra     0x5f3e           	BRA	_00416_DS_
005e5e   0e08     movlw   0x8              	MOVLW	0x08
005e60   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
005e62   e224     bc      0x5eac           	BC	_00414_DS_
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
005e64   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
005e66   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
005e68   6e01     movwf   0x1, 0           	MOVWF	r0x01
005e6a   6a02     clrf    0x2, 0           	CLRF	r0x02
005e6c   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
005e6e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
005e70   6a03     clrf    0x3, 0           	CLRF	r0x03
005e72   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
005e74   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
005e76   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
005e78   fff6
005e7a   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
005e7c   fff7
005e7e   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
005e80   fff8
005e82   0009     tblrd   *+               	TBLRD*+	
005e84   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
005e86   f004
005e88   0103     movlb   0x3              	BANKSEL	_activatedservos
005e8a   514c     movf    0x4c, 0, 0x1     	MOVF	_activatedservos, W, B
005e8c   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
005e8e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
005e90   6f4c     movwf   0x4c, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	215; /home/valentin/.icaro/firmware/tmp/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
005e92   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
005e94   fff6
005e96   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
005e98   fff7
005e9a   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
005e9c   fff8
005e9e   0009     tblrd   *+               	TBLRD*+	
005ea0   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
005ea2   f001
005ea4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005ea6   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
005ea8   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
005eaa   d049     bra     0x5f3e           	BRA	_00416_DS_
                                           _00414_DS_:
                                           ;	.line	216; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
005eac   0e0d     movlw   0xd              	MOVLW	0x0d
005eae   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
005eb0   e324     bnc     0x5efa           	BNC	_00411_DS_
                                           ;	.line	217; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
005eb2   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
005eb4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
005eb6   6e01     movwf   0x1, 0           	MOVWF	r0x01
005eb8   6a02     clrf    0x2, 0           	CLRF	r0x02
005eba   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
005ebc   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
005ebe   6a03     clrf    0x3, 0           	CLRF	r0x03
005ec0   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
005ec2   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
005ec4   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
005ec6   fff6
005ec8   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
005eca   fff7
005ecc   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
005ece   fff8
005ed0   0009     tblrd   *+               	TBLRD*+	
005ed2   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
005ed4   f004
005ed6   0103     movlb   0x3              	BANKSEL	(_activatedservos + 2)
005ed8   514e     movf    0x4e, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
005eda   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
005edc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
005ede   6f4e     movwf   0x4e, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	218; /home/valentin/.icaro/firmware/tmp/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
005ee0   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
005ee2   fff6
005ee4   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
005ee6   fff7
005ee8   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
005eea   fff8
005eec   0009     tblrd   *+               	TBLRD*+	
005eee   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
005ef0   f001
005ef2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
005ef4   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
005ef6   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
005ef8   d022     bra     0x5f3e           	BRA	_00416_DS_
                                           _00411_DS_:
                                           ;	.line	220; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
005efa   6a01     clrf    0x1, 0           	CLRF	r0x01
005efc   6a02     clrf    0x2, 0           	CLRF	r0x02
005efe   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
005f00   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
005f02   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
005f04   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
005f06   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
005f08   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
005f0a   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
005f0c   fff6
005f0e   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
005f10   fff7
005f12   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
005f14   fff8
005f16   0009     tblrd   *+               	TBLRD*+	
005f18   cff5     movff   0xff5, 0x3       	MOVFF	TABLAT, r0x03
005f1a   f003
005f1c   0103     movlb   0x3              	BANKSEL	(_activatedservos + 1)
005f1e   514d     movf    0x4d, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
005f20   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
005f22   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
005f24   6f4d     movwf   0x4d, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
005f26   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
005f28   fff6
005f2a   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
005f2c   fff7
005f2e   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
005f30   fff8
005f32   0009     tblrd   *+               	TBLRD*+	
005f34   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
005f36   f000
005f38   5000     movf    0, 0, 0          	MOVF	r0x00, W
005f3a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
005f3c   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           _00416_DS_:
005f3e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
005f40   f004
005f42   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
005f44   f003
005f46   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
005f48   f002
005f4a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
005f4c   f001
005f4e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
005f50   f000
005f52   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
005f54   ffd9
005f56   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/servos.c	static void SortServoTimings()
0027ba   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0027bc   ffe5
0027be   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0027c0   ffe5
0027c2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0027c4   ffe5
0027c6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0027c8   ffe5
0027ca   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0027cc   ffe5
0027ce   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0027d0   ffe5
0027d2   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0027d4   ffe5
0027d6   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0027d8   ffe5
0027da   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0027dc   ffe5
0027de   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0027e0   ffe5
0027e2   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
0027e4   ffe5
0027e6   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
0027e8   ffe5
0027ea   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
0027ec   ffe5
0027ee   0103     movlb   0x3              	BANKSEL	_SortServoTimings_mascaratotal_1_27
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0027f0   6bc1     clrf    0xc1, 0x1        	CLRF	_SortServoTimings_mascaratotal_1_27, B
                                           ; removed redundant BANKSEL
0027f2   6bc2     clrf    0xc2, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ; removed redundant BANKSEL
0027f4   6bc3     clrf    0xc3, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
0027f6   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00325_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=255;
0027f8   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
0027fa   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0027fc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0027fe   6a02     clrf    0x2, 0           	CLRF	r0x02
002800   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 54)
002802   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002804   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002806   ffe9
002808   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00280a   ffea
00280c   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
00280e   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002810   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002812   6e01     movwf   0x1, 0           	MOVWF	r0x01
002814   6a02     clrf    0x2, 0           	CLRF	r0x02
002816   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
002818   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00281a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00281c   ffe9
00281e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002820   ffea
002822   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
002824   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
002826   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002828   6e01     movwf   0x1, 0           	MOVWF	r0x01
00282a   6a02     clrf    0x2, 0           	CLRF	r0x02
00282c   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
00282e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002830   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002832   ffe9
002834   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002836   ffea
002838   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
00283a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00283c   0e12     movlw   0x12             	MOVLW	0x12
00283e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002840   e3db     bnc     0x27f8           	BNC	_00325_DS_
                                           ;	.line	142; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos=0;
002842   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/servos.c	while(totalservos<18) {
002844   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00322_DS_:
002846   0e12     movlw   0x12             	MOVLW	0x12
002848   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00284a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00284c   d194     bra     0x2b76           	BRA	_00324_DS_
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
00284e   0e01     movlw   0x1              	MOVLW	0x01
002850   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
002852   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00327_DS_:
                                           ;	.line	148; /home/valentin/.icaro/firmware/tmp/servos.c	if (s<8){
002854   0e08     movlw   0x8              	MOVLW	0x08
002856   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002858   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00285a   d061     bra     0x291e           	BRA	_00319_DS_
                                           ;	.line	149; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
00285c   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
00285e   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002860   6e04     movwf   0x4, 0           	MOVWF	r0x04
002862   6a05     clrf    0x5, 0           	CLRF	r0x05
002864   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
002866   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002868   6a06     clrf    0x6, 0           	CLRF	r0x06
00286a   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00286c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00286e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002870   fff6
002872   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002874   fff7
002876   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002878   fff8
00287a   0009     tblrd   *+               	TBLRD*+	
00287c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00287e   f004
002880   0103     movlb   0x3              	BANKSEL	_SortServoTimings_mascaratotal_1_27
002882   51c1     movf    0xc1, 0, 0x1     	MOVF	_SortServoTimings_mascaratotal_1_27, W, B
002884   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002886   0103     movlb   0x3              	BANKSEL	_activatedservos
002888   514c     movf    0x4c, 0, 0x1     	MOVF	_activatedservos, W, B
00288a   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
00288c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00288e   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002890   d148     bra     0x2b22           	BRA	_00328_DS_
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002892   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
002894   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002896   6e04     movwf   0x4, 0           	MOVWF	r0x04
002898   6a05     clrf    0x5, 0           	CLRF	r0x05
00289a   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
00289c   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00289e   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0028a0   ffe9
0028a2   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0028a4   ffea
0028a6   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
0028a8   f004
0028aa   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
0028ac   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0028ae   6e05     movwf   0x5, 0           	MOVWF	r0x05
0028b0   6a06     clrf    0x6, 0           	CLRF	r0x06
0028b2   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 54)
0028b4   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0028b6   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0028b8   ffe9
0028ba   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0028bc   ffea
0028be   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
0028c0   f007
0028c2   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0028c4   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0028c6   e21f     bc      0x2906           	BC	_00294_DS_
                                           ;	.line	152; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
0028c8   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0028ca   ffe9
0028cc   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0028ce   ffea
0028d0   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0028d2   ffef
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0028d4   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0028d6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0028d8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0028da   6a08     clrf    0x8, 0           	CLRF	r0x08
0028dc   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
0028de   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0028e0   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0028e2   ffe9
0028e4   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0028e6   ffea
0028e8   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	155; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0028ea   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0028ec   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0028ee   6e07     movwf   0x7, 0           	MOVWF	r0x07
0028f0   6a08     clrf    0x8, 0           	CLRF	r0x08
0028f2   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
0028f4   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0028f6   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0028f8   ffe9
0028fa   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0028fc   ffea
0028fe   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002900   0e01     movlw   0x1              	MOVLW	0x01
002902   6e02     movwf   0x2, 0           	MOVWF	r0x02
002904   d10e     bra     0x2b22           	BRA	_00328_DS_
                                           _00294_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002906   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002908   ffe9
00290a   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00290c   ffea
00290e   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
002910   f005
002912   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002914   1805     xorwf   0x5, 0, 0        	XORWF	r0x05, W
002916   e001     bz      0x291a           	BZ	_00391_DS_
002918   d104     bra     0x2b22           	BRA	_00328_DS_
                                           _00391_DS_:
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
00291a   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
00291c   d102     bra     0x2b22           	BRA	_00328_DS_
                                           _00319_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/servos.c	else if (s>12){
00291e   0e0d     movlw   0xd              	MOVLW	0x0d
002920   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002922   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002924   d080     bra     0x2a26           	BRA	_00316_DS_
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002926   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
002928   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00292a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00292c   6a05     clrf    0x5, 0           	CLRF	r0x05
00292e   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
002930   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002932   6a06     clrf    0x6, 0           	CLRF	r0x06
002934   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002936   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002938   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00293a   fff6
00293c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00293e   fff7
002940   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002942   fff8
002944   0009     tblrd   *+               	TBLRD*+	
002946   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
002948   f007
00294a   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 2)
00294c   51c3     movf    0xc3, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
00294e   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
002950   6e08     movwf   0x8, 0           	MOVWF	r0x08
002952   0103     movlb   0x3              	BANKSEL	(_activatedservos + 2)
002954   514e     movf    0x4e, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
002956   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002958   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00295a   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
00295c   d0e2     bra     0x2b22           	BRA	_00328_DS_
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00295e   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
002960   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002962   6e08     movwf   0x8, 0           	MOVWF	r0x08
002964   6a09     clrf    0x9, 0           	CLRF	r0x09
002966   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002968   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
00296a   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
00296c   ffe9
00296e   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
002970   ffea
002972   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002974   f008
002976   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
002978   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00297a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00297c   6a0a     clrf    0xa, 0           	CLRF	r0x0a
00297e   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 54)
002980   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
002982   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002984   ffe9
002986   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002988   ffea
00298a   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
00298c   f00b
00298e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002990   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
002992   e229     bc      0x29e6           	BC	_00302_DS_
                                           ;	.line	168; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002994   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002996   ffe9
002998   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
00299a   ffea
00299c   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
00299e   ffef
                                           ;	.line	170; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0029a0   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0029a2   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0029a4   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0029a6   6a0c     clrf    0xc, 0           	CLRF	r0x0c
0029a8   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
0029aa   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
0029ac   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
0029ae   ffe9
0029b0   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
0029b2   ffea
0029b4   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	171; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=servomasks[s];
0029b6   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0029b8   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0029ba   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
0029bc   6a0c     clrf    0xc, 0           	CLRF	r0x0c
0029be   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
0029c0   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
0029c2   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029c4   fff6
0029c6   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029c8   fff7
0029ca   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0029cc   fff8
0029ce   0009     tblrd   *+               	TBLRD*+	
0029d0   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029d2   f004
0029d4   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
0029d6   ffe9
0029d8   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
0029da   ffea
0029dc   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0029de   ffef
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0029e0   0e01     movlw   0x1              	MOVLW	0x01
0029e2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0029e4   d09e     bra     0x2b22           	BRA	_00328_DS_
                                           _00302_DS_:
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0029e6   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
0029e8   ffe9
0029ea   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
0029ec   ffea
0029ee   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
0029f0   f009
0029f2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0029f4   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
0029f6   e001     bz      0x29fa           	BZ	_00396_DS_
0029f8   d094     bra     0x2b22           	BRA	_00328_DS_
                                           _00396_DS_:
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t] |= servomasks[s];
0029fa   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0029fc   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0029fe   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a00   6a05     clrf    0x5, 0           	CLRF	r0x05
002a02   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
002a04   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002a06   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002a08   ffe9
002a0a   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002a0c   ffea
002a0e   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
002a10   f006
002a12   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002a14   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
002a16   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002a18   ffe9
002a1a   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002a1c   ffea
002a1e   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
002a20   ffef
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
002a22   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
002a24   d07e     bra     0x2b22           	BRA	_00328_DS_
                                           _00316_DS_:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002a26   0eb6     movlw   0xb6             	MOVLW	LOW(_servomasks)
002a28   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002a2a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a2c   6a05     clrf    0x5, 0           	CLRF	r0x05
002a2e   0e32     movlw   0x32             	MOVLW	HIGH(_servomasks)
002a30   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002a32   6a06     clrf    0x6, 0           	CLRF	r0x06
002a34   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002a36   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a38   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a3a   fff6
002a3c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a3e   fff7
002a40   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a42   fff8
002a44   0009     tblrd   *+               	TBLRD*+	
002a46   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
002a48   f007
002a4a   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002a4c   51c2     movf    0xc2, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002a4e   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
002a50   6e08     movwf   0x8, 0           	MOVWF	r0x08
002a52   0103     movlb   0x3              	BANKSEL	(_activatedservos + 1)
002a54   514d     movf    0x4d, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
002a56   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002a58   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002a5a   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002a5c   d062     bra     0x2b22           	BRA	_00328_DS_
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002a5e   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
002a60   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002a62   6e08     movwf   0x8, 0           	MOVWF	r0x08
002a64   6a09     clrf    0x9, 0           	CLRF	r0x09
002a66   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002a68   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
002a6a   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
002a6c   ffe9
002a6e   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
002a70   ffea
002a72   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002a74   f008
002a76   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
002a78   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002a7a   6e09     movwf   0x9, 0           	MOVWF	r0x09
002a7c   6a0a     clrf    0xa, 0           	CLRF	r0x0a
002a7e   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 54)
002a80   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
002a82   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002a84   ffe9
002a86   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002a88   ffea
002a8a   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
002a8c   f00b
002a8e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002a90   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
002a92   e229     bc      0x2ae6           	BC	_00310_DS_
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002a94   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002a96   ffe9
002a98   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002a9a   ffea
002a9c   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002a9e   ffef
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=servomasks[s];
002aa0   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002aa2   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002aa4   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002aa6   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002aa8   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
002aaa   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
002aac   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002aae   fff6
002ab0   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002ab2   fff7
002ab4   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002ab6   fff8
002ab8   0009     tblrd   *+               	TBLRD*+	
002aba   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002abc   f004
002abe   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
002ac0   ffe9
002ac2   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
002ac4   ffea
002ac6   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002ac8   ffef
                                           ;	.line	187; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
002aca   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
002acc   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002ace   6e04     movwf   0x4, 0           	MOVWF	r0x04
002ad0   6a05     clrf    0x5, 0           	CLRF	r0x05
002ad2   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
002ad4   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002ad6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002ad8   ffe9
002ada   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002adc   ffea
002ade   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002ae0   0e01     movlw   0x1              	MOVLW	0x01
002ae2   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ae4   d01e     bra     0x2b22           	BRA	_00328_DS_
                                           _00310_DS_:
                                           ;	.line	190; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings [timevalue][t]){
002ae6   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002ae8   ffe9
002aea   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002aec   ffea
002aee   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
002af0   f009
002af2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002af4   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
002af6   e115     bnz     0x2b22           	BNZ	_00328_DS_
                                           ;	.line	191; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t] |= servomasks[s];
002af8   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002afa   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002afc   6e04     movwf   0x4, 0           	MOVWF	r0x04
002afe   6a05     clrf    0x5, 0           	CLRF	r0x05
002b00   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
002b02   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002b04   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002b06   ffe9
002b08   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002b0a   ffea
002b0c   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
002b0e   f006
002b10   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002b12   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
002b14   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002b16   ffe9
002b18   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002b1a   ffea
002b1c   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
002b1e   ffef
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
002b20   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00328_DS_:
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
002b22   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
002b24   0e12     movlw   0x12             	MOVLW	0x12
002b26   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002b28   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002b2a   d694     bra     0x2854           	BRA	_00327_DS_
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
002b2c   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002b2e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b30   6e03     movwf   0x3, 0           	MOVWF	r0x03
002b32   6a04     clrf    0x4, 0           	CLRF	r0x04
002b34   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
002b36   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002b38   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002b3a   ffe9
002b3c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002b3e   ffea
002b40   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002b42   f003
002b44   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002b46   51c2     movf    0xc2, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002b48   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002b4a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002b4c   6fc2     movwf   0xc2, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
002b4e   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
002b50   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b52   6e03     movwf   0x3, 0           	MOVWF	r0x03
002b54   6a04     clrf    0x4, 0           	CLRF	r0x04
002b56   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
002b58   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002b5a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002b5c   ffe9
002b5e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002b60   ffea
002b62   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002b64   f003
                                           ; removed redundant BANKSEL
002b66   51c3     movf    0xc3, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002b68   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002b6a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002b6c   6fc3     movwf   0xc3, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos += numservos;
002b6e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002b70   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/servos.c	t++;
002b72   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002b74   d668     bra     0x2846           	BRA	_00322_DS_
                                           _00324_DS_:
002b76   0103     movlb   0x3              	BANKSEL	_needreordering
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002b78   6b4a     clrf    0x4a, 0x1        	CLRF	_needreordering, B
002b7a   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
002b7c   f00c
002b7e   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
002b80   f00b
002b82   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
002b84   f00a
002b86   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
002b88   f009
002b8a   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002b8c   f008
002b8e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002b90   f007
002b92   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002b94   f006
002b96   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002b98   f005
002b9a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002b9c   f004
002b9e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002ba0   f003
002ba2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ba4   f002
002ba6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002ba8   f001
002baa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002bac   f000
002bae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
0079b0   c34d     movff   0x34d, 0xf82     	MOVFF	(_activatedservos + 1), _PORTC
0079b2   ff82
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
0079b4   c34e     movff   0x34e, 0xf80     	MOVFF	(_activatedservos + 2), _PORTA
0079b6   ff80
0079b8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/.icaro/firmware/tmp/servos.c	static void ServosPulseDown()
006edc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
006ede   ffe5
006ee0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
006ee2   ffd9
006ee4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
006ee6   ffe5
006ee8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
006eea   ffe5
006eec   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex = 0;
006eee   6bcd     clrf    0xcd, 0x1        	CLRF	_timingindex, B
006ef0   0103     movlb   0x3              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
006ef2   6b4b     clrf    0x4b, 0x1        	CLRF	_timedivision, B
                                           _00266_DS_:
                                           ;	.line	97; /home/valentin/.icaro/firmware/tmp/servos.c	if (timings[timevalue][timingindex] == timedivision){
006ef4   c3cd     movff   0x3cd, 0         	MOVFF	_timingindex, r0x00
006ef6   f000
006ef8   6a01     clrf    0x1, 0           	CLRF	r0x01
006efa   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
006efc   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
006efe   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 54)
006f00   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
006f02   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
006f04   ffe9
006f06   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
006f08   ffea
006f0a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
006f0c   f000
006f0e   5000     movf    0, 0, 0          	MOVF	r0x00, W
006f10   0103     movlb   0x3              	BANKSEL	_timedivision
006f12   194b     xorwf   0x4b, 0, 0x1     	XORWF	_timedivision, W, B
006f14   e120     bnz     0x6f56           	BNZ	_00264_DS_
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
006f16   c3cd     movff   0x3cd, 0         	MOVFF	_timingindex, r0x00
006f18   f000
006f1a   6a01     clrf    0x1, 0           	CLRF	r0x01
006f1c   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
006f1e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
006f20   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 18)
006f22   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
006f24   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
006f26   ffe9
006f28   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
006f2a   ffea
006f2c   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
006f2e   f000
006f30   5000     movf    0, 0, 0          	MOVF	r0x00, W
006f32   1a82     xorwf   0x82, 0x1, 0     	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
006f34   c3cd     movff   0x3cd, 0         	MOVFF	_timingindex, r0x00
006f36   f000
006f38   6a01     clrf    0x1, 0           	CLRF	r0x01
006f3a   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
006f3c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
006f3e   0e03     movlw   0x3              	MOVLW	HIGH(_timings + 36)
006f40   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
006f42   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
006f44   ffe9
006f46   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
006f48   ffea
006f4a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
006f4c   f000
006f4e   5000     movf    0, 0, 0          	MOVF	r0x00, W
006f50   1a80     xorwf   0x80, 0x1, 0     	XORWF	_PORTA, F
006f52   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex++;
006f54   2bcd     incf    0xcd, 0x1, 0x1   	INCF	_timingindex, F, B
                                           _00264_DS_:
006f56   0e0c     movlw   0xc              	movlw 12
006f58   6fca     movwf   0xca, 0x1        	movwf _loopvar
                                           bucle:
006f5a   0000     nop                      	NOP
006f5c   2fca     decfsz  0xca, 0x1, 0x1   	decfsz _loopvar,1
006f5e   efad     goto    0x6f5a           	goto bucle
006f60   f037
                                           	
006f62   0103     movlb   0x3              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
006f64   2b4b     incf    0x4b, 0x1, 0x1   	INCF	_timedivision, F, B
006f66   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
006f68   5d4b     subwf   0x4b, 0, 0x1     	SUBWF	_timedivision, W, B
006f6a   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
006f6c   d7c3     bra     0x6ef4           	BRA	_00266_DS_
006f6e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
006f70   f001
006f72   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
006f74   f000
006f76   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
006f78   ffd9
006f7a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/servos.c	void servos_init()
0075f8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0075fa   ffe5
0075fc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0075fe   ffe5
007600   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
007602   ffe5
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
007604   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00247_DS_:
007606   0eea     movlw   0xea             	MOVLW	LOW(_servovalues)
007608   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00760a   6e01     movwf   0x1, 0           	MOVWF	r0x01
00760c   6a02     clrf    0x2, 0           	CLRF	r0x02
00760e   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
007610   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
007612   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
007614   ffe9
007616   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
007618   ffea
00761a   68ef     setf    0xef, 0          	SETF	INDF0
00761c   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00761e   0e12     movlw   0x12             	MOVLW	0x12
007620   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
007622   e3f1     bnc     0x7606           	BNC	_00247_DS_
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H=0xFF;
007624   68cf     setf    0xcf, 0          	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L=0x00;
007626   6ace     clrf    0xce, 0          	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x01;
007628   0e01     movlw   0x1              	MOVLW	0x01
00762a   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/servos.c	PIE1bits.TMR1IE=1;
00762c   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.PEIE=1;
00762e   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.GIE=1;
007630   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
007632   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
007634   f002
007636   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
007638   f001
00763a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00763c   f000
00763e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/.icaro/firmware/tmp/digitalw.c	void pinmode(int input, int state)
004344   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004346   ffe5
004348   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00434a   ffd9
00434c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00434e   ffe5
004350   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004352   ffe5
004354   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004356   ffe5
004358   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00435a   ffe5
00435c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00435e   ffe5
004360   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004362   ffe5
004364   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004366   ffe5
004368   0e02     movlw   0x2              	MOVLW	0x02
00436a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00436c   f000
00436e   0e03     movlw   0x3              	MOVLW	0x03
004370   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004372   f001
004374   0e04     movlw   0x4              	MOVLW	0x04
004376   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004378   f002
00437a   0e05     movlw   0x5              	MOVLW	0x05
00437c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00437e   f003
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
004380   0e98     movlw   0x98             	MOVLW	LOW(_port)
004382   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004384   6e04     movwf   0x4, 0           	MOVWF	r0x04
004386   0e32     movlw   0x32             	MOVLW	HIGH(_port)
004388   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00438a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00438c   6a06     clrf    0x6, 0           	CLRF	r0x06
00438e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004390   6806     setf    0x6, 0           	SETF	r0x06
004392   0e00     movlw   0                	MOVLW	UPPER(_port)
004394   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004396   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004398   fff6
00439a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00439c   fff7
00439e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0043a0   fff8
0043a2   0009     tblrd   *+               	TBLRD*+	
0043a4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0043a6   f004
0043a8   0e05     movlw   0x5              	MOVLW	0x05
0043aa   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0043ac   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0043ae   d110     bra     0x45d0           	BRA	_00220_DS_
0043b0   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0043b2   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0043b4   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
0043b6   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0043b8   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0043ba   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0043bc   0bfc     andlw   0xfc             	ANDLW	0xfc
0043be   0fce     addlw   0xce             	ADDLW	LOW(_00241_DS_)
0043c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0043c2   0e43     movlw   0x43             	MOVLW	HIGH(_00241_DS_)
0043c4   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0043c6   0e00     movlw   0                	MOVLW	UPPER(_00241_DS_)
0043c8   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0043ca   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0043cc   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00241_DS_:
0043ce   eff1     goto    0x43e2           	GOTO	_00199_DS_
0043d0   f021
0043d2   ef23     goto    0x4446           	GOTO	_00203_DS_
0043d4   f022
0043d6   ef55     goto    0x44aa           	GOTO	_00207_DS_
0043d8   f022
0043da   ef87     goto    0x450e           	GOTO	_00211_DS_
0043dc   f022
0043de   efb9     goto    0x4572           	GOTO	_00215_DS_
0043e0   f022
                                           _00199_DS_:
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
0043e2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0043e4   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0043e6   e017     bz      0x4416           	BZ	_00201_DS_
0043e8   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0043ea   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0043ec   6e04     movwf   0x4, 0           	MOVWF	r0x04
0043ee   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0043f0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0043f2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0043f4   6a06     clrf    0x6, 0           	CLRF	r0x06
0043f6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0043f8   6806     setf    0x6, 0           	SETF	r0x06
0043fa   0e00     movlw   0                	MOVLW	UPPER(_mask)
0043fc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0043fe   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004400   fff6
004402   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004404   fff7
004406   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
004408   fff8
00440a   0009     tblrd   *+               	TBLRD*+	
00440c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00440e   f004
004410   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004412   1293     iorwf   0x93, 0x1, 0     	IORWF	_TRISB, F
004414   d0dd     bra     0x45d0           	BRA	_00220_DS_
                                           _00201_DS_:
                                           ;	.line	74; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISB=TRISB & (255-mask[input]);
004416   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
004418   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00441a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00441c   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
00441e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004420   6e05     movwf   0x5, 0           	MOVWF	r0x05
004422   6a06     clrf    0x6, 0           	CLRF	r0x06
004424   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004426   6806     setf    0x6, 0           	SETF	r0x06
004428   0e00     movlw   0                	MOVLW	UPPER(_mask)
00442a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00442c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00442e   fff6
004430   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004432   fff7
004434   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
004436   fff8
004438   0009     tblrd   *+               	TBLRD*+	
00443a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00443c   f004
00443e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004440   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
004442   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
004444   d0c5     bra     0x45d0           	BRA	_00220_DS_
                                           _00203_DS_:
                                           ;	.line	76; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
004446   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004448   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00444a   e017     bz      0x447a           	BZ	_00205_DS_
00444c   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00444e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004450   6e04     movwf   0x4, 0           	MOVWF	r0x04
004452   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004454   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004456   6e05     movwf   0x5, 0           	MOVWF	r0x05
004458   6a06     clrf    0x6, 0           	CLRF	r0x06
00445a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00445c   6806     setf    0x6, 0           	SETF	r0x06
00445e   0e00     movlw   0                	MOVLW	UPPER(_mask)
004460   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004462   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004464   fff6
004466   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004468   fff7
00446a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00446c   fff8
00446e   0009     tblrd   *+               	TBLRD*+	
004470   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004472   f004
004474   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004476   1294     iorwf   0x94, 0x1, 0     	IORWF	_TRISC, F
004478   d0ab     bra     0x45d0           	BRA	_00220_DS_
                                           _00205_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISC=TRISC & (255-mask[input]);
00447a   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00447c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00447e   6e04     movwf   0x4, 0           	MOVWF	r0x04
004480   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004482   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004484   6e05     movwf   0x5, 0           	MOVWF	r0x05
004486   6a06     clrf    0x6, 0           	CLRF	r0x06
004488   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00448a   6806     setf    0x6, 0           	SETF	r0x06
00448c   0e00     movlw   0                	MOVLW	UPPER(_mask)
00448e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004490   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004492   fff6
004494   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004496   fff7
004498   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00449a   fff8
00449c   0009     tblrd   *+               	TBLRD*+	
00449e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0044a0   f004
0044a2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0044a4   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0044a6   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0044a8   d093     bra     0x45d0           	BRA	_00220_DS_
                                           _00207_DS_:
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
0044aa   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0044ac   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0044ae   e017     bz      0x44de           	BZ	_00209_DS_
0044b0   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0044b2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0044b4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0044b6   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0044b8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0044ba   6e05     movwf   0x5, 0           	MOVWF	r0x05
0044bc   6a06     clrf    0x6, 0           	CLRF	r0x06
0044be   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0044c0   6806     setf    0x6, 0           	SETF	r0x06
0044c2   0e00     movlw   0                	MOVLW	UPPER(_mask)
0044c4   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0044c6   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0044c8   fff6
0044ca   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0044cc   fff7
0044ce   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0044d0   fff8
0044d2   0009     tblrd   *+               	TBLRD*+	
0044d4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0044d6   f004
0044d8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0044da   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
0044dc   d079     bra     0x45d0           	BRA	_00220_DS_
                                           _00209_DS_:
                                           ;	.line	80; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISA=TRISA & (255-mask[input]);
0044de   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0044e0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0044e2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0044e4   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0044e6   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0044e8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0044ea   6a06     clrf    0x6, 0           	CLRF	r0x06
0044ec   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0044ee   6806     setf    0x6, 0           	SETF	r0x06
0044f0   0e00     movlw   0                	MOVLW	UPPER(_mask)
0044f2   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0044f4   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0044f6   fff6
0044f8   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0044fa   fff7
0044fc   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0044fe   fff8
004500   0009     tblrd   *+               	TBLRD*+	
004502   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004504   f004
004506   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004508   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00450a   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
00450c   d061     bra     0x45d0           	BRA	_00220_DS_
                                           _00211_DS_:
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
00450e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004510   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
004512   e017     bz      0x4542           	BZ	_00213_DS_
004514   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
004516   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004518   6e04     movwf   0x4, 0           	MOVWF	r0x04
00451a   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
00451c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00451e   6e05     movwf   0x5, 0           	MOVWF	r0x05
004520   6a06     clrf    0x6, 0           	CLRF	r0x06
004522   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004524   6806     setf    0x6, 0           	SETF	r0x06
004526   0e00     movlw   0                	MOVLW	UPPER(_mask)
004528   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00452a   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00452c   fff6
00452e   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004530   fff7
004532   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
004534   fff8
004536   0009     tblrd   *+               	TBLRD*+	
004538   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00453a   f004
00453c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00453e   1295     iorwf   0x95, 0x1, 0     	IORWF	_TRISD, F
004540   d047     bra     0x45d0           	BRA	_00220_DS_
                                           _00213_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISD=TRISD & (255-mask[input]);
004542   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
004544   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004546   6e04     movwf   0x4, 0           	MOVWF	r0x04
004548   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
00454a   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00454c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00454e   6a06     clrf    0x6, 0           	CLRF	r0x06
004550   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004552   6806     setf    0x6, 0           	SETF	r0x06
004554   0e00     movlw   0                	MOVLW	UPPER(_mask)
004556   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004558   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00455a   fff6
00455c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00455e   fff7
004560   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
004562   fff8
004564   0009     tblrd   *+               	TBLRD*+	
004566   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004568   f004
00456a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00456c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00456e   1695     andwf   0x95, 0x1, 0     	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
004570   d02f     bra     0x45d0           	BRA	_00220_DS_
                                           _00215_DS_:
                                           ;	.line	86; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
004572   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004574   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
004576   e017     bz      0x45a6           	BZ	_00217_DS_
004578   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00457a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00457c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00457e   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004580   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004582   6e03     movwf   0x3, 0           	MOVWF	r0x03
004584   6a04     clrf    0x4, 0           	CLRF	r0x04
004586   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004588   6804     setf    0x4, 0           	SETF	r0x04
00458a   0e00     movlw   0                	MOVLW	UPPER(_mask)
00458c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00458e   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
004590   fff6
004592   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
004594   fff7
004596   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
004598   fff8
00459a   0009     tblrd   *+               	TBLRD*+	
00459c   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00459e   f002
0045a0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0045a2   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
0045a4   d015     bra     0x45d0           	BRA	_00220_DS_
                                           _00217_DS_:
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISE=TRISE & (255-mask[input]);
0045a6   6a02     clrf    0x2, 0           	CLRF	r0x02
0045a8   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0045aa   6802     setf    0x2, 0           	SETF	r0x02
0045ac   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0045ae   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0045b0   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0045b2   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0045b4   0e00     movlw   0                	MOVLW	UPPER(_mask)
0045b6   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0045b8   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
0045ba   fff6
0045bc   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
0045be   fff7
0045c0   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
0045c2   fff8
0045c4   0009     tblrd   *+               	TBLRD*+	
0045c6   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
0045c8   f000
0045ca   5000     movf    0, 0, 0          	MOVF	r0x00, W
0045cc   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0045ce   1696     andwf   0x96, 0x1, 0     	ANDWF	_TRISE, F
                                           _00220_DS_:
                                           ;	.line	90; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
0045d0   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0045d2   f006
0045d4   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0045d6   f005
0045d8   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0045da   f004
0045dc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0045de   f003
0045e0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0045e2   f002
0045e4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0045e6   f001
0045e8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0045ea   f000
0045ec   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0045ee   ffd9
0045f0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/.icaro/firmware/tmp/digitalw.c	int digitalread(int input)
00512e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
005130   ffe5
005132   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
005134   ffd9
005136   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
005138   ffe5
00513a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00513c   ffe5
00513e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
005140   ffe5
005142   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
005144   ffe5
005146   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
005148   ffe5
00514a   0e02     movlw   0x2              	MOVLW	0x02
00514c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00514e   f000
005150   0e03     movlw   0x3              	MOVLW	0x03
005152   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
005154   f001
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
005156   0e98     movlw   0x98             	MOVLW	LOW(_port)
005158   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00515a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00515c   0e32     movlw   0x32             	MOVLW	HIGH(_port)
00515e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
005160   6e03     movwf   0x3, 0           	MOVWF	r0x03
005162   6a04     clrf    0x4, 0           	CLRF	r0x04
005164   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
005166   6804     setf    0x4, 0           	SETF	r0x04
005168   0e00     movlw   0                	MOVLW	UPPER(_port)
00516a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00516c   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
00516e   fff6
005170   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
005172   fff7
005174   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
005176   fff8
005178   0009     tblrd   *+               	TBLRD*+	
00517a   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00517c   f002
00517e   0e05     movlw   0x5              	MOVLW	0x05
005180   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
005182   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
005184   d0ad     bra     0x52e0           	BRA	_00172_DS_
005186   6afa     clrf    0xfa, 0          	CLRF	PCLATH
005188   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00518a   3402     rlcf    0x2, 0, 0        	RLCF	r0x02, W
00518c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00518e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
005190   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
005192   0bfc     andlw   0xfc             	ANDLW	0xfc
005194   0fa4     addlw   0xa4             	ADDLW	LOW(_00194_DS_)
005196   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
005198   0e51     movlw   0x51             	MOVLW	HIGH(_00194_DS_)
00519a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00519c   0e00     movlw   0                	MOVLW	UPPER(_00194_DS_)
00519e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0051a0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0051a2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00194_DS_:
0051a4   efdc     goto    0x51b8           	GOTO	_00152_DS_
0051a6   f028
0051a8   effa     goto    0x51f4           	GOTO	_00156_DS_
0051aa   f028
0051ac   ef18     goto    0x5230           	GOTO	_00160_DS_
0051ae   f029
0051b0   ef36     goto    0x526c           	GOTO	_00164_DS_
0051b2   f029
0051b4   ef54     goto    0x52a8           	GOTO	_00168_DS_
0051b6   f029
                                           _00152_DS_:
                                           ;	.line	48; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
0051b8   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0051ba   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0051bc   6e02     movwf   0x2, 0           	MOVWF	r0x02
0051be   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0051c0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0051c2   6e03     movwf   0x3, 0           	MOVWF	r0x03
0051c4   6a04     clrf    0x4, 0           	CLRF	r0x04
0051c6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0051c8   6804     setf    0x4, 0           	SETF	r0x04
0051ca   0e00     movlw   0                	MOVLW	UPPER(_mask)
0051cc   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0051ce   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
0051d0   fff6
0051d2   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
0051d4   fff7
0051d6   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
0051d8   fff8
0051da   0009     tblrd   *+               	TBLRD*+	
0051dc   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
0051de   f002
0051e0   5081     movf    0x81, 0, 0       	MOVF	_PORTB, W
0051e2   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
0051e4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0051e6   e003     bz      0x51ee           	BZ	_00154_DS_
0051e8   6af3     clrf    0xf3, 0          	CLRF	PRODL
0051ea   0e01     movlw   0x1              	MOVLW	0x01
0051ec   d07b     bra     0x52e4           	BRA	_00173_DS_
                                           _00154_DS_:
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
0051ee   6af3     clrf    0xf3, 0          	CLRF	PRODL
0051f0   6ae8     clrf    0xe8, 0          	CLRF	WREG
0051f2   d078     bra     0x52e4           	BRA	_00173_DS_
                                           _00156_DS_:
                                           ;	.line	51; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
0051f4   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0051f6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0051f8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0051fa   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0051fc   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0051fe   6e03     movwf   0x3, 0           	MOVWF	r0x03
005200   6a04     clrf    0x4, 0           	CLRF	r0x04
005202   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
005204   6804     setf    0x4, 0           	SETF	r0x04
005206   0e00     movlw   0                	MOVLW	UPPER(_mask)
005208   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00520a   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
00520c   fff6
00520e   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
005210   fff7
005212   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
005214   fff8
005216   0009     tblrd   *+               	TBLRD*+	
005218   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00521a   f002
00521c   5082     movf    0x82, 0, 0       	MOVF	_PORTC, W
00521e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
005220   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
005222   e003     bz      0x522a           	BZ	_00158_DS_
005224   6af3     clrf    0xf3, 0          	CLRF	PRODL
005226   0e01     movlw   0x1              	MOVLW	0x01
005228   d05d     bra     0x52e4           	BRA	_00173_DS_
                                           _00158_DS_:
                                           ;	.line	52; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
00522a   6af3     clrf    0xf3, 0          	CLRF	PRODL
00522c   6ae8     clrf    0xe8, 0          	CLRF	WREG
00522e   d05a     bra     0x52e4           	BRA	_00173_DS_
                                           _00160_DS_:
                                           ;	.line	54; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
005230   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
005232   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
005234   6e02     movwf   0x2, 0           	MOVWF	r0x02
005236   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
005238   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00523a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00523c   6a04     clrf    0x4, 0           	CLRF	r0x04
00523e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
005240   6804     setf    0x4, 0           	SETF	r0x04
005242   0e00     movlw   0                	MOVLW	UPPER(_mask)
005244   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
005246   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
005248   fff6
00524a   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
00524c   fff7
00524e   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
005250   fff8
005252   0009     tblrd   *+               	TBLRD*+	
005254   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
005256   f002
005258   5080     movf    0x80, 0, 0       	MOVF	_PORTA, W
00525a   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
00525c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00525e   e003     bz      0x5266           	BZ	_00162_DS_
005260   6af3     clrf    0xf3, 0          	CLRF	PRODL
005262   0e01     movlw   0x1              	MOVLW	0x01
005264   d03f     bra     0x52e4           	BRA	_00173_DS_
                                           _00162_DS_:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
005266   6af3     clrf    0xf3, 0          	CLRF	PRODL
005268   6ae8     clrf    0xe8, 0          	CLRF	WREG
00526a   d03c     bra     0x52e4           	BRA	_00173_DS_
                                           _00164_DS_:
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
00526c   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00526e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
005270   6e02     movwf   0x2, 0           	MOVWF	r0x02
005272   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
005274   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
005276   6e03     movwf   0x3, 0           	MOVWF	r0x03
005278   6a04     clrf    0x4, 0           	CLRF	r0x04
00527a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00527c   6804     setf    0x4, 0           	SETF	r0x04
00527e   0e00     movlw   0                	MOVLW	UPPER(_mask)
005280   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
005282   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
005284   fff6
005286   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
005288   fff7
00528a   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
00528c   fff8
00528e   0009     tblrd   *+               	TBLRD*+	
005290   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
005292   f002
005294   5083     movf    0x83, 0, 0       	MOVF	_PORTD, W
005296   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
005298   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00529a   e003     bz      0x52a2           	BZ	_00166_DS_
00529c   6af3     clrf    0xf3, 0          	CLRF	PRODL
00529e   0e01     movlw   0x1              	MOVLW	0x01
0052a0   d021     bra     0x52e4           	BRA	_00173_DS_
                                           _00166_DS_:
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
0052a2   6af3     clrf    0xf3, 0          	CLRF	PRODL
0052a4   6ae8     clrf    0xe8, 0          	CLRF	WREG
0052a6   d01e     bra     0x52e4           	BRA	_00173_DS_
                                           _00168_DS_:
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
0052a8   6a02     clrf    0x2, 0           	CLRF	r0x02
0052aa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0052ac   6802     setf    0x2, 0           	SETF	r0x02
0052ae   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0052b0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0052b2   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0052b4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0052b6   0e00     movlw   0                	MOVLW	UPPER(_mask)
0052b8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0052ba   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
0052bc   fff6
0052be   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
0052c0   fff7
0052c2   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
0052c4   fff8
0052c6   0009     tblrd   *+               	TBLRD*+	
0052c8   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
0052ca   f000
0052cc   5084     movf    0x84, 0, 0       	MOVF	_PORTE, W
0052ce   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
0052d0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0052d2   e003     bz      0x52da           	BZ	_00170_DS_
0052d4   6af3     clrf    0xf3, 0          	CLRF	PRODL
0052d6   0e01     movlw   0x1              	MOVLW	0x01
0052d8   d005     bra     0x52e4           	BRA	_00173_DS_
                                           _00170_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
0052da   6af3     clrf    0xf3, 0          	CLRF	PRODL
0052dc   6ae8     clrf    0xe8, 0          	CLRF	WREG
0052de   d002     bra     0x52e4           	BRA	_00173_DS_
                                           _00172_DS_:
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/digitalw.c	return (0);
0052e0   6af3     clrf    0xf3, 0          	CLRF	PRODL
0052e2   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00173_DS_:
0052e4   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0052e6   f004
0052e8   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0052ea   f003
0052ec   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0052ee   f002
0052f0   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0052f2   f001
0052f4   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0052f6   f000
0052f8   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0052fa   ffd9
0052fc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/digitalw.c	void digitalwrite(int output,int state)
0045f2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0045f4   ffe5
0045f6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0045f8   ffd9
0045fa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0045fc   ffe5
0045fe   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004600   ffe5
004602   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004604   ffe5
004606   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004608   ffe5
00460a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00460c   ffe5
00460e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004610   ffe5
004612   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004614   ffe5
004616   0e02     movlw   0x2              	MOVLW	0x02
004618   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00461a   f000
00461c   0e03     movlw   0x3              	MOVLW	0x03
00461e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004620   f001
004622   0e04     movlw   0x4              	MOVLW	0x04
004624   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004626   f002
004628   0e05     movlw   0x5              	MOVLW	0x05
00462a   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00462c   f003
                                           ;	.line	22; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[output])
00462e   0e98     movlw   0x98             	MOVLW	LOW(_port)
004630   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004632   6e04     movwf   0x4, 0           	MOVWF	r0x04
004634   0e32     movlw   0x32             	MOVLW	HIGH(_port)
004636   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004638   6e05     movwf   0x5, 0           	MOVWF	r0x05
00463a   6a06     clrf    0x6, 0           	CLRF	r0x06
00463c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00463e   6806     setf    0x6, 0           	SETF	r0x06
004640   0e00     movlw   0                	MOVLW	UPPER(_port)
004642   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004644   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004646   fff6
004648   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00464a   fff7
00464c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00464e   fff8
004650   0009     tblrd   *+               	TBLRD*+	
004652   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004654   f004
004656   0e05     movlw   0x5              	MOVLW	0x05
004658   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00465a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00465c   d110     bra     0x487e           	BRA	_00126_DS_
00465e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
004660   6afb     clrf    0xfb, 0          	CLRF	PCLATU
004662   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
004664   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
004666   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
004668   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00466a   0bfc     andlw   0xfc             	ANDLW	0xfc
00466c   0f7c     addlw   0x7c             	ADDLW	LOW(_00147_DS_)
00466e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004670   0e46     movlw   0x46             	MOVLW	HIGH(_00147_DS_)
004672   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
004674   0e00     movlw   0                	MOVLW	UPPER(_00147_DS_)
004676   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
004678   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00467a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00147_DS_:
00467c   ef48     goto    0x4690           	GOTO	_00105_DS_
00467e   f023
004680   ef7a     goto    0x46f4           	GOTO	_00109_DS_
004682   f023
004684   efac     goto    0x4758           	GOTO	_00113_DS_
004686   f023
004688   efde     goto    0x47bc           	GOTO	_00117_DS_
00468a   f023
00468c   ef10     goto    0x4820           	GOTO	_00121_DS_
00468e   f024
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
004690   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004692   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
004694   e017     bz      0x46c4           	BZ	_00107_DS_
004696   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
004698   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00469a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00469c   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
00469e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0046a0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0046a2   6a06     clrf    0x6, 0           	CLRF	r0x06
0046a4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0046a6   6806     setf    0x6, 0           	SETF	r0x06
0046a8   0e00     movlw   0                	MOVLW	UPPER(_mask)
0046aa   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0046ac   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0046ae   fff6
0046b0   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0046b2   fff7
0046b4   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0046b6   fff8
0046b8   0009     tblrd   *+               	TBLRD*+	
0046ba   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0046bc   f004
0046be   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0046c0   1281     iorwf   0x81, 0x1, 0     	IORWF	_PORTB, F
0046c2   d0dd     bra     0x487e           	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTB=PORTB & (255-mask[output]);
0046c4   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0046c6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0046c8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0046ca   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0046cc   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0046ce   6e05     movwf   0x5, 0           	MOVWF	r0x05
0046d0   6a06     clrf    0x6, 0           	CLRF	r0x06
0046d2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0046d4   6806     setf    0x6, 0           	SETF	r0x06
0046d6   0e00     movlw   0                	MOVLW	UPPER(_mask)
0046d8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0046da   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0046dc   fff6
0046de   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0046e0   fff7
0046e2   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0046e4   fff8
0046e6   0009     tblrd   *+               	TBLRD*+	
0046e8   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0046ea   f004
0046ec   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0046ee   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0046f0   1681     andwf   0x81, 0x1, 0     	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0046f2   d0c5     bra     0x487e           	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
0046f4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0046f6   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0046f8   e017     bz      0x4728           	BZ	_00111_DS_
0046fa   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0046fc   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0046fe   6e04     movwf   0x4, 0           	MOVWF	r0x04
004700   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004702   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004704   6e05     movwf   0x5, 0           	MOVWF	r0x05
004706   6a06     clrf    0x6, 0           	CLRF	r0x06
004708   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00470a   6806     setf    0x6, 0           	SETF	r0x06
00470c   0e00     movlw   0                	MOVLW	UPPER(_mask)
00470e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004710   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004712   fff6
004714   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004716   fff7
004718   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00471a   fff8
00471c   0009     tblrd   *+               	TBLRD*+	
00471e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004720   f004
004722   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004724   1282     iorwf   0x82, 0x1, 0     	IORWF	_PORTC, F
004726   d0ab     bra     0x487e           	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTC=PORTC & (255-mask[output]);
004728   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00472a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00472c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00472e   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004730   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004732   6e05     movwf   0x5, 0           	MOVWF	r0x05
004734   6a06     clrf    0x6, 0           	CLRF	r0x06
004736   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004738   6806     setf    0x6, 0           	SETF	r0x06
00473a   0e00     movlw   0                	MOVLW	UPPER(_mask)
00473c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00473e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004740   fff6
004742   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
004744   fff7
004746   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
004748   fff8
00474a   0009     tblrd   *+               	TBLRD*+	
00474c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00474e   f004
004750   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004752   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
004754   1682     andwf   0x82, 0x1, 0     	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
004756   d093     bra     0x487e           	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
004758   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00475a   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00475c   e017     bz      0x478c           	BZ	_00115_DS_
00475e   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
004760   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004762   6e04     movwf   0x4, 0           	MOVWF	r0x04
004764   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004766   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004768   6e05     movwf   0x5, 0           	MOVWF	r0x05
00476a   6a06     clrf    0x6, 0           	CLRF	r0x06
00476c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00476e   6806     setf    0x6, 0           	SETF	r0x06
004770   0e00     movlw   0                	MOVLW	UPPER(_mask)
004772   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004774   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004776   fff6
004778   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00477a   fff7
00477c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00477e   fff8
004780   0009     tblrd   *+               	TBLRD*+	
004782   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004784   f004
004786   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004788   1280     iorwf   0x80, 0x1, 0     	IORWF	_PORTA, F
00478a   d079     bra     0x487e           	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTA=PORTA & (255-mask[output]);
00478c   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00478e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004790   6e04     movwf   0x4, 0           	MOVWF	r0x04
004792   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004794   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004796   6e05     movwf   0x5, 0           	MOVWF	r0x05
004798   6a06     clrf    0x6, 0           	CLRF	r0x06
00479a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00479c   6806     setf    0x6, 0           	SETF	r0x06
00479e   0e00     movlw   0                	MOVLW	UPPER(_mask)
0047a0   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0047a2   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0047a4   fff6
0047a6   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0047a8   fff7
0047aa   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0047ac   fff8
0047ae   0009     tblrd   *+               	TBLRD*+	
0047b0   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0047b2   f004
0047b4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0047b6   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0047b8   1680     andwf   0x80, 0x1, 0     	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0047ba   d061     bra     0x487e           	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
0047bc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0047be   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0047c0   e017     bz      0x47f0           	BZ	_00119_DS_
0047c2   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0047c4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0047c6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0047c8   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0047ca   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0047cc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0047ce   6a06     clrf    0x6, 0           	CLRF	r0x06
0047d0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0047d2   6806     setf    0x6, 0           	SETF	r0x06
0047d4   0e00     movlw   0                	MOVLW	UPPER(_mask)
0047d6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0047d8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0047da   fff6
0047dc   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0047de   fff7
0047e0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0047e2   fff8
0047e4   0009     tblrd   *+               	TBLRD*+	
0047e6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0047e8   f004
0047ea   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0047ec   1283     iorwf   0x83, 0x1, 0     	IORWF	_PORTD, F
0047ee   d047     bra     0x487e           	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTD=PORTD & (255-mask[output]);
0047f0   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0047f2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0047f4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0047f6   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
0047f8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0047fa   6e05     movwf   0x5, 0           	MOVWF	r0x05
0047fc   6a06     clrf    0x6, 0           	CLRF	r0x06
0047fe   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004800   6806     setf    0x6, 0           	SETF	r0x06
004802   0e00     movlw   0                	MOVLW	UPPER(_mask)
004804   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
004806   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
004808   fff6
00480a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00480c   fff7
00480e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
004810   fff8
004812   0009     tblrd   *+               	TBLRD*+	
004814   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
004816   f004
004818   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00481a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00481c   1683     andwf   0x83, 0x1, 0     	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
00481e   d02f     bra     0x487e           	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
004820   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004822   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
004824   e017     bz      0x4854           	BZ	_00123_DS_
004826   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
004828   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00482a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00482c   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
00482e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
004830   6e03     movwf   0x3, 0           	MOVWF	r0x03
004832   6a04     clrf    0x4, 0           	CLRF	r0x04
004834   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004836   6804     setf    0x4, 0           	SETF	r0x04
004838   0e00     movlw   0                	MOVLW	UPPER(_mask)
00483a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00483c   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
00483e   fff6
004840   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
004842   fff7
004844   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
004846   fff8
004848   0009     tblrd   *+               	TBLRD*+	
00484a   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00484c   f002
00484e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004850   1284     iorwf   0x84, 0x1, 0     	IORWF	_PORTE, F
004852   d015     bra     0x487e           	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTE=PORTE & (255-mask[output]);
004854   6a02     clrf    0x2, 0           	CLRF	r0x02
004856   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
004858   6802     setf    0x2, 0           	SETF	r0x02
00485a   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
00485c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00485e   0e32     movlw   0x32             	MOVLW	HIGH(_mask)
004860   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004862   0e00     movlw   0                	MOVLW	UPPER(_mask)
004864   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004866   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
004868   fff6
00486a   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
00486c   fff7
00486e   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
004870   fff8
004872   0009     tblrd   *+               	TBLRD*+	
004874   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
004876   f000
004878   5000     movf    0, 0, 0          	MOVF	r0x00, W
00487a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00487c   1684     andwf   0x84, 0x1, 0     	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
00487e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004880   f006
004882   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004884   f005
004886   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004888   f004
00488a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00488c   f003
00488e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004890   f002
004892   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004894   f001
004896   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004898   f000
00489a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00489c   ffd9
00489e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
00327a   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00327c   0804     sublw   0x4              
00327e   2010     addwfc  0x10, 0, 0       
003280   8040     bsf     0x40, 0, 0       
003282   8040     bsf     0x40, 0, 0       
003284   0201     mulwf   0x1, 0           
003286   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
003288   0402     decf    0x2, 0, 0        
00328a   2008     addwfc  0x8, 0, 0        
00328c   0201     mulwf   0x1, 0           
00328e   0104     movlb   0x4              
003290   0402     decf    0x2, 0, 0        
003292   1008     iorwf   0x8, 0, 0        	DB	0x08, 0x10, 0x20, 0x40, 0x80
003294   4020     rrncf   0x20, 0, 0       
003296   0080     dw      0x80             
                                           ; ; Starting pCode block for Ival
                                           _port:
003298   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
00329a   0000     nop                      
00329c   0000     nop                      
00329e   0000     nop                      
0032a0   0101     movlb   0x1              
0032a2   0101     movlb   0x1              
0032a4   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
0032a6   0202     mulwf   0x2, 0           
0032a8   0202     mulwf   0x2, 0           
0032aa   0404     decf    0x4, 0, 0        
0032ac   0304     mulwf   0x4, 0x1         
0032ae   0303     mulwf   0x3, 0x1         
0032b0   0303     mulwf   0x3, 0x1         	DB	0x03, 0x03, 0x03, 0x03, 0x03
0032b2   0303     mulwf   0x3, 0x1         
0032b4   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
0032b6   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0032b8   0804     sublw   0x4              
0032ba   2010     addwfc  0x10, 0, 0       
0032bc   8040     bsf     0x40, 0, 0       
0032be   8040     bsf     0x40, 0, 0       
0032c0   0201     mulwf   0x1, 0           
0032c2   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
0032c4   0402     decf    0x2, 0, 0        
0032c6   2008     addwfc  0x8, 0, 0        
                                           ; ; Starting pCode block
                                           ___str_0:
0032c8   6e28     movwf   0x28, 0          	DB	0x28, 0x6e, 0x75, 0x6c, 0x6c, 0x29, 0x00
0032ca   6c75     negf    0x75, 0          
0032cc   296c     incf    0x6c, 0, 0x1     
0032ce   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_1:
0032d0   6f6e     movwf   0x6e, 0x1        	DB	0x6e, 0x6f, 0x74, 0x20, 0x79, 0x65, 0x74, 0x20, 0x69, 0x6d, 0x70, 0x6c
0032d2   2074     addwfc  0x74, 0, 0       
0032d4   6579     cpfsgt  0x79, 0x1        
0032d6   2074     addwfc  0x74, 0, 0       
0032d8   6d69     negf    0x69, 0x1        
0032da   6c70     negf    0x70, 0          
0032dc   6d65     negf    0x65, 0x1        	DB	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x65, 0x64, 0x00, 0x00
0032de   6e65     movwf   0x65, 0          
0032e0   6574     cpfsgt  0x74, 0x1        
0032e2   0064     dw      0x64             
0032e4   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_2:
0032e6   6425     cpfsgt  0x25, 0          	DB	0x25, 0x64, 0x00
0032e8   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_3:
0032ea   7825     btg     0x25, 0x4, 0     	DB	0x25, 0x78, 0x00
0032ec   0000     nop                      
                                           ; ; Starting pCode block
                                           ___str_5:
0032ee   003f     dw      0x3f             	DB	0x3f, 0x00
                                           ; ; Starting pCode block
                                           ___str_6:
0032f0   0021     dw      0x21             	DB	0x21, 0x00
                                           
                                           
                                           ; Statistics:
                                           ; code size:	16398 (0x400e) bytes (12.51%)
                                           ;           	 8199 (0x2007) words
                                           ; udata size:	  407 (0x0197) bytes (22.71%)
                                           ; access size:	   27 (0x001b) bytes
                                           
                                           
                                           	end
