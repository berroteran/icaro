gplink-1.3.0 #1017 (Aug 16 2014)
Copyright (c) 1998-2014 gputils project
Listing File Generated: 8-6-2015  17:50:24
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.5.0 #9253 (Jul  4 2015) (Linux)
                                           ; This file was generated Thu Aug  6 17:50:22 2015
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_i
                                           	global	_loopvar
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timingindex
                                           	global	_timedivision
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	__pr2_plus1
                                           	global	__t2con
                                           	global	_TXBuffer
                                           	global	_RXbuffer
                                           	global	_usbrx
                                           	global	_usbwp
                                           	global	_usbrp
                                           	global	_ep2_num_bytes_to_send
                                           	global	_ep2_source_data
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_pinmode
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogReference
                                           	global	_analogread
                                           	global	_Delayms
                                           	global	_Delayus
                                           	global	_PWM_set_frequency
                                           	global	_PWM_set_dutycycle
                                           	global	_PWM_set_percent_dutycycle
                                           	global	_init_PWM11
                                           	global	_init_PWM12
                                           	global	_set_PWM
                                           	global	_usbavailable
                                           	global	_epapin_init
                                           	global	_prepare_ep2_in
                                           	global	_usbsend
                                           	global	_epap_in
                                           	global	_usbread
                                           	global	_epap_out
                                           	global	_epapout_init
                                           	global	_setup
                                           	global	_loop
                                           	global	_pinguino_main
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_usb_device_state
                                           	extern	_usb_active_cfg
                                           	extern	_usb_active_alt_setting
                                           	extern	_stdin
                                           	extern	_stdout
                                           	extern	_ep_bdt
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_dispatch_usb_event
                                           	extern	_fill_in_buffer
                                           	extern	_delay10ktcy
                                           	extern	__divulong
                                           	extern	__mulint
                                           	extern	__divuint
                                           	extern	_sprintf
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           __pr2_plus1	db	0x00, 0x01
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           
                                           usb_buf	udata
                                           _TXBuffer	res	64
                                           _RXbuffer	res	64
                                           
                                           udata_pilas_engine_0	udata
                                           _loopvar	res	1
                                           
                                           udata_pilas_engine_1	udata
                                           _last_send_was_null	res	1
                                           
                                           udata_pilas_engine_2	udata
                                           _i	res	1
                                           
                                           udata_pilas_engine_3	udata
                                           _servovalues	res	18
                                           
                                           udata_pilas_engine_4	udata
                                           _timingindex	res	1
                                           
                                           udata_pilas_engine_5	udata
                                           _timings	res	72
                                           
                                           udata_pilas_engine_6	udata
                                           _SortServoTimings_mascaratotal_1_27	res	3
                                           
                                           udata_pilas_engine_7	udata
                                           __t2con	res	1
                                           
                                           udata_pilas_engine_8	udata
                                           _usbwp	res	1
                                           
                                           udata_pilas_engine_9	udata
                                           _usbrp	res	1
                                           
                                           udata_pilas_engine_10	udata
                                           _ep2_num_bytes_to_send	res	2
                                           
                                           udata_pilas_engine_11	udata
                                           _ep2_source_data	res	3
                                           
                                           udata_pilas_engine_12	udata
                                           _usbrx	res	64
                                           
                                           udata_pilas_engine_13	udata
                                           _loop_valor_1_186	res	16
                                           
                                           udata_pilas_engine_14	udata
                                           _loop_buf_1_186	res	80
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_pilas_engine__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	95; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	void high_priority_isr(void) __interrupt
002020   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002022   ffe5
002024   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002026   ffe5
002028   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00202a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00202c   ffe5
00202e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002030   ffe5
002032   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002034   ffe5
002036   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002038   ffe5
00203a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00203c   ffe5
00203e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002040   ffe5
                                           ;	.line	108; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	if(PIR2bits.USBIF)
002042   aaa1     btfss   0xa1, 0x5, 0     	BTFSS	_PIR2bits, 5
002044   d006     bra     0x2052           	BRA	_00902_DS_
                                           ;	.line	110; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	dispatch_usb_event();
002046   ec0f     call    0x1e, 0          	CALL	_dispatch_usb_event
002048   f000
                                           ;	.line	111; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	UIRbits.SOFIF = 0;
00204a   9c68     bcf     0x68, 0x6, 0     	BCF	_UIRbits, 6
                                           ;	.line	112; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	UIRbits.URSTIF = 0;
00204c   9068     bcf     0x68, 0, 0       	BCF	_UIRbits, 0
                                           ;	.line	113; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	PIR2bits.USBIF = 0;
00204e   9aa1     bcf     0xa1, 0x5, 0     	BCF	_PIR2bits, 5
                                           ;	.line	114; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	UEIR = 0;
002050   6a6a     clrf    0x6a, 0          	CLRF	_UEIR
                                           _00902_DS_:
                                           ;	.line	131; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	servos_interrupt();
002052   ecf8     call    0x4bf0, 0        	CALL	_servos_interrupt
002054   f025
002056   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002058   fffb
00205a   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00205c   fffa
00205e   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002060   ffea
002062   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002064   ffe9
002066   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002068   fff4
00206a   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00206c   fff3
00206e   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002070   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002072   ffe0
002074   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002076   ffd8
002078   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	139; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	void low_priority_isr(void) __interrupt
004000   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004002   ffe5
004004   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004006   ffe5
004008   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00400a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00400c   ffe5
00400e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004010   ffe5
004012   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004014   ffe5
004016   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004018   ffe5
00401a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00401c   ffe5
00401e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004020   ffe5
                                           ;	.line	141; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	}
004022   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004024   fffb
004026   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004028   fffa
00402a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00402c   ffea
00402e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004030   ffe9
004032   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004034   fff4
004036   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004038   fff3
00403a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00403c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004042   ffd8
004044   0010     retfie  0                	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_pilas_engine__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	51; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	PIE1=0;
004d8c   6a9d     clrf    0x9d, 0          	CLRF	_PIE1
                                           ;	.line	52; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	PIE2=0;
004d8e   6aa0     clrf    0xa0, 0          	CLRF	_PIE2
                                           ;	.line	53; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	ADCON1=0x0F;
004d90   0e0f     movlw   0xf              	MOVLW	0x0f
004d92   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	55; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	PIE2bits.USBIE = 1;
004d94   8aa0     bsf     0xa0, 0x5, 0     	BSF	_PIE2bits, 5
                                           ;	.line	56; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	INTCON = 0xC0;
004d96   0ec0     movlw   0xc0             	MOVLW	0xc0
004d98   6ef2     movwf   0xf2, 0          	MOVWF	_INTCON
                                           ;	.line	58; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	setup();
004d9a   eca9     call    0x4152, 0        	CALL	_setup
004d9c   f020
                                           ;	.line	60; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	analog_init();
004d9e   ec19     call    0x4e32, 0        	CALL	_analog_init
004da0   f027
                                           ;	.line	66; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	servos_init();
004da2   ecd4     call    0x4ba8, 0        	CALL	_servos_init
004da4   f025
                                           ;	.line	82; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	INTCONbits.PEIE=1;
004da6   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	83; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	INTCONbits.GIE=1;
004da8   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           _00894_DS_:
                                           ;	.line	88; /home/valentin/.icaro/firmware/source/pilas/pilas-engine.c	loop();
004daa   ec10     call    0x3a20, 0        	CALL	_loop
004dac   f01d
004dae   d7fd     bra     0x4daa           	BRA	_00894_DS_
004db0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__loop	code
                                           _loop:
                                           ;	.line	32; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	void loop()
003a20   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003a22   ffe5
003a24   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003a26   ffe5
003a28   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003a2a   ffe5
003a2c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003a2e   ffe5
003a30   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003a32   ffe5
003a34   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003a36   ffe5
003a38   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003a3a   ffe5
003a3c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003a3e   ffe5
                                           ;	.line	37; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	for(a=0;a<8;a++)
003a40   6a00     clrf    0, 0             	CLRF	r0x00
003a42   6a01     clrf    0x1, 0           	CLRF	r0x01
003a44   6a02     clrf    0x2, 0           	CLRF	r0x02
003a46   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00877_DS_:
                                           ;	.line	39; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	valor[a]=analogread(13+a);
003a48   0e12     movlw   0x12             	MOVLW	LOW(_loop_valor_1_186)
003a4a   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
003a4c   6e04     movwf   0x4, 0           	MOVWF	r0x04
003a4e   0e03     movlw   0x3              	MOVLW	HIGH(_loop_valor_1_186)
003a50   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
003a52   6e05     movwf   0x5, 0           	MOVWF	r0x05
003a54   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a56   6e06     movwf   0x6, 0           	MOVWF	r0x06
003a58   0e0d     movlw   0xd              	MOVLW	0x0d
003a5a   2606     addwf   0x6, 0x1, 0      	ADDWF	r0x06, F
003a5c   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003a5e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003a60   ecce     call    0x499c, 0        	CALL	_analogread
003a62   f024
003a64   6e06     movwf   0x6, 0           	MOVWF	r0x06
003a66   cff3     movff   0xff3, 0x7       	MOVFF	PRODL, r0x07
003a68   f007
003a6a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003a6c   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003a6e   ffe9
003a70   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
003a72   ffea
003a74   c006     movff   0x6, 0xfee       	MOVFF	r0x06, POSTINC0
003a76   ffee
003a78   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
003a7a   ffef
                                           ;	.line	37; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	for(a=0;a<8;a++)
003a7c   0e02     movlw   0x2              	MOVLW	0x02
003a7e   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
003a80   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003a82   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
003a84   4a00     infsnz  0, 0x1, 0        	INFSNZ	r0x00, F
003a86   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
003a88   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003a8a   0f80     addlw   0x80             	ADDLW	0x80
003a8c   0f80     addlw   0x80             	ADDLW	0x80
003a8e   e102     bnz     0x3a94           	BNZ	_00888_DS_
003a90   0e08     movlw   0x8              	MOVLW	0x08
003a92   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           _00888_DS_:
003a94   e3d9     bnc     0x3a48           	BNC	_00877_DS_
003a96   0103     movlb   0x3              	BANKSEL	(_loop_valor_1_186 + 15)
                                           ;	.line	43; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	sprintf(buf, " %i,%i,%i,%i,%i,%i,%i,%i\n\r", valor[0],valor[1],valor[2],valor[3],valor[4],valor[5],valor[6],valor[7]);
003a98   5121     movf    0x21, 0, 0x1     	MOVF	(_loop_valor_1_186 + 15), W, B
003a9a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003a9c   5120     movf    0x20, 0, 0x1     	MOVF	(_loop_valor_1_186 + 14), W, B
003a9e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003aa0   511f     movf    0x1f, 0, 0x1     	MOVF	(_loop_valor_1_186 + 13), W, B
003aa2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003aa4   511e     movf    0x1e, 0, 0x1     	MOVF	(_loop_valor_1_186 + 12), W, B
003aa6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003aa8   511d     movf    0x1d, 0, 0x1     	MOVF	(_loop_valor_1_186 + 11), W, B
003aaa   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003aac   511c     movf    0x1c, 0, 0x1     	MOVF	(_loop_valor_1_186 + 10), W, B
003aae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ab0   511b     movf    0x1b, 0, 0x1     	MOVF	(_loop_valor_1_186 + 9), W, B
003ab2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ab4   511a     movf    0x1a, 0, 0x1     	MOVF	(_loop_valor_1_186 + 8), W, B
003ab6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ab8   5119     movf    0x19, 0, 0x1     	MOVF	(_loop_valor_1_186 + 7), W, B
003aba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003abc   5118     movf    0x18, 0, 0x1     	MOVF	(_loop_valor_1_186 + 6), W, B
003abe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ac0   5117     movf    0x17, 0, 0x1     	MOVF	(_loop_valor_1_186 + 5), W, B
003ac2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ac4   5116     movf    0x16, 0, 0x1     	MOVF	(_loop_valor_1_186 + 4), W, B
003ac6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ac8   5115     movf    0x15, 0, 0x1     	MOVF	(_loop_valor_1_186 + 3), W, B
003aca   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003acc   5114     movf    0x14, 0, 0x1     	MOVF	(_loop_valor_1_186 + 2), W, B
003ace   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ad0   5113     movf    0x13, 0, 0x1     	MOVF	(_loop_valor_1_186 + 1), W, B
003ad2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003ad4   5112     movf    0x12, 0, 0x1     	MOVF	_loop_valor_1_186, W, B
003ad6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ad8   0e00     movlw   0                	MOVLW	UPPER(___str_0)
003ada   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003adc   0e2f     movlw   0x2f             	MOVLW	HIGH(___str_0)
003ade   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ae0   0ee6     movlw   0xe6             	MOVLW	LOW(___str_0)
003ae2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ae4   0e80     movlw   0x80             	MOVLW	0x80
003ae6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ae8   0e02     movlw   0x2              	MOVLW	HIGH(_loop_buf_1_186)
003aea   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003aec   0e00     movlw   0                	MOVLW	LOW(_loop_buf_1_186)
003aee   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003af0   ecc5     call    0x3d8a, 0        	CALL	_sprintf
003af2   f01e
003af4   0e16     movlw   0x16             	MOVLW	0x16
003af6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	44; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	Delayms(1);
003af8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003afa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003afc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003afe   0e01     movlw   0x1              	MOVLW	0x01
003b00   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b02   ec35     call    0x486a, 0        	CALL	_Delayms
003b04   f024
003b06   0e04     movlw   0x4              	MOVLW	0x04
003b08   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	45; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	usbsend(buf,39);
003b0a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003b0c   0e27     movlw   0x27             	MOVLW	0x27
003b0e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b10   0e80     movlw   0x80             	MOVLW	0x80
003b12   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b14   0e02     movlw   0x2              	MOVLW	HIGH(_loop_buf_1_186)
003b16   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b18   0e00     movlw   0                	MOVLW	LOW(_loop_buf_1_186)
003b1a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003b1c   ec83     call    0x4d06, 0        	CALL	_usbsend
003b1e   f026
003b20   0e05     movlw   0x5              	MOVLW	0x05
003b22   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003b24   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003b26   f007
003b28   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003b2a   f006
003b2c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003b2e   f005
003b30   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003b32   f004
003b34   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003b36   f003
003b38   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003b3a   f002
003b3c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003b3e   f001
003b40   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003b42   f000
003b44   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__setup	code
                                           _setup:
                                           ;	.line	15; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	TRISB=0;
004152   6a93     clrf    0x93, 0          	CLRF	_TRISB
                                           ;	.line	16; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(15,INPUT);
004154   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004156   0e01     movlw   0x1              	MOVLW	0x01
004158   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00415a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00415c   0e0f     movlw   0xf              	MOVLW	0x0f
00415e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004160   ec01     call    0x3002, 0        	CALL	_pinmode
004162   f018
004164   0e04     movlw   0x4              	MOVLW	0x04
004166   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	17; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(21,INPUT);
004168   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00416a   0e01     movlw   0x1              	MOVLW	0x01
00416c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00416e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004170   0e15     movlw   0x15             	MOVLW	0x15
004172   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004174   ec01     call    0x3002, 0        	CALL	_pinmode
004176   f018
004178   0e04     movlw   0x4              	MOVLW	0x04
00417a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	18; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(22,INPUT);
00417c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00417e   0e01     movlw   0x1              	MOVLW	0x01
004180   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004182   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004184   0e16     movlw   0x16             	MOVLW	0x16
004186   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004188   ec01     call    0x3002, 0        	CALL	_pinmode
00418a   f018
00418c   0e04     movlw   0x4              	MOVLW	0x04
00418e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	19; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(23,INPUT);
004190   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004192   0e01     movlw   0x1              	MOVLW	0x01
004194   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004196   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004198   0e17     movlw   0x17             	MOVLW	0x17
00419a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00419c   ec01     call    0x3002, 0        	CALL	_pinmode
00419e   f018
0041a0   0e04     movlw   0x4              	MOVLW	0x04
0041a2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	20; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(24,INPUT);
0041a4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041a6   0e01     movlw   0x1              	MOVLW	0x01
0041a8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041aa   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041ac   0e18     movlw   0x18             	MOVLW	0x18
0041ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041b0   ec01     call    0x3002, 0        	CALL	_pinmode
0041b2   f018
0041b4   0e04     movlw   0x4              	MOVLW	0x04
0041b6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	21; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(25,OUTPUT);
0041b8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041ba   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041bc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041be   0e19     movlw   0x19             	MOVLW	0x19
0041c0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041c2   ec01     call    0x3002, 0        	CALL	_pinmode
0041c4   f018
0041c6   0e04     movlw   0x4              	MOVLW	0x04
0041c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	22; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(26,OUTPUT);
0041ca   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041cc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041ce   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041d0   0e1a     movlw   0x1a             	MOVLW	0x1a
0041d2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041d4   ec01     call    0x3002, 0        	CALL	_pinmode
0041d6   f018
0041d8   0e04     movlw   0x4              	MOVLW	0x04
0041da   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	23; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(27,OUTPUT);
0041dc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041de   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041e0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041e2   0e1b     movlw   0x1b             	MOVLW	0x1b
0041e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041e6   ec01     call    0x3002, 0        	CALL	_pinmode
0041e8   f018
0041ea   0e04     movlw   0x4              	MOVLW	0x04
0041ec   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	24; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	pinmode(28,OUTPUT);
0041ee   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041f0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041f2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0041f4   0e1c     movlw   0x1c             	MOVLW	0x1c
0041f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0041f8   ec01     call    0x3002, 0        	CALL	_pinmode
0041fa   f018
0041fc   0e04     movlw   0x4              	MOVLW	0x04
0041fe   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	25; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	ServoAttach(10);
004200   0e0a     movlw   0xa              	MOVLW	0x0a
004202   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004204   eca3     call    0x3b46, 0        	CALL	_ServoAttach
004206   f01d
004208   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	26; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	ServoAttach(11);
00420a   0e0b     movlw   0xb              	MOVLW	0x0b
00420c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00420e   eca3     call    0x3b46, 0        	CALL	_ServoAttach
004210   f01d
004212   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	27; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	ServoAttach(12);
004214   0e0c     movlw   0xc              	MOVLW	0x0c
004216   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004218   eca3     call    0x3b46, 0        	CALL	_ServoAttach
00421a   f01d
00421c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	28; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	ServoAttach(8);
00421e   0e08     movlw   0x8              	MOVLW	0x08
004220   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004222   eca3     call    0x3b46, 0        	CALL	_ServoAttach
004224   f01d
004226   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/source/pilas/user-pilas.c	ServoAttach(9);
004228   0e09     movlw   0x9              	MOVLW	0x09
00422a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00422c   eca3     call    0x3b46, 0        	CALL	_ServoAttach
00422e   f01d
004230   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
004232   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__epapout_init	code
                                           _epapout_init:
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
004dd8   0e40     movlw   0x40             	MOVLW	0x40
004dda   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 9)
004ddc   6f09     movwf   0x9, 0x1         	MOVWF	(_ep_bdt + 9), B
                                           ;	.line	147; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).ADR = (uchar __data *)&RXbuffer;
004dde   0e40     movlw   0x40             	MOVLW	LOW(_RXbuffer)
                                           ; removed redundant BANKSEL
004de0   6f0a     movwf   0xa, 0x1         	MOVWF	(_ep_bdt + 10), B
004de2   0e06     movlw   0x6              	MOVLW	HIGH(_RXbuffer)
                                           ; removed redundant BANKSEL
004de4   6f0b     movwf   0xb, 0x1         	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	148; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
004de6   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004de8   6f08     movwf   0x8, 0x1         	MOVWF	(_ep_bdt + 8), B
                                           ;	.line	149; /home/valentin/.icaro/firmware/tmp/usb.c	UEP1 = EPHSHK_EN | EPOUTEN_EN | EPCONDIS_EN;       	// Init EPAPPLI as an OUT EP
004dea   0e1c     movlw   0x1c             	MOVLW	0x1c
004dec   6e71     movwf   0x71, 0          	MOVWF	_UEP1
                                           ; #	MOVLW	0x01
                                           ; #	MOVWF	_usbwp, B
                                           ; #	MOVLW	0x01
                                           ;	.line	150; /home/valentin/.icaro/firmware/tmp/usb.c	usbwp=1;						// init pointer for rx buffer pinguino
004dee   0e01     movlw   0x1              	MOVLW	0x01
004df0   0103     movlb   0x3              	BANKSEL	_usbwp
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/usb.c	usbrp=1;
004df2   6f40     movwf   0x40, 0x1        	MOVWF	_usbwp, B
004df4   0103     movlb   0x3              	BANKSEL	_usbrp
004df6   6f41     movwf   0x41, 0x1        	MOVWF	_usbrp, B
004df8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__epap_out	code
                                           _epap_out:
                                           ;	.line	110; /home/valentin/.icaro/firmware/tmp/usb.c	void epap_out(void)
004588   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00458a   ffe5
00458c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00458e   ffe5
004590   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004592   ffe5
004594   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004596   ffe5
                                           ;	.line	116; /home/valentin/.icaro/firmware/tmp/usb.c	if((EP_OUT_BD(1).Cnt >= 1) && ( EP_OUT_BD(1).Cnt<EP1_BUFFER_SIZE))
004598   0e01     movlw   0x1              	MOVLW	0x01
00459a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 9)
00459c   5d09     subwf   0x9, 0, 0x1      	SUBWF	(_ep_bdt + 9), W, B
00459e   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0045a0   d047     bra     0x4630           	BRA	_00820_DS_
0045a2   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
0045a4   5d09     subwf   0x9, 0, 0x1      	SUBWF	(_ep_bdt + 9), W, B
0045a6   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0045a8   d043     bra     0x4630           	BRA	_00820_DS_
                                           ;	.line	118; /home/valentin/.icaro/firmware/tmp/usb.c	for (cpt=0;cpt<EP_OUT_BD(1).Cnt;cpt++)
0045aa   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00824_DS_:
0045ac   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 9)
0045ae   5109     movf    0x9, 0, 0x1      	MOVF	(_ep_bdt + 9), W, B
0045b0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0045b2   e232     bc      0x4618           	BC	_00815_DS_
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/usb.c	caractere=RXbuffer[cpt];
0045b4   0e40     movlw   0x40             	MOVLW	LOW(_RXbuffer)
0045b6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0045b8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0045ba   6a02     clrf    0x2, 0           	CLRF	r0x02
0045bc   0e06     movlw   0x6              	MOVLW	HIGH(_RXbuffer)
0045be   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0045c0   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0045c2   ffe9
0045c4   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0045c6   ffea
0045c8   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
0045ca   f001
0045cc   0103     movlb   0x3              	BANKSEL	_usbwp
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/usb.c	if (usbwp!=USBRXSIZE-1) newusbwp=usbwp+1;               
0045ce   5140     movf    0x40, 0, 0x1     	MOVF	_usbwp, W, B
0045d0   0a3f     xorlw   0x3f             	XORLW	0x3f
0045d2   e004     bz      0x45dc           	BZ	_00809_DS_
                                           _00857_DS_:
0045d4   0103     movlb   0x3              	BANKSEL	_usbwp
0045d6   2940     incf    0x40, 0, 0x1     	INCF	_usbwp, W, B
0045d8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0045da   d002     bra     0x45e0           	BRA	_00810_DS_
                                           _00809_DS_:
                                           ;	.line	122; /home/valentin/.icaro/firmware/tmp/usb.c	else newusbwp=1;
0045dc   0e01     movlw   0x1              	MOVLW	0x01
0045de   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _00810_DS_:
0045e0   0103     movlb   0x3              	BANKSEL	_usbrp
                                           ;	.line	123; /home/valentin/.icaro/firmware/tmp/usb.c	if (usbrp!=newusbwp) usbrx[usbwp++]=caractere;
0045e2   5141     movf    0x41, 0, 0x1     	MOVF	_usbrp, W, B
0045e4   1802     xorwf   0x2, 0, 0        	XORWF	r0x02, W
0045e6   e00f     bz      0x4606           	BZ	_00812_DS_
0045e8   c340     movff   0x340, 0x2       	MOVFF	_usbwp, r0x02
0045ea   f002
0045ec   0103     movlb   0x3              	BANKSEL	_usbwp
0045ee   2b40     incf    0x40, 0x1, 0x1   	INCF	_usbwp, F, B
0045f0   6a03     clrf    0x3, 0           	CLRF	r0x03
0045f2   0e98     movlw   0x98             	MOVLW	LOW(_usbrx)
0045f4   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0045f6   0e02     movlw   0x2              	MOVLW	HIGH(_usbrx)
0045f8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0045fa   c002     movff   0x2, 0xfe9       	MOVFF	r0x02, FSR0L
0045fc   ffe9
0045fe   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
004600   ffea
004602   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
004604   ffef
                                           _00812_DS_:
004606   0103     movlb   0x3              	BANKSEL	_usbwp
                                           ;	.line	124; /home/valentin/.icaro/firmware/tmp/usb.c	if (usbwp==USBRXSIZE) usbwp=1;
004608   5140     movf    0x40, 0, 0x1     	MOVF	_usbwp, W, B
00460a   0a40     xorlw   0x40             	XORLW	0x40
00460c   e103     bnz     0x4614           	BNZ	_00825_DS_
00460e   0e01     movlw   0x1              	MOVLW	0x01
004610   0103     movlb   0x3              	BANKSEL	_usbwp
004612   6f40     movwf   0x40, 0x1        	MOVWF	_usbwp, B
                                           _00825_DS_:
                                           ;	.line	118; /home/valentin/.icaro/firmware/tmp/usb.c	for (cpt=0;cpt<EP_OUT_BD(1).Cnt;cpt++)
004614   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
004616   d7ca     bra     0x45ac           	BRA	_00824_DS_
                                           _00815_DS_:
                                           ;	.line	126; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
004618   0e40     movlw   0x40             	MOVLW	0x40
00461a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 9)
00461c   6f09     movwf   0x9, 0x1         	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	127; /home/valentin/.icaro/firmware/tmp/usb.c	if(EP_OUT_BD(1).Stat.DTS == 0)
00461e   bd08     btfsc   0x8, 0x6, 0x1    	BTFSC	(_ep_bdt + 8), 6, B
004620   d003     bra     0x4628           	BRA	_00817_DS_
                                           ;	.line	129; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
004622   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
004624   6f08     movwf   0x8, 0x1         	MOVWF	(_ep_bdt + 8), B
004626   d00d     bra     0x4642           	BRA	_00826_DS_
                                           _00817_DS_:
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
004628   0e88     movlw   0x88             	MOVLW	0x88
00462a   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 8)
00462c   6f08     movwf   0x8, 0x1         	MOVWF	(_ep_bdt + 8), B
00462e   d009     bra     0x4642           	BRA	_00826_DS_
                                           _00820_DS_:
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
004630   0e40     movlw   0x40             	MOVLW	0x40
004632   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 9)
004634   6f09     movwf   0x9, 0x1         	MOVWF	(_ep_bdt + 9), B
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).ADR = (uchar __data *)&RXbuffer;
004636   0e40     movlw   0x40             	MOVLW	LOW(_RXbuffer)
                                           ; removed redundant BANKSEL
004638   6f0a     movwf   0xa, 0x1         	MOVWF	(_ep_bdt + 10), B
00463a   0e06     movlw   0x6              	MOVLW	HIGH(_RXbuffer)
                                           ; removed redundant BANKSEL
00463c   6f0b     movwf   0xb, 0x1         	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	140; /home/valentin/.icaro/firmware/tmp/usb.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_BSTALL;
00463e   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
004640   6f08     movwf   0x8, 0x1         	MOVWF	(_ep_bdt + 8), B
                                           _00826_DS_:
004642   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004644   f003
004646   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004648   f002
00464a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00464c   f001
00464e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004650   f000
004652   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__usbread	code
                                           _usbread:
                                           ;	.line	97; /home/valentin/.icaro/firmware/tmp/usb.c	uchar usbread()
003fb0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003fb2   ffe5
003fb4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003fb6   ffe5
003fb8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003fba   ffe5
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/usb.c	uchar caractere=0;
003fbc   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	101; /home/valentin/.icaro/firmware/tmp/usb.c	if (usbavailable)
003fbe   50b2     movf    0xb2, 0, 0       	MOVF	LOW(_usbavailable), W
003fc0   104d     iorwf   0x4d, 0, 0       	IORWF	HIGH(_usbavailable), W
003fc2   1000     iorwf   0, 0, 0          	IORWF	UPPER(_usbavailable), W
003fc4   e015     bz      0x3ff0           	BZ	_00793_DS_
                                           ;	.line	103; /home/valentin/.icaro/firmware/tmp/usb.c	caractere=usbrx[usbrp++];
003fc6   c341     movff   0x341, 0x1       	MOVFF	_usbrp, r0x01
003fc8   f001
003fca   0103     movlb   0x3              	BANKSEL	_usbrp
003fcc   2b41     incf    0x41, 0x1, 0x1   	INCF	_usbrp, F, B
003fce   6a02     clrf    0x2, 0           	CLRF	r0x02
003fd0   0e98     movlw   0x98             	MOVLW	LOW(_usbrx)
003fd2   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003fd4   0e02     movlw   0x2              	MOVLW	HIGH(_usbrx)
003fd6   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003fd8   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003fda   ffe9
003fdc   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003fde   ffea
003fe0   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003fe2   f000
                                           ; removed redundant BANKSEL
                                           ;	.line	104; /home/valentin/.icaro/firmware/tmp/usb.c	if (usbrp==USBRXSIZE)
003fe4   5141     movf    0x41, 0, 0x1     	MOVF	_usbrp, W, B
003fe6   0a40     xorlw   0x40             	XORLW	0x40
003fe8   e103     bnz     0x3ff0           	BNZ	_00793_DS_
                                           ;	.line	105; /home/valentin/.icaro/firmware/tmp/usb.c	usbrp=1;
003fea   0e01     movlw   0x1              	MOVLW	0x01
003fec   0103     movlb   0x3              	BANKSEL	_usbrp
003fee   6f41     movwf   0x41, 0x1        	MOVWF	_usbrp, B
                                           _00793_DS_:
                                           ;	.line	107; /home/valentin/.icaro/firmware/tmp/usb.c	return(caractere);
003ff0   5000     movf    0, 0, 0          	MOVF	r0x00, W
003ff2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003ff4   f002
003ff6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003ff8   f001
003ffa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ffc   f000
003ffe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__epap_in	code
                                           _epap_in:
004a1a   0102     movlb   0x2              	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/usb.c	if((ep2_num_bytes_to_send == 0) && last_send_was_null)
004a1c   51fe     movf    0xfe, 0, 0x1     	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; removed redundant BANKSEL
004a1e   11ff     iorwf   0xff, 0, 0x1     	IORWF	(_ep2_num_bytes_to_send + 1), W, B
004a20   e103     bnz     0x4a28           	BNZ	_00768_DS_
                                           ; #	MOVF	_last_send_was_null, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00768_DS_
                                           ; #	GOTO	_00773_DS_
                                           ; #	MOVLW	0x00
004a22   0103     movlb   0x3              	BANKSEL	_last_send_was_null
                                           ;	.line	80; /home/valentin/.icaro/firmware/tmp/usb.c	return;
004a24   513c     movf    0x3c, 0, 0x1     	MOVF	_last_send_was_null, W, B
                                           ;	.line	82; /home/valentin/.icaro/firmware/tmp/usb.c	last_send_was_null = (ep2_num_bytes_to_send < EP2_BUFFER_SIZE);
004a26   e12c     bnz     0x4a80           	BNZ	_00773_DS_
                                           _00768_DS_:
004a28   0e00     movlw   0                	MOVLW	0x00
004a2a   0102     movlb   0x2              	BANKSEL	(_ep2_num_bytes_to_send + 1)
004a2c   5dff     subwf   0xff, 0, 0x1     	SUBWF	(_ep2_num_bytes_to_send + 1), W, B
004a2e   e102     bnz     0x4a34           	BNZ	_00785_DS_
004a30   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004a32   5dfe     subwf   0xfe, 0, 0x1     	SUBWF	_ep2_num_bytes_to_send, W, B
                                           _00785_DS_:
004a34   70d8     btg     0xd8, 0, 0       	BTG	STATUS, 0
004a36   0103     movlb   0x3              	BANKSEL	_last_send_was_null
004a38   6b3c     clrf    0x3c, 0x1        	CLRF	_last_send_was_null, B
004a3a   373c     rlcf    0x3c, 0x1, 0x1   	RLCF	_last_send_was_null, F, B
                                           ; #	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004a3c   0102     movlb   0x2              	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Cnt = ep2_num_bytes_to_send;
004a3e   51fe     movf    0xfe, 0, 0x1     	MOVF	_ep2_num_bytes_to_send, W, B
004a40   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 21)
004a42   6f15     movwf   0x15, 0x1        	MOVWF	(_ep_bdt + 21), B
                                           ;	.line	84; /home/valentin/.icaro/firmware/tmp/usb.c	fill_in_buffer(2, &ep2_source_data, EP2_BUFFER_SIZE, &ep2_num_bytes_to_send);
004a44   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
004a46   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a48   0e02     movlw   0x2              	MOVLW	HIGH(_ep2_num_bytes_to_send)
004a4a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a4c   0efe     movlw   0xfe             	MOVLW	LOW(_ep2_num_bytes_to_send)
004a4e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a50   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004a52   0e40     movlw   0x40             	MOVLW	0x40
004a54   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a56   0e80     movlw   0x80             	MOVLW	0x80
004a58   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a5a   0e02     movlw   0x2              	MOVLW	HIGH(_ep2_source_data)
004a5c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a5e   0efb     movlw   0xfb             	MOVLW	LOW(_ep2_source_data)
004a60   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a62   0e02     movlw   0x2              	MOVLW	0x02
004a64   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004a66   ec15     call    0x2a, 0          	CALL	_fill_in_buffer
004a68   f000
004a6a   0e09     movlw   0x9              	MOVLW	0x09
004a6c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004a6e   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 20)
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/usb.c	if(EP_IN_BD(2).Stat.DTS == 0)
004a70   bd14     btfsc   0x14, 0x6, 0x1   	BTFSC	(_ep_bdt + 20), 6, B
004a72   d003     bra     0x4a7a           	BRA	_00771_DS_
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
004a74   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
004a76   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
004a78   d003     bra     0x4a80           	BRA	_00773_DS_
                                           _00771_DS_:
                                           ;	.line	91; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
004a7a   0e88     movlw   0x88             	MOVLW	0x88
004a7c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 20)
004a7e   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           _00773_DS_:
004a80   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__usbsend	code
                                           _usbsend:
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/usb.c	void usbsend(uchar *txpointer,uint length)
004d06   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d08   ffe5
004d0a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d0c   ffd9
004d0e   0e02     movlw   0x2              	MOVLW	0x02
004d10   cfdb     movff   0xfdb, 0x2fb     	MOVFF	PLUSW2, _ep2_source_data
004d12   f2fb
004d14   0e03     movlw   0x3              	MOVLW	0x03
004d16   cfdb     movff   0xfdb, 0x2fc     	MOVFF	PLUSW2, (_ep2_source_data + 1)
004d18   f2fc
004d1a   0e04     movlw   0x4              	MOVLW	0x04
004d1c   cfdb     movff   0xfdb, 0x2fd     	MOVFF	PLUSW2, (_ep2_source_data + 2)
004d1e   f2fd
004d20   0e05     movlw   0x5              	MOVLW	0x05
004d22   cfdb     movff   0xfdb, 0x2fe     	MOVFF	PLUSW2, _ep2_num_bytes_to_send
004d24   f2fe
004d26   0e06     movlw   0x6              	MOVLW	0x06
004d28   cfdb     movff   0xfdb, 0x2ff     	MOVFF	PLUSW2, (_ep2_num_bytes_to_send + 1)
004d2a   f2ff
                                           ;	.line	63; /home/valentin/.icaro/firmware/tmp/usb.c	prepare_ep2_in();
004d2c   ec75     call    0x4aea, 0        	CALL	_prepare_ep2_in
004d2e   f025
004d30   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d32   ffd9
004d34   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__prepare_ep2_in	code
                                           _prepare_ep2_in:
                                           ;	.line	45; /home/valentin/.icaro/firmware/tmp/usb.c	last_send_was_null = (ep2_num_bytes_to_send < EP2_BUFFER_SIZE);
004aea   0e00     movlw   0                	MOVLW	0x00
004aec   0102     movlb   0x2              	BANKSEL	(_ep2_num_bytes_to_send + 1)
004aee   5dff     subwf   0xff, 0, 0x1     	SUBWF	(_ep2_num_bytes_to_send + 1), W, B
004af0   e102     bnz     0x4af6           	BNZ	_00757_DS_
004af2   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004af4   5dfe     subwf   0xfe, 0, 0x1     	SUBWF	_ep2_num_bytes_to_send, W, B
                                           _00757_DS_:
004af6   70d8     btg     0xd8, 0, 0       	BTG	STATUS, 0
004af8   0103     movlb   0x3              	BANKSEL	_last_send_was_null
004afa   6b3c     clrf    0x3c, 0x1        	CLRF	_last_send_was_null, B
004afc   373c     rlcf    0x3c, 0x1, 0x1   	RLCF	_last_send_was_null, F, B
                                           ; #	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004afe   0102     movlb   0x2              	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Cnt = ep2_num_bytes_to_send;
004b00   51fe     movf    0xfe, 0, 0x1     	MOVF	_ep2_num_bytes_to_send, W, B
004b02   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 21)
004b04   6f15     movwf   0x15, 0x1        	MOVWF	(_ep_bdt + 21), B
                                           ;	.line	47; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).ADR = (uchar __data *)&TXBuffer;
004b06   0e00     movlw   0                	MOVLW	LOW(_TXBuffer)
                                           ; removed redundant BANKSEL
004b08   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
004b0a   0e06     movlw   0x6              	MOVLW	HIGH(_TXBuffer)
                                           ; removed redundant BANKSEL
004b0c   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ;	.line	48; /home/valentin/.icaro/firmware/tmp/usb.c	fill_in_buffer(2, &ep2_source_data, EP2_BUFFER_SIZE, &ep2_num_bytes_to_send);
004b0e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
004b10   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b12   0e02     movlw   0x2              	MOVLW	HIGH(_ep2_num_bytes_to_send)
004b14   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b16   0efe     movlw   0xfe             	MOVLW	LOW(_ep2_num_bytes_to_send)
004b18   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b1a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004b1c   0e40     movlw   0x40             	MOVLW	0x40
004b1e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b20   0e80     movlw   0x80             	MOVLW	0x80
004b22   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b24   0e02     movlw   0x2              	MOVLW	HIGH(_ep2_source_data)
004b26   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b28   0efb     movlw   0xfb             	MOVLW	LOW(_ep2_source_data)
004b2a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b2c   0e02     movlw   0x2              	MOVLW	0x02
004b2e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004b30   ec15     call    0x2a, 0          	CALL	_fill_in_buffer
004b32   f000
004b34   0e09     movlw   0x9              	MOVLW	0x09
004b36   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004b38   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 20)
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/usb.c	if(EP_IN_BD(2).Stat.DTS == 0)
004b3a   bd14     btfsc   0x14, 0x6, 0x1   	BTFSC	(_ep_bdt + 20), 6, B
004b3c   d003     bra     0x4b44           	BRA	_00749_DS_
                                           ;	.line	51; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
004b3e   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
004b40   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
004b42   d003     bra     0x4b4a           	BRA	_00751_DS_
                                           _00749_DS_:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
004b44   0e88     movlw   0x88             	MOVLW	0x88
004b46   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 20)
004b48   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           _00751_DS_:
004b4a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/.icaro/firmware/tmp/usb.c	EP_IN_BD(2).Stat.uc = BDS_UCPU | BDS_DAT1 | BDS_DTSEN;
004e50   0e48     movlw   0x48             	MOVLW	0x48
004e52   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 20)
004e54   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ;	.line	40; /home/valentin/.icaro/firmware/tmp/usb.c	UEP2 = EPHSHK_EN | EPINEN_EN |  EPCONDIS_EN;
004e56   0e1a     movlw   0x1a             	MOVLW	0x1a
004e58   6e72     movwf   0x72, 0          	MOVWF	_UEP2
004e5a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__usbavailable	code
                                           _usbavailable:
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/usb.c	uchar usbavailable()
004db2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004db4   ffe5
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/usb.c	return (usbwp!=usbrp);
004db6   6a00     clrf    0, 0             	CLRF	r0x00
004db8   0103     movlb   0x3              	BANKSEL	_usbwp
004dba   5140     movf    0x40, 0, 0x1     	MOVF	_usbwp, W, B
004dbc   0103     movlb   0x3              	BANKSEL	_usbrp
004dbe   1941     xorwf   0x41, 0, 0x1     	XORWF	_usbrp, W, B
004dc0   e101     bnz     0x4dc4           	BNZ	_00738_DS_
004dc2   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
                                           _00738_DS_:
004dc4   5000     movf    0, 0, 0          	MOVF	r0x00, W
004dc6   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
004dc8   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
004dca   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
004dcc   6a00     clrf    0, 0             	CLRF	r0x00
004dce   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
004dd0   5000     movf    0, 0, 0          	MOVF	r0x00, W
004dd2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004dd4   f000
004dd6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__set_PWM	code
                                           _set_PWM:
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/pwm.c	void set_PWM(int input, int value)
0044b6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0044b8   ffe5
0044ba   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0044bc   ffd9
0044be   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0044c0   ffe5
0044c2   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0044c4   ffe5
0044c6   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0044c8   ffe5
0044ca   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0044cc   ffe5
0044ce   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0044d0   ffe5
0044d2   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0044d4   ffe5
0044d6   0e02     movlw   0x2              	MOVLW	0x02
0044d8   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0044da   f000
0044dc   0e03     movlw   0x3              	MOVLW	0x03
0044de   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0044e0   f001
0044e2   0e04     movlw   0x4              	MOVLW	0x04
0044e4   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0044e6   f002
0044e8   0e05     movlw   0x5              	MOVLW	0x05
0044ea   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0044ec   f003
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/pwm.c	if (input==11)
0044ee   5000     movf    0, 0, 0          	MOVF	r0x00, W
0044f0   0a0b     xorlw   0xb              	XORLW	0x0b
0044f2   e102     bnz     0x44f8           	BNZ	_00722_DS_
0044f4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0044f6   e001     bz      0x44fa           	BZ	_00723_DS_
                                           _00722_DS_:
0044f8   d018     bra     0x452a           	BRA	_00703_DS_
                                           _00723_DS_:
                                           ;	.line	195; /home/valentin/.icaro/firmware/tmp/pwm.c	if ((CCP2CON & 0x0F)==0) init_PWM11();
0044fa   50ba     movf    0xba, 0, 0       	MOVF	_CCP2CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00701_DS_
                                           ; #	CALL	_init_PWM11
                                           ; #	MOVLW	0x03
                                           ;	.line	196; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
0044fc   0b0f     andlw   0xf              	ANDLW	0x0f
0044fe   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
004500   ec11     call    0x4e22, 0        	CALL	_init_PWM11
004502   f027
004504   0e03     movlw   0x3              	MOVLW	0x03
004506   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
004508   6e04     movwf   0x4, 0           	MOVWF	r0x04
00450a   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           ;	.line	197; /home/valentin/.icaro/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
00450c   3804     swapf   0x4, 0, 0        	SWAPF	r0x04, W
00450e   0bf0     andlw   0xf0             	ANDLW	0xf0
004510   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON&=0x0F;		// reset bit 4:5
004512   0e0f     movlw   0xf              	MOVLW	0x0f
004514   16ba     andwf   0xba, 0x1, 0     	ANDWF	_CCP2CON, F
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON|=octet;		// put in CCP2CON 4:5
004516   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004518   12ba     iorwf   0xba, 0x1, 0     	IORWF	_CCP2CON, F
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
00451a   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00451c   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
00451e   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
004520   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
004522   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
004524   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value;		// in octet
004526   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; =DF= MOVFF: SRC op r0x04 replaced by WREG
                                           ;	.line	202; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L=octet;		// put in CCPR2L
004528   6ebb     movwf   0xbb, 0          	MOVWF	_CCPR2L
                                           _00703_DS_:
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/pwm.c	if (input==12)
00452a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00452c   0a0c     xorlw   0xc              	XORLW	0x0c
00452e   e102     bnz     0x4534           	BNZ	_00728_DS_
004530   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004532   e001     bz      0x4536           	BZ	_00729_DS_
                                           _00728_DS_:
004534   d01a     bra     0x456a           	BRA	_00708_DS_
                                           _00729_DS_:
                                           ;	.line	207; /home/valentin/.icaro/firmware/tmp/pwm.c	if ((CCP1CON & 0x0F)==0) init_PWM12();		
004536   50bd     movf    0xbd, 0, 0       	MOVF	_CCP1CON, W
                                           ; #	ANDLW	0x0f
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00705_DS_
                                           ; #	CALL	_init_PWM12
                                           ; #	MOVLW	0x03
                                           ;	.line	208; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value & 3;	// extract bit 0 and 1
004538   0b0f     andlw   0xf              	ANDLW	0x0f
00453a   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
00453c   ec09     call    0x4e12, 0        	CALL	_init_PWM12
00453e   f027
004540   0e03     movlw   0x3              	MOVLW	0x03
004542   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
004544   6e00     movwf   0, 0             	MOVWF	r0x00
004546   6a01     clrf    0x1, 0           	CLRF	r0x01
004548   5000     movf    0, 0, 0          	MOVF	r0x00, W
00454a   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/pwm.c	octet<<=4;			// rotate left 4 bits
00454c   3804     swapf   0x4, 0, 0        	SWAPF	r0x04, W
00454e   0bf0     andlw   0xf0             	ANDLW	0xf0
004550   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ;	.line	210; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON&=0x0F;		// reset bit 4:5
004552   0e0f     movlw   0xf              	MOVLW	0x0f
004554   16bd     andwf   0xbd, 0x1, 0     	ANDWF	_CCP1CON, F
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON|=octet;		// put in CCP2CON 4:5
004556   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004558   12bd     iorwf   0xbd, 0x1, 0     	IORWF	_CCP1CON, F
                                           ;	.line	212; /home/valentin/.icaro/firmware/tmp/pwm.c	value>>=2;			// 8 MSB bits of value
00455a   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
00455c   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
00455e   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
004560   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
004562   3203     rrcf    0x3, 0x1, 0      	RRCF	r0x03, F
004564   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/pwm.c	octet=value;		// in octet
004566   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004568   6ebe     movwf   0xbe, 0          	MOVWF	_CCPR1L
                                           _00708_DS_:
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L=octet;		// put in CCPR1L			
00456a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00456c   f005
00456e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004570   f004
004572   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004574   f003
004576   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004578   f002
00457a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00457c   f001
00457e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004580   f000
004582   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004584   ffd9
004586   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__init_PWM12	code
                                           _init_PWM12:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/pwm.c	TRISCbits.TRISC2=0;		// C2 is an output
004e12   9494     bcf     0x94, 0x2, 0     	BCF	_TRISCbits, 2
                                           ;	.line	182; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
004e14   68cb     setf    0xcb, 0          	SETF	_PR2
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
004e16   0e05     movlw   0x5              	MOVLW	0x05
004e18   6eca     movwf   0xca, 0          	MOVWF	_T2CON
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L=0;				// 8 bits MSB output = 0
004e1a   6abe     clrf    0xbe, 0          	CLRF	_CCPR1L
                                           ;	.line	185; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON=0x0F;			// configure for PWM 2 bits LSB = 0
004e1c   0e0f     movlw   0xf              	MOVLW	0x0f
004e1e   6ebd     movwf   0xbd, 0          	MOVWF	_CCP1CON
004e20   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__init_PWM11	code
                                           _init_PWM11:
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/pwm.c	TRISCbits.TRISC1=0;		// C1 is an output
004e22   9294     bcf     0x94, 0x1, 0     	BCF	_TRISCbits, 1
                                           ;	.line	173; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2=0xFF;				// init timer 2 period
004e24   68cb     setf    0xcb, 0          	SETF	_PR2
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON=0x05;				// prescaler and timer 2 on
004e26   0e05     movlw   0x5              	MOVLW	0x05
004e28   6eca     movwf   0xca, 0          	MOVWF	_T2CON
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L=0;				// 8 bits MSB output = 0
004e2a   6abb     clrf    0xbb, 0          	CLRF	_CCPR2L
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON=0x0F;			// configure for PWM 2 bits LSB = 0	
004e2c   0e0f     movlw   0xf              	MOVLW	0x0f
004e2e   6eba     movwf   0xba, 0          	MOVWF	_CCP2CON
004e30   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__PWM_set_percent_dutycycle	code
                                           _PWM_set_percent_dutycycle:
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_percent_dutycycle(u8 pin, u8 percent)
004234   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004236   ffe5
004238   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00423a   ffd9
00423c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00423e   ffe5
004240   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004242   ffe5
004244   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004246   ffe5
004248   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00424a   ffe5
00424c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00424e   ffe5
004250   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004252   ffe5
004254   0e02     movlw   0x2              	MOVLW	0x02
004256   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004258   f000
00425a   0e03     movlw   0x3              	MOVLW	0x03
00425c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00425e   f001
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/pwm.c	if (percent == 0)
004260   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004262   e103     bnz     0x426a           	BNZ	_00675_DS_
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = 0;
004264   6a02     clrf    0x2, 0           	CLRF	r0x02
004266   6a03     clrf    0x3, 0           	CLRF	r0x03
004268   d030     bra     0x42ca           	BRA	_00676_DS_
                                           _00675_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/pwm.c	else if (percent >= 100)
00426a   0e64     movlw   0x64             	MOVLW	0x64
00426c   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00426e   e308     bnc     0x4280           	BNC	_00672_DS_
004270   0103     movlb   0x3              	BANKSEL	__pr2_plus1
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = _pr2_plus1 - 1;
004272   5136     movf    0x36, 0, 0x1     	MOVF	__pr2_plus1, W, B
004274   0fff     addlw   0xff             	ADDLW	0xff
004276   6e02     movwf   0x2, 0           	MOVWF	r0x02
004278   0eff     movlw   0xff             	MOVLW	0xff
                                           ; removed redundant BANKSEL
00427a   2137     addwfc  0x37, 0, 0x1     	ADDWFC	(__pr2_plus1 + 1), W, B
00427c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00427e   d025     bra     0x42ca           	BRA	_00676_DS_
                                           _00672_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/pwm.c	duty = percent * (_pr2_plus1 / 4) / 25;	// (factor PR2/100)
004280   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
004282   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
004284   3137     rrcf    0x37, 0, 0x1     	RRCF	(__pr2_plus1 + 1), W, B
004286   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ; removed redundant BANKSEL
004288   3136     rrcf    0x36, 0, 0x1     	RRCF	__pr2_plus1, W, B
00428a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00428c   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
00428e   3205     rrcf    0x5, 0x1, 0      	RRCF	r0x05, F
004290   3204     rrcf    0x4, 0x1, 0      	RRCF	r0x04, F
004292   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
004294   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004296   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004298   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00429a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00429c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00429e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042a0   ec27     call    0x4e, 0          	CALL	__mulint
0042a2   f000
0042a4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0042a6   cff3     movff   0xff3, 0x4       	MOVFF	PRODL, r0x04
0042a8   f004
0042aa   0e04     movlw   0x4              	MOVLW	0x04
0042ac   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0042ae   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0042b0   0e19     movlw   0x19             	MOVLW	0x19
0042b2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042b4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0042b6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042b8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0042ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042bc   ec8d     call    0x471a, 0        	CALL	__divuint
0042be   f023
0042c0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0042c2   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
0042c4   f003
0042c6   0e04     movlw   0x4              	MOVLW	0x04
0042c8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _00676_DS_:
                                           ;	.line	166; /home/valentin/.icaro/firmware/tmp/pwm.c	PWM_set_dutycycle(pin, duty << 2);
0042ca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0042cc   6e01     movwf   0x1, 0           	MOVWF	r0x01
0042ce   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
0042d0   3403     rlcf    0x3, 0, 0        	RLCF	r0x03, W
0042d2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0042d4   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0042d6   3601     rlcf    0x1, 0x1, 0      	RLCF	r0x01, F
0042d8   3604     rlcf    0x4, 0x1, 0      	RLCF	r0x04, F
0042da   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0042dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042de   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0042e0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042e2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0042e4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0042e6   ec23     call    0x4046, 0        	CALL	_PWM_set_dutycycle
0042e8   f020
0042ea   0e03     movlw   0x3              	MOVLW	0x03
0042ec   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0042ee   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0042f0   f005
0042f2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0042f4   f004
0042f6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0042f8   f003
0042fa   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0042fc   f002
0042fe   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004300   f001
004302   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004304   f000
004306   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004308   ffd9
00430a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__PWM_set_dutycycle	code
                                           _PWM_set_dutycycle:
                                           ;	.line	98; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_dutycycle(u8 pin, u16 duty)
004046   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004048   ffe5
00404a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00404c   ffd9
00404e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004050   ffe5
004052   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004054   ffe5
004056   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004058   ffe5
00405a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00405c   ffe5
00405e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004060   ffe5
004062   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004064   ffe5
004066   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
004068   ffe5
00406a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00406c   ffe5
00406e   0e02     movlw   0x2              	MOVLW	0x02
004070   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004072   f000
004074   0e03     movlw   0x3              	MOVLW	0x03
004076   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004078   f001
00407a   0e04     movlw   0x4              	MOVLW	0x04
00407c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
00407e   f002
                                           ;	.line	102; /home/valentin/.icaro/firmware/tmp/pwm.c	if (duty > 1023) duty = 1023;		// upper limit (10-bit)
004080   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
004082   e102     bnz     0x4088           	BNZ	_00660_DS_
004084   0e00     movlw   0                	MOVLW	0x00
004086   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
                                           _00660_DS_:
004088   e303     bnc     0x4090           	BNC	_00635_DS_
00408a   6801     setf    0x1, 0           	SETF	r0x01
00408c   0e03     movlw   0x3              	MOVLW	0x03
00408e   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _00635_DS_:
                                           ;	.line	105; /home/valentin/.icaro/firmware/tmp/pwm.c	pinmode(pin, INPUT);				// PWM pin as INPUT
004090   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
004092   f003
004094   6a04     clrf    0x4, 0           	CLRF	r0x04
004096   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004098   0e01     movlw   0x1              	MOVLW	0x01
00409a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00409c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00409e   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0040a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0040a2   ec01     call    0x3002, 0        	CALL	_pinmode
0040a4   f018
0040a6   0e04     movlw   0x4              	MOVLW	0x04
0040a8   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
0040aa   0103     movlb   0x3              	BANKSEL	__pr2_plus1
                                           ;	.line	107; /home/valentin/.icaro/firmware/tmp/pwm.c	PR2 = _pr2_plus1 - 1;				// set PR2
0040ac   5136     movf    0x36, 0, 0x1     	MOVF	__pr2_plus1, W, B
0040ae   6e05     movwf   0x5, 0           	MOVWF	r0x05
0040b0   0405     decf    0x5, 0, 0        	DECF	r0x05, W
0040b2   6ecb     movwf   0xcb, 0          	MOVWF	_PR2
                                           ;	.line	109; /home/valentin/.icaro/firmware/tmp/pwm.c	if (pin == 11)
0040b4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040b6   0a0b     xorlw   0xb              	XORLW	0x0b
0040b8   e113     bnz     0x40e0           	BNZ	_00637_DS_
                                           ;	.line	112; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON = Bin(00001111);		// reset also 2 LSbits of duty cycle
0040ba   0e0f     movlw   0xf              	MOVLW	0x0f
0040bc   6eba     movwf   0xba, 0          	MOVWF	_CCP2CON
                                           ;	.line	114; /home/valentin/.icaro/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of duty
0040be   0e03     movlw   0x3              	MOVLW	0x03
0040c0   1401     andwf   0x1, 0, 0        	ANDWF	r0x01, W
0040c2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0040c4   6a06     clrf    0x6, 0           	CLRF	r0x06
                                           ;	.line	115; /home/valentin/.icaro/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
0040c6   3805     swapf   0x5, 0, 0        	SWAPF	r0x05, W
0040c8   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	116; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP2CON |= temp;				// put in CCP2CON 4:5  (DCBx1 and DCBx0)
0040ca   12ba     iorwf   0xba, 0x1, 0     	IORWF	_CCP2CON, F
                                           ;	.line	117; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR2L = duty >> 2;				// 8 MSbits of duty
0040cc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0040ce   3002     rrcf    0x2, 0, 0        	RRCF	r0x02, W
0040d0   6e07     movwf   0x7, 0           	MOVWF	r0x07
0040d2   3001     rrcf    0x1, 0, 0        	RRCF	r0x01, W
0040d4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0040d6   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0040d8   3207     rrcf    0x7, 0x1, 0      	RRCF	r0x07, F
0040da   3206     rrcf    0x6, 0x1, 0      	RRCF	r0x06, F
0040dc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0040de   6ebb     movwf   0xbb, 0          	MOVWF	_CCPR2L
                                           _00637_DS_:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/pwm.c	if (pin == 12)
0040e0   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040e2   0a0c     xorlw   0xc              	XORLW	0x0c
0040e4   e113     bnz     0x410c           	BNZ	_00639_DS_
                                           ;	.line	123; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON = Bin(00001111);
0040e6   0e0f     movlw   0xf              	MOVLW	0x0f
0040e8   6ebd     movwf   0xbd, 0          	MOVWF	_CCP1CON
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/pwm.c	temp = duty & Bin(00000011);	// extract 2 LSbits of the duty
0040ea   0e03     movlw   0x3              	MOVLW	0x03
0040ec   1401     andwf   0x1, 0, 0        	ANDWF	r0x01, W
0040ee   6e00     movwf   0, 0             	MOVWF	r0x00
0040f0   6a06     clrf    0x6, 0           	CLRF	r0x06
0040f2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0040f4   6e05     movwf   0x5, 0           	MOVWF	r0x05
                                           ;	.line	126; /home/valentin/.icaro/firmware/tmp/pwm.c	temp <<= 4;						// shift left 4 bits
0040f6   3805     swapf   0x5, 0, 0        	SWAPF	r0x05, W
0040f8   0bf0     andlw   0xf0             	ANDLW	0xf0
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ;	.line	127; /home/valentin/.icaro/firmware/tmp/pwm.c	CCP1CON |= temp;				// put in CCP2CON 4:5
0040fa   12bd     iorwf   0xbd, 0x1, 0     	IORWF	_CCP1CON, F
                                           ;	.line	128; /home/valentin/.icaro/firmware/tmp/pwm.c	CCPR1L = duty >> 2;				// 8 MSbits of the duty
0040fc   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0040fe   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
004100   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
004102   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
004104   3202     rrcf    0x2, 0x1, 0      	RRCF	r0x02, F
004106   3201     rrcf    0x1, 0x1, 0      	RRCF	r0x01, F
004108   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00410a   6ebe     movwf   0xbe, 0          	MOVWF	_CCPR1L
                                           _00639_DS_:
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/pwm.c	PIR1bits.TMR2IF = 0;				// reset this flag for the next test
00410c   929e     bcf     0x9e, 0x1, 0     	BCF	_PIR1bits, 1
                                           ;	.line	133; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CON = _t2con;						// Timer2 prescaler
00410e   c33f     movff   0x33f, 0xfca     	MOVFF	__t2con, _T2CON
004110   ffca
                                           ;	.line	134; /home/valentin/.icaro/firmware/tmp/pwm.c	T2CONbits.TMR2ON = ON;				// enable Timer2
004112   84ca     bsf     0xca, 0x2, 0     	BSF	_T2CONbits, 2
                                           _00640_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/pwm.c	while (PIR1bits.TMR2IF == 0);		// Wait until TMR2 overflows
004114   a29e     btfss   0x9e, 0x1, 0     	BTFSS	_PIR1bits, 1
004116   d7fe     bra     0x4114           	BRA	_00640_DS_
                                           ;	.line	137; /home/valentin/.icaro/firmware/tmp/pwm.c	pinmode(pin, OUTPUT);				// PWM pin as OUTPUT
004118   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00411a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00411c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00411e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004120   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004122   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004124   ec01     call    0x3002, 0        	CALL	_pinmode
004126   f018
004128   0e04     movlw   0x4              	MOVLW	0x04
00412a   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
00412c   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00412e   f007
004130   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004132   f006
004134   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
004136   f005
004138   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00413a   f004
00413c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00413e   f003
004140   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004142   f002
004144   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004146   f001
004148   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00414a   f000
00414c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00414e   ffd9
004150   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__PWM_set_frequency	code
                                           _PWM_set_frequency:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/pwm.c	void PWM_set_frequency(u32 freq)
00430c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00430e   ffe5
004310   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004312   ffd9
004314   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004316   ffe5
004318   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00431a   ffe5
00431c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00431e   ffe5
004320   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004322   ffe5
004324   0e02     movlw   0x2              	MOVLW	0x02
004326   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004328   f000
00432a   0e03     movlw   0x3              	MOVLW	0x03
00432c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00432e   f001
004330   0e04     movlw   0x4              	MOVLW	0x04
004332   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004334   f002
004336   0e05     movlw   0x5              	MOVLW	0x05
004338   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00433a   f003
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = MIPS / freq;				// FOSC / (4 * PWM Frequency)
00433c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00433e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004340   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004342   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004344   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004346   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004348   5000     movf    0, 0, 0          	MOVF	r0x00, W
00434a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00434c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00434e   0eb7     movlw   0xb7             	MOVLW	0xb7
004350   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004352   0e1b     movlw   0x1b             	MOVLW	0x1b
004354   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004356   0e00     movlw   0                	MOVLW	0x00
004358   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00435a   ec35     call    0x3c6a, 0        	CALL	__divulong
00435c   f01e
00435e   6e00     movwf   0, 0             	MOVWF	r0x00
004360   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
004362   f001
004364   0e08     movlw   0x8              	MOVLW	0x08
004366   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
004368   5000     movf    0, 0, 0          	MOVF	r0x00, W
00436a   0103     movlb   0x3              	BANKSEL	__pr2_plus1
00436c   6f36     movwf   0x36, 0x1        	MOVWF	__pr2_plus1, B
00436e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004370   6f37     movwf   0x37, 0x1        	MOVWF	(__pr2_plus1 + 1), B
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/pwm.c	if (_pr2_plus1 <= 4096)					// check if it's not too high
004372   0e10     movlw   0x10             	MOVLW	0x10
                                           ; removed redundant BANKSEL
004374   5d37     subwf   0x37, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
004376   e102     bnz     0x437c           	BNZ	_00627_DS_
004378   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00437a   5d36     subwf   0x36, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00627_DS_:
00437c   e227     bc      0x43cc           	BC	_00616_DS_
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/pwm.c	if (_pr2_plus1 <= 256)				// no needs of any prescaler
00437e   0e01     movlw   0x1              	MOVLW	0x01
004380   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
004382   5d37     subwf   0x37, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
004384   e102     bnz     0x438a           	BNZ	_00628_DS_
004386   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
004388   5d36     subwf   0x36, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00628_DS_:
00438a   e203     bc      0x4392           	BC	_00612_DS_
00438c   0103     movlb   0x3              	BANKSEL	__t2con
                                           ;	.line	68; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(00);				// prescaler is 1
00438e   6b3f     clrf    0x3f, 0x1        	CLRF	__t2con, B
004390   d01d     bra     0x43cc           	BRA	_00616_DS_
                                           _00612_DS_:
                                           ;	.line	70; /home/valentin/.icaro/firmware/tmp/pwm.c	else if (_pr2_plus1 <= 1024)		// needs prescaler 1:4
004392   0e04     movlw   0x4              	MOVLW	0x04
004394   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
004396   5d37     subwf   0x37, 0, 0x1     	SUBWF	(__pr2_plus1 + 1), W, B
004398   e102     bnz     0x439e           	BNZ	_00629_DS_
00439a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00439c   5d36     subwf   0x36, 0, 0x1     	SUBWF	__pr2_plus1, W, B
                                           _00629_DS_:
00439e   e20b     bc      0x43b6           	BC	_00609_DS_
                                           ;	.line	72; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 2;	// divided by 4
0043a0   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0043a2   0103     movlb   0x3              	BANKSEL	(__pr2_plus1 + 1)
0043a4   3337     rrcf    0x37, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
0043a6   3336     rrcf    0x36, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
0043a8   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
                                           ; removed redundant BANKSEL
0043aa   3337     rrcf    0x37, 0x1, 0x1   	RRCF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
0043ac   3336     rrcf    0x36, 0x1, 0x1   	RRCF	__pr2_plus1, F, B
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(01);				// prescaler is 4
0043ae   0e01     movlw   0x1              	MOVLW	0x01
0043b0   0103     movlb   0x3              	BANKSEL	__t2con
0043b2   6f3f     movwf   0x3f, 0x1        	MOVWF	__t2con, B
0043b4   d00b     bra     0x43cc           	BRA	_00616_DS_
                                           _00609_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/pwm.c	_pr2_plus1 = _pr2_plus1 >> 4;	// divided by 16
0043b6   0ef0     movlw   0xf0             	MOVLW	0xf0
0043b8   0103     movlb   0x3              	BANKSEL	__pr2_plus1
0043ba   1736     andwf   0x36, 0x1, 0x1   	ANDWF	__pr2_plus1, F, B
0043bc   3b36     swapf   0x36, 0x1, 0x1   	SWAPF	__pr2_plus1, F, B
                                           ; removed redundant BANKSEL
0043be   3b37     swapf   0x37, 0x1, 0x1   	SWAPF	(__pr2_plus1 + 1), F, B
0043c0   1537     andwf   0x37, 0, 0x1     	ANDWF	(__pr2_plus1 + 1), W, B
0043c2   1b37     xorwf   0x37, 0x1, 0x1   	XORWF	(__pr2_plus1 + 1), F, B
                                           ; removed redundant BANKSEL
0043c4   2736     addwf   0x36, 0x1, 0x1   	ADDWF	__pr2_plus1, F, B
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/pwm.c	_t2con = Bin(10);				// prescaler is 16
0043c6   0e02     movlw   0x2              	MOVLW	0x02
0043c8   0103     movlb   0x3              	BANKSEL	__t2con
0043ca   6f3f     movwf   0x3f, 0x1        	MOVWF	__t2con, B
                                           _00616_DS_:
0043cc   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0043ce   f003
0043d0   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0043d2   f002
0043d4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0043d6   f001
0043d8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0043da   f000
0043dc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0043de   ffd9
0043e0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayus(int microsecondes)
004b4c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004b4e   ffe5
004b50   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004b52   ffd9
004b54   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004b56   ffe5
004b58   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004b5a   ffe5
004b5c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004b5e   ffe5
004b60   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004b62   ffe5
004b64   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004b66   ffe5
004b68   0e02     movlw   0x2              	MOVLW	0x02
004b6a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004b6c   f000
004b6e   0e03     movlw   0x3              	MOVLW	0x03
004b70   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004b72   f001
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<microsecondes;i++);
004b74   6a02     clrf    0x2, 0           	CLRF	r0x02
004b76   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00592_DS_:
004b78   5000     movf    0, 0, 0          	MOVF	r0x00, W
004b7a   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
004b7c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004b7e   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
004b80   e102     bnz     0x4b86           	BNZ	_00603_DS_
004b82   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
004b84   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00603_DS_:
004b86   e203     bc      0x4b8e           	BC	_00594_DS_
004b88   4a02     infsnz  0x2, 0x1, 0      	INFSNZ	r0x02, F
004b8a   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
004b8c   d7f5     bra     0x4b78           	BRA	_00592_DS_
                                           _00594_DS_:
004b8e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004b90   f004
004b92   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004b94   f003
004b96   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004b98   f002
004b9a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004b9c   f001
004b9e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ba0   f000
004ba2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ba4   ffd9
004ba6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayms(unsigned long milliseconde)
00486a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00486c   ffe5
00486e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004870   ffd9
004872   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004874   ffe5
004876   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004878   ffe5
00487a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00487c   ffe5
00487e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004880   ffe5
004882   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004884   ffe5
004886   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
004888   ffe5
00488a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00488c   ffe5
00488e   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004890   ffe5
004892   0e02     movlw   0x2              	MOVLW	0x02
004894   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004896   f000
004898   0e03     movlw   0x3              	MOVLW	0x03
00489a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00489c   f001
00489e   0e04     movlw   0x4              	MOVLW	0x04
0048a0   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0048a2   f002
0048a4   0e05     movlw   0x5              	MOVLW	0x05
0048a6   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0048a8   f003
                                           ;	.line	13; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
0048aa   6a04     clrf    0x4, 0           	CLRF	r0x04
0048ac   6a05     clrf    0x5, 0           	CLRF	r0x05
0048ae   6a06     clrf    0x6, 0           	CLRF	r0x06
0048b0   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00573_DS_:
0048b2   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0048b4   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
0048b6   e108     bnz     0x48c8           	BNZ	_00584_DS_
0048b8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0048ba   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
0048bc   e105     bnz     0x48c8           	BNZ	_00584_DS_
0048be   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0048c0   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0048c2   e102     bnz     0x48c8           	BNZ	_00584_DS_
0048c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0048c6   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00584_DS_:
0048c8   e20a     bc      0x48de           	BC	_00575_DS_
0048ca   0e01     movlw   0x1              	MOVLW	0x01
0048cc   ec37     call    0x6e, 0          	CALL	_delay10ktcy
0048ce   f000
0048d0   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
0048d2   e3ef     bnc     0x48b2           	BNC	_00573_DS_
0048d4   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0048d6   e3ed     bnc     0x48b2           	BNC	_00573_DS_
0048d8   4a06     infsnz  0x6, 0x1, 0      	INFSNZ	r0x06, F
0048da   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
                                           _00585_DS_:
0048dc   d7ea     bra     0x48b2           	BRA	_00573_DS_
                                           _00575_DS_:
0048de   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0048e0   f007
0048e2   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0048e4   f006
0048e6   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0048e8   f005
0048ea   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0048ec   f004
0048ee   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0048f0   f003
0048f2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0048f4   f002
0048f6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0048f8   f001
0048fa   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0048fc   f000
0048fe   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004900   ffd9
004902   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__analogread	code
                                           _analogread:
                                           ;	.line	40; /home/valentin/.icaro/firmware/tmp/analog.c	unsigned int analogread(unsigned char channel)
00499c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00499e   ffe5
0049a0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0049a2   ffd9
0049a4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0049a6   ffe5
0049a8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0049aa   ffe5
0049ac   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0049ae   ffe5
0049b0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0049b2   ffe5
0049b4   0e02     movlw   0x2              	MOVLW	0x02
0049b6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0049b8   f000
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0=(channel-13)*4;
0049ba   0ef3     movlw   0xf3             	MOVLW	0xf3
0049bc   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
0049be   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049c0   0d04     mullw   0x4              	MULLW	0x04
0049c2   cff3     movff   0xff3, 0xfc2     	MOVFF	PRODL, _ADCON0
0049c4   ffc2
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.ADON=1;
0049c6   80c2     bsf     0xc2, 0, 0       	BSF	_ADCON0bits, 0
                                           ;	.line	60; /home/valentin/.icaro/firmware/tmp/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
0049c8   0e09     movlw   0x9              	MOVLW	0x09
0049ca   6e00     movwf   0, 0             	MOVWF	r0x00
0049cc   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00565_DS_:
0049ce   0000     nop                      	NOP 
0049d0   0eff     movlw   0xff             	MOVLW	0xff
0049d2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0049d4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0049d6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049d8   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
0049da   e1f9     bnz     0x49ce           	BNZ	_00565_DS_
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.GO=1;
0049dc   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           _00560_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/analog.c	while (ADCON0bits.GO);
0049de   b2c2     btfsc   0xc2, 0x1, 0     	BTFSC	_ADCON0bits, 1
0049e0   d7fe     bra     0x49de           	BRA	_00560_DS_
                                           ;	.line	63; /home/valentin/.icaro/firmware/tmp/analog.c	result=ADRESH<<8;
0049e2   cfc4     movff   0xfc4, 0         	MOVFF	_ADRESH, r0x00
0049e4   f000
0049e6   6a01     clrf    0x1, 0           	CLRF	r0x01
0049e8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049ea   6e03     movwf   0x3, 0           	MOVWF	r0x03
0049ec   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/analog.c	result+=ADRESL;
0049ee   cfc3     movff   0xfc3, 0         	MOVFF	_ADRESL, r0x00
0049f0   f000
0049f2   6a01     clrf    0x1, 0           	CLRF	r0x01
0049f4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0049f6   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
0049f8   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0049fa   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
                                           ;	.line	65; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.ADON=0;
0049fc   90c2     bcf     0xc2, 0, 0       	BCF	_ADCON0bits, 0
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/analog.c	return(result);
0049fe   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
004a00   fff3
004a02   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004a04   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004a06   f003
004a08   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004a0a   f002
004a0c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004a0e   f001
004a10   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004a12   f000
004a14   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004a16   ffd9
004a18   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__analogReference	code
                                           _analogReference:
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/analog.c	void analogReference(unsigned char Type)
004d64   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004d66   ffe5
004d68   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004d6a   ffd9
004d6c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004d6e   ffe5
004d70   0e02     movlw   0x2              	MOVLW	0x02
004d72   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004d74   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00543_DS_
                                           ; #	GOTO	_00545_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/analog.c	if(Type == DEFAULTAN)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
004d76   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1|=0x00;			//Vref+ = VDD
004d78   e004     bz      0x4d82           	BZ	_00545_DS_
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
004d7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
004d7c   0a01     xorlw   0x1              	XORLW	0x01
004d7e   e101     bnz     0x4d82           	BNZ	_00545_DS_
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1|=0x10;			//Vref+ = External source
004d80   88c1     bsf     0xc1, 0x4, 0     	BSF	_ADCON1, 4
                                           _00545_DS_:
004d82   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004d84   f000
004d86   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d88   ffd9
004d8a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__analog_init	code
                                           _analog_init:
                                           ;	.line	15; /home/valentin/.icaro/firmware/tmp/analog.c	TRISA=TRISA | 0x2F;
004e32   0e2f     movlw   0x2f             	MOVLW	0x2f
004e34   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/analog.c	TRISE=TRISE | 0x07;	
004e36   0e07     movlw   0x7              	MOVLW	0x07
004e38   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
                                           ;	.line	17; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1=0x07;
004e3a   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	18; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON2=0xBD;
004e3c   0ebd     movlw   0xbd             	MOVLW	0xbd
004e3e   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
004e40   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	289; /home/valentin/.icaro/firmware/tmp/servos.c	if (PIR1bits.TMR1IF) {
004bf0   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
004bf2   d020     bra     0x4c34           	BRA	_00530_DS_
                                           ;	.line	290; /home/valentin/.icaro/firmware/tmp/servos.c	PIR1bits.TMR1IF=0;
004bf4   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           ;	.line	291; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x00;
004bf6   6acd     clrf    0xcd, 0          	CLRF	_T1CON
004bf8   0103     movlb   0x3              	BANKSEL	_phase
                                           ;	.line	292; /home/valentin/.icaro/firmware/tmp/servos.c	if (phase) {
004bfa   5130     movf    0x30, 0, 0x1     	MOVF	_phase, W, B
004bfc   e00b     bz      0x4c14           	BZ	_00526_DS_
                                           ;	.line	294; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseUp();
004bfe   ec33     call    0x4e66, 0        	CALL	_ServosPulseUp
004c00   f027
                                           ;	.line	296; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0xd3;
004c02   0ed3     movlw   0xd3             	MOVLW	0xd3
004c04   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	297; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x8f;
004c06   0e8f     movlw   0x8f             	MOVLW	0x8f
004c08   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	299; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=1;
004c0a   0e01     movlw   0x1              	MOVLW	0x01
004c0c   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
004c0e   0103     movlb   0x3              	BANKSEL	_phase
                                           ;	.line	300; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 0;
004c10   6b30     clrf    0x30, 0x1        	CLRF	_phase, B
004c12   d010     bra     0x4c34           	BRA	_00530_DS_
                                           _00526_DS_:
                                           ;	.line	305; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseDown();
004c14   ece5     call    0x47ca, 0        	CALL	_ServosPulseDown
004c16   f023
                                           ;	.line	309; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0x2d;
004c18   0e2d     movlw   0x2d             	MOVLW	0x2d
004c1a   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	310; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x0f;
004c1c   0e0f     movlw   0xf              	MOVLW	0x0f
004c1e   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00524_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
004c20   0103     movlb   0x3              	BANKSEL	_needreordering
                                           ;	.line	312; /home/valentin/.icaro/firmware/tmp/servos.c	if (needreordering)	
004c22   5131     movf    0x31, 0, 0x1     	MOVF	_needreordering, W, B
                                           ;	.line	313; /home/valentin/.icaro/firmware/tmp/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
004c24   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	314; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
004c26   ec43     call    0x2886, 0        	CALL	_SortServoTimings
004c28   f014
004c2a   0e21     movlw   0x21             	MOVLW	0x21
004c2c   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	315; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
004c2e   0e01     movlw   0x1              	MOVLW	0x01
004c30   0103     movlb   0x3              	BANKSEL	_phase
004c32   6f30     movwf   0x30, 0x1        	MOVWF	_phase, B
                                           _00530_DS_:
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/servos.c	return;
004c34   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMaximumPulse(uchar servo)
004c36   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c38   ffe5
004c3a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c3c   ffd9
004c3e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c40   ffe5
004c42   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004c44   ffe5
004c46   0e02     movlw   0x2              	MOVLW	0x02
004c48   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004c4a   f000
                                           ;	.line	276; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004c4c   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00512_DS_
                                           ; #	GOTO	_00513_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	277; /home/valentin/.icaro/firmware/tmp/servos.c	return;
004c4e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	279; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
004c50   e20e     bc      0x4c6e           	BC	_00513_DS_
004c52   6a01     clrf    0x1, 0           	CLRF	r0x01
004c54   0e00     movlw   0                	MOVLW	LOW(_servovalues)
004c56   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004c58   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
004c5a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004c5c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004c5e   ffe9
004c60   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004c62   ffea
004c64   0efa     movlw   0xfa             	MOVLW	0xfa
004c66   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	281; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004c68   0e01     movlw   0x1              	MOVLW	0x01
004c6a   0103     movlb   0x3              	BANKSEL	_needreordering
004c6c   6f31     movwf   0x31, 0x1        	MOVWF	_needreordering, B
                                           _00513_DS_:
004c6e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004c70   f001
004c72   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004c74   f000
004c76   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004c78   ffd9
004c7a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	263; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMinimumPulse(uchar servo)
004cc2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004cc4   ffe5
004cc6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004cc8   ffd9
004cca   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004ccc   ffe5
004cce   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004cd0   ffe5
004cd2   0e02     movlw   0x2              	MOVLW	0x02
004cd4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004cd6   f000
                                           ;	.line	265; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004cd8   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00500_DS_
                                           ; #	GOTO	_00501_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	266; /home/valentin/.icaro/firmware/tmp/servos.c	return;
004cda   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	268; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
004cdc   e20d     bc      0x4cf8           	BC	_00501_DS_
004cde   6a01     clrf    0x1, 0           	CLRF	r0x01
004ce0   0e00     movlw   0                	MOVLW	LOW(_servovalues)
004ce2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004ce4   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
004ce6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004ce8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004cea   ffe9
004cec   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004cee   ffea
004cf0   0e01     movlw   0x1              	MOVLW	0x01
004cf2   6eef     movwf   0xef, 0          	MOVWF	INDF0
004cf4   0103     movlb   0x3              	BANKSEL	_needreordering
                                           ;	.line	270; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004cf6   6f31     movwf   0x31, 0x1        	MOVWF	_needreordering, B
                                           _00501_DS_:
004cf8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004cfa   f001
004cfc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004cfe   f000
004d00   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004d02   ffd9
004d04   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServoRead	code
                                           _ServoRead:
                                           ;	.line	255; /home/valentin/.icaro/firmware/tmp/servos.c	unsigned char ServoRead(uchar servo)
004c7c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004c7e   ffe5
004c80   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004c82   ffd9
004c84   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004c86   ffe5
004c88   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004c8a   ffe5
004c8c   0e02     movlw   0x2              	MOVLW	0x02
004c8e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004c90   f000
                                           ;	.line	257; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004c92   0e12     movlw   0x12             	MOVLW	0x12
004c94   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
004c96   e302     bnc     0x4c9c           	BNC	_00488_DS_
                                           ;	.line	258; /home/valentin/.icaro/firmware/tmp/servos.c	return 0;
004c98   6ae8     clrf    0xe8, 0          	CLRF	WREG
004c9a   d00c     bra     0x4cb4           	BRA	_00489_DS_
                                           _00488_DS_:
                                           ;	.line	259; /home/valentin/.icaro/firmware/tmp/servos.c	return servovalues[servo];
004c9c   6a01     clrf    0x1, 0           	CLRF	r0x01
004c9e   0e00     movlw   0                	MOVLW	LOW(_servovalues)
004ca0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004ca2   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
004ca4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004ca6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004ca8   ffe9
004caa   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004cac   ffea
004cae   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
004cb0   f000
004cb2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00489_DS_:
004cb4   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004cb6   f001
004cb8   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004cba   f000
004cbc   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004cbe   ffd9
004cc0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	240; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoWrite(uchar servo, uchar value)
004a82   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004a84   ffe5
004a86   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004a88   ffd9
004a8a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004a8c   ffe5
004a8e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004a90   ffe5
004a92   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004a94   ffe5
004a96   0e02     movlw   0x2              	MOVLW	0x02
004a98   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004a9a   f000
004a9c   0e03     movlw   0x3              	MOVLW	0x03
004a9e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004aa0   f001
                                           ;	.line	242; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004aa2   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00464_DS_
                                           ; #	GOTO	_00469_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	243; /home/valentin/.icaro/firmware/tmp/servos.c	return;
004aa4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	245; /home/valentin/.icaro/firmware/tmp/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
004aa6   e218     bc      0x4ad8           	BC	_00469_DS_
004aa8   0e01     movlw   0x1              	MOVLW	0x01
004aaa   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
004aac   e202     bc      0x4ab2           	BC	_00466_DS_
                                           ;	.line	246; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMIN;
004aae   0e01     movlw   0x1              	MOVLW	0x01
004ab0   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00466_DS_:
                                           ;	.line	247; /home/valentin/.icaro/firmware/tmp/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
004ab2   0efb     movlw   0xfb             	MOVLW	0xfb
004ab4   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
004ab6   e302     bnc     0x4abc           	BNC	_00468_DS_
                                           ;	.line	248; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMAX;
004ab8   0efa     movlw   0xfa             	MOVLW	0xfa
004aba   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00468_DS_:
                                           ;	.line	249; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=value;
004abc   6a02     clrf    0x2, 0           	CLRF	r0x02
004abe   0e00     movlw   0                	MOVLW	LOW(_servovalues)
004ac0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004ac2   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
004ac4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004ac6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004ac8   ffe9
004aca   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004acc   ffea
004ace   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
004ad0   ffef
                                           ;	.line	251; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004ad2   0e01     movlw   0x1              	MOVLW	0x01
004ad4   0103     movlb   0x3              	BANKSEL	_needreordering
004ad6   6f31     movwf   0x31, 0x1        	MOVWF	_needreordering, B
                                           _00469_DS_:
004ad8   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004ada   f002
004adc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004ade   f001
004ae0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004ae2   f000
004ae4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004ae6   ffd9
004ae8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoDetach(uchar pin)
0043e2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0043e4   ffe5
0043e6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0043e8   ffd9
0043ea   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0043ec   ffe5
0043ee   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0043f0   ffe5
0043f2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0043f4   ffe5
0043f6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0043f8   ffe5
0043fa   0e02     movlw   0x2              	MOVLW	0x02
0043fc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0043fe   f000
                                           ;	.line	228; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
004400   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00437_DS_
                                           ; #	GOTO	_00444_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	230; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
004402   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
004404   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004406   d04c     bra     0x44a0           	BRA	_00444_DS_
004408   0e08     movlw   0x8              	MOVLW	0x08
00440a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00440c   e218     bc      0x443e           	BC	_00442_DS_
                                           ;	.line	231; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
00440e   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
004410   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004412   6e01     movwf   0x1, 0           	MOVWF	r0x01
004414   6a02     clrf    0x2, 0           	CLRF	r0x02
004416   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
004418   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00441a   6a03     clrf    0x3, 0           	CLRF	r0x03
00441c   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00441e   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
004420   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
004422   fff6
004424   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
004426   fff7
004428   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
00442a   fff8
00442c   0009     tblrd   *+               	TBLRD*+	
00442e   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
004430   f001
004432   0103     movlb   0x3              	BANKSEL	_activatedservos
004434   5133     movf    0x33, 0, 0x1     	MOVF	_activatedservos, W, B
004436   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
004438   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00443a   6f33     movwf   0x33, 0x1        	MOVWF	_activatedservos, B
00443c   d031     bra     0x44a0           	BRA	_00444_DS_
                                           _00442_DS_:
                                           ;	.line	232; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
00443e   0e0d     movlw   0xd              	MOVLW	0x0d
004440   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
004442   e318     bnc     0x4474           	BNC	_00439_DS_
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
004444   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
004446   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004448   6e01     movwf   0x1, 0           	MOVWF	r0x01
00444a   6a02     clrf    0x2, 0           	CLRF	r0x02
00444c   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
00444e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004450   6a03     clrf    0x3, 0           	CLRF	r0x03
004452   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
004454   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
004456   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
004458   fff6
00445a   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
00445c   fff7
00445e   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
004460   fff8
004462   0009     tblrd   *+               	TBLRD*+	
004464   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
004466   f001
004468   0103     movlb   0x3              	BANKSEL	(_activatedservos + 2)
00446a   5135     movf    0x35, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
00446c   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
00446e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
004470   6f35     movwf   0x35, 0x1        	MOVWF	(_activatedservos + 2), B
004472   d016     bra     0x44a0           	BRA	_00444_DS_
                                           _00439_DS_:
                                           ;	.line	235; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
004474   6a01     clrf    0x1, 0           	CLRF	r0x01
004476   6a02     clrf    0x2, 0           	CLRF	r0x02
004478   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
00447a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00447c   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
00447e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004480   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
004482   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004484   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
004486   fff6
004488   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
00448a   fff7
00448c   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
00448e   fff8
004490   0009     tblrd   *+               	TBLRD*+	
004492   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
004494   f000
004496   0103     movlb   0x3              	BANKSEL	(_activatedservos + 1)
004498   5134     movf    0x34, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
00449a   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
00449c   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00449e   6f34     movwf   0x34, 0x1        	MOVWF	(_activatedservos + 1), B
                                           _00444_DS_:
0044a0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0044a2   f003
0044a4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0044a6   f002
0044a8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0044aa   f001
0044ac   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0044ae   f000
0044b0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0044b2   ffd9
0044b4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoAttach(uchar pin)
003b46   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003b48   ffe5
003b4a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003b4c   ffd9
003b4e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b50   ffe5
003b52   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003b54   ffe5
003b56   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003b58   ffe5
003b5a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003b5c   ffe5
003b5e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003b60   ffe5
003b62   0e02     movlw   0x2              	MOVLW	0x02
003b64   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003b66   f000
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
003b68   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00409_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
003b6a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003b6c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003b6e   d070     bra     0x3c50           	BRA	_00416_DS_
003b70   0e08     movlw   0x8              	MOVLW	0x08
003b72   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003b74   e224     bc      0x3bbe           	BC	_00414_DS_
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003b76   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
003b78   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003b7a   6e01     movwf   0x1, 0           	MOVWF	r0x01
003b7c   6a02     clrf    0x2, 0           	CLRF	r0x02
003b7e   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
003b80   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003b82   6a03     clrf    0x3, 0           	CLRF	r0x03
003b84   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003b86   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003b88   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003b8a   fff6
003b8c   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003b8e   fff7
003b90   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003b92   fff8
003b94   0009     tblrd   *+               	TBLRD*+	
003b96   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003b98   f004
003b9a   0103     movlb   0x3              	BANKSEL	_activatedservos
003b9c   5133     movf    0x33, 0, 0x1     	MOVF	_activatedservos, W, B
003b9e   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
003ba0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003ba2   6f33     movwf   0x33, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	215; /home/valentin/.icaro/firmware/tmp/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003ba4   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003ba6   fff6
003ba8   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003baa   fff7
003bac   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003bae   fff8
003bb0   0009     tblrd   *+               	TBLRD*+	
003bb2   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003bb4   f001
003bb6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003bb8   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003bba   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
003bbc   d049     bra     0x3c50           	BRA	_00416_DS_
                                           _00414_DS_:
                                           ;	.line	216; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
003bbe   0e0d     movlw   0xd              	MOVLW	0x0d
003bc0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003bc2   e324     bnc     0x3c0c           	BNC	_00411_DS_
                                           ;	.line	217; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
003bc4   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
003bc6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003bc8   6e01     movwf   0x1, 0           	MOVWF	r0x01
003bca   6a02     clrf    0x2, 0           	CLRF	r0x02
003bcc   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
003bce   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003bd0   6a03     clrf    0x3, 0           	CLRF	r0x03
003bd2   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003bd4   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003bd6   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003bd8   fff6
003bda   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003bdc   fff7
003bde   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003be0   fff8
003be2   0009     tblrd   *+               	TBLRD*+	
003be4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003be6   f004
003be8   0103     movlb   0x3              	BANKSEL	(_activatedservos + 2)
003bea   5135     movf    0x35, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
003bec   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
003bee   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003bf0   6f35     movwf   0x35, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	218; /home/valentin/.icaro/firmware/tmp/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
003bf2   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003bf4   fff6
003bf6   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003bf8   fff7
003bfa   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003bfc   fff8
003bfe   0009     tblrd   *+               	TBLRD*+	
003c00   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003c02   f001
003c04   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003c06   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003c08   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
003c0a   d022     bra     0x3c50           	BRA	_00416_DS_
                                           _00411_DS_:
                                           ;	.line	220; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003c0c   6a01     clrf    0x1, 0           	CLRF	r0x01
003c0e   6a02     clrf    0x2, 0           	CLRF	r0x02
003c10   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
003c12   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003c14   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
003c16   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003c18   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003c1a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003c1c   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003c1e   fff6
003c20   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
003c22   fff7
003c24   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003c26   fff8
003c28   0009     tblrd   *+               	TBLRD*+	
003c2a   cff5     movff   0xff5, 0x3       	MOVFF	TABLAT, r0x03
003c2c   f003
003c2e   0103     movlb   0x3              	BANKSEL	(_activatedservos + 1)
003c30   5134     movf    0x34, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
003c32   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
003c34   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
003c36   6f34     movwf   0x34, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003c38   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003c3a   fff6
003c3c   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
003c3e   fff7
003c40   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003c42   fff8
003c44   0009     tblrd   *+               	TBLRD*+	
003c46   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
003c48   f000
003c4a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003c4c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003c4e   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           _00416_DS_:
003c50   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003c52   f004
003c54   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003c56   f003
003c58   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003c5a   f002
003c5c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003c5e   f001
003c60   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003c62   f000
003c64   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003c66   ffd9
003c68   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/servos.c	static void SortServoTimings()
002886   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002888   ffe5
00288a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00288c   ffe5
00288e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002890   ffe5
002892   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002894   ffe5
002896   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002898   ffe5
00289a   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00289c   ffe5
00289e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0028a0   ffe5
0028a2   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0028a4   ffe5
0028a6   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0028a8   ffe5
0028aa   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0028ac   ffe5
0028ae   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
0028b0   ffe5
0028b2   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
0028b4   ffe5
0028b6   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
0028b8   ffe5
0028ba   0102     movlb   0x2              	BANKSEL	_SortServoTimings_mascaratotal_1_27
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0028bc   6bf8     clrf    0xf8, 0x1        	CLRF	_SortServoTimings_mascaratotal_1_27, B
                                           ; removed redundant BANKSEL
0028be   6bf9     clrf    0xf9, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ; removed redundant BANKSEL
0028c0   6bfa     clrf    0xfa, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
0028c2   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00325_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=255;
0028c4   0e86     movlw   0x86             	MOVLW	LOW(_timings + 54)
0028c6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028c8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028ca   6a02     clrf    0x2, 0           	CLRF	r0x02
0028cc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
0028ce   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0028d0   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0028d2   ffe9
0028d4   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0028d6   ffea
0028d8   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0028da   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
0028dc   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028de   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028e0   6a02     clrf    0x2, 0           	CLRF	r0x02
0028e2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0028e4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0028e6   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0028e8   ffe9
0028ea   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0028ec   ffea
0028ee   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0028f0   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
0028f2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028f4   6e01     movwf   0x1, 0           	MOVWF	r0x01
0028f6   6a02     clrf    0x2, 0           	CLRF	r0x02
0028f8   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0028fa   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0028fc   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0028fe   ffe9
002900   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002902   ffea
002904   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
002906   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002908   0e12     movlw   0x12             	MOVLW	0x12
00290a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00290c   e3db     bnc     0x28c4           	BNC	_00325_DS_
                                           ;	.line	142; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos=0;
00290e   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/servos.c	while(totalservos<18) {
002910   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00322_DS_:
002912   0e12     movlw   0x12             	MOVLW	0x12
002914   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
002916   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002918   d194     bra     0x2c42           	BRA	_00324_DS_
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
00291a   0e01     movlw   0x1              	MOVLW	0x01
00291c   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
00291e   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00327_DS_:
                                           ;	.line	148; /home/valentin/.icaro/firmware/tmp/servos.c	if (s<8){
002920   0e08     movlw   0x8              	MOVLW	0x08
002922   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002924   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002926   d061     bra     0x29ea           	BRA	_00319_DS_
                                           ;	.line	149; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002928   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
00292a   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00292c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00292e   6a05     clrf    0x5, 0           	CLRF	r0x05
002930   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
002932   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002934   6a06     clrf    0x6, 0           	CLRF	r0x06
002936   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002938   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00293a   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00293c   fff6
00293e   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002940   fff7
002942   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002944   fff8
002946   0009     tblrd   *+               	TBLRD*+	
002948   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00294a   f004
00294c   0102     movlb   0x2              	BANKSEL	_SortServoTimings_mascaratotal_1_27
00294e   51f8     movf    0xf8, 0, 0x1     	MOVF	_SortServoTimings_mascaratotal_1_27, W, B
002950   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002952   0103     movlb   0x3              	BANKSEL	_activatedservos
002954   5133     movf    0x33, 0, 0x1     	MOVF	_activatedservos, W, B
002956   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002958   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00295a   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
00295c   d148     bra     0x2bee           	BRA	_00328_DS_
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00295e   0e00     movlw   0                	MOVLW	LOW(_servovalues)
002960   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002962   6e04     movwf   0x4, 0           	MOVWF	r0x04
002964   6a05     clrf    0x5, 0           	CLRF	r0x05
002966   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
002968   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00296a   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
00296c   ffe9
00296e   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002970   ffea
002972   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
002974   f004
002976   0e86     movlw   0x86             	MOVLW	LOW(_timings + 54)
002978   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00297a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00297c   6a06     clrf    0x6, 0           	CLRF	r0x06
00297e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002980   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002982   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002984   ffe9
002986   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002988   ffea
00298a   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
00298c   f007
00298e   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
002990   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002992   e21f     bc      0x29d2           	BC	_00294_DS_
                                           ;	.line	152; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002994   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002996   ffe9
002998   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00299a   ffea
00299c   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
00299e   ffef
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0029a0   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
0029a2   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0029a4   6e07     movwf   0x7, 0           	MOVWF	r0x07
0029a6   6a08     clrf    0x8, 0           	CLRF	r0x08
0029a8   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0029aa   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0029ac   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0029ae   ffe9
0029b0   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0029b2   ffea
0029b4   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	155; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0029b6   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
0029b8   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0029ba   6e07     movwf   0x7, 0           	MOVWF	r0x07
0029bc   6a08     clrf    0x8, 0           	CLRF	r0x08
0029be   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0029c0   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0029c2   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0029c4   ffe9
0029c6   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0029c8   ffea
0029ca   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0029cc   0e01     movlw   0x1              	MOVLW	0x01
0029ce   6e02     movwf   0x2, 0           	MOVWF	r0x02
0029d0   d10e     bra     0x2bee           	BRA	_00328_DS_
                                           _00294_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0029d2   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0029d4   ffe9
0029d6   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0029d8   ffea
0029da   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0029dc   f005
0029de   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029e0   1805     xorwf   0x5, 0, 0        	XORWF	r0x05, W
0029e2   e001     bz      0x29e6           	BZ	_00391_DS_
0029e4   d104     bra     0x2bee           	BRA	_00328_DS_
                                           _00391_DS_:
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
0029e6   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0029e8   d102     bra     0x2bee           	BRA	_00328_DS_
                                           _00319_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/servos.c	else if (s>12){
0029ea   0e0d     movlw   0xd              	MOVLW	0x0d
0029ec   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0029ee   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0029f0   d080     bra     0x2af2           	BRA	_00316_DS_
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
0029f2   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
0029f4   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0029f6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029f8   6a05     clrf    0x5, 0           	CLRF	r0x05
0029fa   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
0029fc   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0029fe   6a06     clrf    0x6, 0           	CLRF	r0x06
002a00   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002a02   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a04   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a06   fff6
002a08   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a0a   fff7
002a0c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a0e   fff8
002a10   0009     tblrd   *+               	TBLRD*+	
002a12   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
002a14   f007
002a16   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 2)
002a18   51fa     movf    0xfa, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002a1a   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
002a1c   6e08     movwf   0x8, 0           	MOVWF	r0x08
002a1e   0103     movlb   0x3              	BANKSEL	(_activatedservos + 2)
002a20   5135     movf    0x35, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
002a22   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002a24   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002a26   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002a28   d0e2     bra     0x2bee           	BRA	_00328_DS_
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002a2a   0e00     movlw   0                	MOVLW	LOW(_servovalues)
002a2c   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002a2e   6e08     movwf   0x8, 0           	MOVWF	r0x08
002a30   6a09     clrf    0x9, 0           	CLRF	r0x09
002a32   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
002a34   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
002a36   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
002a38   ffe9
002a3a   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
002a3c   ffea
002a3e   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002a40   f008
002a42   0e86     movlw   0x86             	MOVLW	LOW(_timings + 54)
002a44   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002a46   6e09     movwf   0x9, 0           	MOVWF	r0x09
002a48   6a0a     clrf    0xa, 0           	CLRF	r0x0a
002a4a   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002a4c   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
002a4e   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002a50   ffe9
002a52   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002a54   ffea
002a56   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
002a58   f00b
002a5a   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002a5c   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
002a5e   e229     bc      0x2ab2           	BC	_00302_DS_
                                           ;	.line	168; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002a60   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002a62   ffe9
002a64   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002a66   ffea
002a68   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002a6a   ffef
                                           ;	.line	170; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002a6c   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
002a6e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002a70   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002a72   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002a74   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002a76   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
002a78   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
002a7a   ffe9
002a7c   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
002a7e   ffea
002a80   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	171; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=servomasks[s];
002a82   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
002a84   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002a86   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002a88   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002a8a   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002a8c   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
002a8e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a90   fff6
002a92   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a94   fff7
002a96   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a98   fff8
002a9a   0009     tblrd   *+               	TBLRD*+	
002a9c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a9e   f004
002aa0   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
002aa2   ffe9
002aa4   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
002aa6   ffea
002aa8   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002aaa   ffef
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002aac   0e01     movlw   0x1              	MOVLW	0x01
002aae   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ab0   d09e     bra     0x2bee           	BRA	_00328_DS_
                                           _00302_DS_:
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002ab2   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002ab4   ffe9
002ab6   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002ab8   ffea
002aba   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
002abc   f009
002abe   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002ac0   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
002ac2   e001     bz      0x2ac6           	BZ	_00396_DS_
002ac4   d094     bra     0x2bee           	BRA	_00328_DS_
                                           _00396_DS_:
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t] |= servomasks[s];
002ac6   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
002ac8   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002aca   6e04     movwf   0x4, 0           	MOVWF	r0x04
002acc   6a05     clrf    0x5, 0           	CLRF	r0x05
002ace   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002ad0   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002ad2   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002ad4   ffe9
002ad6   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002ad8   ffea
002ada   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
002adc   f006
002ade   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002ae0   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
002ae2   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002ae4   ffe9
002ae6   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002ae8   ffea
002aea   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
002aec   ffef
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
002aee   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
002af0   d07e     bra     0x2bee           	BRA	_00328_DS_
                                           _00316_DS_:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002af2   0ed4     movlw   0xd4             	MOVLW	LOW(_servomasks)
002af4   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002af6   6e04     movwf   0x4, 0           	MOVWF	r0x04
002af8   6a05     clrf    0x5, 0           	CLRF	r0x05
002afa   0e2f     movlw   0x2f             	MOVLW	HIGH(_servomasks)
002afc   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002afe   6a06     clrf    0x6, 0           	CLRF	r0x06
002b00   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002b02   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002b04   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002b06   fff6
002b08   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002b0a   fff7
002b0c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002b0e   fff8
002b10   0009     tblrd   *+               	TBLRD*+	
002b12   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
002b14   f007
002b16   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002b18   51f9     movf    0xf9, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002b1a   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
002b1c   6e08     movwf   0x8, 0           	MOVWF	r0x08
002b1e   0103     movlb   0x3              	BANKSEL	(_activatedservos + 1)
002b20   5134     movf    0x34, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
002b22   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002b24   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002b26   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002b28   d062     bra     0x2bee           	BRA	_00328_DS_
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002b2a   0e00     movlw   0                	MOVLW	LOW(_servovalues)
002b2c   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002b2e   6e08     movwf   0x8, 0           	MOVWF	r0x08
002b30   6a09     clrf    0x9, 0           	CLRF	r0x09
002b32   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
002b34   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
002b36   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
002b38   ffe9
002b3a   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
002b3c   ffea
002b3e   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002b40   f008
002b42   0e86     movlw   0x86             	MOVLW	LOW(_timings + 54)
002b44   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b46   6e09     movwf   0x9, 0           	MOVWF	r0x09
002b48   6a0a     clrf    0xa, 0           	CLRF	r0x0a
002b4a   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002b4c   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
002b4e   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002b50   ffe9
002b52   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002b54   ffea
002b56   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
002b58   f00b
002b5a   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002b5c   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
002b5e   e229     bc      0x2bb2           	BC	_00310_DS_
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002b60   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002b62   ffe9
002b64   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002b66   ffea
002b68   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
002b6a   ffef
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=servomasks[s];
002b6c   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
002b6e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b70   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002b72   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002b74   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002b76   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
002b78   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002b7a   fff6
002b7c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002b7e   fff7
002b80   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002b82   fff8
002b84   0009     tblrd   *+               	TBLRD*+	
002b86   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002b88   f004
002b8a   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
002b8c   ffe9
002b8e   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
002b90   ffea
002b92   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002b94   ffef
                                           ;	.line	187; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
002b96   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
002b98   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002b9a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b9c   6a05     clrf    0x5, 0           	CLRF	r0x05
002b9e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002ba0   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002ba2   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002ba4   ffe9
002ba6   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002ba8   ffea
002baa   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002bac   0e01     movlw   0x1              	MOVLW	0x01
002bae   6e02     movwf   0x2, 0           	MOVWF	r0x02
002bb0   d01e     bra     0x2bee           	BRA	_00328_DS_
                                           _00310_DS_:
                                           ;	.line	190; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings [timevalue][t]){
002bb2   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002bb4   ffe9
002bb6   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002bb8   ffea
002bba   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
002bbc   f009
002bbe   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002bc0   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
002bc2   e115     bnz     0x2bee           	BNZ	_00328_DS_
                                           ;	.line	191; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t] |= servomasks[s];
002bc4   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
002bc6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002bc8   6e04     movwf   0x4, 0           	MOVWF	r0x04
002bca   6a05     clrf    0x5, 0           	CLRF	r0x05
002bcc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002bce   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002bd0   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002bd2   ffe9
002bd4   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002bd6   ffea
002bd8   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
002bda   f006
002bdc   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002bde   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
002be0   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002be2   ffe9
002be4   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002be6   ffea
002be8   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
002bea   ffef
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
002bec   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00328_DS_:
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
002bee   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
002bf0   0e12     movlw   0x12             	MOVLW	0x12
002bf2   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002bf4   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
002bf6   d694     bra     0x2920           	BRA	_00327_DS_
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
002bf8   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
002bfa   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002bfc   6e03     movwf   0x3, 0           	MOVWF	r0x03
002bfe   6a04     clrf    0x4, 0           	CLRF	r0x04
002c00   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002c02   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002c04   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002c06   ffe9
002c08   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002c0a   ffea
002c0c   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002c0e   f003
002c10   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
002c12   51f9     movf    0xf9, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
002c14   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002c16   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002c18   6ff9     movwf   0xf9, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
002c1a   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
002c1c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002c1e   6e03     movwf   0x3, 0           	MOVWF	r0x03
002c20   6a04     clrf    0x4, 0           	CLRF	r0x04
002c22   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002c24   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002c26   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
002c28   ffe9
002c2a   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002c2c   ffea
002c2e   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002c30   f003
                                           ; removed redundant BANKSEL
002c32   51fa     movf    0xfa, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002c34   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
002c36   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002c38   6ffa     movwf   0xfa, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos += numservos;
002c3a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002c3c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/servos.c	t++;
002c3e   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002c40   d668     bra     0x2912           	BRA	_00322_DS_
                                           _00324_DS_:
002c42   0103     movlb   0x3              	BANKSEL	_needreordering
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002c44   6b31     clrf    0x31, 0x1        	CLRF	_needreordering, B
002c46   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
002c48   f00c
002c4a   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
002c4c   f00b
002c4e   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
002c50   f00a
002c52   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
002c54   f009
002c56   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002c58   f008
002c5a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002c5c   f007
002c5e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002c60   f006
002c62   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002c64   f005
002c66   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002c68   f004
002c6a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002c6c   f003
002c6e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002c70   f002
002c72   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002c74   f001
002c76   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002c78   f000
002c7a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
004e66   c334     movff   0x334, 0xf82     	MOVFF	(_activatedservos + 1), _PORTC
004e68   ff82
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
004e6a   c335     movff   0x335, 0xf80     	MOVFF	(_activatedservos + 2), _PORTA
004e6c   ff80
004e6e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/.icaro/firmware/tmp/servos.c	static void ServosPulseDown()
0047ca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0047cc   ffe5
0047ce   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0047d0   ffd9
0047d2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0047d4   ffe5
0047d6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0047d8   ffe5
0047da   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex = 0;
0047dc   6b3e     clrf    0x3e, 0x1        	CLRF	_timingindex, B
0047de   0103     movlb   0x3              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
0047e0   6b32     clrf    0x32, 0x1        	CLRF	_timedivision, B
                                           _00266_DS_:
                                           ;	.line	97; /home/valentin/.icaro/firmware/tmp/servos.c	if (timings[timevalue][timingindex] == timedivision){
0047e2   c33e     movff   0x33e, 0         	MOVFF	_timingindex, r0x00
0047e4   f000
0047e6   6a01     clrf    0x1, 0           	CLRF	r0x01
0047e8   0e86     movlw   0x86             	MOVLW	LOW(_timings + 54)
0047ea   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0047ec   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
0047ee   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0047f0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0047f2   ffe9
0047f4   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0047f6   ffea
0047f8   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
0047fa   f000
0047fc   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047fe   0103     movlb   0x3              	BANKSEL	_timedivision
004800   1932     xorwf   0x32, 0, 0x1     	XORWF	_timedivision, W, B
004802   e120     bnz     0x4844           	BNZ	_00264_DS_
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
004804   c33e     movff   0x33e, 0         	MOVFF	_timingindex, r0x00
004806   f000
004808   6a01     clrf    0x1, 0           	CLRF	r0x01
00480a   0e62     movlw   0x62             	MOVLW	LOW(_timings + 18)
00480c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00480e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
004810   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004812   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004814   ffe9
004816   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004818   ffea
00481a   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00481c   f000
00481e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004820   1a82     xorwf   0x82, 0x1, 0     	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
004822   c33e     movff   0x33e, 0         	MOVFF	_timingindex, r0x00
004824   f000
004826   6a01     clrf    0x1, 0           	CLRF	r0x01
004828   0e74     movlw   0x74             	MOVLW	LOW(_timings + 36)
00482a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00482c   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
00482e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004830   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004832   ffe9
004834   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004836   ffea
004838   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
00483a   f000
00483c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00483e   1a80     xorwf   0x80, 0x1, 0     	XORWF	_PORTA, F
004840   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex++;
004842   2b3e     incf    0x3e, 0x1, 0x1   	INCF	_timingindex, F, B
                                           _00264_DS_:
004844   0e0c     movlw   0xc              	movlw 12
004846   6f3b     movwf   0x3b, 0x1        	movwf _loopvar
                                           bucle:
004848   0000     nop                      	NOP
00484a   2f3b     decfsz  0x3b, 0x1, 0x1   	decfsz _loopvar,1
00484c   ef24     goto    0x4848           	goto bucle
00484e   f024
                                           	
004850   0103     movlb   0x3              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
004852   2b32     incf    0x32, 0x1, 0x1   	INCF	_timedivision, F, B
004854   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
004856   5d32     subwf   0x32, 0, 0x1     	SUBWF	_timedivision, W, B
004858   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00485a   d7c3     bra     0x47e2           	BRA	_00266_DS_
00485c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00485e   f001
004860   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004862   f000
004864   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004866   ffd9
004868   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/servos.c	void servos_init()
004ba8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004baa   ffe5
004bac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004bae   ffe5
004bb0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004bb2   ffe5
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
004bb4   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00247_DS_:
004bb6   0e00     movlw   0                	MOVLW	LOW(_servovalues)
004bb8   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
004bba   6e01     movwf   0x1, 0           	MOVWF	r0x01
004bbc   6a02     clrf    0x2, 0           	CLRF	r0x02
004bbe   0e03     movlw   0x3              	MOVLW	HIGH(_servovalues)
004bc0   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
004bc2   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
004bc4   ffe9
004bc6   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004bc8   ffea
004bca   68ef     setf    0xef, 0          	SETF	INDF0
004bcc   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
004bce   0e12     movlw   0x12             	MOVLW	0x12
004bd0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
004bd2   e3f1     bnc     0x4bb6           	BNC	_00247_DS_
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H=0xFF;
004bd4   68cf     setf    0xcf, 0          	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L=0x00;
004bd6   6ace     clrf    0xce, 0          	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x01;
004bd8   0e01     movlw   0x1              	MOVLW	0x01
004bda   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/servos.c	PIE1bits.TMR1IE=1;
004bdc   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.PEIE=1;
004bde   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.GIE=1;
004be0   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
004be2   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004be4   f002
004be6   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004be8   f001
004bea   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004bec   f000
004bee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/.icaro/firmware/tmp/digitalw.c	void pinmode(int input, int state)
003002   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003004   ffe5
003006   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003008   ffd9
00300a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00300c   ffe5
00300e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003010   ffe5
003012   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003014   ffe5
003016   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003018   ffe5
00301a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00301c   ffe5
00301e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003020   ffe5
003022   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003024   ffe5
003026   0e02     movlw   0x2              	MOVLW	0x02
003028   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00302a   f000
00302c   0e03     movlw   0x3              	MOVLW	0x03
00302e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003030   f001
003032   0e04     movlw   0x4              	MOVLW	0x04
003034   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003036   f002
003038   0e05     movlw   0x5              	MOVLW	0x05
00303a   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00303c   f003
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
00303e   0eb6     movlw   0xb6             	MOVLW	LOW(_port)
003040   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003042   6e04     movwf   0x4, 0           	MOVWF	r0x04
003044   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
003046   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003048   6e05     movwf   0x5, 0           	MOVWF	r0x05
00304a   6a06     clrf    0x6, 0           	CLRF	r0x06
00304c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00304e   6806     setf    0x6, 0           	SETF	r0x06
003050   0e00     movlw   0                	MOVLW	UPPER(_port)
003052   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003054   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003056   fff6
003058   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00305a   fff7
00305c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00305e   fff8
003060   0009     tblrd   *+               	TBLRD*+	
003062   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003064   f004
003066   0e05     movlw   0x5              	MOVLW	0x05
003068   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
00306a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00306c   d110     bra     0x328e           	BRA	_00220_DS_
00306e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
003070   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003072   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
003074   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003076   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003078   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00307a   0bfc     andlw   0xfc             	ANDLW	0xfc
00307c   0f8c     addlw   0x8c             	ADDLW	LOW(_00241_DS_)
00307e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003080   0e30     movlw   0x30             	MOVLW	HIGH(_00241_DS_)
003082   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003084   0e00     movlw   0                	MOVLW	UPPER(_00241_DS_)
003086   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003088   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00308a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00241_DS_:
00308c   ef50     goto    0x30a0           	GOTO	_00199_DS_
00308e   f018
003090   ef82     goto    0x3104           	GOTO	_00203_DS_
003092   f018
003094   efb4     goto    0x3168           	GOTO	_00207_DS_
003096   f018
003098   efe6     goto    0x31cc           	GOTO	_00211_DS_
00309a   f018
00309c   ef18     goto    0x3230           	GOTO	_00215_DS_
00309e   f019
                                           _00199_DS_:
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
0030a0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0030a2   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0030a4   e017     bz      0x30d4           	BZ	_00201_DS_
0030a6   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0030a8   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0030aa   6e04     movwf   0x4, 0           	MOVWF	r0x04
0030ac   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0030ae   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0030b0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0030b2   6a06     clrf    0x6, 0           	CLRF	r0x06
0030b4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0030b6   6806     setf    0x6, 0           	SETF	r0x06
0030b8   0e00     movlw   0                	MOVLW	UPPER(_mask)
0030ba   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0030bc   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0030be   fff6
0030c0   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0030c2   fff7
0030c4   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0030c6   fff8
0030c8   0009     tblrd   *+               	TBLRD*+	
0030ca   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0030cc   f004
0030ce   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0030d0   1293     iorwf   0x93, 0x1, 0     	IORWF	_TRISB, F
0030d2   d0dd     bra     0x328e           	BRA	_00220_DS_
                                           _00201_DS_:
                                           ;	.line	74; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISB=TRISB & (255-mask[input]);
0030d4   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0030d6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0030d8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0030da   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0030dc   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0030de   6e05     movwf   0x5, 0           	MOVWF	r0x05
0030e0   6a06     clrf    0x6, 0           	CLRF	r0x06
0030e2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0030e4   6806     setf    0x6, 0           	SETF	r0x06
0030e6   0e00     movlw   0                	MOVLW	UPPER(_mask)
0030e8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0030ea   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0030ec   fff6
0030ee   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0030f0   fff7
0030f2   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0030f4   fff8
0030f6   0009     tblrd   *+               	TBLRD*+	
0030f8   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0030fa   f004
0030fc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0030fe   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003100   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
003102   d0c5     bra     0x328e           	BRA	_00220_DS_
                                           _00203_DS_:
                                           ;	.line	76; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
003104   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003106   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
003108   e017     bz      0x3138           	BZ	_00205_DS_
00310a   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00310c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00310e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003110   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003112   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003114   6e05     movwf   0x5, 0           	MOVWF	r0x05
003116   6a06     clrf    0x6, 0           	CLRF	r0x06
003118   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00311a   6806     setf    0x6, 0           	SETF	r0x06
00311c   0e00     movlw   0                	MOVLW	UPPER(_mask)
00311e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003120   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003122   fff6
003124   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003126   fff7
003128   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00312a   fff8
00312c   0009     tblrd   *+               	TBLRD*+	
00312e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003130   f004
003132   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003134   1294     iorwf   0x94, 0x1, 0     	IORWF	_TRISC, F
003136   d0ab     bra     0x328e           	BRA	_00220_DS_
                                           _00205_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISC=TRISC & (255-mask[input]);
003138   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00313a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00313c   6e04     movwf   0x4, 0           	MOVWF	r0x04
00313e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003140   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003142   6e05     movwf   0x5, 0           	MOVWF	r0x05
003144   6a06     clrf    0x6, 0           	CLRF	r0x06
003146   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003148   6806     setf    0x6, 0           	SETF	r0x06
00314a   0e00     movlw   0                	MOVLW	UPPER(_mask)
00314c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00314e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003150   fff6
003152   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003154   fff7
003156   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
003158   fff8
00315a   0009     tblrd   *+               	TBLRD*+	
00315c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00315e   f004
003160   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003162   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003164   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
003166   d093     bra     0x328e           	BRA	_00220_DS_
                                           _00207_DS_:
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
003168   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00316a   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00316c   e017     bz      0x319c           	BZ	_00209_DS_
00316e   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003170   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003172   6e04     movwf   0x4, 0           	MOVWF	r0x04
003174   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003176   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003178   6e05     movwf   0x5, 0           	MOVWF	r0x05
00317a   6a06     clrf    0x6, 0           	CLRF	r0x06
00317c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00317e   6806     setf    0x6, 0           	SETF	r0x06
003180   0e00     movlw   0                	MOVLW	UPPER(_mask)
003182   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003184   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003186   fff6
003188   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00318a   fff7
00318c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00318e   fff8
003190   0009     tblrd   *+               	TBLRD*+	
003192   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003194   f004
003196   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003198   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
00319a   d079     bra     0x328e           	BRA	_00220_DS_
                                           _00209_DS_:
                                           ;	.line	80; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISA=TRISA & (255-mask[input]);
00319c   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00319e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0031a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0031a2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0031a4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0031a6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0031a8   6a06     clrf    0x6, 0           	CLRF	r0x06
0031aa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0031ac   6806     setf    0x6, 0           	SETF	r0x06
0031ae   0e00     movlw   0                	MOVLW	UPPER(_mask)
0031b0   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0031b2   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0031b4   fff6
0031b6   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0031b8   fff7
0031ba   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0031bc   fff8
0031be   0009     tblrd   *+               	TBLRD*+	
0031c0   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0031c2   f004
0031c4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0031c6   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0031c8   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0031ca   d061     bra     0x328e           	BRA	_00220_DS_
                                           _00211_DS_:
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
0031cc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0031ce   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0031d0   e017     bz      0x3200           	BZ	_00213_DS_
0031d2   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0031d4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0031d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0031d8   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0031da   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0031dc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0031de   6a06     clrf    0x6, 0           	CLRF	r0x06
0031e0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0031e2   6806     setf    0x6, 0           	SETF	r0x06
0031e4   0e00     movlw   0                	MOVLW	UPPER(_mask)
0031e6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0031e8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0031ea   fff6
0031ec   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0031ee   fff7
0031f0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0031f2   fff8
0031f4   0009     tblrd   *+               	TBLRD*+	
0031f6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0031f8   f004
0031fa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0031fc   1295     iorwf   0x95, 0x1, 0     	IORWF	_TRISD, F
0031fe   d047     bra     0x328e           	BRA	_00220_DS_
                                           _00213_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISD=TRISD & (255-mask[input]);
003200   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003202   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003204   6e04     movwf   0x4, 0           	MOVWF	r0x04
003206   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003208   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00320a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00320c   6a06     clrf    0x6, 0           	CLRF	r0x06
00320e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003210   6806     setf    0x6, 0           	SETF	r0x06
003212   0e00     movlw   0                	MOVLW	UPPER(_mask)
003214   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003216   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003218   fff6
00321a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00321c   fff7
00321e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
003220   fff8
003222   0009     tblrd   *+               	TBLRD*+	
003224   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003226   f004
003228   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00322a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00322c   1695     andwf   0x95, 0x1, 0     	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
00322e   d02f     bra     0x328e           	BRA	_00220_DS_
                                           _00215_DS_:
                                           ;	.line	86; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
003230   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003232   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
003234   e017     bz      0x3264           	BZ	_00217_DS_
003236   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003238   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00323a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00323c   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00323e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003240   6e03     movwf   0x3, 0           	MOVWF	r0x03
003242   6a04     clrf    0x4, 0           	CLRF	r0x04
003244   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003246   6804     setf    0x4, 0           	SETF	r0x04
003248   0e00     movlw   0                	MOVLW	UPPER(_mask)
00324a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00324c   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
00324e   fff6
003250   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
003252   fff7
003254   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
003256   fff8
003258   0009     tblrd   *+               	TBLRD*+	
00325a   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00325c   f002
00325e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003260   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
003262   d015     bra     0x328e           	BRA	_00220_DS_
                                           _00217_DS_:
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISE=TRISE & (255-mask[input]);
003264   6a02     clrf    0x2, 0           	CLRF	r0x02
003266   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003268   6802     setf    0x2, 0           	SETF	r0x02
00326a   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00326c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00326e   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003270   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003272   0e00     movlw   0                	MOVLW	UPPER(_mask)
003274   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003276   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003278   fff6
00327a   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
00327c   fff7
00327e   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003280   fff8
003282   0009     tblrd   *+               	TBLRD*+	
003284   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
003286   f000
003288   5000     movf    0, 0, 0          	MOVF	r0x00, W
00328a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00328c   1696     andwf   0x96, 0x1, 0     	ANDWF	_TRISE, F
                                           _00220_DS_:
                                           ;	.line	90; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
00328e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003290   f006
003292   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003294   f005
003296   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003298   f004
00329a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00329c   f003
00329e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0032a0   f002
0032a2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0032a4   f001
0032a6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0032a8   f000
0032aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0032ac   ffd9
0032ae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/.icaro/firmware/tmp/digitalw.c	int digitalread(int input)
00355e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003560   ffe5
003562   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003564   ffd9
003566   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003568   ffe5
00356a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00356c   ffe5
00356e   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003570   ffe5
003572   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003574   ffe5
003576   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003578   ffe5
00357a   0e02     movlw   0x2              	MOVLW	0x02
00357c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00357e   f000
003580   0e03     movlw   0x3              	MOVLW	0x03
003582   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003584   f001
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
003586   0eb6     movlw   0xb6             	MOVLW	LOW(_port)
003588   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00358a   6e02     movwf   0x2, 0           	MOVWF	r0x02
00358c   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
00358e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003590   6e03     movwf   0x3, 0           	MOVWF	r0x03
003592   6a04     clrf    0x4, 0           	CLRF	r0x04
003594   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003596   6804     setf    0x4, 0           	SETF	r0x04
003598   0e00     movlw   0                	MOVLW	UPPER(_port)
00359a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00359c   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
00359e   fff6
0035a0   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
0035a2   fff7
0035a4   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
0035a6   fff8
0035a8   0009     tblrd   *+               	TBLRD*+	
0035aa   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
0035ac   f002
0035ae   0e05     movlw   0x5              	MOVLW	0x05
0035b0   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
0035b2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0035b4   d0ad     bra     0x3710           	BRA	_00172_DS_
0035b6   6afa     clrf    0xfa, 0          	CLRF	PCLATH
0035b8   6afb     clrf    0xfb, 0          	CLRF	PCLATU
0035ba   3402     rlcf    0x2, 0, 0        	RLCF	r0x02, W
0035bc   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0035be   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
0035c0   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
0035c2   0bfc     andlw   0xfc             	ANDLW	0xfc
0035c4   0fd4     addlw   0xd4             	ADDLW	LOW(_00194_DS_)
0035c6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0035c8   0e35     movlw   0x35             	MOVLW	HIGH(_00194_DS_)
0035ca   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
0035cc   0e00     movlw   0                	MOVLW	UPPER(_00194_DS_)
0035ce   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
0035d0   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
0035d2   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00194_DS_:
0035d4   eff4     goto    0x35e8           	GOTO	_00152_DS_
0035d6   f01a
0035d8   ef12     goto    0x3624           	GOTO	_00156_DS_
0035da   f01b
0035dc   ef30     goto    0x3660           	GOTO	_00160_DS_
0035de   f01b
0035e0   ef4e     goto    0x369c           	GOTO	_00164_DS_
0035e2   f01b
0035e4   ef6c     goto    0x36d8           	GOTO	_00168_DS_
0035e6   f01b
                                           _00152_DS_:
                                           ;	.line	48; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
0035e8   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0035ea   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0035ec   6e02     movwf   0x2, 0           	MOVWF	r0x02
0035ee   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0035f0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0035f2   6e03     movwf   0x3, 0           	MOVWF	r0x03
0035f4   6a04     clrf    0x4, 0           	CLRF	r0x04
0035f6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0035f8   6804     setf    0x4, 0           	SETF	r0x04
0035fa   0e00     movlw   0                	MOVLW	UPPER(_mask)
0035fc   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0035fe   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
003600   fff6
003602   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
003604   fff7
003606   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
003608   fff8
00360a   0009     tblrd   *+               	TBLRD*+	
00360c   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00360e   f002
003610   5081     movf    0x81, 0, 0       	MOVF	_PORTB, W
003612   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
003614   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003616   e003     bz      0x361e           	BZ	_00154_DS_
003618   6af3     clrf    0xf3, 0          	CLRF	PRODL
00361a   0e01     movlw   0x1              	MOVLW	0x01
00361c   d07b     bra     0x3714           	BRA	_00173_DS_
                                           _00154_DS_:
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
00361e   6af3     clrf    0xf3, 0          	CLRF	PRODL
003620   6ae8     clrf    0xe8, 0          	CLRF	WREG
003622   d078     bra     0x3714           	BRA	_00173_DS_
                                           _00156_DS_:
                                           ;	.line	51; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
003624   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003626   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003628   6e02     movwf   0x2, 0           	MOVWF	r0x02
00362a   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00362c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00362e   6e03     movwf   0x3, 0           	MOVWF	r0x03
003630   6a04     clrf    0x4, 0           	CLRF	r0x04
003632   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003634   6804     setf    0x4, 0           	SETF	r0x04
003636   0e00     movlw   0                	MOVLW	UPPER(_mask)
003638   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00363a   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
00363c   fff6
00363e   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
003640   fff7
003642   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
003644   fff8
003646   0009     tblrd   *+               	TBLRD*+	
003648   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00364a   f002
00364c   5082     movf    0x82, 0, 0       	MOVF	_PORTC, W
00364e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
003650   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003652   e003     bz      0x365a           	BZ	_00158_DS_
003654   6af3     clrf    0xf3, 0          	CLRF	PRODL
003656   0e01     movlw   0x1              	MOVLW	0x01
003658   d05d     bra     0x3714           	BRA	_00173_DS_
                                           _00158_DS_:
                                           ;	.line	52; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
00365a   6af3     clrf    0xf3, 0          	CLRF	PRODL
00365c   6ae8     clrf    0xe8, 0          	CLRF	WREG
00365e   d05a     bra     0x3714           	BRA	_00173_DS_
                                           _00160_DS_:
                                           ;	.line	54; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
003660   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003662   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003664   6e02     movwf   0x2, 0           	MOVWF	r0x02
003666   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003668   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00366a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00366c   6a04     clrf    0x4, 0           	CLRF	r0x04
00366e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003670   6804     setf    0x4, 0           	SETF	r0x04
003672   0e00     movlw   0                	MOVLW	UPPER(_mask)
003674   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003676   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
003678   fff6
00367a   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
00367c   fff7
00367e   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
003680   fff8
003682   0009     tblrd   *+               	TBLRD*+	
003684   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
003686   f002
003688   5080     movf    0x80, 0, 0       	MOVF	_PORTA, W
00368a   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
00368c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00368e   e003     bz      0x3696           	BZ	_00162_DS_
003690   6af3     clrf    0xf3, 0          	CLRF	PRODL
003692   0e01     movlw   0x1              	MOVLW	0x01
003694   d03f     bra     0x3714           	BRA	_00173_DS_
                                           _00162_DS_:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
003696   6af3     clrf    0xf3, 0          	CLRF	PRODL
003698   6ae8     clrf    0xe8, 0          	CLRF	WREG
00369a   d03c     bra     0x3714           	BRA	_00173_DS_
                                           _00164_DS_:
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
00369c   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00369e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0036a0   6e02     movwf   0x2, 0           	MOVWF	r0x02
0036a2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0036a4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0036a6   6e03     movwf   0x3, 0           	MOVWF	r0x03
0036a8   6a04     clrf    0x4, 0           	CLRF	r0x04
0036aa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0036ac   6804     setf    0x4, 0           	SETF	r0x04
0036ae   0e00     movlw   0                	MOVLW	UPPER(_mask)
0036b0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0036b2   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
0036b4   fff6
0036b6   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
0036b8   fff7
0036ba   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
0036bc   fff8
0036be   0009     tblrd   *+               	TBLRD*+	
0036c0   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
0036c2   f002
0036c4   5083     movf    0x83, 0, 0       	MOVF	_PORTD, W
0036c6   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
0036c8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0036ca   e003     bz      0x36d2           	BZ	_00166_DS_
0036cc   6af3     clrf    0xf3, 0          	CLRF	PRODL
0036ce   0e01     movlw   0x1              	MOVLW	0x01
0036d0   d021     bra     0x3714           	BRA	_00173_DS_
                                           _00166_DS_:
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
0036d2   6af3     clrf    0xf3, 0          	CLRF	PRODL
0036d4   6ae8     clrf    0xe8, 0          	CLRF	WREG
0036d6   d01e     bra     0x3714           	BRA	_00173_DS_
                                           _00168_DS_:
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
0036d8   6a02     clrf    0x2, 0           	CLRF	r0x02
0036da   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0036dc   6802     setf    0x2, 0           	SETF	r0x02
0036de   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0036e0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0036e2   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0036e4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0036e6   0e00     movlw   0                	MOVLW	UPPER(_mask)
0036e8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0036ea   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
0036ec   fff6
0036ee   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
0036f0   fff7
0036f2   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
0036f4   fff8
0036f6   0009     tblrd   *+               	TBLRD*+	
0036f8   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
0036fa   f000
0036fc   5084     movf    0x84, 0, 0       	MOVF	_PORTE, W
0036fe   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
003700   5000     movf    0, 0, 0          	MOVF	r0x00, W
003702   e003     bz      0x370a           	BZ	_00170_DS_
003704   6af3     clrf    0xf3, 0          	CLRF	PRODL
003706   0e01     movlw   0x1              	MOVLW	0x01
003708   d005     bra     0x3714           	BRA	_00173_DS_
                                           _00170_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
00370a   6af3     clrf    0xf3, 0          	CLRF	PRODL
00370c   6ae8     clrf    0xe8, 0          	CLRF	WREG
00370e   d002     bra     0x3714           	BRA	_00173_DS_
                                           _00172_DS_:
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/digitalw.c	return (0);
003710   6af3     clrf    0xf3, 0          	CLRF	PRODL
003712   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00173_DS_:
003714   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003716   f004
003718   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00371a   f003
00371c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00371e   f002
003720   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003722   f001
003724   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003726   f000
003728   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00372a   ffd9
00372c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_pilas_engine__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/digitalw.c	void digitalwrite(int output,int state)
0032b0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0032b2   ffe5
0032b4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0032b6   ffd9
0032b8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0032ba   ffe5
0032bc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0032be   ffe5
0032c0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0032c2   ffe5
0032c4   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0032c6   ffe5
0032c8   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0032ca   ffe5
0032cc   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0032ce   ffe5
0032d0   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0032d2   ffe5
0032d4   0e02     movlw   0x2              	MOVLW	0x02
0032d6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0032d8   f000
0032da   0e03     movlw   0x3              	MOVLW	0x03
0032dc   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0032de   f001
0032e0   0e04     movlw   0x4              	MOVLW	0x04
0032e2   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0032e4   f002
0032e6   0e05     movlw   0x5              	MOVLW	0x05
0032e8   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0032ea   f003
                                           ;	.line	22; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[output])
0032ec   0eb6     movlw   0xb6             	MOVLW	LOW(_port)
0032ee   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0032f0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0032f2   0e2f     movlw   0x2f             	MOVLW	HIGH(_port)
0032f4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0032f6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0032f8   6a06     clrf    0x6, 0           	CLRF	r0x06
0032fa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0032fc   6806     setf    0x6, 0           	SETF	r0x06
0032fe   0e00     movlw   0                	MOVLW	UPPER(_port)
003300   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003302   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003304   fff6
003306   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003308   fff7
00330a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00330c   fff8
00330e   0009     tblrd   *+               	TBLRD*+	
003310   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003312   f004
003314   0e05     movlw   0x5              	MOVLW	0x05
003316   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003318   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00331a   d110     bra     0x353c           	BRA	_00126_DS_
00331c   6afa     clrf    0xfa, 0          	CLRF	PCLATH
00331e   6afb     clrf    0xfb, 0          	CLRF	PCLATU
003320   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
003322   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003324   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
003326   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
003328   0bfc     andlw   0xfc             	ANDLW	0xfc
00332a   0f3a     addlw   0x3a             	ADDLW	LOW(_00147_DS_)
00332c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00332e   0e33     movlw   0x33             	MOVLW	HIGH(_00147_DS_)
003330   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
003332   0e00     movlw   0                	MOVLW	UPPER(_00147_DS_)
003334   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
003336   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
003338   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00147_DS_:
00333a   efa7     goto    0x334e           	GOTO	_00105_DS_
00333c   f019
00333e   efd9     goto    0x33b2           	GOTO	_00109_DS_
003340   f019
003342   ef0b     goto    0x3416           	GOTO	_00113_DS_
003344   f01a
003346   ef3d     goto    0x347a           	GOTO	_00117_DS_
003348   f01a
00334a   ef6f     goto    0x34de           	GOTO	_00121_DS_
00334c   f01a
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
00334e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003350   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
003352   e017     bz      0x3382           	BZ	_00107_DS_
003354   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003356   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003358   6e04     movwf   0x4, 0           	MOVWF	r0x04
00335a   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00335c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00335e   6e05     movwf   0x5, 0           	MOVWF	r0x05
003360   6a06     clrf    0x6, 0           	CLRF	r0x06
003362   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003364   6806     setf    0x6, 0           	SETF	r0x06
003366   0e00     movlw   0                	MOVLW	UPPER(_mask)
003368   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00336a   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00336c   fff6
00336e   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003370   fff7
003372   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
003374   fff8
003376   0009     tblrd   *+               	TBLRD*+	
003378   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00337a   f004
00337c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00337e   1281     iorwf   0x81, 0x1, 0     	IORWF	_PORTB, F
003380   d0dd     bra     0x353c           	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTB=PORTB & (255-mask[output]);
003382   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003384   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003386   6e04     movwf   0x4, 0           	MOVWF	r0x04
003388   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00338a   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00338c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00338e   6a06     clrf    0x6, 0           	CLRF	r0x06
003390   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003392   6806     setf    0x6, 0           	SETF	r0x06
003394   0e00     movlw   0                	MOVLW	UPPER(_mask)
003396   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003398   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00339a   fff6
00339c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00339e   fff7
0033a0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0033a2   fff8
0033a4   0009     tblrd   *+               	TBLRD*+	
0033a6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0033a8   f004
0033aa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0033ac   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0033ae   1681     andwf   0x81, 0x1, 0     	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0033b0   d0c5     bra     0x353c           	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
0033b2   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0033b4   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0033b6   e017     bz      0x33e6           	BZ	_00111_DS_
0033b8   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0033ba   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0033bc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0033be   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0033c0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0033c2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0033c4   6a06     clrf    0x6, 0           	CLRF	r0x06
0033c6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0033c8   6806     setf    0x6, 0           	SETF	r0x06
0033ca   0e00     movlw   0                	MOVLW	UPPER(_mask)
0033cc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0033ce   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0033d0   fff6
0033d2   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0033d4   fff7
0033d6   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0033d8   fff8
0033da   0009     tblrd   *+               	TBLRD*+	
0033dc   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0033de   f004
0033e0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0033e2   1282     iorwf   0x82, 0x1, 0     	IORWF	_PORTC, F
0033e4   d0ab     bra     0x353c           	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTC=PORTC & (255-mask[output]);
0033e6   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0033e8   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0033ea   6e04     movwf   0x4, 0           	MOVWF	r0x04
0033ec   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0033ee   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0033f0   6e05     movwf   0x5, 0           	MOVWF	r0x05
0033f2   6a06     clrf    0x6, 0           	CLRF	r0x06
0033f4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0033f6   6806     setf    0x6, 0           	SETF	r0x06
0033f8   0e00     movlw   0                	MOVLW	UPPER(_mask)
0033fa   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0033fc   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0033fe   fff6
003400   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003402   fff7
003404   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
003406   fff8
003408   0009     tblrd   *+               	TBLRD*+	
00340a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00340c   f004
00340e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003410   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003412   1682     andwf   0x82, 0x1, 0     	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
003414   d093     bra     0x353c           	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
003416   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003418   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00341a   e017     bz      0x344a           	BZ	_00115_DS_
00341c   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00341e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003420   6e04     movwf   0x4, 0           	MOVWF	r0x04
003422   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003424   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003426   6e05     movwf   0x5, 0           	MOVWF	r0x05
003428   6a06     clrf    0x6, 0           	CLRF	r0x06
00342a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00342c   6806     setf    0x6, 0           	SETF	r0x06
00342e   0e00     movlw   0                	MOVLW	UPPER(_mask)
003430   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003432   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003434   fff6
003436   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003438   fff7
00343a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00343c   fff8
00343e   0009     tblrd   *+               	TBLRD*+	
003440   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003442   f004
003444   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003446   1280     iorwf   0x80, 0x1, 0     	IORWF	_PORTA, F
003448   d079     bra     0x353c           	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTA=PORTA & (255-mask[output]);
00344a   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00344c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00344e   6e04     movwf   0x4, 0           	MOVWF	r0x04
003450   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003452   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
003454   6e05     movwf   0x5, 0           	MOVWF	r0x05
003456   6a06     clrf    0x6, 0           	CLRF	r0x06
003458   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00345a   6806     setf    0x6, 0           	SETF	r0x06
00345c   0e00     movlw   0                	MOVLW	UPPER(_mask)
00345e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003460   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003462   fff6
003464   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
003466   fff7
003468   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00346a   fff8
00346c   0009     tblrd   *+               	TBLRD*+	
00346e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003470   f004
003472   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003474   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003476   1680     andwf   0x80, 0x1, 0     	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
003478   d061     bra     0x353c           	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
00347a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00347c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00347e   e017     bz      0x34ae           	BZ	_00119_DS_
003480   0e98     movlw   0x98             	MOVLW	LOW(_mask)
003482   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003484   6e04     movwf   0x4, 0           	MOVWF	r0x04
003486   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
003488   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00348a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00348c   6a06     clrf    0x6, 0           	CLRF	r0x06
00348e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003490   6806     setf    0x6, 0           	SETF	r0x06
003492   0e00     movlw   0                	MOVLW	UPPER(_mask)
003494   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
003496   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
003498   fff6
00349a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00349c   fff7
00349e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0034a0   fff8
0034a2   0009     tblrd   *+               	TBLRD*+	
0034a4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0034a6   f004
0034a8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0034aa   1283     iorwf   0x83, 0x1, 0     	IORWF	_PORTD, F
0034ac   d047     bra     0x353c           	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTD=PORTD & (255-mask[output]);
0034ae   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0034b0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0034b2   6e04     movwf   0x4, 0           	MOVWF	r0x04
0034b4   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0034b6   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0034b8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0034ba   6a06     clrf    0x6, 0           	CLRF	r0x06
0034bc   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0034be   6806     setf    0x6, 0           	SETF	r0x06
0034c0   0e00     movlw   0                	MOVLW	UPPER(_mask)
0034c2   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0034c4   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0034c6   fff6
0034c8   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0034ca   fff7
0034cc   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0034ce   fff8
0034d0   0009     tblrd   *+               	TBLRD*+	
0034d2   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0034d4   f004
0034d6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0034d8   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0034da   1683     andwf   0x83, 0x1, 0     	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0034dc   d02f     bra     0x353c           	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
0034de   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0034e0   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0034e2   e017     bz      0x3512           	BZ	_00123_DS_
0034e4   0e98     movlw   0x98             	MOVLW	LOW(_mask)
0034e6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0034e8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0034ea   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
0034ec   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0034ee   6e03     movwf   0x3, 0           	MOVWF	r0x03
0034f0   6a04     clrf    0x4, 0           	CLRF	r0x04
0034f2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0034f4   6804     setf    0x4, 0           	SETF	r0x04
0034f6   0e00     movlw   0                	MOVLW	UPPER(_mask)
0034f8   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0034fa   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
0034fc   fff6
0034fe   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
003500   fff7
003502   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
003504   fff8
003506   0009     tblrd   *+               	TBLRD*+	
003508   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
00350a   f002
00350c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00350e   1284     iorwf   0x84, 0x1, 0     	IORWF	_PORTE, F
003510   d015     bra     0x353c           	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTE=PORTE & (255-mask[output]);
003512   6a02     clrf    0x2, 0           	CLRF	r0x02
003514   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
003516   6802     setf    0x2, 0           	SETF	r0x02
003518   0e98     movlw   0x98             	MOVLW	LOW(_mask)
00351a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00351c   0e2f     movlw   0x2f             	MOVLW	HIGH(_mask)
00351e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003520   0e00     movlw   0                	MOVLW	UPPER(_mask)
003522   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003524   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003526   fff6
003528   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
00352a   fff7
00352c   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
00352e   fff8
003530   0009     tblrd   *+               	TBLRD*+	
003532   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
003534   f000
003536   5000     movf    0, 0, 0          	MOVF	r0x00, W
003538   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00353a   1684     andwf   0x84, 0x1, 0     	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
00353c   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00353e   f006
003540   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003542   f005
003544   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003546   f004
003548   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00354a   f003
00354c   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00354e   f002
003550   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003552   f001
003554   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003556   f000
003558   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00355a   ffd9
00355c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
002f98   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002f9a   0804     sublw   0x4              
002f9c   2010     addwfc  0x10, 0, 0       
002f9e   8040     bsf     0x40, 0, 0       
002fa0   8040     bsf     0x40, 0, 0       
002fa2   0201     mulwf   0x1, 0           
002fa4   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002fa6   0402     decf    0x2, 0, 0        
002fa8   2008     addwfc  0x8, 0, 0        
002faa   0201     mulwf   0x1, 0           
002fac   0104     movlb   0x4              
002fae   0402     decf    0x2, 0, 0        
002fb0   1008     iorwf   0x8, 0, 0        	DB	0x08, 0x10, 0x20, 0x40, 0x80
002fb2   4020     rrncf   0x20, 0, 0       
002fb4   0080     dw      0x80             
                                           ; ; Starting pCode block for Ival
                                           _port:
002fb6   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
002fb8   0000     nop                      
002fba   0000     nop                      
002fbc   0000     nop                      
002fbe   0101     movlb   0x1              
002fc0   0101     movlb   0x1              
002fc2   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002fc4   0202     mulwf   0x2, 0           
002fc6   0202     mulwf   0x2, 0           
002fc8   0404     decf    0x4, 0, 0        
002fca   0304     mulwf   0x4, 0x1         
002fcc   0303     mulwf   0x3, 0x1         
002fce   0303     mulwf   0x3, 0x1         	DB	0x03, 0x03, 0x03, 0x03, 0x03
002fd0   0303     mulwf   0x3, 0x1         
002fd2   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002fd4   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002fd6   0804     sublw   0x4              
002fd8   2010     addwfc  0x10, 0, 0       
002fda   8040     bsf     0x40, 0, 0       
002fdc   8040     bsf     0x40, 0, 0       
002fde   0201     mulwf   0x1, 0           
002fe0   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002fe2   0402     decf    0x2, 0, 0        
002fe4   2008     addwfc  0x8, 0, 0        
                                           ; ; Starting pCode block
                                           ___str_0:
002fe6   2520     addwf   0x20, 0, 0x1     	DB	0x20, 0x25, 0x69, 0x2c, 0x25, 0x69, 0x2c, 0x25, 0x69, 0x2c, 0x25, 0x69
002fe8   2c69     decfsz  0x69, 0, 0       
002fea   6925     setf    0x25, 0x1        
002fec   252c     addwf   0x2c, 0, 0x1     
002fee   2c69     decfsz  0x69, 0, 0       
002ff0   6925     setf    0x25, 0x1        
002ff2   252c     addwf   0x2c, 0, 0x1     	DB	0x2c, 0x25, 0x69, 0x2c, 0x25, 0x69, 0x2c, 0x25, 0x69, 0x2c, 0x25, 0x69
002ff4   2c69     decfsz  0x69, 0, 0       
002ff6   6925     setf    0x25, 0x1        
002ff8   252c     addwf   0x2c, 0, 0x1     
002ffa   2c69     decfsz  0x69, 0, 0       
002ffc   6925     setf    0x25, 0x1        
002ffe   0d0a     mullw   0xa              	DB	0x0a, 0x0d, 0x00
003000   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 6708 (0x1a34) bytes ( 5.12%)
                                           ;           	 3354 (0x0d1a) words
                                           ; udata size:	  393 (0x0189) bytes (21.93%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
