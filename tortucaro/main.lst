gplink-0.14.3 #861 (Nov  5 2012)
Copyright (c) 1998-2012 gputils project
Listing File Generated: 12-15-2012  14:48:56
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.1.0 #7066 (Feb 26 2012) (Linux)
                                           ; This file was generated Sat Dec 15 14:48:55 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _i
                                           	global _loopvar
                                           	global _hidRxLen
                                           	global _hidProtocol
                                           	global _hidIdleRate
                                           	global _HIDPostProcess
                                           	global _deviceAddress
                                           	global _EnableUSBModule
                                           	global _ProcessUSBTransactions
                                           	global _ProcessCDCRequest
                                           	global _CDCgets
                                           	global _CDCInitEndpoint
                                           	global _CONTROL_LINE
                                           	global _deviceState
                                           	global _remoteWakeup
                                           	global _selfPowered
                                           	global _currentConfiguration
                                           	global _ctrlTransferStage
                                           	global _requestHandled
                                           	global _outPtr
                                           	global _inPtr
                                           	global _wCount
                                           	global _ep_bdt
                                           	global _SetupPacket
                                           	global _controlTransferBuffer
                                           	global _CDCControlBuffer
                                           	global _CDCRxBuffer
                                           	global _CDCTxBuffer
                                           	global _line_config
                                           	global _zlp
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _receivedbyte
                                           	global _receivedbyte2
                                           	global _rxstr
                                           	global _rxstr2
                                           	global _valor
                                           	global _ProcessStandardRequest
                                           	global _InDataStage
                                           	global _OutDataStage
                                           	global _SetupStage
                                           	global _WaitForSetupStage
                                           	global _ProcessControlTransfer
                                           	global _UnSuspend
                                           	global _StartOfFrame
                                           	global _Stall
                                           	global _Suspend
                                           	global _BusReset
                                           	global _CDCputs
                                           	global _Delayms
                                           	global _Delayus
                                           	global _init_CDC
                                           	global _analog_init
                                           	global _analogread
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _l293d
                                           	global _sensor
                                           	global _leer
                                           	global _motors
                                           	global _setup
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _libdevice_descriptor
                                           	global _libconfiguration_descriptor
                                           	global _libstring_descriptor
                                           	global _servomasks
                                           	global _mask
                                           	global _port
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget1
                                           	extern __gptrput1
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           	extern __mulint
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _CONTROL_LINE	db	0x00
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_main_0	udata
                                           _deviceAddress	res	1
                                           
                                           udata_main_1	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_main_2	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_main_3	udata
                                           _hidProtocol	res	1
                                           
                                           udata_main_4	udata
                                           _hidRxLen	res	1
                                           
                                           udata_main_5	udata
                                           _loopvar	res	1
                                           
                                           udata_main_6	udata
                                           _i	res	1
                                           
                                           udata_main_7	udata
                                           _requestHandled	res	1
                                           
                                           udata_main_8	udata
                                           _outPtr	res	3
                                           
                                           udata_main_9	udata
                                           _wCount	res	2
                                           
                                           udata_main_10	udata
                                           _inPtr	res	3
                                           
                                           udata_main_11	udata
                                           _selfPowered	res	1
                                           
                                           udata_main_12	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_main_13	udata
                                           _deviceState	res	1
                                           
                                           udata_main_14	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_main_15	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_main_16	udata
                                           _line_config	res	7
                                           
                                           udata_main_17	udata
                                           _zlp	res	8
                                           
                                           udata_main_18	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_main_19	udata
                                           _servovalues	res	18
                                           
                                           udata_main_20	udata
                                           _timingindex	res	1
                                           
                                           udata_main_21	udata
                                           _timings	res	72
                                           
                                           udata_main_22	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           udata_main_23	udata
                                           _receivedbyte2	res	1
                                           
                                           udata_main_24	udata
                                           _receivedbyte	res	1
                                           
                                           
                                           ustat_main_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tortucaro/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff   0xfe8, 0xfe5     	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tortucaro/main.c	if(PIR2bits.USBIF)
002044   aaa1     btfss   0xa1, 0x5, 0     	BTFSS	_PIR2bits, 5
002046   d006     bra     0x2054           	BRA	_01250_DS_
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tortucaro/main.c	ProcessUSBTransactions();
002048   ec66     call    0x44cc, 0        	CALL	_ProcessUSBTransactions
00204a   f022
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tortucaro/main.c	UIRbits.SOFIF = 0;
00204c   9c68     bcf     0x68, 0x6, 0     	BCF	_UIRbits, 6
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tortucaro/main.c	UIRbits.URSTIF = 0;
00204e   9068     bcf     0x68, 0, 0       	BCF	_UIRbits, 0
                                           ;	.line	104; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIR2bits.USBIF = 0;
002050   9aa1     bcf     0xa1, 0x5, 0     	BCF	_PIR2bits, 5
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tortucaro/main.c	UEIR = 0;
002052   6a6a     clrf    0x6a, 0          	CLRF	_UEIR
                                           _01250_DS_:
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tortucaro/main.c	servos_interrupt();
002054   ec60     call    0x46c0, 0        	CALL	_servos_interrupt
002056   f023
002058   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
00205a   fffb
00205c   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00205e   fffa
002060   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002062   ffea
002064   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002066   ffe9
002068   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
00206a   fff4
00206c   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00206e   fff3
002070   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002072   ffe0
002074   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002076   ffd8
002078   cfe4     movff   0xfe4, 0xfe8     	MOVFF	PREINC1, WREG
00207a   ffe8
00207c   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tortucaro/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff   0xfe8, 0xfe5     	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tortucaro/main.c	}
004024   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff   0xfe4, 0xfe8     	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie  0                	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE1=0;
004846   6a9d     clrf    0x9d, 0          	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE2=0;
004848   6aa0     clrf    0xa0, 0          	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tortucaro/main.c	ADCON1=0x0F;
00484a   0e0f     movlw   0xf              	MOVLW	0x0f
00484c   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tortucaro/main.c	setup();
00484e   ec28     call    0x4450, 0        	CALL	_setup
004850   f022
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tortucaro/main.c	analog_init();
004852   ec75     call    0x48ea, 0        	CALL	_analog_init
004854   f024
                                           ;	.line	67; /home/valentin/github/icaro-bloques/tortucaro/main.c	servos_init();
004856   ecd5     call    0x3faa, 0        	CALL	_servos_init
004858   f01f
                                           ;	.line	70; /home/valentin/github/icaro-bloques/tortucaro/main.c	init_CDC();
00485a   ecd0     call    0x45a0, 0        	CALL	_init_CDC
00485c   f022
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE2bits.USBIE = 1;
00485e   8aa0     bsf     0xa0, 0x5, 0     	BSF	_PIE2bits, 5
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCON = 0xC0;      
004860   0ec0     movlw   0xc0             	MOVLW	0xc0
004862   6ef2     movwf   0xf2, 0          	MOVWF	_INTCON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCONbits.PEIE=1;
004864   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCONbits.GIE=1;
004866   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           _01242_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/tortucaro/main.c	loop();
004868   ec10     call    0x4220, 0        	CALL	_loop
00486a   f021
00486c   d7fd     bra     0x4868           	BRA	_01242_DS_
00486e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tortucaro/user.c	void loop()
004220   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004222   ffe5
004224   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004226   ffe5
004228   0102     movlb   0x2              	BANKSEL	_valor
                                           ;	.line	201; /home/valentin/github/icaro-bloques/tortucaro/user.c	PORTD=valor;
00422a   5188     movf    0x88, 0, 0x1     	MOVF	_valor, W, B
00422c   6e83     movwf   0x83, 0          	MOVWF	_PORTD
                                           ;	.line	202; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte=CDCgets(rxstr);
00422e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
004230   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004232   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr)
004234   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004236   0e08     movlw   0x8              	MOVLW	LOW(_rxstr)
004238   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00423a   ec13     call    0x3426, 0        	CALL	_CDCgets
00423c   f01a
00423e   0103     movlb   0x3              	BANKSEL	_receivedbyte
004240   6f1e     movwf   0x1e, 0x1        	MOVWF	_receivedbyte, B
004242   0e03     movlw   0x3              	MOVLW	0x03
004244   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr[receivedbyte]=0;
004246   0e08     movlw   0x8              	MOVLW	LOW(_rxstr)
                                           ; removed redundant BANKSEL
004248   251e     addwf   0x1e, 0, 0x1     	ADDWF	_receivedbyte, W, B
00424a   6e00     movwf   0, 0             	MOVWF	r0x00
00424c   6a01     clrf    0x1, 0           	CLRF	r0x01
00424e   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr)
004250   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004252   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004254   ffe9
004256   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004258   ffea
00425a   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte>0)
00425c   511e     movf    0x1e, 0, 0x1     	MOVF	_receivedbyte, W, B
00425e   e022     bz      0x42a4           	BZ	_01221_DS_
004260   0102     movlb   0x2              	BANKSEL	_rxstr
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='b')
004262   5108     movf    0x8, 0, 0x1      	MOVF	_rxstr, W, B
004264   0a62     xorlw   0x62             	XORLW	0x62
004266   e10c     bnz     0x4280           	BNZ	_01213_DS_
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tortucaro/user.c	CDCputs("icaro USB 01 \n",14);
004268   0e0e     movlw   0xe              	MOVLW	0x0e
00426a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00426c   0e00     movlw   0                	MOVLW	UPPER(__str_0)
00426e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004270   0e24     movlw   0x24             	MOVLW	HIGH(__str_0)
004272   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004274   0eb6     movlw   0xb6             	MOVLW	LOW(__str_0)
004276   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004278   eca2     call    0x3544, 0        	CALL	_CDCputs
00427a   f01a
00427c   0e04     movlw   0x4              	MOVLW	0x04
00427e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           _01213_DS_:
004280   0102     movlb   0x2              	BANKSEL	_rxstr
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='m')
004282   5108     movf    0x8, 0, 0x1      	MOVF	_rxstr, W, B
004284   0a6d     xorlw   0x6d             	XORLW	0x6d
004286   e102     bnz     0x428c           	BNZ	_01215_DS_
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tortucaro/user.c	motors();
004288   ec30     call    0x3660, 0        	CALL	_motors
00428a   f01b
                                           _01215_DS_:
00428c   0102     movlb   0x2              	BANKSEL	_rxstr
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='e')
00428e   5108     movf    0x8, 0, 0x1      	MOVF	_rxstr, W, B
004290   0a65     xorlw   0x65             	XORLW	0x65
004292   e102     bnz     0x4298           	BNZ	_01217_DS_
                                           ;	.line	218; /home/valentin/github/icaro-bloques/tortucaro/user.c	sensor();
004294   ecd4     call    0x3da8, 0        	CALL	_sensor
004296   f01e
                                           _01217_DS_:
004298   0102     movlb   0x2              	BANKSEL	_rxstr
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='l')
00429a   5108     movf    0x8, 0, 0x1      	MOVF	_rxstr, W, B
00429c   0a6c     xorlw   0x6c             	XORLW	0x6c
00429e   e102     bnz     0x42a4           	BNZ	_01221_DS_
                                           ;	.line	222; /home/valentin/github/icaro-bloques/tortucaro/user.c	l293d();
0042a0   ece6     call    0x43cc, 0        	CALL	_l293d
0042a2   f021
                                           _01221_DS_:
0042a4   0103     movlb   0x3              	BANKSEL	_receivedbyte
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte=0;
0042a6   6b1e     clrf    0x1e, 0x1        	CLRF	_receivedbyte, B
0042a8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0042aa   f001
0042ac   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0042ae   f000
0042b0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(25,OUTPUT);
004450   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004452   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004454   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004456   0e19     movlw   0x19             	MOVLW	0x19
004458   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00445a   ec42     call    0x2884, 0        	CALL	_pinmode
00445c   f014
00445e   0e04     movlw   0x4              	MOVLW	0x04
004460   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(26,OUTPUT);
004462   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004464   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004466   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004468   0e1a     movlw   0x1a             	MOVLW	0x1a
00446a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00446c   ec42     call    0x2884, 0        	CALL	_pinmode
00446e   f014
004470   0e04     movlw   0x4              	MOVLW	0x04
004472   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(27,OUTPUT);
004474   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004476   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004478   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00447a   0e1b     movlw   0x1b             	MOVLW	0x1b
00447c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00447e   ec42     call    0x2884, 0        	CALL	_pinmode
004480   f014
004482   0e04     movlw   0x4              	MOVLW	0x04
004484   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	188; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(28,OUTPUT);
004486   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004488   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00448a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00448c   0e1c     movlw   0x1c             	MOVLW	0x1c
00448e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
004490   ec42     call    0x2884, 0        	CALL	_pinmode
004492   f014
004494   0e04     movlw   0x4              	MOVLW	0x04
004496   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(8);
004498   0e08     movlw   0x8              	MOVLW	0x08
00449a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00449c   ecb6     call    0x396c, 0        	CALL	_ServoAttach
00449e   f01c
0044a0   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(9);
0044a2   0e09     movlw   0x9              	MOVLW	0x09
0044a4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0044a6   ecb6     call    0x396c, 0        	CALL	_ServoAttach
0044a8   f01c
0044aa   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(10);
0044ac   0e0a     movlw   0xa              	MOVLW	0x0a
0044ae   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0044b0   ecb6     call    0x396c, 0        	CALL	_ServoAttach
0044b2   f01c
0044b4   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
                                           ;	.line	192; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(11);
0044b6   0e0b     movlw   0xb              	MOVLW	0x0b
0044b8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0044ba   ecb6     call    0x396c, 0        	CALL	_ServoAttach
0044bc   f01c
0044be   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
                                           ;	.line	193; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(12);
0044c0   0e0c     movlw   0xc              	MOVLW	0x0c
0044c2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0044c4   ecb6     call    0x396c, 0        	CALL	_ServoAttach
0044c6   f01c
0044c8   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
0044ca   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__motors	code
                                           _motors:
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tortucaro/user.c	void motors()
003660   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003662   ffe5
003664   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003666   ffe5
003668   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00366a   ffe5
00366c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00366e   ffe5
003670   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003672   ffe5
003674   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003676   ffe5
003678   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00367a   ffe5
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tortucaro/user.c	int resultado=0;
00367c   6a00     clrf    0, 0             	CLRF	r0x00
00367e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	133; /home/valentin/github/icaro-bloques/tortucaro/user.c	int val=0;
003680   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _01167_DS_:
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003682   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
003684   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003686   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
003688   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00368a   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
00368c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00368e   ec13     call    0x3426, 0        	CALL	_CDCgets
003690   f01a
003692   0103     movlb   0x3              	BANKSEL	_receivedbyte2
003694   6f1d     movwf   0x1d, 0x1        	MOVWF	_receivedbyte2, B
003696   0e03     movlw   0x3              	MOVLW	0x03
003698   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
00369a   511d     movf    0x1d, 0, 0x1     	MOVF	_receivedbyte2, W, B
00369c   e0f2     bz      0x3682           	BZ	_01167_DS_
                                           ;	.line	139; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
00369e   c248     movff   0x248, 0x4       	MOVFF	_rxstr2, r0x04
0036a0   f004
0036a2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036a4   0a31     xorlw   0x31             	XORLW	0x31
0036a6   e102     bnz     0x36ac           	BNZ	_01155_DS_
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=10;
0036a8   0e0a     movlw   0xa              	MOVLW	0x0a
0036aa   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01155_DS_:
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
0036ac   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036ae   0a32     xorlw   0x32             	XORLW	0x32
0036b0   e102     bnz     0x36b6           	BNZ	_01157_DS_
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=11;
0036b2   0e0b     movlw   0xb              	MOVLW	0x0b
0036b4   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01157_DS_:
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
0036b6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036b8   0a33     xorlw   0x33             	XORLW	0x33
0036ba   e102     bnz     0x36c0           	BNZ	_01159_DS_
                                           ;	.line	149; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=12;
0036bc   0e0c     movlw   0xc              	MOVLW	0x0c
0036be   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01159_DS_:
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
0036c0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036c2   0a34     xorlw   0x34             	XORLW	0x34
0036c4   e102     bnz     0x36ca           	BNZ	_01161_DS_
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=8;
0036c6   0e08     movlw   0x8              	MOVLW	0x08
0036c8   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01161_DS_:
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
0036ca   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0036cc   0a35     xorlw   0x35             	XORLW	0x35
0036ce   e102     bnz     0x36d4           	BNZ	_01163_DS_
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=9;
0036d0   0e09     movlw   0x9              	MOVLW	0x09
0036d2   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           _01163_DS_:
0036d4   0103     movlb   0x3              	BANKSEL	_receivedbyte2
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
0036d6   6b1d     clrf    0x1d, 0x1        	CLRF	_receivedbyte2, B
                                           _01176_DS_:
                                           ;	.line	165; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
0036d8   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
0036da   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036dc   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
0036de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036e0   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
0036e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0036e4   ec13     call    0x3426, 0        	CALL	_CDCgets
0036e6   f01a
0036e8   0103     movlb   0x3              	BANKSEL	_receivedbyte2
0036ea   6f1d     movwf   0x1d, 0x1        	MOVWF	_receivedbyte2, B
0036ec   0e03     movlw   0x3              	MOVLW	0x03
0036ee   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
0036f0   511d     movf    0x1d, 0, 0x1     	MOVF	_receivedbyte2, W, B
0036f2   e0f2     bz      0x36d8           	BZ	_01176_DS_
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr2[receivedbyte2]=0;
0036f4   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
                                           ; removed redundant BANKSEL
0036f6   251d     addwf   0x1d, 0, 0x1     	ADDWF	_receivedbyte2, W, B
0036f8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0036fa   6a05     clrf    0x5, 0           	CLRF	r0x05
0036fc   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
0036fe   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
003700   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003702   ffe9
003704   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
003706   ffea
003708   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
00370a   6a04     clrf    0x4, 0           	CLRF	r0x04
00370c   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _01171_DS_:
00370e   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003710   0f80     addlw   0x80             	ADDLW	0x80
003712   0f80     addlw   0x80             	ADDLW	0x80
003714   e102     bnz     0x371a           	BNZ	_01202_DS_
003716   0e08     movlw   0x8              	MOVLW	0x08
003718   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _01202_DS_:
00371a   e215     bc      0x3746           	BC	_01174_DS_
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tortucaro/user.c	rb=(rxstr2[posic]);
00371c   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
00371e   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
003720   6e06     movwf   0x6, 0           	MOVWF	r0x06
003722   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
003724   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
003726   6e07     movwf   0x7, 0           	MOVWF	r0x07
003728   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
00372a   ffe9
00372c   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
00372e   ffea
003730   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
003732   f006
003734   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           ;	.line	172; /home/valentin/github/icaro-bloques/tortucaro/user.c	resultado=resultado+rb;
003736   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003738   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00373a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00373c   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
00373e   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
003740   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003742   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003744   d7e4     bra     0x370e           	BRA	_01171_DS_
                                           _01174_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoWrite(val,resultado);
003746   5000     movf    0, 0, 0          	MOVF	r0x00, W
003748   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00374a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00374c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00374e   ec9c     call    0x4538, 0        	CALL	_ServoWrite
003750   f022
003752   0e02     movlw   0x2              	MOVLW	0x02
003754   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003756   0103     movlb   0x3              	BANKSEL	_receivedbyte2
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
003758   6b1d     clrf    0x1d, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tortucaro/user.c	return;
00375a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00375c   f007
00375e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003760   f006
003762   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003764   f005
003766   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003768   f004
00376a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00376c   f002
00376e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003770   f001
003772   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003774   f000
003776   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__leer	code
                                           _leer:
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tortucaro/user.c	void leer()
003a4c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003a4e   ffe5
003a50   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003a52   ffe5
003a54   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003a56   ffe5
003a58   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003a5a   ffe5
003a5c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003a5e   ffe5
003a60   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003a62   ffe5
003a64   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003a66   ffe5
003a68   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003a6a   ffe5
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tortucaro/user.c	int resultado=0;
003a6c   6a00     clrf    0, 0             	CLRF	r0x00
003a6e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           ;	.line	106; /home/valentin/github/icaro-bloques/tortucaro/user.c	int	i=1;
003a70   0e01     movlw   0x1              	MOVLW	0x01
003a72   6e02     movwf   0x2, 0           	MOVWF	r0x02
003a74   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _01140_DS_:
                                           ;	.line	109; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003a76   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
003a78   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003a7a   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
003a7c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003a7e   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
003a80   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003a82   ec13     call    0x3426, 0        	CALL	_CDCgets
003a84   f01a
003a86   0103     movlb   0x3              	BANKSEL	_receivedbyte2
003a88   6f1d     movwf   0x1d, 0x1        	MOVWF	_receivedbyte2, B
003a8a   0e03     movlw   0x3              	MOVLW	0x03
003a8c   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003a8e   511d     movf    0x1d, 0, 0x1     	MOVF	_receivedbyte2, W, B
003a90   e0f2     bz      0x3a76           	BZ	_01140_DS_
                                           ;	.line	112; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr2[receivedbyte2]=0;
003a92   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
                                           ; removed redundant BANKSEL
003a94   251d     addwf   0x1d, 0, 0x1     	ADDWF	_receivedbyte2, W, B
003a96   6e04     movwf   0x4, 0           	MOVWF	r0x04
003a98   6a05     clrf    0x5, 0           	CLRF	r0x05
003a9a   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
003a9c   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
003a9e   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
003aa0   ffe9
003aa2   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
003aa4   ffea
003aa6   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	114; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
003aa8   6a04     clrf    0x4, 0           	CLRF	r0x04
003aaa   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _01135_DS_:
003aac   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
003aae   0f80     addlw   0x80             	ADDLW	0x80
003ab0   0f80     addlw   0x80             	ADDLW	0x80
003ab2   e102     bnz     0x3ab8           	BNZ	_01149_DS_
003ab4   0e08     movlw   0x8              	MOVLW	0x08
003ab6   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _01149_DS_:
003ab8   e224     bc      0x3b02           	BC	_01138_DS_
                                           ;	.line	116; /home/valentin/github/icaro-bloques/tortucaro/user.c	rb=(rxstr2[posic]);
003aba   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
003abc   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
003abe   6e06     movwf   0x6, 0           	MOVWF	r0x06
003ac0   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
003ac2   2005     addwfc  0x5, 0, 0        	ADDWFC	r0x05, W
003ac4   6e07     movwf   0x7, 0           	MOVWF	r0x07
003ac6   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
003ac8   ffe9
003aca   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
003acc   ffea
003ace   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
003ad0   f006
003ad2   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           ;	.line	117; /home/valentin/github/icaro-bloques/tortucaro/user.c	i=i*i;// en cada iteracion i se duplica: 1,2,4,8,16,32,64,128
003ad4   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003ad6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ad8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ada   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003adc   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003ade   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ae0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003ae2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003ae4   ec27     call    0x4e, 0          	CALL	__mulint
003ae6   f000
003ae8   6e02     movwf   0x2, 0           	MOVWF	r0x02
003aea   cff3     movff   0xff3, 0x3       	MOVFF	PRODL, r0x03
003aec   f003
003aee   0e04     movlw   0x4              	MOVLW	0x04
003af0   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	118; /home/valentin/github/icaro-bloques/tortucaro/user.c	resultado=resultado+rb;
003af2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
003af4   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003af6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
003af8   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
                                           ;	.line	114; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
003afa   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
003afc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003afe   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
003b00   d7d5     bra     0x3aac           	BRA	_01135_DS_
                                           _01138_DS_:
                                           ;	.line	123; /home/valentin/github/icaro-bloques/tortucaro/user.c	PORTB=resultado;// en ves de usar digitalwrite, mando directamente al PORTB
003b02   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b04   6e81     movwf   0x81, 0          	MOVWF	_PORTB
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tortucaro/user.c	return;
003b06   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003b08   f007
003b0a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003b0c   f006
003b0e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003b10   f005
003b12   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003b14   f004
003b16   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003b18   f003
003b1a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003b1c   f002
003b1e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003b20   f001
003b22   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003b24   f000
003b26   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tortucaro/user.c	void sensor()
003da8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003daa   ffe5
003dac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003dae   ffe5
003db0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003db2   ffe5
                                           ;	.line	53; /home/valentin/github/icaro-bloques/tortucaro/user.c	unsigned int val=0;
003db4   6a00     clrf    0, 0             	CLRF	r0x00
                                           _01099_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003db6   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003db8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dba   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
003dbc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dbe   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
003dc0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003dc2   ec13     call    0x3426, 0        	CALL	_CDCgets
003dc4   f01a
003dc6   0103     movlb   0x3              	BANKSEL	_receivedbyte2
003dc8   6f1d     movwf   0x1d, 0x1        	MOVWF	_receivedbyte2, B
003dca   0e03     movlw   0x3              	MOVLW	0x03
003dcc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003dce   511d     movf    0x1d, 0, 0x1     	MOVF	_receivedbyte2, W, B
003dd0   e0f2     bz      0x3db6           	BZ	_01099_DS_
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
003dd2   c248     movff   0x248, 0x2       	MOVFF	_rxstr2, r0x02
003dd4   f002
003dd6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003dd8   0a31     xorlw   0x31             	XORLW	0x31
003dda   e102     bnz     0x3de0           	BNZ	_01081_DS_
                                           ;	.line	63; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=13;
003ddc   0e0d     movlw   0xd              	MOVLW	0x0d
003dde   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01081_DS_:
                                           ;	.line	65; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
003de0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003de2   0a32     xorlw   0x32             	XORLW	0x32
003de4   e102     bnz     0x3dea           	BNZ	_01083_DS_
                                           ;	.line	67; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=14;
003de6   0e0e     movlw   0xe              	MOVLW	0x0e
003de8   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01083_DS_:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
003dea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003dec   0a33     xorlw   0x33             	XORLW	0x33
003dee   e102     bnz     0x3df4           	BNZ	_01085_DS_
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=15;
003df0   0e0f     movlw   0xf              	MOVLW	0x0f
003df2   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01085_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
003df4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003df6   0a34     xorlw   0x34             	XORLW	0x34
003df8   e102     bnz     0x3dfe           	BNZ	_01087_DS_
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=16;
003dfa   0e10     movlw   0x10             	MOVLW	0x10
003dfc   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01087_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
003dfe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e00   0a35     xorlw   0x35             	XORLW	0x35
003e02   e102     bnz     0x3e08           	BNZ	_01089_DS_
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=17;
003e04   0e11     movlw   0x11             	MOVLW	0x11
003e06   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01089_DS_:
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='6')
003e08   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e0a   0a36     xorlw   0x36             	XORLW	0x36
003e0c   e102     bnz     0x3e12           	BNZ	_01091_DS_
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=18;
003e0e   0e12     movlw   0x12             	MOVLW	0x12
003e10   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01091_DS_:
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='7')
003e12   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e14   0a37     xorlw   0x37             	XORLW	0x37
003e16   e102     bnz     0x3e1c           	BNZ	_01093_DS_
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=19;
003e18   0e13     movlw   0x13             	MOVLW	0x13
003e1a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01093_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='8')
003e1c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003e1e   0a38     xorlw   0x38             	XORLW	0x38
003e20   e102     bnz     0x3e26           	BNZ	_01095_DS_
                                           ;	.line	91; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=20;
003e22   0e14     movlw   0x14             	MOVLW	0x14
003e24   6e00     movwf   0, 0             	MOVWF	r0x00
                                           _01095_DS_:
003e26   0103     movlb   0x3              	BANKSEL	_receivedbyte2
                                           ;	.line	93; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
003e28   6b1d     clrf    0x1d, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tortucaro/user.c	valor=analogread(val);
003e2a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e2c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e2e   ec59     call    0x42b2, 0        	CALL	_analogread
003e30   f021
003e32   6e00     movwf   0, 0             	MOVWF	r0x00
003e34   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003e36   f001
003e38   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tortucaro/user.c	CDCputs(valor,DEC);
003e3a   0e01     movlw   0x1              	MOVLW	0x01
003e3c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e3e   0e80     movlw   0x80             	MOVLW	0x80
003e40   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e42   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003e44   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e46   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e48   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003e4a   eca2     call    0x3544, 0        	CALL	_CDCputs
003e4c   f01a
003e4e   0e04     movlw   0x4              	MOVLW	0x04
003e50   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003e52   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003e54   f002
003e56   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003e58   f001
003e5a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003e5c   f000
003e5e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__l293d	code
                                           _l293d:
                                           ;	.line	8; /home/valentin/github/icaro-bloques/tortucaro/user.c	void l293d()
0043cc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0043ce   ffe5
0043d0   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0043d2   ffe5
0043d4   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0043d6   ffe5
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tortucaro/user.c	int val=0;
0043d8   6a00     clrf    0, 0             	CLRF	r0x00
0043da   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01055_DS_:
                                           ;	.line	17; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
0043dc   0e80     movlw   0x80             	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0043de   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0043e0   0e02     movlw   0x2              	MOVLW	HIGH(_rxstr2)
0043e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0043e4   0e48     movlw   0x48             	MOVLW	LOW(_rxstr2)
0043e6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0043e8   ec13     call    0x3426, 0        	CALL	_CDCgets
0043ea   f01a
0043ec   0103     movlb   0x3              	BANKSEL	_receivedbyte2
0043ee   6f1d     movwf   0x1d, 0x1        	MOVWF	_receivedbyte2, B
0043f0   0e03     movlw   0x3              	MOVLW	0x03
0043f2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	18; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
0043f4   511d     movf    0x1d, 0, 0x1     	MOVF	_receivedbyte2, W, B
0043f6   e0f2     bz      0x43dc           	BZ	_01055_DS_
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
0043f8   c248     movff   0x248, 0x2       	MOVFF	_rxstr2, r0x02
0043fa   f002
0043fc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0043fe   0a31     xorlw   0x31             	XORLW	0x31
004400   e103     bnz     0x4408           	BNZ	_01043_DS_
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=96;
004402   0e60     movlw   0x60             	MOVLW	0x60
004404   6e00     movwf   0, 0             	MOVWF	r0x00
004406   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01043_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
004408   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00440a   0a32     xorlw   0x32             	XORLW	0x32
00440c   e103     bnz     0x4414           	BNZ	_01045_DS_
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=144;
00440e   0e90     movlw   0x90             	MOVLW	0x90
004410   6e00     movwf   0, 0             	MOVWF	r0x00
004412   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01045_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
004414   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004416   0a33     xorlw   0x33             	XORLW	0x33
004418   e103     bnz     0x4420           	BNZ	_01047_DS_
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=64;
00441a   0e40     movlw   0x40             	MOVLW	0x40
00441c   6e00     movwf   0, 0             	MOVWF	r0x00
00441e   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01047_DS_:
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
004420   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004422   0a34     xorlw   0x34             	XORLW	0x34
004424   e103     bnz     0x442c           	BNZ	_01049_DS_
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=32;
004426   0e20     movlw   0x20             	MOVLW	0x20
004428   6e00     movwf   0, 0             	MOVWF	r0x00
00442a   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01049_DS_:
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
00442c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00442e   0a35     xorlw   0x35             	XORLW	0x35
004430   e102     bnz     0x4436           	BNZ	_01051_DS_
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=0;
004432   6a00     clrf    0, 0             	CLRF	r0x00
004434   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _01051_DS_:
004436   0103     movlb   0x3              	BANKSEL	_receivedbyte2
                                           ;	.line	40; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
004438   6b1d     clrf    0x1d, 0x1        	CLRF	_receivedbyte2, B
                                           ;	.line	45; /home/valentin/github/icaro-bloques/tortucaro/user.c	valor=val;
00443a   c000     movff   0, 0x288         	MOVFF	r0x00, _valor
00443c   f288
00443e   c001     movff   0x1, 0x289       	MOVFF	r0x01, (_valor + 1)
004440   f289
004442   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004444   f002
004446   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004448   f001
00444a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00444c   f000
00444e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epapout_init() { return; }
003ffe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epapin_init() { return; }
004914   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epap_out() { return; }
004916   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epap_in() { return; }
004918   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tmp/digitalw.c	void pinmode(int input, int state)
002884   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002886   ffe5
002888   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00288a   ffd9
00288c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00288e   ffe5
002890   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002892   ffe5
002894   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002896   ffe5
002898   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00289a   ffe5
00289c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00289e   ffe5
0028a0   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0028a2   ffe5
0028a4   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0028a6   ffe5
0028a8   0e02     movlw   0x2              	MOVLW	0x02
0028aa   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0028ac   f000
0028ae   0e03     movlw   0x3              	MOVLW	0x03
0028b0   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0028b2   f001
0028b4   0e04     movlw   0x4              	MOVLW	0x04
0028b6   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0028b8   f002
0028ba   0e05     movlw   0x5              	MOVLW	0x05
0028bc   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
0028be   f003
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tmp/digitalw.c	switch (port[input])
0028c0   0e98     movlw   0x98             	MOVLW	LOW(_port)
0028c2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028c4   6e04     movwf   0x4, 0           	MOVWF	r0x04
0028c6   0e24     movlw   0x24             	MOVLW	HIGH(_port)
0028c8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0028ca   6e05     movwf   0x5, 0           	MOVWF	r0x05
0028cc   6a06     clrf    0x6, 0           	CLRF	r0x06
0028ce   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0028d0   6806     setf    0x6, 0           	SETF	r0x06
0028d2   0e00     movlw   0                	MOVLW	UPPER(_port)
0028d4   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0028d6   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0028d8   fff6
0028da   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0028dc   fff7
0028de   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0028e0   fff8
0028e2   0009     tblrd   *+               	TBLRD*+	
0028e4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0028e6   f004
0028e8   0e05     movlw   0x5              	MOVLW	0x05
0028ea   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0028ec   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0028ee   d11c     bra     0x2b28           	BRA	_01008_DS_
0028f0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0028f2   ffe5
0028f4   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0028f6   ffe5
0028f8   6a08     clrf    0x8, 0           	CLRF	r0x08
0028fa   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
0028fc   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
0028fe   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002900   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
002902   0bfc     andlw   0xfc             	ANDLW	0xfc
002904   6e07     movwf   0x7, 0           	MOVWF	r0x07
002906   0e00     movlw   0                	MOVLW	UPPER(_01017_DS_)
002908   6efb     movwf   0xfb, 0          	MOVWF	PCLATU
00290a   0e29     movlw   0x29             	MOVLW	HIGH(_01017_DS_)
00290c   6efa     movwf   0xfa, 0          	MOVWF	PCLATH
00290e   0e26     movlw   0x26             	MOVLW	LOW(_01017_DS_)
002910   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
002912   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002914   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002916   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002918   2afb     incf    0xfb, 0x1, 0     	INCF	PCLATU, F
00291a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00291c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00291e   f008
002920   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002922   f007
002924   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _01017_DS_:
002926   ef9d     goto    0x293a           	GOTO	_00987_DS_
002928   f014
00292a   efcf     goto    0x299e           	GOTO	_00991_DS_
00292c   f014
00292e   ef01     goto    0x2a02           	GOTO	_00995_DS_
002930   f015
002932   ef33     goto    0x2a66           	GOTO	_00999_DS_
002934   f015
002936   ef65     goto    0x2aca           	GOTO	_01003_DS_
002938   f015
                                           _00987_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
00293a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00293c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00293e   e017     bz      0x296e           	BZ	_00989_DS_
002940   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002942   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002944   6e04     movwf   0x4, 0           	MOVWF	r0x04
002946   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002948   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00294a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00294c   6a06     clrf    0x6, 0           	CLRF	r0x06
00294e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002950   6806     setf    0x6, 0           	SETF	r0x06
002952   0e00     movlw   0                	MOVLW	UPPER(_mask)
002954   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002956   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002958   fff6
00295a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00295c   fff7
00295e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002960   fff8
002962   0009     tblrd   *+               	TBLRD*+	
002964   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002966   f004
002968   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00296a   1293     iorwf   0x93, 0x1, 0     	IORWF	_TRISB, F
00296c   d0dd     bra     0x2b28           	BRA	_01008_DS_
                                           _00989_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else TRISB=TRISB & (255-mask[input]);
00296e   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002970   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002972   6e04     movwf   0x4, 0           	MOVWF	r0x04
002974   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002976   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002978   6e05     movwf   0x5, 0           	MOVWF	r0x05
00297a   6a06     clrf    0x6, 0           	CLRF	r0x06
00297c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00297e   6806     setf    0x6, 0           	SETF	r0x06
002980   0e00     movlw   0                	MOVLW	UPPER(_mask)
002982   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002984   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002986   fff6
002988   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00298a   fff7
00298c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00298e   fff8
002990   0009     tblrd   *+               	TBLRD*+	
002992   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002994   f004
002996   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002998   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00299a   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
00299c   d0c5     bra     0x2b28           	BRA	_01008_DS_
                                           _00991_DS_:
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
00299e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0029a0   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0029a2   e017     bz      0x29d2           	BZ	_00993_DS_
0029a4   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0029a6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0029a8   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029aa   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
0029ac   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0029ae   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029b0   6a06     clrf    0x6, 0           	CLRF	r0x06
0029b2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0029b4   6806     setf    0x6, 0           	SETF	r0x06
0029b6   0e00     movlw   0                	MOVLW	UPPER(_mask)
0029b8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0029ba   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029bc   fff6
0029be   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029c0   fff7
0029c2   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0029c4   fff8
0029c6   0009     tblrd   *+               	TBLRD*+	
0029c8   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029ca   f004
0029cc   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029ce   1294     iorwf   0x94, 0x1, 0     	IORWF	_TRISC, F
0029d0   d0ab     bra     0x2b28           	BRA	_01008_DS_
                                           _00993_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else TRISC=TRISC & (255-mask[input]);
0029d2   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
0029d4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0029d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029d8   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
0029da   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0029dc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029de   6a06     clrf    0x6, 0           	CLRF	r0x06
0029e0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0029e2   6806     setf    0x6, 0           	SETF	r0x06
0029e4   0e00     movlw   0                	MOVLW	UPPER(_mask)
0029e6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0029e8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029ea   fff6
0029ec   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029ee   fff7
0029f0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0029f2   fff8
0029f4   0009     tblrd   *+               	TBLRD*+	
0029f6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029f8   f004
0029fa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029fc   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0029fe   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002a00   d093     bra     0x2b28           	BRA	_01008_DS_
                                           _00995_DS_:
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002a02   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a04   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002a06   e017     bz      0x2a36           	BZ	_00997_DS_
002a08   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002a0a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a0c   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a0e   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002a10   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a12   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a14   6a06     clrf    0x6, 0           	CLRF	r0x06
002a16   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a18   6806     setf    0x6, 0           	SETF	r0x06
002a1a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a1c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a1e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a20   fff6
002a22   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a24   fff7
002a26   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a28   fff8
002a2a   0009     tblrd   *+               	TBLRD*+	
002a2c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a2e   f004
002a30   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a32   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
002a34   d079     bra     0x2b28           	BRA	_01008_DS_
                                           _00997_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002a36   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002a38   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a3a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a3c   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002a3e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a40   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a42   6a06     clrf    0x6, 0           	CLRF	r0x06
002a44   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a46   6806     setf    0x6, 0           	SETF	r0x06
002a48   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a4a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a4c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a4e   fff6
002a50   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a52   fff7
002a54   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a56   fff8
002a58   0009     tblrd   *+               	TBLRD*+	
002a5a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a5c   f004
002a5e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a60   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a62   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002a64   d061     bra     0x2b28           	BRA	_01008_DS_
                                           _00999_DS_:
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002a66   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a68   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002a6a   e017     bz      0x2a9a           	BZ	_01001_DS_
002a6c   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002a6e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a70   6e04     movwf   0x4, 0           	MOVWF	r0x04
002a72   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002a74   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a76   6e05     movwf   0x5, 0           	MOVWF	r0x05
002a78   6a06     clrf    0x6, 0           	CLRF	r0x06
002a7a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a7c   6806     setf    0x6, 0           	SETF	r0x06
002a7e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a80   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002a82   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002a84   fff6
002a86   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002a88   fff7
002a8a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002a8c   fff8
002a8e   0009     tblrd   *+               	TBLRD*+	
002a90   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002a92   f004
002a94   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002a96   1295     iorwf   0x95, 0x1, 0     	IORWF	_TRISD, F
002a98   d047     bra     0x2b28           	BRA	_01008_DS_
                                           _01001_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else TRISD=TRISD & (255-mask[input]);
002a9a   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002a9c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a9e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002aa0   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002aa2   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002aa4   6e05     movwf   0x5, 0           	MOVWF	r0x05
002aa6   6a06     clrf    0x6, 0           	CLRF	r0x06
002aa8   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002aaa   6806     setf    0x6, 0           	SETF	r0x06
002aac   0e00     movlw   0                	MOVLW	UPPER(_mask)
002aae   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002ab0   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002ab2   fff6
002ab4   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002ab6   fff7
002ab8   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002aba   fff8
002abc   0009     tblrd   *+               	TBLRD*+	
002abe   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002ac0   f004
002ac2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002ac4   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002ac6   1695     andwf   0x95, 0x1, 0     	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002ac8   d02f     bra     0x2b28           	BRA	_01008_DS_
                                           _01003_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
002aca   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002acc   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002ace   e017     bz      0x2afe           	BZ	_01005_DS_
002ad0   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002ad2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002ad4   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ad6   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002ad8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ada   6e03     movwf   0x3, 0           	MOVWF	r0x03
002adc   6a04     clrf    0x4, 0           	CLRF	r0x04
002ade   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ae0   6804     setf    0x4, 0           	SETF	r0x04
002ae2   0e00     movlw   0                	MOVLW	UPPER(_mask)
002ae4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002ae6   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002ae8   fff6
002aea   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002aec   fff7
002aee   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002af0   fff8
002af2   0009     tblrd   *+               	TBLRD*+	
002af4   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002af6   f002
002af8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002afa   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
002afc   d015     bra     0x2b28           	BRA	_01008_DS_
                                           _01005_DS_:
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002afe   6a02     clrf    0x2, 0           	CLRF	r0x02
002b00   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002b02   6802     setf    0x2, 0           	SETF	r0x02
002b04   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002b06   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002b08   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002b0a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002b0c   0e00     movlw   0                	MOVLW	UPPER(_mask)
002b0e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002b10   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002b12   fff6
002b14   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002b16   fff7
002b18   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002b1a   fff8
002b1c   0009     tblrd   *+               	TBLRD*+	
002b1e   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002b20   f000
002b22   5000     movf    0, 0, 0          	MOVF	r0x00, W
002b24   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002b26   1696     andwf   0x96, 0x1, 0     	ANDWF	_TRISE, F
                                           _01008_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tmp/digitalw.c	}
002b28   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002b2a   f006
002b2c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002b2e   f005
002b30   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002b32   f004
002b34   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002b36   f003
002b38   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002b3a   f002
002b3c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002b3e   f001
002b40   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002b42   f000
002b44   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002b46   ffd9
002b48   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/github/icaro-bloques/tmp/digitalw.c	int digitalread(int input)
002e10   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002e12   ffe5
002e14   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002e16   ffd9
002e18   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002e1a   ffe5
002e1c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002e1e   ffe5
002e20   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002e22   ffe5
002e24   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002e26   ffe5
002e28   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002e2a   ffe5
002e2c   0e02     movlw   0x2              	MOVLW	0x02
002e2e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002e30   f000
002e32   0e03     movlw   0x3              	MOVLW	0x03
002e34   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002e36   f001
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tmp/digitalw.c	switch (port[input])
002e38   0e98     movlw   0x98             	MOVLW	LOW(_port)
002e3a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002e3c   6e02     movwf   0x2, 0           	MOVWF	r0x02
002e3e   0e24     movlw   0x24             	MOVLW	HIGH(_port)
002e40   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002e42   6e03     movwf   0x3, 0           	MOVWF	r0x03
002e44   6a04     clrf    0x4, 0           	CLRF	r0x04
002e46   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002e48   6804     setf    0x4, 0           	SETF	r0x04
002e4a   0e00     movlw   0                	MOVLW	UPPER(_port)
002e4c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002e4e   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002e50   fff6
002e52   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002e54   fff7
002e56   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002e58   fff8
002e5a   0009     tblrd   *+               	TBLRD*+	
002e5c   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002e5e   f002
002e60   0e05     movlw   0x5              	MOVLW	0x05
002e62   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
002e64   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002e66   d0b9     bra     0x2fda           	BRA	_00972_DS_
002e68   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002e6a   ffe5
002e6c   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002e6e   ffe5
002e70   6a06     clrf    0x6, 0           	CLRF	r0x06
002e72   3402     rlcf    0x2, 0, 0        	RLCF	r0x02, W
002e74   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
002e76   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002e78   3606     rlcf    0x6, 0x1, 0      	RLCF	r0x06, F
002e7a   0bfc     andlw   0xfc             	ANDLW	0xfc
002e7c   6e05     movwf   0x5, 0           	MOVWF	r0x05
002e7e   0e00     movlw   0                	MOVLW	UPPER(_00982_DS_)
002e80   6efb     movwf   0xfb, 0          	MOVWF	PCLATU
002e82   0e2e     movlw   0x2e             	MOVLW	HIGH(_00982_DS_)
002e84   6efa     movwf   0xfa, 0          	MOVWF	PCLATH
002e86   0e9e     movlw   0x9e             	MOVLW	LOW(_00982_DS_)
002e88   2605     addwf   0x5, 0x1, 0      	ADDWF	r0x05, F
002e8a   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
002e8c   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002e8e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002e90   2afb     incf    0xfb, 0x1, 0     	INCF	PCLATU, F
002e92   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002e94   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002e96   f006
002e98   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002e9a   f005
002e9c   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00982_DS_:
002e9e   ef59     goto    0x2eb2           	GOTO	_00952_DS_
002ea0   f017
002ea2   ef77     goto    0x2eee           	GOTO	_00956_DS_
002ea4   f017
002ea6   ef95     goto    0x2f2a           	GOTO	_00960_DS_
002ea8   f017
002eaa   efb3     goto    0x2f66           	GOTO	_00964_DS_
002eac   f017
002eae   efd1     goto    0x2fa2           	GOTO	_00968_DS_
002eb0   f017
                                           _00952_DS_:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002eb2   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002eb4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002eb6   6e02     movwf   0x2, 0           	MOVWF	r0x02
002eb8   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002eba   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ebc   6e03     movwf   0x3, 0           	MOVWF	r0x03
002ebe   6a04     clrf    0x4, 0           	CLRF	r0x04
002ec0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ec2   6804     setf    0x4, 0           	SETF	r0x04
002ec4   0e00     movlw   0                	MOVLW	UPPER(_mask)
002ec6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002ec8   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002eca   fff6
002ecc   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002ece   fff7
002ed0   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002ed2   fff8
002ed4   0009     tblrd   *+               	TBLRD*+	
002ed6   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002ed8   f002
002eda   5081     movf    0x81, 0, 0       	MOVF	_PORTB, W
002edc   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002ede   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ee0   e003     bz      0x2ee8           	BZ	_00954_DS_
002ee2   6af3     clrf    0xf3, 0          	CLRF	PRODL
002ee4   0e01     movlw   0x1              	MOVLW	0x01
002ee6   d07b     bra     0x2fde           	BRA	_00973_DS_
                                           _00954_DS_:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else return (0);
002ee8   6af3     clrf    0xf3, 0          	CLRF	PRODL
002eea   6ae8     clrf    0xe8, 0          	CLRF	WREG
002eec   d078     bra     0x2fde           	BRA	_00973_DS_
                                           _00956_DS_:
                                           ;	.line	51; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002eee   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002ef0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002ef2   6e02     movwf   0x2, 0           	MOVWF	r0x02
002ef4   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002ef6   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ef8   6e03     movwf   0x3, 0           	MOVWF	r0x03
002efa   6a04     clrf    0x4, 0           	CLRF	r0x04
002efc   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002efe   6804     setf    0x4, 0           	SETF	r0x04
002f00   0e00     movlw   0                	MOVLW	UPPER(_mask)
002f02   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002f04   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002f06   fff6
002f08   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002f0a   fff7
002f0c   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002f0e   fff8
002f10   0009     tblrd   *+               	TBLRD*+	
002f12   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002f14   f002
002f16   5082     movf    0x82, 0, 0       	MOVF	_PORTC, W
002f18   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002f1a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002f1c   e003     bz      0x2f24           	BZ	_00958_DS_
002f1e   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f20   0e01     movlw   0x1              	MOVLW	0x01
002f22   d05d     bra     0x2fde           	BRA	_00973_DS_
                                           _00958_DS_:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else return (0);
002f24   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f26   6ae8     clrf    0xe8, 0          	CLRF	WREG
002f28   d05a     bra     0x2fde           	BRA	_00973_DS_
                                           _00960_DS_:
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002f2a   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002f2c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002f2e   6e02     movwf   0x2, 0           	MOVWF	r0x02
002f30   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002f32   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002f34   6e03     movwf   0x3, 0           	MOVWF	r0x03
002f36   6a04     clrf    0x4, 0           	CLRF	r0x04
002f38   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002f3a   6804     setf    0x4, 0           	SETF	r0x04
002f3c   0e00     movlw   0                	MOVLW	UPPER(_mask)
002f3e   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002f40   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002f42   fff6
002f44   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002f46   fff7
002f48   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002f4a   fff8
002f4c   0009     tblrd   *+               	TBLRD*+	
002f4e   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002f50   f002
002f52   5080     movf    0x80, 0, 0       	MOVF	_PORTA, W
002f54   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002f56   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002f58   e003     bz      0x2f60           	BZ	_00962_DS_
002f5a   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f5c   0e01     movlw   0x1              	MOVLW	0x01
002f5e   d03f     bra     0x2fde           	BRA	_00973_DS_
                                           _00962_DS_:
                                           ;	.line	55; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else return (0);
002f60   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f62   6ae8     clrf    0xe8, 0          	CLRF	WREG
002f64   d03c     bra     0x2fde           	BRA	_00973_DS_
                                           _00964_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
002f66   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002f68   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002f6a   6e02     movwf   0x2, 0           	MOVWF	r0x02
002f6c   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002f6e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002f70   6e03     movwf   0x3, 0           	MOVWF	r0x03
002f72   6a04     clrf    0x4, 0           	CLRF	r0x04
002f74   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002f76   6804     setf    0x4, 0           	SETF	r0x04
002f78   0e00     movlw   0                	MOVLW	UPPER(_mask)
002f7a   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002f7c   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002f7e   fff6
002f80   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002f82   fff7
002f84   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002f86   fff8
002f88   0009     tblrd   *+               	TBLRD*+	
002f8a   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002f8c   f002
002f8e   5083     movf    0x83, 0, 0       	MOVF	_PORTD, W
002f90   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002f92   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002f94   e003     bz      0x2f9c           	BZ	_00966_DS_
002f96   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f98   0e01     movlw   0x1              	MOVLW	0x01
002f9a   d021     bra     0x2fde           	BRA	_00973_DS_
                                           _00966_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else return (0);
002f9c   6af3     clrf    0xf3, 0          	CLRF	PRODL
002f9e   6ae8     clrf    0xe8, 0          	CLRF	WREG
002fa0   d01e     bra     0x2fde           	BRA	_00973_DS_
                                           _00968_DS_:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
002fa2   6a02     clrf    0x2, 0           	CLRF	r0x02
002fa4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002fa6   6802     setf    0x2, 0           	SETF	r0x02
002fa8   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002faa   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002fac   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002fae   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002fb0   0e00     movlw   0                	MOVLW	UPPER(_mask)
002fb2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002fb4   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002fb6   fff6
002fb8   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002fba   fff7
002fbc   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002fbe   fff8
002fc0   0009     tblrd   *+               	TBLRD*+	
002fc2   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002fc4   f000
002fc6   5084     movf    0x84, 0, 0       	MOVF	_PORTE, W
002fc8   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002fca   5000     movf    0, 0, 0          	MOVF	r0x00, W
002fcc   e003     bz      0x2fd4           	BZ	_00970_DS_
002fce   6af3     clrf    0xf3, 0          	CLRF	PRODL
002fd0   0e01     movlw   0x1              	MOVLW	0x01
002fd2   d005     bra     0x2fde           	BRA	_00973_DS_
                                           _00970_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else return (0);
002fd4   6af3     clrf    0xf3, 0          	CLRF	PRODL
002fd6   6ae8     clrf    0xe8, 0          	CLRF	WREG
002fd8   d002     bra     0x2fde           	BRA	_00973_DS_
                                           _00972_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tmp/digitalw.c	return (0);
002fda   6af3     clrf    0xf3, 0          	CLRF	PRODL
002fdc   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00973_DS_:
002fde   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002fe0   f004
002fe2   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002fe4   f003
002fe6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002fe8   f002
002fea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002fec   f001
002fee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002ff0   f000
002ff2   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ff4   ffd9
002ff6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tmp/digitalw.c	void digitalwrite(int output,int state)
002b4a   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002b4c   ffe5
002b4e   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002b50   ffd9
002b52   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002b54   ffe5
002b56   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002b58   ffe5
002b5a   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002b5c   ffe5
002b5e   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002b60   ffe5
002b62   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002b64   ffe5
002b66   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002b68   ffe5
002b6a   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002b6c   ffe5
002b6e   0e02     movlw   0x2              	MOVLW	0x02
002b70   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002b72   f000
002b74   0e03     movlw   0x3              	MOVLW	0x03
002b76   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002b78   f001
002b7a   0e04     movlw   0x4              	MOVLW	0x04
002b7c   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002b7e   f002
002b80   0e05     movlw   0x5              	MOVLW	0x05
002b82   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002b84   f003
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tmp/digitalw.c	switch (port[output])
002b86   0e98     movlw   0x98             	MOVLW	LOW(_port)
002b88   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b8a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b8c   0e24     movlw   0x24             	MOVLW	HIGH(_port)
002b8e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002b90   6e05     movwf   0x5, 0           	MOVWF	r0x05
002b92   6a06     clrf    0x6, 0           	CLRF	r0x06
002b94   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002b96   6806     setf    0x6, 0           	SETF	r0x06
002b98   0e00     movlw   0                	MOVLW	UPPER(_port)
002b9a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002b9c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002b9e   fff6
002ba0   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002ba2   fff7
002ba4   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002ba6   fff8
002ba8   0009     tblrd   *+               	TBLRD*+	
002baa   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002bac   f004
002bae   0e05     movlw   0x5              	MOVLW	0x05
002bb0   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002bb2   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002bb4   d11c     bra     0x2dee           	BRA	_00938_DS_
002bb6   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002bb8   ffe5
002bba   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
002bbc   ffe5
002bbe   6a08     clrf    0x8, 0           	CLRF	r0x08
002bc0   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
002bc2   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
002bc4   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002bc6   3608     rlcf    0x8, 0x1, 0      	RLCF	r0x08, F
002bc8   0bfc     andlw   0xfc             	ANDLW	0xfc
002bca   6e07     movwf   0x7, 0           	MOVWF	r0x07
002bcc   0e00     movlw   0                	MOVLW	UPPER(_00947_DS_)
002bce   6efb     movwf   0xfb, 0          	MOVWF	PCLATU
002bd0   0e2b     movlw   0x2b             	MOVLW	HIGH(_00947_DS_)
002bd2   6efa     movwf   0xfa, 0          	MOVWF	PCLATH
002bd4   0eec     movlw   0xec             	MOVLW	LOW(_00947_DS_)
002bd6   2607     addwf   0x7, 0x1, 0      	ADDWF	r0x07, F
002bd8   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002bda   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002bdc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002bde   2afb     incf    0xfb, 0x1, 0     	INCF	PCLATU, F
002be0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
002be2   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002be4   f008
002be6   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002be8   f007
002bea   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00947_DS_:
002bec   ef00     goto    0x2c00           	GOTO	_00917_DS_
002bee   f016
002bf0   ef32     goto    0x2c64           	GOTO	_00921_DS_
002bf2   f016
002bf4   ef64     goto    0x2cc8           	GOTO	_00925_DS_
002bf6   f016
002bf8   ef96     goto    0x2d2c           	GOTO	_00929_DS_
002bfa   f016
002bfc   efc8     goto    0x2d90           	GOTO	_00933_DS_
002bfe   f016
                                           _00917_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002c00   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002c02   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002c04   e017     bz      0x2c34           	BZ	_00919_DS_
002c06   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002c08   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c0a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c0c   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002c0e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c10   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c12   6a06     clrf    0x6, 0           	CLRF	r0x06
002c14   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c16   6806     setf    0x6, 0           	SETF	r0x06
002c18   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c1a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c1c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c1e   fff6
002c20   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c22   fff7
002c24   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c26   fff8
002c28   0009     tblrd   *+               	TBLRD*+	
002c2a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c2c   f004
002c2e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c30   1281     iorwf   0x81, 0x1, 0     	IORWF	_PORTB, F
002c32   d0dd     bra     0x2dee           	BRA	_00938_DS_
                                           _00919_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002c34   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002c36   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c38   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c3a   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002c3c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c3e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c40   6a06     clrf    0x6, 0           	CLRF	r0x06
002c42   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c44   6806     setf    0x6, 0           	SETF	r0x06
002c46   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c48   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c4a   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c4c   fff6
002c4e   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c50   fff7
002c52   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c54   fff8
002c56   0009     tblrd   *+               	TBLRD*+	
002c58   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c5a   f004
002c5c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c5e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c60   1681     andwf   0x81, 0x1, 0     	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002c62   d0c5     bra     0x2dee           	BRA	_00938_DS_
                                           _00921_DS_:
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002c64   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002c66   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002c68   e017     bz      0x2c98           	BZ	_00923_DS_
002c6a   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002c6c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c6e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c70   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002c72   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c74   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c76   6a06     clrf    0x6, 0           	CLRF	r0x06
002c78   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c7a   6806     setf    0x6, 0           	SETF	r0x06
002c7c   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c7e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c80   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c82   fff6
002c84   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c86   fff7
002c88   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c8a   fff8
002c8c   0009     tblrd   *+               	TBLRD*+	
002c8e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c90   f004
002c92   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c94   1282     iorwf   0x82, 0x1, 0     	IORWF	_PORTC, F
002c96   d0ab     bra     0x2dee           	BRA	_00938_DS_
                                           _00923_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002c98   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002c9a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c9c   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c9e   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002ca0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002ca2   6e05     movwf   0x5, 0           	MOVWF	r0x05
002ca4   6a06     clrf    0x6, 0           	CLRF	r0x06
002ca6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ca8   6806     setf    0x6, 0           	SETF	r0x06
002caa   0e00     movlw   0                	MOVLW	UPPER(_mask)
002cac   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002cae   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002cb0   fff6
002cb2   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002cb4   fff7
002cb6   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002cb8   fff8
002cba   0009     tblrd   *+               	TBLRD*+	
002cbc   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002cbe   f004
002cc0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002cc2   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002cc4   1682     andwf   0x82, 0x1, 0     	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002cc6   d093     bra     0x2dee           	BRA	_00938_DS_
                                           _00925_DS_:
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002cc8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002cca   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002ccc   e017     bz      0x2cfc           	BZ	_00927_DS_
002cce   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002cd0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002cd2   6e04     movwf   0x4, 0           	MOVWF	r0x04
002cd4   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002cd6   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002cd8   6e05     movwf   0x5, 0           	MOVWF	r0x05
002cda   6a06     clrf    0x6, 0           	CLRF	r0x06
002cdc   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002cde   6806     setf    0x6, 0           	SETF	r0x06
002ce0   0e00     movlw   0                	MOVLW	UPPER(_mask)
002ce2   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002ce4   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002ce6   fff6
002ce8   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002cea   fff7
002cec   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002cee   fff8
002cf0   0009     tblrd   *+               	TBLRD*+	
002cf2   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002cf4   f004
002cf6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002cf8   1280     iorwf   0x80, 0x1, 0     	IORWF	_PORTA, F
002cfa   d079     bra     0x2dee           	BRA	_00938_DS_
                                           _00927_DS_:
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002cfc   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002cfe   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d00   6e04     movwf   0x4, 0           	MOVWF	r0x04
002d02   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002d04   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d06   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d08   6a06     clrf    0x6, 0           	CLRF	r0x06
002d0a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d0c   6806     setf    0x6, 0           	SETF	r0x06
002d0e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002d10   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002d12   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002d14   fff6
002d16   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002d18   fff7
002d1a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002d1c   fff8
002d1e   0009     tblrd   *+               	TBLRD*+	
002d20   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002d22   f004
002d24   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d26   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d28   1680     andwf   0x80, 0x1, 0     	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002d2a   d061     bra     0x2dee           	BRA	_00938_DS_
                                           _00929_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002d2c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d2e   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002d30   e017     bz      0x2d60           	BZ	_00931_DS_
002d32   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002d34   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d36   6e04     movwf   0x4, 0           	MOVWF	r0x04
002d38   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002d3a   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d3c   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d3e   6a06     clrf    0x6, 0           	CLRF	r0x06
002d40   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d42   6806     setf    0x6, 0           	SETF	r0x06
002d44   0e00     movlw   0                	MOVLW	UPPER(_mask)
002d46   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002d48   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002d4a   fff6
002d4c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002d4e   fff7
002d50   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002d52   fff8
002d54   0009     tblrd   *+               	TBLRD*+	
002d56   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002d58   f004
002d5a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d5c   1283     iorwf   0x83, 0x1, 0     	IORWF	_PORTD, F
002d5e   d047     bra     0x2dee           	BRA	_00938_DS_
                                           _00931_DS_:
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002d60   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002d62   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d64   6e04     movwf   0x4, 0           	MOVWF	r0x04
002d66   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002d68   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d6a   6e05     movwf   0x5, 0           	MOVWF	r0x05
002d6c   6a06     clrf    0x6, 0           	CLRF	r0x06
002d6e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d70   6806     setf    0x6, 0           	SETF	r0x06
002d72   0e00     movlw   0                	MOVLW	UPPER(_mask)
002d74   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002d76   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002d78   fff6
002d7a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002d7c   fff7
002d7e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002d80   fff8
002d82   0009     tblrd   *+               	TBLRD*+	
002d84   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002d86   f004
002d88   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002d8a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d8c   1683     andwf   0x83, 0x1, 0     	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tmp/digitalw.c	break;
002d8e   d02f     bra     0x2dee           	BRA	_00938_DS_
                                           _00933_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tmp/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002d90   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002d92   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002d94   e017     bz      0x2dc4           	BZ	_00935_DS_
002d96   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002d98   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d9a   6e02     movwf   0x2, 0           	MOVWF	r0x02
002d9c   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002d9e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002da0   6e03     movwf   0x3, 0           	MOVWF	r0x03
002da2   6a04     clrf    0x4, 0           	CLRF	r0x04
002da4   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002da6   6804     setf    0x4, 0           	SETF	r0x04
002da8   0e00     movlw   0                	MOVLW	UPPER(_mask)
002daa   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002dac   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002dae   fff6
002db0   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002db2   fff7
002db4   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002db6   fff8
002db8   0009     tblrd   *+               	TBLRD*+	
002dba   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002dbc   f002
002dbe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002dc0   1284     iorwf   0x84, 0x1, 0     	IORWF	_PORTE, F
002dc2   d015     bra     0x2dee           	BRA	_00938_DS_
                                           _00935_DS_:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tmp/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002dc4   6a02     clrf    0x2, 0           	CLRF	r0x02
002dc6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002dc8   6802     setf    0x2, 0           	SETF	r0x02
002dca   0e7a     movlw   0x7a             	MOVLW	LOW(_mask)
002dcc   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002dce   0e24     movlw   0x24             	MOVLW	HIGH(_mask)
002dd0   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002dd2   0e00     movlw   0                	MOVLW	UPPER(_mask)
002dd4   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002dd6   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002dd8   fff6
002dda   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002ddc   fff7
002dde   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002de0   fff8
002de2   0009     tblrd   *+               	TBLRD*+	
002de4   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002de6   f000
002de8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002dea   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002dec   1684     andwf   0x84, 0x1, 0     	ANDWF	_PORTE, F
                                           _00938_DS_:
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tmp/digitalw.c	}
002dee   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002df0   f006
002df2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002df4   f005
002df6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002df8   f004
002dfa   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002dfc   f003
002dfe   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002e00   f002
002e02   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002e04   f001
002e06   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002e08   f000
002e0a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002e0c   ffd9
002e0e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	289; /home/valentin/github/icaro-bloques/tmp/servos.c	if (PIR1bits.TMR1IF) {
0046c0   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
0046c2   d020     bra     0x4704           	BRA	_00912_DS_
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tmp/servos.c	PIR1bits.TMR1IF=0;
0046c4   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           ;	.line	291; /home/valentin/github/icaro-bloques/tmp/servos.c	T1CON=0x00;
0046c6   6acd     clrf    0xcd, 0          	CLRF	_T1CON
0046c8   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	292; /home/valentin/github/icaro-bloques/tmp/servos.c	if (phase) {
0046ca   5102     movf    0x2, 0, 0x1      	MOVF	_phase, W, B
0046cc   e00b     bz      0x46e4           	BZ	_00908_DS_
                                           ;	.line	294; /home/valentin/github/icaro-bloques/tmp/servos.c	ServosPulseUp();
0046ce   ecfa     call    0x3ff4, 0        	CALL	_ServosPulseUp
0046d0   f01f
                                           ;	.line	296; /home/valentin/github/icaro-bloques/tmp/servos.c	TMR1H= 0xd3;
0046d2   0ed3     movlw   0xd3             	MOVLW	0xd3
0046d4   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	297; /home/valentin/github/icaro-bloques/tmp/servos.c	TMR1L= 0x8f;
0046d6   0e8f     movlw   0x8f             	MOVLW	0x8f
0046d8   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	299; /home/valentin/github/icaro-bloques/tmp/servos.c	T1CON=1;
0046da   0e01     movlw   0x1              	MOVLW	0x01
0046dc   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
0046de   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	300; /home/valentin/github/icaro-bloques/tmp/servos.c	phase = 0;
0046e0   6b02     clrf    0x2, 0x1         	CLRF	_phase, B
0046e2   d010     bra     0x4704           	BRA	_00912_DS_
                                           _00908_DS_:
                                           ;	.line	305; /home/valentin/github/icaro-bloques/tmp/servos.c	ServosPulseDown();
0046e4   ec84     call    0x3f08, 0        	CALL	_ServosPulseDown
0046e6   f01f
                                           ;	.line	309; /home/valentin/github/icaro-bloques/tmp/servos.c	TMR1H= 0x2d;
0046e8   0e2d     movlw   0x2d             	MOVLW	0x2d
0046ea   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	310; /home/valentin/github/icaro-bloques/tmp/servos.c	TMR1L= 0x0f;
0046ec   0e0f     movlw   0xf              	MOVLW	0x0f
0046ee   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00906_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
0046f0   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	312; /home/valentin/github/icaro-bloques/tmp/servos.c	if (needreordering)	
0046f2   5103     movf    0x3, 0, 0x1      	MOVF	_needreordering, W, B
                                           ;	.line	313; /home/valentin/github/icaro-bloques/tmp/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
0046f4   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tmp/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
0046f6   ec63     call    0x24c6, 0        	CALL	_SortServoTimings
0046f8   f012
0046fa   0e21     movlw   0x21             	MOVLW	0x21
0046fc   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	315; /home/valentin/github/icaro-bloques/tmp/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
0046fe   0e01     movlw   0x1              	MOVLW	0x01
004700   0102     movlb   0x2              	BANKSEL	_phase
004702   6f02     movwf   0x2, 0x1         	MOVWF	_phase, B
                                           _00912_DS_:
                                           ;	.line	318; /home/valentin/github/icaro-bloques/tmp/servos.c	return;
004704   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	274; /home/valentin/github/icaro-bloques/tmp/servos.c	void ServoMaximumPulse(uchar servo)
004706   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004708   ffe5
00470a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00470c   ffd9
00470e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004710   ffe5
004712   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004714   ffe5
004716   0e02     movlw   0x2              	MOVLW	0x02
004718   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00471a   f000
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tmp/servos.c	if(servo>=18)        // test if numservo is valid
00471c   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00896_DS_
                                           ; #	GOTO	_00897_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	277; /home/valentin/github/icaro-bloques/tmp/servos.c	return;
00471e   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	279; /home/valentin/github/icaro-bloques/tmp/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
004720   e20e     bc      0x473e           	BC	_00897_DS_
004722   6a01     clrf    0x1, 0           	CLRF	r0x01
004724   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
004726   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004728   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
00472a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00472c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00472e   ffe9
004730   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
004732   ffea
004734   0efa     movlw   0xfa             	MOVLW	0xfa
004736   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	281; /home/valentin/github/icaro-bloques/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004738   0e01     movlw   0x1              	MOVLW	0x01
00473a   0102     movlb   0x2              	BANKSEL	_needreordering
00473c   6f03     movwf   0x3, 0x1         	MOVWF	_needreordering, B
                                           _00897_DS_:
00473e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004740   f001
004742   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004744   f000
004746   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004748   ffd9
00474a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	263; /home/valentin/github/icaro-bloques/tmp/servos.c	void ServoMinimumPulse(uchar servo)
004792   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004794   ffe5
004796   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004798   ffd9
00479a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00479c   ffe5
00479e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0047a0   ffe5
0047a2   0e02     movlw   0x2              	MOVLW	0x02
0047a4   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0047a6   f000
                                           ;	.line	265; /home/valentin/github/icaro-bloques/tmp/servos.c	if(servo>=18)        // test if numservo is valid
0047a8   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00886_DS_
                                           ; #	GOTO	_00887_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	266; /home/valentin/github/icaro-bloques/tmp/servos.c	return;
0047aa   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	268; /home/valentin/github/icaro-bloques/tmp/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
0047ac   e20d     bc      0x47c8           	BC	_00887_DS_
0047ae   6a01     clrf    0x1, 0           	CLRF	r0x01
0047b0   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
0047b2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0047b4   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0047b6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0047b8   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0047ba   ffe9
0047bc   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0047be   ffea
0047c0   0e01     movlw   0x1              	MOVLW	0x01
0047c2   6eef     movwf   0xef, 0          	MOVWF	INDF0
0047c4   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	270; /home/valentin/github/icaro-bloques/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0047c6   6f03     movwf   0x3, 0x1         	MOVWF	_needreordering, B
                                           _00887_DS_:
0047c8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0047ca   f001
0047cc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0047ce   f000
0047d0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0047d2   ffd9
0047d4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	255; /home/valentin/github/icaro-bloques/tmp/servos.c	unsigned char ServoRead(uchar servo)
00474c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00474e   ffe5
004750   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004752   ffd9
004754   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004756   ffe5
004758   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00475a   ffe5
00475c   0e02     movlw   0x2              	MOVLW	0x02
00475e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004760   f000
                                           ;	.line	257; /home/valentin/github/icaro-bloques/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004762   0e12     movlw   0x12             	MOVLW	0x12
004764   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
004766   e302     bnc     0x476c           	BNC	_00876_DS_
                                           ;	.line	258; /home/valentin/github/icaro-bloques/tmp/servos.c	return 0;
004768   6ae8     clrf    0xe8, 0          	CLRF	WREG
00476a   d00c     bra     0x4784           	BRA	_00877_DS_
                                           _00876_DS_:
                                           ;	.line	259; /home/valentin/github/icaro-bloques/tmp/servos.c	return servovalues[servo];
00476c   6a01     clrf    0x1, 0           	CLRF	r0x01
00476e   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
004770   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004772   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
004774   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
004776   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
004778   ffe9
00477a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00477c   ffea
00477e   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
004780   f000
004782   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00877_DS_:
004784   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004786   f001
004788   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00478a   f000
00478c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00478e   ffd9
004790   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	240; /home/valentin/github/icaro-bloques/tmp/servos.c	void ServoWrite(uchar servo, uchar value)
004538   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00453a   ffe5
00453c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00453e   ffd9
004540   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
004542   ffe5
004544   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004546   ffe5
004548   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00454a   ffe5
00454c   0e02     movlw   0x2              	MOVLW	0x02
00454e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004550   f000
004552   0e03     movlw   0x3              	MOVLW	0x03
004554   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004556   f001
                                           ;	.line	242; /home/valentin/github/icaro-bloques/tmp/servos.c	if(servo>=18)        // test if numservo is valid
004558   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00858_DS_
                                           ; #	GOTO	_00863_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	243; /home/valentin/github/icaro-bloques/tmp/servos.c	return;
00455a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	245; /home/valentin/github/icaro-bloques/tmp/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
00455c   e218     bc      0x458e           	BC	_00863_DS_
00455e   0e01     movlw   0x1              	MOVLW	0x01
004560   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
004562   e202     bc      0x4568           	BC	_00860_DS_
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tmp/servos.c	value=SERVOMIN;
004564   0e01     movlw   0x1              	MOVLW	0x01
004566   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00860_DS_:
                                           ;	.line	247; /home/valentin/github/icaro-bloques/tmp/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
004568   0efb     movlw   0xfb             	MOVLW	0xfb
00456a   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
00456c   e302     bnc     0x4572           	BNC	_00862_DS_
                                           ;	.line	248; /home/valentin/github/icaro-bloques/tmp/servos.c	value=SERVOMAX;
00456e   0efa     movlw   0xfa             	MOVLW	0xfa
004570   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00862_DS_:
                                           ;	.line	249; /home/valentin/github/icaro-bloques/tmp/servos.c	servovalues[servo]=value;
004572   6a02     clrf    0x2, 0           	CLRF	r0x02
004574   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
004576   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004578   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
00457a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00457c   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00457e   ffe9
004580   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
004582   ffea
004584   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
004586   ffef
                                           ;	.line	251; /home/valentin/github/icaro-bloques/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004588   0e01     movlw   0x1              	MOVLW	0x01
00458a   0102     movlb   0x2              	BANKSEL	_needreordering
00458c   6f03     movwf   0x3, 0x1         	MOVWF	_needreordering, B
                                           _00863_DS_:
00458e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004590   f002
004592   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004594   f001
004596   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004598   f000
00459a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00459c   ffd9
00459e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	226; /home/valentin/github/icaro-bloques/tmp/servos.c	void ServoDetach(uchar pin)
003c02   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003c04   ffe5
003c06   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003c08   ffd9
003c0a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003c0c   ffe5
003c0e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003c10   ffe5
003c12   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003c14   ffe5
003c16   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003c18   ffe5
003c1a   0e02     movlw   0x2              	MOVLW	0x02
003c1c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003c1e   f000
                                           ;	.line	228; /home/valentin/github/icaro-bloques/tmp/servos.c	if(pin>=18) return;
003c20   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00837_DS_
                                           ; #	GOTO	_00844_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tmp/servos.c	if(pin<8){
003c22   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003c24   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003c26   d04c     bra     0x3cc0           	BRA	_00844_DS_
003c28   0e08     movlw   0x8              	MOVLW	0x08
003c2a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003c2c   e218     bc      0x3c5e           	BC	_00842_DS_
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
003c2e   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
003c30   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003c32   6e01     movwf   0x1, 0           	MOVWF	r0x01
003c34   6a02     clrf    0x2, 0           	CLRF	r0x02
003c36   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
003c38   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003c3a   6a03     clrf    0x3, 0           	CLRF	r0x03
003c3c   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003c3e   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003c40   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003c42   fff6
003c44   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003c46   fff7
003c48   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003c4a   fff8
003c4c   0009     tblrd   *+               	TBLRD*+	
003c4e   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003c50   f001
003c52   0102     movlb   0x2              	BANKSEL	_activatedservos
003c54   5105     movf    0x5, 0, 0x1      	MOVF	_activatedservos, W, B
003c56   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
003c58   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003c5a   6f05     movwf   0x5, 0x1         	MOVWF	_activatedservos, B
003c5c   d031     bra     0x3cc0           	BRA	_00844_DS_
                                           _00842_DS_:
                                           ;	.line	232; /home/valentin/github/icaro-bloques/tmp/servos.c	} else if (pin>12) {
003c5e   0e0d     movlw   0xd              	MOVLW	0x0d
003c60   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003c62   e318     bnc     0x3c94           	BNC	_00839_DS_
                                           ;	.line	233; /home/valentin/github/icaro-bloques/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
003c64   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
003c66   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003c68   6e01     movwf   0x1, 0           	MOVWF	r0x01
003c6a   6a02     clrf    0x2, 0           	CLRF	r0x02
003c6c   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
003c6e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003c70   6a03     clrf    0x3, 0           	CLRF	r0x03
003c72   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003c74   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003c76   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003c78   fff6
003c7a   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003c7c   fff7
003c7e   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003c80   fff8
003c82   0009     tblrd   *+               	TBLRD*+	
003c84   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003c86   f001
003c88   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
003c8a   5107     movf    0x7, 0, 0x1      	MOVF	(_activatedservos + 2), W, B
003c8c   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
003c8e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003c90   6f07     movwf   0x7, 0x1         	MOVWF	(_activatedservos + 2), B
003c92   d016     bra     0x3cc0           	BRA	_00844_DS_
                                           _00839_DS_:
                                           ;	.line	235; /home/valentin/github/icaro-bloques/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
003c94   6a01     clrf    0x1, 0           	CLRF	r0x01
003c96   6a02     clrf    0x2, 0           	CLRF	r0x02
003c98   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
003c9a   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003c9c   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
003c9e   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003ca0   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003ca2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003ca4   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003ca6   fff6
003ca8   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
003caa   fff7
003cac   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003cae   fff8
003cb0   0009     tblrd   *+               	TBLRD*+	
003cb2   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
003cb4   f000
003cb6   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
003cb8   5106     movf    0x6, 0, 0x1      	MOVF	(_activatedservos + 1), W, B
003cba   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
003cbc   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003cbe   6f06     movwf   0x6, 0x1         	MOVWF	(_activatedservos + 1), B
                                           _00844_DS_:
003cc0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003cc2   f003
003cc4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003cc6   f002
003cc8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003cca   f001
003ccc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003cce   f000
003cd0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003cd2   ffd9
003cd4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	209; /home/valentin/github/icaro-bloques/tmp/servos.c	void ServoAttach(uchar pin)
00396c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00396e   ffe5
003970   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003972   ffd9
003974   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003976   ffe5
003978   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00397a   ffe5
00397c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00397e   ffe5
003980   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003982   ffe5
003984   0e02     movlw   0x2              	MOVLW	0x02
003986   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003988   f000
                                           ;	.line	211; /home/valentin/github/icaro-bloques/tmp/servos.c	if(pin>=18) return;
00398a   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00815_DS_
                                           ; #	GOTO	_00822_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tmp/servos.c	if(pin<8){
00398c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00398e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003990   d052     bra     0x3a36           	BRA	_00822_DS_
003992   0e08     movlw   0x8              	MOVLW	0x08
003994   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003996   e21a     bc      0x39cc           	BC	_00820_DS_
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003998   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
00399a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00399c   6e01     movwf   0x1, 0           	MOVWF	r0x01
00399e   6a02     clrf    0x2, 0           	CLRF	r0x02
0039a0   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
0039a2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0039a4   6a03     clrf    0x3, 0           	CLRF	r0x03
0039a6   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0039a8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0039aa   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0039ac   fff6
0039ae   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0039b0   fff7
0039b2   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0039b4   fff8
0039b6   0009     tblrd   *+               	TBLRD*+	
0039b8   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
0039ba   f001
0039bc   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0039be   0102     movlb   0x2              	BANKSEL	_activatedservos
0039c0   1105     iorwf   0x5, 0, 0x1      	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0039c2   6f05     movwf   0x5, 0x1         	MOVWF	_activatedservos, B
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tmp/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
0039c4   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0039c6   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0039c8   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
0039ca   d035     bra     0x3a36           	BRA	_00822_DS_
                                           _00820_DS_:
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tmp/servos.c	} else if (pin>12) {
0039cc   0e0d     movlw   0xd              	MOVLW	0x0d
0039ce   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0039d0   e31a     bnc     0x3a06           	BNC	_00817_DS_
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
0039d2   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
0039d4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0039d6   6e01     movwf   0x1, 0           	MOVWF	r0x01
0039d8   6a02     clrf    0x2, 0           	CLRF	r0x02
0039da   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
0039dc   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0039de   6a03     clrf    0x3, 0           	CLRF	r0x03
0039e0   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0039e2   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0039e4   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0039e6   fff6
0039e8   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0039ea   fff7
0039ec   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0039ee   fff8
0039f0   0009     tblrd   *+               	TBLRD*+	
0039f2   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
0039f4   f001
0039f6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0039f8   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
0039fa   1107     iorwf   0x7, 0, 0x1      	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0039fc   6f07     movwf   0x7, 0x1         	MOVWF	(_activatedservos + 2), B
                                           ;	.line	218; /home/valentin/github/icaro-bloques/tmp/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
0039fe   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003a00   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003a02   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
003a04   d018     bra     0x3a36           	BRA	_00822_DS_
                                           _00817_DS_:
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003a06   6a01     clrf    0x1, 0           	CLRF	r0x01
003a08   6a02     clrf    0x2, 0           	CLRF	r0x02
003a0a   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
003a0c   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003a0e   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
003a10   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003a12   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003a14   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003a16   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003a18   fff6
003a1a   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
003a1c   fff7
003a1e   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003a20   fff8
003a22   0009     tblrd   *+               	TBLRD*+	
003a24   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
003a26   f000
003a28   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a2a   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
003a2c   1106     iorwf   0x6, 0, 0x1      	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003a2e   6f06     movwf   0x6, 0x1         	MOVWF	(_activatedservos + 1), B
                                           ;	.line	221; /home/valentin/github/icaro-bloques/tmp/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003a30   5000     movf    0, 0, 0          	MOVF	r0x00, W
003a32   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003a34   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           _00822_DS_:
003a36   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003a38   f003
003a3a   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003a3c   f002
003a3e   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003a40   f001
003a42   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003a44   f000
003a46   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003a48   ffd9
003a4a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	125; /home/valentin/github/icaro-bloques/tmp/servos.c	static void SortServoTimings()
0024c6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0024c8   ffe5
0024ca   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0024cc   ffe5
0024ce   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0024d0   ffe5
0024d2   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0024d4   ffe5
0024d6   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0024d8   ffe5
0024da   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0024dc   ffe5
0024de   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0024e0   ffe5
0024e2   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0024e4   ffe5
0024e6   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0024e8   ffe5
0024ea   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0024ec   ffe5
0024ee   0103     movlb   0x3              	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tmp/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0024f0   6b0a     clrf    0xa, 0x1         	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
0024f2   6b0b     clrf    0xb, 0x1         	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
0024f4   6b0c     clrf    0xc, 0x1         	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tmp/servos.c	for(t=0;t<18;t++){
0024f6   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00762_DS_:
0024f8   0e12     movlw   0x12             	MOVLW	0x12
0024fa   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0024fc   e223     bc      0x2544           	BC	_00765_DS_
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[timevalue][t]=255;
0024fe   0ec0     movlw   0xc0             	MOVLW	LOW(_timings + 54)
002500   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002502   6e01     movwf   0x1, 0           	MOVWF	r0x01
002504   6a02     clrf    0x2, 0           	CLRF	r0x02
002506   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002508   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00250a   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00250c   ffe9
00250e   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002510   ffea
002512   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002514   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
002516   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002518   6e01     movwf   0x1, 0           	MOVWF	r0x01
00251a   6a02     clrf    0x2, 0           	CLRF	r0x02
00251c   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
00251e   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002520   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002522   ffe9
002524   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
002526   ffea
002528   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	139; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_A][t]=0x00;
00252a   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
00252c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00252e   6e01     movwf   0x1, 0           	MOVWF	r0x01
002530   6a02     clrf    0x2, 0           	CLRF	r0x02
002532   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002534   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002536   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
002538   ffe9
00253a   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00253c   ffea
00253e   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tmp/servos.c	for(t=0;t<18;t++){
002540   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
002542   d7da     bra     0x24f8           	BRA	_00762_DS_
                                           _00765_DS_:
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tmp/servos.c	totalservos=0;
002544   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tmp/servos.c	while(totalservos<18) {
002546   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00759_DS_:
002548   0e12     movlw   0x12             	MOVLW	0x12
00254a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00254c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00254e   d183     bra     0x2856           	BRA	_00761_DS_
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos=1;
002550   0e01     movlw   0x1              	MOVLW	0x01
002552   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	146; /home/valentin/github/icaro-bloques/tmp/servos.c	for(s=0;s<18;s++) { 
002554   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00766_DS_:
002556   0e12     movlw   0x12             	MOVLW	0x12
002558   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00255a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00255c   d157     bra     0x280c           	BRA	_00769_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tmp/servos.c	if (s<8){
00255e   0e08     movlw   0x8              	MOVLW	0x08
002560   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002562   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002564   d061     bra     0x2628           	BRA	_00757_DS_
                                           ;	.line	149; /home/valentin/github/icaro-bloques/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002566   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
002568   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00256a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00256c   6a05     clrf    0x5, 0           	CLRF	r0x05
00256e   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
002570   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002572   6a06     clrf    0x6, 0           	CLRF	r0x06
002574   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002576   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002578   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00257a   fff6
00257c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00257e   fff7
002580   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002582   fff8
002584   0009     tblrd   *+               	TBLRD*+	
002586   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002588   f004
00258a   0103     movlb   0x3              	BANKSEL	_SortServoTimings_mascaratotal_1_1
00258c   510a     movf    0xa, 0, 0x1      	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
00258e   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002590   0102     movlb   0x2              	BANKSEL	_activatedservos
002592   5105     movf    0x5, 0, 0x1      	MOVF	_activatedservos, W, B
002594   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002596   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002598   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
00259a   d136     bra     0x2808           	BRA	_00768_DS_
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00259c   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
00259e   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0025a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0025a2   6a05     clrf    0x5, 0           	CLRF	r0x05
0025a4   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0025a6   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0025a8   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0025aa   ffe9
0025ac   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0025ae   ffea
0025b0   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
0025b2   f004
0025b4   0ec0     movlw   0xc0             	MOVLW	LOW(_timings + 54)
0025b6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025b8   6e05     movwf   0x5, 0           	MOVWF	r0x05
0025ba   6a06     clrf    0x6, 0           	CLRF	r0x06
0025bc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
0025be   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0025c0   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0025c2   ffe9
0025c4   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0025c6   ffea
0025c8   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
0025ca   f007
0025cc   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0025ce   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
0025d0   e21f     bc      0x2610           	BC	_00732_DS_
                                           ;	.line	152; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[timevalue][t]=servovalues[s];
0025d2   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0025d4   ffe9
0025d6   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0025d8   ffea
0025da   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0025dc   ffef
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0025de   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
0025e0   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025e2   6e07     movwf   0x7, 0           	MOVWF	r0x07
0025e4   6a08     clrf    0x8, 0           	CLRF	r0x08
0025e6   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0025e8   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0025ea   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0025ec   ffe9
0025ee   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0025f0   ffea
0025f2   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0025f4   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
0025f6   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0025f8   6e07     movwf   0x7, 0           	MOVWF	r0x07
0025fa   6a08     clrf    0x8, 0           	CLRF	r0x08
0025fc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0025fe   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
002600   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
002602   ffe9
002604   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
002606   ffea
002608   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	156; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos=1;
00260a   0e01     movlw   0x1              	MOVLW	0x01
00260c   6e02     movwf   0x2, 0           	MOVWF	r0x02
00260e   d0fc     bra     0x2808           	BRA	_00768_DS_
                                           _00732_DS_:
                                           ;	.line	158; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002610   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002612   ffe9
002614   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002616   ffea
002618   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
00261a   f005
00261c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00261e   1805     xorwf   0x5, 0, 0        	XORWF	r0x05, W
002620   e001     bz      0x2624           	BZ	_00799_DS_
002622   d0f2     bra     0x2808           	BRA	_00768_DS_
                                           _00799_DS_:
                                           ;	.line	160; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos++;
002624   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
002626   d0f0     bra     0x2808           	BRA	_00768_DS_
                                           _00757_DS_:
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (s>12){
002628   0e0d     movlw   0xd              	MOVLW	0x0d
00262a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00262c   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00262e   d077     bra     0x271e           	BRA	_00754_DS_
                                           ;	.line	165; /home/valentin/github/icaro-bloques/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002630   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
002632   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002634   6e04     movwf   0x4, 0           	MOVWF	r0x04
002636   6a05     clrf    0x5, 0           	CLRF	r0x05
002638   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
00263a   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00263c   6a06     clrf    0x6, 0           	CLRF	r0x06
00263e   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
002640   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002642   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002644   fff6
002646   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002648   fff7
00264a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00264c   fff8
00264e   0009     tblrd   *+               	TBLRD*+	
002650   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002652   f004
002654   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
002656   510c     movf    0xc, 0, 0x1      	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002658   1404     andwf   0x4, 0, 0        	ANDWF	r0x04, W
00265a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00265c   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
00265e   5107     movf    0x7, 0, 0x1      	MOVF	(_activatedservos + 2), W, B
002660   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
002662   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002664   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002666   d0d0     bra     0x2808           	BRA	_00768_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002668   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
00266a   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00266c   6e05     movwf   0x5, 0           	MOVWF	r0x05
00266e   6a06     clrf    0x6, 0           	CLRF	r0x06
002670   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002672   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002674   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002676   ffe9
002678   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00267a   ffea
00267c   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
00267e   f005
002680   0ec0     movlw   0xc0             	MOVLW	LOW(_timings + 54)
002682   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002684   6e06     movwf   0x6, 0           	MOVWF	r0x06
002686   6a07     clrf    0x7, 0           	CLRF	r0x07
002688   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
00268a   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
00268c   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
00268e   ffe9
002690   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
002692   ffea
002694   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002696   f008
002698   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00269a   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00269c   e220     bc      0x26de           	BC	_00740_DS_
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[timevalue][t]=servovalues[s];
00269e   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0026a0   ffe9
0026a2   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0026a4   ffea
0026a6   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
0026a8   ffef
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0026aa   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
0026ac   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0026ae   6e08     movwf   0x8, 0           	MOVWF	r0x08
0026b0   6a09     clrf    0x9, 0           	CLRF	r0x09
0026b2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0026b4   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
0026b6   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0026b8   ffe9
0026ba   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
0026bc   ffea
0026be   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_A][t]=servomasks[s];
0026c0   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
0026c2   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0026c4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0026c6   6a09     clrf    0x9, 0           	CLRF	r0x09
0026c8   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0026ca   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
0026cc   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0026ce   ffe9
0026d0   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
0026d2   ffea
0026d4   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0026d6   ffef
                                           ;	.line	172; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos=1;
0026d8   0e01     movlw   0x1              	MOVLW	0x01
0026da   6e02     movwf   0x2, 0           	MOVWF	r0x02
0026dc   d095     bra     0x2808           	BRA	_00768_DS_
                                           _00740_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0026de   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0026e0   ffe9
0026e2   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0026e4   ffea
0026e6   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0026e8   f006
0026ea   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0026ec   1806     xorwf   0x6, 0, 0        	XORWF	r0x06, W
0026ee   e001     bz      0x26f2           	BZ	_00804_DS_
0026f0   d08b     bra     0x2808           	BRA	_00768_DS_
                                           _00804_DS_:
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_A][t] |= servomasks[s];
0026f2   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
0026f4   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0026f6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0026f8   6a06     clrf    0x6, 0           	CLRF	r0x06
0026fa   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0026fc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0026fe   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002700   ffe9
002702   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002704   ffea
002706   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
002708   f007
00270a   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
00270c   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
00270e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002710   ffe9
002712   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002714   ffea
002716   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002718   ffef
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos++;
00271a   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
00271c   d075     bra     0x2808           	BRA	_00768_DS_
                                           _00754_DS_:
                                           ;	.line	181; /home/valentin/github/icaro-bloques/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
00271e   0e68     movlw   0x68             	MOVLW	LOW(_servomasks)
002720   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002722   6e04     movwf   0x4, 0           	MOVWF	r0x04
002724   6a05     clrf    0x5, 0           	CLRF	r0x05
002726   0e24     movlw   0x24             	MOVLW	HIGH(_servomasks)
002728   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00272a   6a06     clrf    0x6, 0           	CLRF	r0x06
00272c   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00272e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002730   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002732   fff6
002734   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002736   fff7
002738   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00273a   fff8
00273c   0009     tblrd   *+               	TBLRD*+	
00273e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002740   f004
002742   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
002744   510b     movf    0xb, 0, 0x1      	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002746   1404     andwf   0x4, 0, 0        	ANDWF	r0x04, W
002748   6e05     movwf   0x5, 0           	MOVWF	r0x05
00274a   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
00274c   5106     movf    0x6, 0, 0x1      	MOVF	(_activatedservos + 1), W, B
00274e   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
002750   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002752   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002754   d059     bra     0x2808           	BRA	_00768_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002756   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
002758   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
00275a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00275c   6a06     clrf    0x6, 0           	CLRF	r0x06
00275e   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002760   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002762   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002764   ffe9
002766   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002768   ffea
00276a   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
00276c   f005
00276e   0ec0     movlw   0xc0             	MOVLW	LOW(_timings + 54)
002770   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002772   6e06     movwf   0x6, 0           	MOVWF	r0x06
002774   6a07     clrf    0x7, 0           	CLRF	r0x07
002776   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002778   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
00277a   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
00277c   ffe9
00277e   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
002780   ffea
002782   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002784   f008
002786   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002788   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
00278a   e220     bc      0x27cc           	BC	_00748_DS_
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[timevalue][t]=servovalues[s];
00278c   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
00278e   ffe9
002790   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
002792   ffea
002794   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
002796   ffef
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_C][t]=servomasks[s];
002798   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
00279a   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00279c   6e08     movwf   0x8, 0           	MOVWF	r0x08
00279e   6a09     clrf    0x9, 0           	CLRF	r0x09
0027a0   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0027a2   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
0027a4   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0027a6   ffe9
0027a8   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
0027aa   ffea
0027ac   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
0027ae   ffef
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0027b0   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
0027b2   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0027b4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0027b6   6a09     clrf    0x9, 0           	CLRF	r0x09
0027b8   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0027ba   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
0027bc   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0027be   ffe9
0027c0   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
0027c2   ffea
0027c4   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	188; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos=1;
0027c6   0e01     movlw   0x1              	MOVLW	0x01
0027c8   6e02     movwf   0x2, 0           	MOVWF	r0x02
0027ca   d01e     bra     0x2808           	BRA	_00768_DS_
                                           _00748_DS_:
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tmp/servos.c	else if (servovalues[s] == timings [timevalue][t]){
0027cc   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0027ce   ffe9
0027d0   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0027d2   ffea
0027d4   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0027d6   f006
0027d8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0027da   1806     xorwf   0x6, 0, 0        	XORWF	r0x06, W
0027dc   e115     bnz     0x2808           	BNZ	_00768_DS_
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tmp/servos.c	timings[MaskPort_C][t] |= servomasks[s];
0027de   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
0027e0   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0027e2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0027e4   6a06     clrf    0x6, 0           	CLRF	r0x06
0027e6   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0027e8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0027ea   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0027ec   ffe9
0027ee   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0027f0   ffea
0027f2   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
0027f4   f007
0027f6   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0027f8   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0027fa   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0027fc   ffe9
0027fe   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
002800   ffea
002802   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002804   ffef
                                           ;	.line	192; /home/valentin/github/icaro-bloques/tmp/servos.c	numservos++;
002806   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00768_DS_:
                                           ;	.line	146; /home/valentin/github/icaro-bloques/tmp/servos.c	for(s=0;s<18;s++) { 
002808   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
00280a   d6a5     bra     0x2556           	BRA	_00766_DS_
                                           _00769_DS_:
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tmp/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
00280c   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
00280e   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002810   6e03     movwf   0x3, 0           	MOVWF	r0x03
002812   6a04     clrf    0x4, 0           	CLRF	r0x04
002814   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
002816   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002818   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00281a   ffe9
00281c   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
00281e   ffea
002820   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002822   f003
002824   0103     movlb   0x3              	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
002826   510b     movf    0xb, 0, 0x1      	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002828   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
00282a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00282c   6f0b     movwf   0xb, 0x1         	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tmp/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
00282e   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
002830   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002832   6e03     movwf   0x3, 0           	MOVWF	r0x03
002834   6a04     clrf    0x4, 0           	CLRF	r0x04
002836   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002838   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00283a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00283c   ffe9
00283e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002840   ffea
002842   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002844   f003
                                           ; removed redundant BANKSEL
002846   510c     movf    0xc, 0, 0x1      	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002848   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
00284a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00284c   6f0c     movwf   0xc, 0x1         	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tmp/servos.c	totalservos += numservos;
00284e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002850   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ;	.line	201; /home/valentin/github/icaro-bloques/tmp/servos.c	t++;
002852   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002854   d679     bra     0x2548           	BRA	_00759_DS_
                                           _00761_DS_:
002856   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	204; /home/valentin/github/icaro-bloques/tmp/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002858   6b03     clrf    0x3, 0x1         	CLRF	_needreordering, B
00285a   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00285c   f009
00285e   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
002860   f008
002862   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002864   f007
002866   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002868   f006
00286a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00286c   f005
00286e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002870   f004
002872   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002874   f003
002876   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002878   f002
00287a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00287c   f001
00287e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002880   f000
002882   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	120; /home/valentin/github/icaro-bloques/tmp/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
003ff4   c206     movff   0x206, 0xf82     	MOVFF	(_activatedservos + 1), _PORTC
003ff6   ff82
                                           ;	.line	121; /home/valentin/github/icaro-bloques/tmp/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
003ff8   c207     movff   0x207, 0xf80     	MOVFF	(_activatedservos + 2), _PORTA
003ffa   ff80
003ffc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tmp/servos.c	static void ServosPulseDown()
003f08   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003f0a   ffe5
003f0c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003f0e   ffd9
003f10   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003f12   ffe5
003f14   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003f16   ffe5
003f18   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tmp/servos.c	timingindex = 0;
003f1a   6b1c     clrf    0x1c, 0x1        	CLRF	_timingindex, B
003f1c   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003f1e   6b04     clrf    0x4, 0x1         	CLRF	_timedivision, B
                                           _00708_DS_:
003f20   0efb     movlw   0xfb             	MOVLW	0xfb
003f22   0102     movlb   0x2              	BANKSEL	_timedivision
003f24   5d04     subwf   0x4, 0, 0x1      	SUBWF	_timedivision, W, B
003f26   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
003f28   d039     bra     0x3f9c           	BRA	_00712_DS_
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tmp/servos.c	if (timings[timevalue][timingindex] == timedivision){
003f2a   c31c     movff   0x31c, 0         	MOVFF	_timingindex, r0x00
003f2c   f000
003f2e   6a01     clrf    0x1, 0           	CLRF	r0x01
003f30   0ec0     movlw   0xc0             	MOVLW	LOW(_timings + 54)
003f32   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003f34   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
003f36   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003f38   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f3a   ffe9
003f3c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003f3e   ffea
003f40   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003f42   f000
003f44   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003f46   1904     xorwf   0x4, 0, 0x1      	XORWF	_timedivision, W, B
003f48   e120     bnz     0x3f8a           	BNZ	_00707_DS_
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tmp/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
003f4a   c31c     movff   0x31c, 0         	MOVFF	_timingindex, r0x00
003f4c   f000
003f4e   6a01     clrf    0x1, 0           	CLRF	r0x01
003f50   0e9c     movlw   0x9c             	MOVLW	LOW(_timings + 18)
003f52   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003f54   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
003f56   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003f58   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f5a   ffe9
003f5c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003f5e   ffea
003f60   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003f62   f000
003f64   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f66   1a82     xorwf   0x82, 0x1, 0     	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/github/icaro-bloques/tmp/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
003f68   c31c     movff   0x31c, 0         	MOVFF	_timingindex, r0x00
003f6a   f000
003f6c   6a01     clrf    0x1, 0           	CLRF	r0x01
003f6e   0eae     movlw   0xae             	MOVLW	LOW(_timings + 36)
003f70   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003f72   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
003f74   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003f76   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003f78   ffe9
003f7a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003f7c   ffea
003f7e   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003f80   f000
003f82   5000     movf    0, 0, 0          	MOVF	r0x00, W
003f84   1a80     xorwf   0x80, 0x1, 0     	XORWF	_PORTA, F
003f86   0103     movlb   0x3              	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tmp/servos.c	timingindex++;
003f88   2b1c     incf    0x1c, 0x1, 0x1   	INCF	_timingindex, F, B
                                           _00707_DS_:
003f8a   0e0c     movlw   0xc              	movlw 12
003f8c   6f14     movwf   0x14, 0x1        	movwf _loopvar
                                           bucle:
003f8e   0000     nop                      	NOP
003f90   2f14     decfsz  0x14, 0x1, 0x1   	decfsz _loopvar,1
003f92   efc7     goto    0x3f8e           	goto bucle
003f94   f01f
                                           	
003f96   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003f98   2b04     incf    0x4, 0x1, 0x1    	INCF	_timedivision, F, B
003f9a   d7c2     bra     0x3f20           	BRA	_00708_DS_
                                           _00712_DS_:
003f9c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003f9e   f001
003fa0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003fa2   f000
003fa4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003fa6   ffd9
003fa8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tmp/servos.c	void servos_init()
003faa   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003fac   ffe5
003fae   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003fb0   ffe5
003fb2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003fb4   ffe5
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tmp/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
003fb6   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00692_DS_:
003fb8   0e12     movlw   0x12             	MOVLW	0x12
003fba   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
003fbc   e20d     bc      0x3fd8           	BC	_00695_DS_
003fbe   0ed2     movlw   0xd2             	MOVLW	LOW(_servovalues)
003fc0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003fc2   6e01     movwf   0x1, 0           	MOVWF	r0x01
003fc4   6a02     clrf    0x2, 0           	CLRF	r0x02
003fc6   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
003fc8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003fca   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003fcc   ffe9
003fce   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
003fd0   ffea
003fd2   68ef     setf    0xef, 0          	SETF	INDF0
003fd4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
003fd6   d7f0     bra     0x3fb8           	BRA	_00692_DS_
                                           _00695_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tmp/servos.c	TMR1H=0xFF;
003fd8   68cf     setf    0xcf, 0          	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tmp/servos.c	TMR1L=0x00;
003fda   6ace     clrf    0xce, 0          	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tmp/servos.c	T1CON=0x01;
003fdc   0e01     movlw   0x1              	MOVLW	0x01
003fde   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tmp/servos.c	PIE1bits.TMR1IE=1;
003fe0   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tmp/servos.c	INTCONbits.PEIE=1;
003fe2   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tmp/servos.c	INTCONbits.GIE=1;
003fe4   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
003fe6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003fe8   f002
003fea   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003fec   f001
003fee   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003ff0   f000
003ff2   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tmp/analog.c	unsigned int analogread(unsigned char channel)
0042b2   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0042b4   ffe5
0042b6   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0042b8   ffd9
0042ba   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0042bc   ffe5
0042be   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0042c0   ffe5
0042c2   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0042c4   ffe5
0042c6   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0042c8   ffe5
0042ca   0e02     movlw   0x2              	MOVLW	0x02
0042cc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0042ce   f000
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON1=0x0A;
0042d0   0e0a     movlw   0xa              	MOVLW	0x0a
0042d2   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON0=(channel-13)*4;
0042d4   0ef3     movlw   0xf3             	MOVLW	0xf3
0042d6   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
0042d8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0042da   0d04     mullw   0x4              	MULLW	0x04
0042dc   cff3     movff   0xff3, 0xfc2     	MOVFF	PRODL, _ADCON0
0042de   ffc2
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON2=0xBD;
0042e0   0ebd     movlw   0xbd             	MOVLW	0xbd
0042e2   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON0bits.ADON=1;
0042e4   80c2     bsf     0xc2, 0, 0       	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tmp/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
0042e6   0e09     movlw   0x9              	MOVLW	0x09
0042e8   6e00     movwf   0, 0             	MOVWF	r0x00
0042ea   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00686_DS_:
0042ec   0000     nop                      	NOP 
0042ee   0eff     movlw   0xff             	MOVLW	0xff
0042f0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0042f2   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0042f4   0601     decf    0x1, 0x1, 0      	DECF	r0x01, F
0042f6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0042f8   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
0042fa   e1f8     bnz     0x42ec           	BNZ	_00686_DS_
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON0bits.GO=1;
0042fc   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           _00681_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tmp/analog.c	while (ADCON0bits.GO);
0042fe   b2c2     btfsc   0xc2, 0x1, 0     	BTFSC	_ADCON0bits, 1
004300   d7fe     bra     0x42fe           	BRA	_00681_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tmp/analog.c	result=ADRESH<<8;
004302   cfc4     movff   0xfc4, 0         	MOVFF	_ADRESH, r0x00
004304   f000
004306   6a01     clrf    0x1, 0           	CLRF	r0x01
004308   5000     movf    0, 0, 0          	MOVF	r0x00, W
00430a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00430c   6a02     clrf    0x2, 0           	CLRF	r0x02
00430e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
004310   6e00     movwf   0, 0             	MOVWF	r0x00
004312   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004314   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tmp/analog.c	result+=ADRESL;
004316   cfc3     movff   0xfc3, 0x2       	MOVFF	_ADRESL, r0x02
004318   f002
00431a   6a03     clrf    0x3, 0           	CLRF	r0x03
00431c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00431e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
004320   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004322   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON0bits.ADON=0;
004324   90c2     bcf     0xc2, 0, 0       	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tmp/analog.c	return(result);
004326   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
004328   fff3
00432a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00432c   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00432e   f003
004330   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004332   f002
004334   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
004336   f001
004338   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00433a   f000
00433c   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00433e   ffd9
004340   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tmp/analog.c	TRISA=TRISA | 0x2F;
0048ea   0e2f     movlw   0x2f             	MOVLW	0x2f
0048ec   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tmp/analog.c	TRISE=TRISE | 0x07;
0048ee   0e07     movlw   0x7              	MOVLW	0x07
0048f0   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON1=0x07;
0048f2   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tmp/analog.c	ADCON2=0xBD;
0048f4   0ebd     movlw   0xbd             	MOVLW	0xbd
0048f6   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
0048f8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_CDC	code
                                           _init_CDC:
                                           ;	.line	17; /home/valentin/github/icaro-bloques/tmp/__cdc.c	INTCON=0;
0045a0   6af2     clrf    0xf2, 0          	CLRF	_INTCON
                                           ;	.line	18; /home/valentin/github/icaro-bloques/tmp/__cdc.c	INTCON2=0xC0;
0045a2   0ec0     movlw   0xc0             	MOVLW	0xc0
0045a4   6ef1     movwf   0xf1, 0          	MOVWF	_INTCON2
                                           ;	.line	19; /home/valentin/github/icaro-bloques/tmp/__cdc.c	UCON=0;
0045a6   6a6d     clrf    0x6d, 0          	CLRF	_UCON
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tmp/__cdc.c	UCFG=0;
0045a8   6a6f     clrf    0x6f, 0          	CLRF	_UCFG
                                           ;	.line	21; /home/valentin/github/icaro-bloques/tmp/__cdc.c	UEP0=0;UEP1=0;UEP2=0;UEP3=0;UEP4=0;UEP5=0;
0045aa   6a70     clrf    0x70, 0          	CLRF	_UEP0
0045ac   6a71     clrf    0x71, 0          	CLRF	_UEP1
0045ae   6a72     clrf    0x72, 0          	CLRF	_UEP2
0045b0   6a73     clrf    0x73, 0          	CLRF	_UEP3
0045b2   6a74     clrf    0x74, 0          	CLRF	_UEP4
0045b4   6a75     clrf    0x75, 0          	CLRF	_UEP5
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tmp/__cdc.c	UEP6=0;UEP7=0;UEP8=0;UEP9=0;UEP10=0;UEP11=0;
0045b6   6a76     clrf    0x76, 0          	CLRF	_UEP6
0045b8   6a77     clrf    0x77, 0          	CLRF	_UEP7
0045ba   6a78     clrf    0x78, 0          	CLRF	_UEP8
0045bc   6a79     clrf    0x79, 0          	CLRF	_UEP9
0045be   6a7a     clrf    0x7a, 0          	CLRF	_UEP10
0045c0   6a7b     clrf    0x7b, 0          	CLRF	_UEP11
                                           ;	.line	23; /home/valentin/github/icaro-bloques/tmp/__cdc.c	UEP12=0;UEP13=0;UEP14=0;UEP15=0;
0045c2   6a7c     clrf    0x7c, 0          	CLRF	_UEP12
0045c4   6a7d     clrf    0x7d, 0          	CLRF	_UEP13
0045c6   6a7e     clrf    0x7e, 0          	CLRF	_UEP14
0045c8   6a7f     clrf    0x7f, 0          	CLRF	_UEP15
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tmp/__cdc.c	Delayms(2000);
0045ca   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0045cc   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0045ce   0e07     movlw   0x7              	MOVLW	0x07
0045d0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045d2   0ed0     movlw   0xd0             	MOVLW	0xd0
0045d4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0045d6   ec76     call    0x40ec, 0        	CALL	_Delayms
0045d8   f020
0045da   0e04     movlw   0x4              	MOVLW	0x04
0045dc   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tmp/__cdc.c	UCFG = 0x14; 				// Enable pullup resistors; full speed mode
0045de   0e14     movlw   0x14             	MOVLW	0x14
0045e0   6e6f     movwf   0x6f, 0          	MOVWF	_UCFG
0045e2   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tmp/__cdc.c	deviceState = DETACHED;
0045e4   6b19     clrf    0x19, 0x1        	CLRF	_deviceState, B
0045e6   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tmp/__cdc.c	remoteWakeup = 0x00;
0045e8   6b18     clrf    0x18, 0x1        	CLRF	_remoteWakeup, B
0045ea   0103     movlb   0x3              	BANKSEL	_currentConfiguration
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tmp/__cdc.c	currentConfiguration = 0x00;
0045ec   6b1a     clrf    0x1a, 0x1        	CLRF	_currentConfiguration, B
                                           _00663_DS_:
0045ee   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tmp/__cdc.c	while(deviceState != CONFIGURED)
0045f0   5119     movf    0x19, 0, 0x1     	MOVF	_deviceState, W, B
0045f2   0a05     xorlw   0x5              	XORLW	0x05
0045f4   e005     bz      0x4600           	BZ	_00666_DS_
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tmp/__cdc.c	EnableUSBModule();
0045f6   ec0d     call    0x481a, 0        	CALL	_EnableUSBModule
0045f8   f024
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tmp/__cdc.c	ProcessUSBTransactions();
0045fa   ec66     call    0x44cc, 0        	CALL	_ProcessUSBTransactions
0045fc   f022
0045fe   d7f7     bra     0x45ee           	BRA	_00663_DS_
                                           _00666_DS_:
004600   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tmp/arduinodelay.c	void Delayus(int microsecondes)
004662   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004664   ffe5
004666   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004668   ffd9
00466a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00466c   ffe5
00466e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
004670   ffe5
004672   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
004674   ffe5
004676   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004678   ffe5
00467a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00467c   ffe5
00467e   0e02     movlw   0x2              	MOVLW	0x02
004680   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004682   f000
004684   0e03     movlw   0x3              	MOVLW	0x03
004686   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
004688   f001
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tmp/arduinodelay.c	for (i=0;i<microsecondes;i++);
00468a   6a02     clrf    0x2, 0           	CLRF	r0x02
00468c   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00649_DS_:
00468e   5000     movf    0, 0, 0          	MOVF	r0x00, W
004690   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
004692   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004694   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
004696   e102     bnz     0x469c           	BNZ	_00658_DS_
004698   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00469a   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00658_DS_:
00469c   e204     bc      0x46a6           	BC	_00653_DS_
00469e   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0046a0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0046a2   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0046a4   d7f4     bra     0x468e           	BRA	_00649_DS_
                                           _00653_DS_:
0046a6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0046a8   f004
0046aa   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0046ac   f003
0046ae   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0046b0   f002
0046b2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0046b4   f001
0046b6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0046b8   f000
0046ba   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0046bc   ffd9
0046be   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tmp/arduinodelay.c	void Delayms(unsigned long milliseconde)
0040ec   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0040ee   ffe5
0040f0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0040f2   ffd9
0040f4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0040f6   ffe5
0040f8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0040fa   ffe5
0040fc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0040fe   ffe5
004100   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
004102   ffe5
004104   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
004106   ffe5
004108   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00410a   ffe5
00410c   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00410e   ffe5
004110   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
004112   ffe5
004114   0e02     movlw   0x2              	MOVLW	0x02
004116   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
004118   f000
00411a   0e03     movlw   0x3              	MOVLW	0x03
00411c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00411e   f001
004120   0e04     movlw   0x4              	MOVLW	0x04
004122   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
004124   f002
004126   0e05     movlw   0x5              	MOVLW	0x05
004128   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00412a   f003
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tmp/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
00412c   6a04     clrf    0x4, 0           	CLRF	r0x04
00412e   6a05     clrf    0x5, 0           	CLRF	r0x05
004130   6a06     clrf    0x6, 0           	CLRF	r0x06
004132   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00635_DS_:
004134   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
004136   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
004138   e108     bnz     0x414a           	BNZ	_00644_DS_
00413a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00413c   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
00413e   e105     bnz     0x414a           	BNZ	_00644_DS_
004140   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
004142   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
004144   e102     bnz     0x414a           	BNZ	_00644_DS_
004146   5000     movf    0, 0, 0          	MOVF	r0x00, W
004148   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00644_DS_:
00414a   e20b     bc      0x4162           	BC	_00639_DS_
00414c   0e01     movlw   0x1              	MOVLW	0x01
00414e   ec37     call    0x6e, 0          	CALL	_delay10ktcy
004150   f000
004152   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
004154   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
004156   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
004158   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00415a   2a06     incf    0x6, 0x1, 0      	INCF	r0x06, F
00415c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00415e   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
004160   d7e9     bra     0x4134           	BRA	_00635_DS_
                                           _00639_DS_:
004162   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
004164   f007
004166   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
004168   f006
00416a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00416c   f005
00416e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
004170   f004
004172   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
004174   f003
004176   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
004178   f002
00417a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00417c   f001
00417e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004180   f000
004182   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004184   ffd9
004186   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
004602   0103     movlb   0x3              	BANKSEL	_line_config
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
004604   6b00     clrf    0, 0x1           	CLRF	_line_config, B
004606   0ec2     movlw   0xc2             	MOVLW	0xc2
                                           ; removed redundant BANKSEL
004608   6f01     movwf   0x1, 0x1         	MOVWF	(_line_config + 1), B
00460a   0e01     movlw   0x1              	MOVLW	0x01
                                           ; removed redundant BANKSEL
00460c   6f02     movwf   0x2, 0x1         	MOVWF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
00460e   6b03     clrf    0x3, 0x1         	CLRF	(_line_config + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
004610   6b04     clrf    0x4, 0x1         	CLRF	(_line_config + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
004612   6b05     clrf    0x5, 0x1         	CLRF	(_line_config + 5), B
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
004614   0e08     movlw   0x8              	MOVLW	0x08
                                           ; removed redundant BANKSEL
004616   6f06     movwf   0x6, 0x1         	MOVWF	(_line_config + 6), B
004618   0102     movlb   0x2              	BANKSEL	_zlp
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue0=0;
00461a   6bf4     clrf    0xf4, 0x1        	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	172; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue1=0;
00461c   6bf5     clrf    0xf5, 0x1        	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue2=0;
00461e   6bf6     clrf    0xf6, 0x1        	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue3=0;
004620   6bf7     clrf    0xf7, 0x1        	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue4=0;
004622   6bf8     clrf    0xf8, 0x1        	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue5=0;
004624   6bf9     clrf    0xf9, 0x1        	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	177; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue6=0;
004626   6bfa     clrf    0xfa, 0x1        	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	178; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	zlp.wValue7=0;
004628   6bfb     clrf    0xfb, 0x1        	CLRF	(_zlp + 7), B
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
00462a   0e1a     movlw   0x1a             	MOVLW	0x1a
00462c   6e72     movwf   0x72, 0          	MOVWF	_UEP2
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
00462e   0e1e     movlw   0x1e             	MOVLW	0x1e
004630   6e73     movwf   0x73, 0          	MOVWF	_UEP3
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
004632   0ee4     movlw   0xe4             	MOVLW	LOW(_CDCControlBuffer)
004634   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 22)
004636   6f16     movwf   0x16, 0x1        	MOVWF	(_ep_bdt + 22), B
004638   0e02     movlw   0x2              	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
00463a   6f17     movwf   0x17, 0x1        	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
00463c   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
00463e   6f14     movwf   0x14, 0x1        	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
004640   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
004642   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004644   6f1a     movwf   0x1a, 0x1        	MOVWF	(_ep_bdt + 26), B
004646   0e05     movlw   0x5              	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004648   6f1b     movwf   0x1b, 0x1        	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
00464a   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
00464c   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
00464e   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004650   6f1e     movwf   0x1e, 0x1        	MOVWF	(_ep_bdt + 30), B
004652   0e05     movlw   0x5              	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004654   6f1f     movwf   0x1f, 0x1        	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
004656   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
004658   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	deviceState=CONFIGURED; 
00465a   0e05     movlw   0x5              	MOVLW	0x05
00465c   0103     movlb   0x3              	BANKSEL	_deviceState
00465e   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
004660   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCputs	code
                                           _CDCputs:
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	byte CDCputs(char *buffer, byte length) {
003544   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003546   ffe5
003548   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00354a   ffd9
00354c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00354e   ffe5
003550   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003552   ffe5
003554   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003556   ffe5
003558   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00355a   ffe5
00355c   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00355e   ffe5
003560   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003562   ffe5
003564   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003566   ffe5
003568   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00356a   ffe5
00356c   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00356e   ffe5
003570   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
003572   ffe5
003574   0e02     movlw   0x2              	MOVLW	0x02
003576   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003578   f000
00357a   0e03     movlw   0x3              	MOVLW	0x03
00357c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00357e   f001
003580   0e04     movlw   0x4              	MOVLW	0x04
003582   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003584   f002
003586   0e05     movlw   0x5              	MOVLW	0x05
003588   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00358a   f003
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	byte i=0;
00358c   6a04     clrf    0x4, 0           	CLRF	r0x04
00358e   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
003590   5119     movf    0x19, 0, 0x1     	MOVF	_deviceState, W, B
003592   0a05     xorlw   0x5              	XORLW	0x05
003594   e002     bz      0x359a           	BZ	_00602_DS_
003596   6ae8     clrf    0xe8, 0          	CLRF	WREG
003598   d04c     bra     0x3632           	BRA	_00613_DS_
                                           _00602_DS_:
00359a   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
00359c   5101     movf    0x1, 0, 0x1      	MOVF	_CONTROL_LINE, W, B
00359e   e102     bnz     0x35a4           	BNZ	_00604_DS_
0035a0   6ae8     clrf    0xe8, 0          	CLRF	WREG
0035a2   d047     bra     0x3632           	BRA	_00613_DS_
                                           _00604_DS_:
0035a4   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
0035a6   bf1c     btfsc   0x1c, 0x7, 0x1   	BTFSC	(_ep_bdt + 28), 7, B
0035a8   d043     bra     0x3630           	BRA	_00608_DS_
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE) length = CDC_BULK_IN_SIZE;
0035aa   0e41     movlw   0x41             	MOVLW	0x41
0035ac   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0035ae   e302     bnc     0x35b4           	BNC	_00620_DS_
0035b0   0e40     movlw   0x40             	MOVLW	0x40
0035b2   6e03     movwf   0x3, 0           	MOVWF	r0x03
                                           _00620_DS_:
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	for (i=0; i < length; i++) {
0035b4   6a05     clrf    0x5, 0           	CLRF	r0x05
                                           _00609_DS_:
0035b6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0035b8   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
0035ba   e21d     bc      0x35f6           	BC	_00621_DS_
                                           ;	.line	139; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
0035bc   0ec0     movlw   0xc0             	MOVLW	LOW(_CDCTxBuffer)
0035be   2405     addwf   0x5, 0, 0        	ADDWF	r0x05, W
0035c0   6e06     movwf   0x6, 0           	MOVWF	r0x06
0035c2   6a07     clrf    0x7, 0           	CLRF	r0x07
0035c4   0e05     movlw   0x5              	MOVLW	HIGH(_CDCTxBuffer)
0035c6   2207     addwfc  0x7, 0x1, 0      	ADDWFC	r0x07, F
0035c8   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0035ca   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0035cc   6e08     movwf   0x8, 0           	MOVWF	r0x08
0035ce   6ae8     clrf    0xe8, 0          	CLRF	WREG
0035d0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0035d2   6e09     movwf   0x9, 0           	MOVWF	r0x09
0035d4   6ae8     clrf    0xe8, 0          	CLRF	WREG
0035d6   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0035d8   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0035da   ffe9
0035dc   c009     movff   0x9, 0xff3       	MOVFF	r0x09, PRODL
0035de   fff3
0035e0   ec29     call    0x52, 0          	CALL	__gptrget1
0035e2   f000
0035e4   6e08     movwf   0x8, 0           	MOVWF	r0x08
0035e6   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
0035e8   ffe9
0035ea   c007     movff   0x7, 0xfea       	MOVFF	r0x07, FSR0H
0035ec   ffea
0035ee   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
0035f0   ffef
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	for (i=0; i < length; i++) {
0035f2   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
0035f4   d7e0     bra     0x35b6           	BRA	_00609_DS_
                                           _00621_DS_:
0035f6   c005     movff   0x5, 0x4         	MOVFF	r0x05, r0x04
0035f8   f004
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
0035fa   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
0035fc   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 29)
0035fe   6f1d     movwf   0x1d, 0x1        	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
003600   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003602   151c     andwf   0x1c, 0, 0x1     	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003604   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
003606   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
003608   bd1c     btfsc   0x1c, 0x6, 0x1   	BTFSC	(_ep_bdt + 28), 6, B
00360a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00360c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00360e   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
003610   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
003612   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
003614   6a00     clrf    0, 0             	CLRF	r0x00
003616   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
003618   5000     movf    0, 0, 0          	MOVF	r0x00, W
00361a   0b01     andlw   0x1              	ANDLW	0x01
00361c   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
00361e   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
003620   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003622   511c     movf    0x1c, 0, 0x1     	MOVF	(_ep_bdt + 28), W, B
003624   0bbf     andlw   0xbf             	ANDLW	0xbf
003626   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003628   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
00362a   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
00362c   111c     iorwf   0x1c, 0, 0x1     	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00362e   6f1c     movwf   0x1c, 0x1        	MOVWF	(_ep_bdt + 28), B
                                           _00608_DS_:
                                           ;	.line	156; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	return i;
003630   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           _00613_DS_:
003632   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
003634   f009
003636   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003638   f008
00363a   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
00363c   f007
00363e   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003640   f006
003642   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003644   f005
003646   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003648   f004
00364a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00364c   f003
00364e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003650   f002
003652   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003654   f001
003656   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003658   f000
00365a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00365c   ffd9
00365e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCgets	code
                                           _CDCgets:
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	byte CDCgets(char *buffer) {
003426   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003428   ffe5
00342a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00342c   ffd9
00342e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003430   ffe5
003432   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003434   ffe5
003436   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003438   ffe5
00343a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00343c   ffe5
00343e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003440   ffe5
003442   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003444   ffe5
003446   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003448   ffe5
00344a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00344c   ffe5
00344e   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003450   ffe5
003452   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
003454   ffe5
003456   0e02     movlw   0x2              	MOVLW	0x02
003458   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00345a   f000
00345c   0e03     movlw   0x3              	MOVLW	0x03
00345e   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003460   f001
003462   0e04     movlw   0x4              	MOVLW	0x04
003464   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003466   f002
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	byte i=0;
003468   6a03     clrf    0x3, 0           	CLRF	r0x03
00346a   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
00346c   5119     movf    0x19, 0, 0x1     	MOVF	_deviceState, W, B
00346e   0a05     xorlw   0x5              	XORLW	0x05
003470   e002     bz      0x3476           	BZ	_00573_DS_
003472   6ae8     clrf    0xe8, 0          	CLRF	WREG
003474   d050     bra     0x3516           	BRA	_00584_DS_
                                           _00573_DS_:
003476   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
003478   5101     movf    0x1, 0, 0x1      	MOVF	_CONTROL_LINE, W, B
00347a   e102     bnz     0x3480           	BNZ	_00575_DS_
00347c   6ae8     clrf    0xe8, 0          	CLRF	WREG
00347e   d04b     bra     0x3516           	BRA	_00584_DS_
                                           _00575_DS_:
003480   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
003482   bf18     btfsc   0x18, 0x7, 0x1   	BTFSC	(_ep_bdt + 24), 7, B
003484   d047     bra     0x3514           	BRA	_00579_DS_
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt) length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
003486   0e40     movlw   0x40             	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00591_DS_
                                           ; #;;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
003488   5d19     subwf   0x19, 0, 0x1     	SUBWF	(_ep_bdt + 25), W, B
00348a   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
00348c   c419     movff   0x419, 0xfe8     	MOVFF	(_ep_bdt + 25), WREG
00348e   ffe8
003490   6a04     clrf    0x4, 0           	CLRF	r0x04
                                           _00580_DS_:
003492   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 25)
003494   5119     movf    0x19, 0, 0x1     	MOVF	(_ep_bdt + 25), W, B
003496   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003498   e220     bc      0x34da           	BC	_00592_DS_
                                           ;	.line	112; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
00349a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00349c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00349e   6e05     movwf   0x5, 0           	MOVWF	r0x05
0034a0   6ae8     clrf    0xe8, 0          	CLRF	WREG
0034a2   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0034a4   6e06     movwf   0x6, 0           	MOVWF	r0x06
0034a6   6ae8     clrf    0xe8, 0          	CLRF	WREG
0034a8   2002     addwfc  0x2, 0, 0        	ADDWFC	r0x02, W
0034aa   6e07     movwf   0x7, 0           	MOVWF	r0x07
0034ac   0e80     movlw   0x80             	MOVLW	LOW(_CDCRxBuffer)
0034ae   2404     addwf   0x4, 0, 0        	ADDWF	r0x04, W
0034b0   6e08     movwf   0x8, 0           	MOVWF	r0x08
0034b2   6a09     clrf    0x9, 0           	CLRF	r0x09
0034b4   0e05     movlw   0x5              	MOVLW	HIGH(_CDCRxBuffer)
0034b6   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
0034b8   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
0034ba   ffe9
0034bc   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
0034be   ffea
0034c0   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
0034c2   f008
0034c4   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0034c6   ffe5
0034c8   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0034ca   ffe9
0034cc   c006     movff   0x6, 0xff3       	MOVFF	r0x06, PRODL
0034ce   fff3
0034d0   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
0034d2   ec31     call    0x62, 0          	CALL	__gptrput1
0034d4   f000
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
0034d6   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
0034d8   d7dc     bra     0x3492           	BRA	_00580_DS_
                                           _00592_DS_:
0034da   c004     movff   0x4, 0x3         	MOVFF	r0x04, r0x03
0034dc   f003
                                           ;	.line	121; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0034de   0e40     movlw   0x40             	MOVLW	0x40
0034e0   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 24)
0034e2   1518     andwf   0x18, 0, 0x1     	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0034e4   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	122; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
0034e6   6a00     clrf    0, 0             	CLRF	r0x00
                                           ; removed redundant BANKSEL
0034e8   bd18     btfsc   0x18, 0x6, 0x1   	BTFSC	(_ep_bdt + 24), 6, B
0034ea   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0034ec   5000     movf    0, 0, 0          	MOVF	r0x00, W
0034ee   80d8     bsf     0xd8, 0, 0       	BSF	STATUS, 0
0034f0   66e8     tstfsz  0xe8, 0          	TSTFSZ	WREG
0034f2   90d8     bcf     0xd8, 0, 0       	BCF	STATUS, 0
0034f4   6a00     clrf    0, 0             	CLRF	r0x00
0034f6   3600     rlcf    0, 0x1, 0        	RLCF	r0x00, F
0034f8   5000     movf    0, 0, 0          	MOVF	r0x00, W
0034fa   0b01     andlw   0x1              	ANDLW	0x01
0034fc   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
0034fe   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
003500   6ef4     movwf   0xf4, 0          	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003502   5118     movf    0x18, 0, 0x1     	MOVF	(_ep_bdt + 24), W, B
003504   0bbf     andlw   0xbf             	ANDLW	0xbf
003506   10f4     iorwf   0xf4, 0, 0       	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
003508   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
00350a   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
00350c   6f19     movwf   0x19, 0x1        	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	125; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
00350e   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
003510   1118     iorwf   0x18, 0, 0x1     	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003512   6f18     movwf   0x18, 0x1        	MOVWF	(_ep_bdt + 24), B
                                           _00579_DS_:
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	return i;
003514   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           _00584_DS_:
003516   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
003518   f009
00351a   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00351c   f008
00351e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003520   f007
003522   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003524   f006
003526   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
003528   f005
00352a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00352c   f004
00352e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003530   f003
003532   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003534   f002
003536   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003538   f001
00353a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00353c   f000
00353e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003540   ffd9
003542   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	void ProcessCDCRequest(void)
003e60   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003e62   ffe5
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
003e64   0e60     movlw   0x60             	MOVLW	0x60
003e66   0105     movlb   0x5              	BANKSEL	_SetupPacket
003e68   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003e6a   0a20     xorlw   0x20             	XORLW	0x20
003e6c   e001     bz      0x3e70           	BZ	_00534_DS_
003e6e   d049     bra     0x3f02           	BRA	_00544_DS_
                                           _00534_DS_:
                                           ;	.line	42; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	switch(SetupPacket.bRequest)
003e70   c501     movff   0x501, 0         	MOVFF	(_SetupPacket + 1), r0x00
003e72   f000
003e74   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e76   e101     bnz     0x3e7a           	BNZ	_00557_DS_
003e78   d044     bra     0x3f02           	BRA	_00544_DS_
                                           _00557_DS_:
003e7a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e7c   0a01     xorlw   0x1              	XORLW	0x01
003e7e   e101     bnz     0x3e82           	BNZ	_00559_DS_
003e80   d040     bra     0x3f02           	BRA	_00544_DS_
                                           _00559_DS_:
003e82   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e84   0a20     xorlw   0x20             	XORLW	0x20
003e86   e007     bz      0x3e96           	BZ	_00537_DS_
003e88   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e8a   0a21     xorlw   0x21             	XORLW	0x21
003e8c   e013     bz      0x3eb4           	BZ	_00538_DS_
003e8e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003e90   0a22     xorlw   0x22             	XORLW	0x22
003e92   e01f     bz      0x3ed2           	BZ	_00539_DS_
003e94   d036     bra     0x3f02           	BRA	_00544_DS_
                                           _00537_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	outPtr = (data byte *)&line_config;
003e96   0e03     movlw   0x3              	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003e98   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003e9a   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003e9c   0e00     movlw   0                	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
003e9e   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
003ea0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003ea2   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	63; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
003ea4   0e07     movlw   0x7              	MOVLW	0x07
003ea6   0103     movlb   0x3              	BANKSEL	_wCount
003ea8   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003eaa   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
                                           ;	.line	64; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	requestHandled = 1;				
003eac   0e01     movlw   0x1              	MOVLW	0x01
003eae   0103     movlb   0x3              	BANKSEL	_requestHandled
003eb0   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	65; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	break;
003eb2   d027     bra     0x3f02           	BRA	_00544_DS_
                                           _00538_DS_:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	outPtr = (data byte *)&line_config;
003eb4   0e03     movlw   0x3              	MOVLW	HIGH(_line_config)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003eb6   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003eb8   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003eba   0e00     movlw   0                	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
003ebc   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
003ebe   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003ec0   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
003ec2   0e07     movlw   0x7              	MOVLW	0x07
003ec4   0103     movlb   0x3              	BANKSEL	_wCount
003ec6   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003ec8   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	requestHandled = 1;
003eca   0e01     movlw   0x1              	MOVLW	0x01
003ecc   0103     movlb   0x3              	BANKSEL	_requestHandled
003ece   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	break;
003ed0   d018     bra     0x3f02           	BRA	_00544_DS_
                                           _00539_DS_:
003ed2   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	82; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
003ed4   5102     movf    0x2, 0, 0x1      	MOVF	(_SetupPacket + 2), W, B
003ed6   0a03     xorlw   0x3              	XORLW	0x03
003ed8   e104     bnz     0x3ee2           	BNZ	_00541_DS_
003eda   0e01     movlw   0x1              	MOVLW	0x01
003edc   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
003ede   6f01     movwf   0x1, 0x1         	MOVWF	_CONTROL_LINE, B
003ee0   d002     bra     0x3ee6           	BRA	_00542_DS_
                                           _00541_DS_:
003ee2   0102     movlb   0x2              	BANKSEL	_CONTROL_LINE
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	else CONTROL_LINE=0;		
003ee4   6b01     clrf    0x1, 0x1         	CLRF	_CONTROL_LINE, B
                                           _00542_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	outPtr = (data byte *)&zlp;
003ee6   0e02     movlw   0x2              	MOVLW	HIGH(_zlp)
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003ee8   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003eea   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003eec   0ef4     movlw   0xf4             	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
003eee   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
003ef0   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003ef2   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
003ef4   0e08     movlw   0x8              	MOVLW	0x08
003ef6   0103     movlb   0x3              	BANKSEL	_wCount
003ef8   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003efa   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	requestHandled = 1;						
003efc   0e01     movlw   0x1              	MOVLW	0x01
003efe   0103     movlb   0x3              	BANKSEL	_requestHandled
003f00   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           _00544_DS_:
                                           ;	.line	88; /home/valentin/github/icaro-bloques/tmp/usb/usb_cdc.c	}
003f02   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003f04   f000
003f06   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	740; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void ProcessUSBTransactions(void) {
0044cc   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0044ce   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00481_DS_
                                           ; #	GOTO	_00507_DS_
                                           ; #	BTFSS	_UIRbits, 2
0044d0   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	742; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(deviceState == DETACHED)
0044d2   5119     movf    0x19, 0, 0x1     	MOVF	_deviceState, W, B
                                           ;	.line	743; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	return;
0044d4   e02e     bz      0x4532           	BZ	_00507_DS_
                                           ;	.line	746; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
0044d6   a468     btfss   0x68, 0x2, 0     	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_00483_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_00483_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	747; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UnSuspend();
0044d8   d003     bra     0x44e0           	BRA	_00483_DS_
                                           ;	.line	751; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(UCONbits.SUSPND == 1)
0044da   b469     btfsc   0x69, 0x2, 0     	BTFSC	_UIEbits, 2
0044dc   ec84     call    0x4908, 0        	CALL	_UnSuspend
0044de   f024
                                           _00483_DS_:
0044e0   6a00     clrf    0, 0             	CLRF	r0x00
0044e2   b26d     btfsc   0x6d, 0x1, 0     	BTFSC	_UCONbits, 1
0044e4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0044e6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0044e8   0a01     xorlw   0x1              	XORLW	0x01
                                           ;	.line	752; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	return;
0044ea   e023     bz      0x4532           	BZ	_00507_DS_
                                           ;	.line	755; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE) {
0044ec   a068     btfss   0x68, 0, 0       	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_00488_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_00488_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	756; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	BusReset();
0044ee   d003     bra     0x44f6           	BRA	_00488_DS_
                                           ;	.line	759; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE) {
0044f0   b069     btfsc   0x69, 0, 0       	BTFSC	_UIEbits, 0
0044f2   eceb     call    0x47d6, 0        	CALL	_BusReset
0044f4   f023
                                           _00488_DS_:
0044f6   a868     btfss   0x68, 0x4, 0     	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_00491_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_00491_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	761; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	Suspend();
0044f8   d003     bra     0x4500           	BRA	_00491_DS_
                                           ;	.line	763; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE) {
0044fa   b869     btfsc   0x69, 0x4, 0     	BTFSC	_UIEbits, 4
0044fc   ec38     call    0x4870, 0        	CALL	_Suspend
0044fe   f024
                                           _00491_DS_:
004500   ac68     btfss   0x68, 0x6, 0     	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_00494_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_00494_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	764; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	StartOfFrame();
004502   d003     bra     0x450a           	BRA	_00494_DS_
                                           ;	.line	766; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE) {
004504   bc69     btfsc   0x69, 0x6, 0     	BTFSC	_UIEbits, 6
004506   ec88     call    0x4910, 0        	CALL	_StartOfFrame
004508   f024
                                           _00494_DS_:
00450a   aa68     btfss   0x68, 0x5, 0     	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_00497_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_00497_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	767; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	Stall();
00450c   d003     bra     0x4514           	BRA	_00497_DS_
                                           ;	.line	770; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE) {
00450e   ba69     btfsc   0x69, 0x5, 0     	BTFSC	_UIEbits, 5
004510   ec4d     call    0x489a, 0        	CALL	_Stall
004512   f024
                                           _00497_DS_:
004514   a268     btfss   0x68, 0x1, 0     	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_00500_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_00500_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	774; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.UERRIF = 0;
004516   d002     bra     0x451c           	BRA	_00500_DS_
                                           ;	.line	778; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (deviceState < DEFAULT)
004518   b269     btfsc   0x69, 0x1, 0     	BTFSC	_UIEbits, 1
00451a   9268     bcf     0x68, 0x1, 0     	BCF	_UIRbits, 1
                                           _00500_DS_:
00451c   0e03     movlw   0x3              	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00507_DS_
                                           ; #	BTFSS	_UIRbits, 3
00451e   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	779; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	return;
004520   5d19     subwf   0x19, 0, 0x1     	SUBWF	_deviceState, W, B
                                           ;	.line	782; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE) {
004522   e307     bnc     0x4532           	BNC	_00507_DS_
004524   a668     btfss   0x68, 0x3, 0     	BTFSS	_UIRbits, 3
004526   d005     bra     0x4532           	BRA	_00507_DS_
004528   a669     btfss   0x69, 0x3, 0     	BTFSS	_UIEbits, 3
00452a   d003     bra     0x4532           	BRA	_00507_DS_
                                           ;	.line	783; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ProcessControlTransfer();
00452c   ec25     call    0x404a, 0        	CALL	_ProcessControlTransfer
00452e   f020
                                           ;	.line	786; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.TRNIF = 0;
004530   9668     bcf     0x68, 0x3, 0     	BCF	_UIRbits, 3
                                           _00507_DS_:
004532   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004534   f000
004536   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__BusReset	code
                                           _BusReset:
                                           ;	.line	712; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void BusReset() {
0047d6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0047d8   ffe5
                                           ;	.line	713; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UEIR  = 0x00;
0047da   6a6a     clrf    0x6a, 0          	CLRF	_UEIR
                                           ;	.line	714; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIR   = 0x00;
0047dc   6a68     clrf    0x68, 0          	CLRF	_UIR
                                           ;	.line	715; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UEIE  = 0x9f;
0047de   0e9f     movlw   0x9f             	MOVLW	0x9f
0047e0   6e6b     movwf   0x6b, 0          	MOVWF	_UEIE
                                           ;	.line	716; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIE   = 0x7b;
0047e2   0e7b     movlw   0x7b             	MOVLW	0x7b
0047e4   6e69     movwf   0x69, 0          	MOVWF	_UIE
                                           ;	.line	717; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UADDR = 0x00;
0047e6   6a6e     clrf    0x6e, 0          	CLRF	_UADDR
                                           ;	.line	720; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
0047e8   0e16     movlw   0x16             	MOVLW	0x16
0047ea   6e70     movwf   0x70, 0          	MOVWF	_UEP0
                                           _00467_DS_:
                                           ;	.line	723; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	while (UIRbits.TRNIF == 1)
0047ec   6a00     clrf    0, 0             	CLRF	r0x00
0047ee   b668     btfsc   0x68, 0x3, 0     	BTFSC	_UIRbits, 3
0047f0   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0047f2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0047f4   0a01     xorlw   0x1              	XORLW	0x01
0047f6   e102     bnz     0x47fc           	BNZ	_00469_DS_
                                           ;	.line	724; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.TRNIF = 0;
0047f8   9668     bcf     0x68, 0x3, 0     	BCF	_UIRbits, 3
0047fa   d7f8     bra     0x47ec           	BRA	_00467_DS_
                                           _00469_DS_:
                                           ;	.line	727; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UCONbits.PKTDIS = 0;
0047fc   986d     bcf     0x6d, 0x4, 0     	BCF	_UCONbits, 4
                                           ;	.line	730; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	WaitForSetupStage();
0047fe   ec5c     call    0x48b8, 0        	CALL	_WaitForSetupStage
004800   f024
004802   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	732; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
004804   6b18     clrf    0x18, 0x1        	CLRF	_remoteWakeup, B
004806   0103     movlb   0x3              	BANKSEL	_selfPowered
                                           ;	.line	733; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
004808   6b17     clrf    0x17, 0x1        	CLRF	_selfPowered, B
00480a   0103     movlb   0x3              	BANKSEL	_currentConfiguration
                                           ;	.line	734; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
00480c   6b1a     clrf    0x1a, 0x1        	CLRF	_currentConfiguration, B
                                           ;	.line	735; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = DEFAULT;
00480e   0e03     movlw   0x3              	MOVLW	0x03
004810   0103     movlb   0x3              	BANKSEL	_deviceState
004812   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
004814   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
004816   f000
004818   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Suspend	code
                                           _Suspend:
                                           ;	.line	682; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void Suspend(void) {
004870   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
004872   ffe5
004874   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
004876   ffd9
                                           ;	.line	687; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIEbits.ACTVIE = 1;
004878   8469     bsf     0x69, 0x2, 0     	BSF	_UIEbits, 2
                                           ;	.line	688; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.IDLEIF = 0;
00487a   9868     bcf     0x68, 0x4, 0     	BCF	_UIRbits, 4
                                           ;	.line	689; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UCONbits.SUSPND = 1;
00487c   826d     bsf     0x6d, 0x1, 0     	BSF	_UCONbits, 1
                                           ;	.line	691; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	PIR2bits.USBIF = 0;
00487e   9aa1     bcf     0xa1, 0x5, 0     	BCF	_PIR2bits, 5
                                           ;	.line	692; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	INTCONbits.RBIF = 0;
004880   90f2     bcf     0xf2, 0, 0       	BCF	_INTCONbits, 0
                                           ;	.line	693; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	PIE2bits.USBIE = 1;
004882   8aa0     bsf     0xa0, 0x5, 0     	BSF	_PIE2bits, 5
                                           ;	.line	694; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	INTCONbits.RBIE = 1;
004884   86f2     bsf     0xf2, 0x3, 0     	BSF	_INTCONbits, 3
                                           ;	.line	697; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	RCSTAbits.CREN = 0;
004886   98ab     bcf     0xab, 0x4, 0     	BCF	_RCSTAbits, 4
                                           ;	.line	698; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	TXSTAbits.TXEN = 0;
004888   9aac     bcf     0xac, 0x5, 0     	BCF	_TXSTAbits, 5
00488a   0003     sleep                    	sleep 
                                           ;	.line	703; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	RCSTAbits.CREN = 1;
00488c   88ab     bsf     0xab, 0x4, 0     	BSF	_RCSTAbits, 4
                                           ;	.line	704; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	TXSTAbits.TXEN = 1;
00488e   8aac     bsf     0xac, 0x5, 0     	BSF	_TXSTAbits, 5
                                           ;	.line	706; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	PIE2bits.USBIE = 0;
004890   9aa0     bcf     0xa0, 0x5, 0     	BCF	_PIE2bits, 5
                                           ;	.line	707; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	INTCONbits.RBIE = 0;
004892   96f2     bcf     0xf2, 0x3, 0     	BCF	_INTCONbits, 3
004894   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
004896   ffd9
004898   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Stall	code
                                           _Stall:
                                           ;	.line	668; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void Stall(void) {
00489a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00489c   ffe5
                                           ;	.line	672; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(UEP0bits.EPSTALL == 1) {
00489e   6a00     clrf    0, 0             	CLRF	r0x00
0048a0   b070     btfsc   0x70, 0, 0       	BTFSC	_UEP0bits, 0
0048a2   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0048a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0048a6   0a01     xorlw   0x1              	XORLW	0x01
0048a8   e103     bnz     0x48b0           	BNZ	_00449_DS_
                                           ;	.line	674; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	WaitForSetupStage();
0048aa   ec5c     call    0x48b8, 0        	CALL	_WaitForSetupStage
0048ac   f024
                                           ;	.line	675; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UEP0bits.EPSTALL = 0;
0048ae   9070     bcf     0x70, 0, 0       	BCF	_UEP0bits, 0
                                           _00449_DS_:
                                           ;	.line	677; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.STALLIF = 0;
0048b0   9a68     bcf     0x68, 0x5, 0     	BCF	_UIRbits, 5
0048b2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0048b4   f000
0048b6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	663; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.SOFIF = 0;
004910   9c68     bcf     0x68, 0x6, 0     	BCF	_UIRbits, 6
004912   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	653; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UCONbits.SUSPND = 0;
004908   926d     bcf     0x6d, 0x1, 0     	BCF	_UCONbits, 1
                                           ;	.line	654; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIEbits.ACTVIE = 0;
00490a   9469     bcf     0x69, 0x2, 0     	BCF	_UIEbits, 2
                                           ;	.line	655; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIRbits.ACTVIF = 0;
00490c   9468     bcf     0x68, 0x2, 0     	BCF	_UIRbits, 2
00490e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	623; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(UCONbits.USBEN == 0) {
00481a   b66d     btfsc   0x6d, 0x3, 0     	BTFSC	_UCONbits, 3
00481c   d006     bra     0x482a           	BRA	_00423_DS_
                                           ;	.line	627; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UCON = 0;
00481e   6a6d     clrf    0x6d, 0          	CLRF	_UCON
                                           ;	.line	628; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIE = 0;
004820   6a69     clrf    0x69, 0          	CLRF	_UIE
                                           ;	.line	629; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UCONbits.USBEN = 1;
004822   866d     bsf     0x6d, 0x3, 0     	BSF	_UCONbits, 3
                                           ;	.line	630; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = ATTACHED;
004824   0e01     movlw   0x1              	MOVLW	0x01
004826   0103     movlb   0x3              	BANKSEL	_deviceState
004828   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
                                           _00423_DS_:
00482a   0103     movlb   0x3              	BANKSEL	_deviceState
                                           ;	.line	634; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0) {
00482c   5119     movf    0x19, 0, 0x1     	MOVF	_deviceState, W, B
00482e   0a01     xorlw   0x1              	XORLW	0x01
004830   e109     bnz     0x4844           	BNZ	_00427_DS_
004832   ba6d     btfsc   0x6d, 0x5, 0     	BTFSC	_UCONbits, 5
004834   d007     bra     0x4844           	BRA	_00427_DS_
                                           ;	.line	635; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIR = 0;
004836   6a68     clrf    0x68, 0          	CLRF	_UIR
                                           ;	.line	636; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIE = 0;
004838   6a69     clrf    0x69, 0          	CLRF	_UIE
                                           ;	.line	637; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIEbits.URSTIE = 1;
00483a   8069     bsf     0x69, 0, 0       	BSF	_UIEbits, 0
                                           ;	.line	638; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UIEbits.IDLEIE = 1;
00483c   8869     bsf     0x69, 0x4, 0     	BSF	_UIEbits, 4
                                           ;	.line	639; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = POWERED;
00483e   0e02     movlw   0x2              	MOVLW	0x02
004840   0103     movlb   0x3              	BANKSEL	_deviceState
004842   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
                                           _00427_DS_:
004844   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	533; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void ProcessControlTransfer(void) {
00404a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00404c   ffe5
                                           ;	.line	537; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (USTATbits.DIR == OUT) {
00404e   b46c     btfsc   0x6c, 0x2, 0     	BTFSC	_USTATbits, 2
004050   d022     bra     0x4096           	BRA	_00393_DS_
                                           ;	.line	540; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
004052   0e3c     movlw   0x3c             	MOVLW	0x3c
004054   0104     movlb   0x4              	BANKSEL	_ep_bdt
004056   1500     andwf   0, 0, 0x1        	ANDWF	_ep_bdt, W, B
004058   6e00     movwf   0, 0             	MOVWF	r0x00
00405a   4000     rrncf   0, 0, 0          	RRNCF	r0x00, W
00405c   40e8     rrncf   0xe8, 0, 0       	RRNCF	WREG, W
00405e   0b3f     andlw   0x3f             	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	541; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (PID == 0x0D)
004060   0a0d     xorlw   0xd              	XORLW	0x0d
004062   e103     bnz     0x406a           	BNZ	_00377_DS_
                                           ;	.line	543; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	SetupStage();
004064   ec6b     call    0x3cd6, 0        	CALL	_SetupStage
004066   f01e
004068   d03e     bra     0x40e6           	BRA	_00395_DS_
                                           _00377_DS_:
00406a   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	544; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE) {
00406c   511b     movf    0x1b, 0, 0x1     	MOVF	_ctrlTransferStage, W, B
00406e   0a01     xorlw   0x1              	XORLW	0x01
004070   e10f     bnz     0x4090           	BNZ	_00374_DS_
                                           ;	.line	547; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	OutDataStage(0);
004072   0e00     movlw   0                	MOVLW	0x00
004074   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
004076   ecde     call    0x31bc, 0        	CALL	_OutDataStage
004078   f018
00407a   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
00407c   0104     movlb   0x4              	BANKSEL	_ep_bdt
                                           ;	.line	571; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
00407e   ad00     btfss   0, 0x6, 0x1      	BTFSS	_ep_bdt, 6, B
004080   d003     bra     0x4088           	BRA	_00371_DS_
                                           ;	.line	572; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004082   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
004084   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
004086   d02f     bra     0x40e6           	BRA	_00395_DS_
                                           _00371_DS_:
                                           ;	.line	574; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004088   0ec8     movlw   0xc8             	MOVLW	0xc8
00408a   0104     movlb   0x4              	BANKSEL	_ep_bdt
00408c   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
00408e   d02b     bra     0x40e6           	BRA	_00395_DS_
                                           _00374_DS_:
                                           ;	.line	578; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	WaitForSetupStage();
004090   ec5c     call    0x48b8, 0        	CALL	_WaitForSetupStage
004092   f024
004094   d028     bra     0x40e6           	BRA	_00395_DS_
                                           _00393_DS_:
                                           ;	.line	581; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if(USTATbits.DIR == IN) {
004096   6a00     clrf    0, 0             	CLRF	r0x00
004098   b46c     btfsc   0x6c, 0x2, 0     	BTFSC	_USTATbits, 2
00409a   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00409c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00409e   0a01     xorlw   0x1              	XORLW	0x01
0040a0   e122     bnz     0x40e6           	BNZ	_00395_DS_
                                           ;	.line	583; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS)) {
0040a2   506e     movf    0x6e, 0, 0       	MOVF	_UADDR, W
0040a4   e10b     bnz     0x40bc           	BNZ	_00382_DS_
0040a6   0103     movlb   0x3              	BANKSEL	_deviceState
0040a8   5119     movf    0x19, 0, 0x1     	MOVF	_deviceState, W, B
0040aa   0a04     xorlw   0x4              	XORLW	0x04
0040ac   e107     bnz     0x40bc           	BNZ	_00382_DS_
                                           ;	.line	586; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UADDR = SetupPacket.wValue0;
0040ae   c502     movff   0x502, 0xf6e     	MOVFF	(_SetupPacket + 2), _UADDR
0040b0   ff6e
                                           ;	.line	590; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(UADDR == 0)
0040b2   506e     movf    0x6e, 0, 0       	MOVF	_UADDR, W
0040b4   e103     bnz     0x40bc           	BNZ	_00382_DS_
                                           ;	.line	593; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = DEFAULT;
0040b6   0e03     movlw   0x3              	MOVLW	0x03
0040b8   0103     movlb   0x3              	BANKSEL	_deviceState
0040ba   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
                                           _00382_DS_:
0040bc   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	596; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE) {
0040be   511b     movf    0x1b, 0, 0x1     	MOVF	_ctrlTransferStage, W, B
0040c0   0a02     xorlw   0x2              	XORLW	0x02
0040c2   e10f     bnz     0x40e2           	BNZ	_00388_DS_
                                           ;	.line	598; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	InDataStage(0);
0040c4   0e00     movlw   0                	MOVLW	0x00
0040c6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0040c8   ecfc     call    0x2ff8, 0        	CALL	_InDataStage
0040ca   f017
0040cc   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
0040ce   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	601; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
0040d0   ad04     btfss   0x4, 0x6, 0x1    	BTFSS	(_ep_bdt + 4), 6, B
0040d2   d003     bra     0x40da           	BRA	_00385_DS_
                                           ;	.line	602; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0040d4   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0040d6   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
0040d8   d006     bra     0x40e6           	BRA	_00395_DS_
                                           _00385_DS_:
                                           ;	.line	604; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0040da   0ec8     movlw   0xc8             	MOVLW	0xc8
0040dc   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
0040de   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
0040e0   d002     bra     0x40e6           	BRA	_00395_DS_
                                           _00388_DS_:
                                           ;	.line	608; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	WaitForSetupStage();
0040e2   ec5c     call    0x48b8, 0        	CALL	_WaitForSetupStage
0040e4   f024
                                           _00395_DS_:
0040e6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0040e8   f000
0040ea   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__WaitForSetupStage	code
                                           _WaitForSetupStage:
0048b8   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	520; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0048ba   6b1b     clrf    0x1b, 0x1        	CLRF	_ctrlTransferStage, B
                                           ;	.line	521; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0048bc   0e40     movlw   0x40             	MOVLW	0x40
0048be   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
0048c0   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	522; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0048c2   0e00     movlw   0                	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0048c4   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
0048c6   0e05     movlw   0x5              	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0048c8   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	524; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0048ca   0e88     movlw   0x88             	MOVLW	0x88
                                           ; removed redundant BANKSEL
0048cc   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	525; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
0048ce   6b04     clrf    0x4, 0x1         	CLRF	(_ep_bdt + 4), B
0048d0   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetupStage	code
                                           _SetupStage:
                                           ;	.line	447; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void SetupStage(void) {
003cd6   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003cd8   ffe5
003cda   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	450; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
003cdc   5104     movf    0x4, 0, 0x1      	MOVF	(_ep_bdt + 4), W, B
003cde   6e00     movwf   0, 0             	MOVWF	r0x00
003ce0   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
003ce2   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003ce4   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	451; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
003ce6   5100     movf    0, 0, 0x1        	MOVF	_ep_bdt, W, B
003ce8   6e00     movwf   0, 0             	MOVWF	r0x00
003cea   9e00     bcf     0, 0x7, 0        	BCF	r0x00, 7
003cec   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003cee   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
003cf0   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
                                           ;	.line	454; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
003cf2   6b1b     clrf    0x1b, 0x1        	CLRF	_ctrlTransferStage, B
003cf4   0103     movlb   0x3              	BANKSEL	_requestHandled
                                           ;	.line	455; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
003cf6   6b16     clrf    0x16, 0x1        	CLRF	_requestHandled, B
003cf8   0103     movlb   0x3              	BANKSEL	_HIDPostProcess
                                           ;	.line	456; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
003cfa   6b10     clrf    0x10, 0x1        	CLRF	_HIDPostProcess, B
003cfc   0103     movlb   0x3              	BANKSEL	_wCount
                                           ;	.line	457; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = 0;                           // No bytes transferred
003cfe   6b0d     clrf    0xd, 0x1         	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
003d00   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
                                           ;	.line	460; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ProcessStandardRequest();
003d02   ec94     call    0x3b28, 0        	CALL	_ProcessStandardRequest
003d04   f01d
                                           ;	.line	470; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
003d06   0e1f     movlw   0x1f             	MOVLW	0x1f
003d08   0105     movlb   0x5              	BANKSEL	_SetupPacket
003d0a   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d0c   0a01     xorlw   0x1              	XORLW	0x01
003d0e   e102     bnz     0x3d14           	BNZ	_00338_DS_
                                           ;	.line	471; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ProcessCDCRequest();
003d10   ec30     call    0x3e60, 0        	CALL	_ProcessCDCRequest
003d12   f01f
                                           _00338_DS_:
003d14   0103     movlb   0x3              	BANKSEL	_requestHandled
                                           ;	.line	474; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (!requestHandled) {
003d16   5116     movf    0x16, 0, 0x1     	MOVF	_requestHandled, W, B
003d18   e10b     bnz     0x3d30           	BNZ	_00345_DS_
                                           ;	.line	476; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003d1a   0e40     movlw   0x40             	MOVLW	0x40
003d1c   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
003d1e   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	477; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
003d20   0e00     movlw   0                	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
003d22   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
003d24   0e05     movlw   0x5              	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
003d26   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	478; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
003d28   0e84     movlw   0x84             	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	479; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
003d2a   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
003d2c   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
003d2e   d038     bra     0x3da0           	BRA	_00346_DS_
                                           _00345_DS_:
003d30   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	481; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
003d32   af00     btfss   0, 0x7, 0x1      	BTFSS	_SetupPacket, 7, B
003d34   d026     bra     0x3d82           	BRA	_00342_DS_
003d36   0103     movlb   0x3              	BANKSEL	(_wCount + 1)
                                           ;	.line	483; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(SetupPacket.wLength < wCount)
003d38   510e     movf    0xe, 0, 0x1      	MOVF	(_wCount + 1), W, B
003d3a   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 7)
003d3c   5d07     subwf   0x7, 0, 0x1      	SUBWF	(_SetupPacket + 7), W, B
003d3e   e104     bnz     0x3d48           	BNZ	_00360_DS_
003d40   0103     movlb   0x3              	BANKSEL	_wCount
003d42   510d     movf    0xd, 0, 0x1      	MOVF	_wCount, W, B
003d44   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 6)
003d46   5d06     subwf   0x6, 0, 0x1      	SUBWF	(_SetupPacket + 6), W, B
                                           _00360_DS_:
003d48   e204     bc      0x3d52           	BC	_00340_DS_
                                           ;	.line	484; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = SetupPacket.wLength;
003d4a   c506     movff   0x506, 0x30d     	MOVFF	(_SetupPacket + 6), _wCount
003d4c   f30d
003d4e   c507     movff   0x507, 0x30e     	MOVFF	(_SetupPacket + 7), (_wCount + 1)
003d50   f30e
                                           _00340_DS_:
                                           ;	.line	485; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	InDataStage(0);
003d52   0e00     movlw   0                	MOVLW	0x00
003d54   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003d56   ecfc     call    0x2ff8, 0        	CALL	_InDataStage
003d58   f017
003d5a   2ae1     incf    0xe1, 0x1, 0     	INCF	FSR1L, F
                                           ;	.line	486; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
003d5c   0e02     movlw   0x2              	MOVLW	0x02
003d5e   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
003d60   6f1b     movwf   0x1b, 0x1        	MOVWF	_ctrlTransferStage, B
                                           ;	.line	488; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003d62   0e40     movlw   0x40             	MOVLW	0x40
003d64   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 1)
003d66   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	489; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
003d68   0e00     movlw   0                	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
003d6a   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
003d6c   0e05     movlw   0x5              	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
003d6e   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	490; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
003d70   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003d72   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           ;	.line	493; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
003d74   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003d76   6f06     movwf   0x6, 0x1         	MOVWF	(_ep_bdt + 6), B
003d78   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003d7a   6f07     movwf   0x7, 0x1         	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	495; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003d7c   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003d7e   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
003d80   d00f     bra     0x3da0           	BRA	_00346_DS_
                                           _00342_DS_:
                                           ;	.line	499; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
003d82   0e01     movlw   0x1              	MOVLW	0x01
003d84   0103     movlb   0x3              	BANKSEL	_ctrlTransferStage
003d86   6f1b     movwf   0x1b, 0x1        	MOVWF	_ctrlTransferStage, B
003d88   0104     movlb   0x4              	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	502; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
003d8a   6b05     clrf    0x5, 0x1         	CLRF	(_ep_bdt + 5), B
                                           ;	.line	503; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003d8c   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003d8e   6f04     movwf   0x4, 0x1         	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	506; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003d90   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003d92   6f01     movwf   0x1, 0x1         	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	507; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
003d94   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003d96   6f02     movwf   0x2, 0x1         	MOVWF	(_ep_bdt + 2), B
003d98   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003d9a   6f03     movwf   0x3, 0x1         	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	509; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003d9c   0ec8     movlw   0xc8             	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003d9e   6f00     movwf   0, 0x1           	MOVWF	_ep_bdt, B
                                           _00346_DS_:
                                           ;	.line	513; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	UCONbits.PKTDIS = 0;
003da0   986d     bcf     0x6d, 0x4, 0     	BCF	_UCONbits, 4
003da2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003da4   f000
003da6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	411; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void OutDataStage(unsigned char ep) {
0031bc   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0031be   ffe5
0031c0   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0031c2   ffd9
0031c4   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0031c6   ffe5
0031c8   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0031ca   ffe5
0031cc   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0031ce   ffe5
0031d0   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0031d2   ffe5
0031d4   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0031d6   ffe5
0031d8   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0031da   ffe5
0031dc   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0031de   ffe5
0031e0   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0031e2   ffe5
0031e4   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
0031e6   ffe5
0031e8   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
0031ea   ffe5
0031ec   0e02     movlw   0x2              	MOVLW	0x02
0031ee   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0031f0   f000
                                           ;	.line	414; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
0031f2   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
0031f4   0bfe     andlw   0xfe             	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x01, W
0031f6   0d04     mullw   0x4              	MULLW	0x04
0031f8   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
0031fa   f000
0031fc   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0031fe   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003200   6e01     movwf   0x1, 0           	MOVWF	r0x01
003202   6a02     clrf    0x2, 0           	CLRF	r0x02
003204   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003206   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003208   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
00320a   ffe9
00320c   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
00320e   ffea
003210   cfef     movff   0xfef, 0x1       	MOVFF	INDF0, r0x01
003212   f001
003214   0e03     movlw   0x3              	MOVLW	0x03
003216   1601     andwf   0x1, 0x1, 0      	ANDWF	r0x01, F
003218   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00321a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00321c   6a03     clrf    0x3, 0           	CLRF	r0x03
00321e   6a01     clrf    0x1, 0           	CLRF	r0x01
003220   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003222   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003224   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003226   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003228   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
00322a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00322c   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
00322e   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003230   ffe9
003232   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
003234   ffea
003236   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003238   f000
00323a   6a01     clrf    0x1, 0           	CLRF	r0x01
00323c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00323e   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
003240   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003242   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
003244   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
003246   6e00     movwf   0, 0             	MOVWF	r0x00
003248   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00324a   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	421; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = wCount + bufferSize;
00324c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00324e   0103     movlb   0x3              	BANKSEL	_wCount
003250   270d     addwf   0xd, 0x1, 0x1    	ADDWF	_wCount, F, B
003252   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003254   230e     addwfc  0xe, 0x1, 0x1    	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	423; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte*)&controlTransferBuffer;
003256   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
003258   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
00325a   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
00325c   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00325e   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
003260   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003262   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	427; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003264   6a02     clrf    0x2, 0           	CLRF	r0x02
003266   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00321_DS_:
003268   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00326a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00326c   e102     bnz     0x3272           	BNZ	_00332_DS_
00326e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003270   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00332_DS_:
003272   e22f     bc      0x32d2           	BC	_00325_DS_
                                           ;	.line	431; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	*inPtr++ = *outPtr++;
003274   c307     movff   0x307, 0x4       	MOVFF	_inPtr, r0x04
003276   f004
003278   c308     movff   0x308, 0x5       	MOVFF	(_inPtr + 1), r0x05
00327a   f005
00327c   c309     movff   0x309, 0x6       	MOVFF	(_inPtr + 2), r0x06
00327e   f006
003280   c2fc     movff   0x2fc, 0x7       	MOVFF	_outPtr, r0x07
003282   f007
003284   c2fd     movff   0x2fd, 0x8       	MOVFF	(_outPtr + 1), r0x08
003286   f008
003288   c2fe     movff   0x2fe, 0x9       	MOVFF	(_outPtr + 2), r0x09
00328a   f009
00328c   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
00328e   ffe9
003290   c008     movff   0x8, 0xff3       	MOVFF	r0x08, PRODL
003292   fff3
003294   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
003296   ec29     call    0x52, 0          	CALL	__gptrget1
003298   f000
00329a   6e07     movwf   0x7, 0           	MOVWF	r0x07
00329c   0102     movlb   0x2              	BANKSEL	_outPtr
00329e   2bfc     incf    0xfc, 0x1, 0x1   	INCF	_outPtr, F, B
0032a0   e301     bnc     0x32a4           	BNC	_11256_DS_
                                           ; removed redundant BANKSEL
0032a2   2bfd     incf    0xfd, 0x1, 0x1   	INCF	(_outPtr + 1), F, B
                                           _11256_DS_:
0032a4   e302     bnc     0x32aa           	BNC	_21257_DS_
0032a6   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
0032a8   2bfe     incf    0xfe, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _21257_DS_:
0032aa   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
0032ac   ffe5
0032ae   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0032b0   ffe9
0032b2   c005     movff   0x5, 0xff3       	MOVFF	r0x05, PRODL
0032b4   fff3
0032b6   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0032b8   ec31     call    0x62, 0          	CALL	__gptrput1
0032ba   f000
0032bc   0103     movlb   0x3              	BANKSEL	_inPtr
0032be   2b07     incf    0x7, 0x1, 0x1    	INCF	_inPtr, F, B
0032c0   e301     bnc     0x32c4           	BNC	_31258_DS_
                                           ; removed redundant BANKSEL
0032c2   2b08     incf    0x8, 0x1, 0x1    	INCF	(_inPtr + 1), F, B
                                           _31258_DS_:
0032c4   e302     bnc     0x32ca           	BNC	_41259_DS_
0032c6   0103     movlb   0x3              	BANKSEL	(_inPtr + 2)
0032c8   2b09     incf    0x9, 0x1, 0x1    	INCF	(_inPtr + 2), F, B
                                           _41259_DS_:
                                           ;	.line	427; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
0032ca   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0032cc   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0032ce   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0032d0   d7cb     bra     0x3268           	BRA	_00321_DS_
                                           _00325_DS_:
0032d2   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
0032d4   f009
0032d6   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
0032d8   f008
0032da   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
0032dc   f007
0032de   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
0032e0   f006
0032e2   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0032e4   f005
0032e6   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0032e8   f004
0032ea   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0032ec   f003
0032ee   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0032f0   f002
0032f2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0032f4   f001
0032f6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0032f8   f000
0032fa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0032fc   ffd9
0032fe   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__InDataStage	code
                                           _InDataStage:
                                           ;	.line	364; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void InDataStage(unsigned char ep) {
002ff8   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ffa   ffe5
002ffc   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002ffe   ffd9
003000   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003002   ffe5
003004   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003006   ffe5
003008   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00300a   ffe5
00300c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00300e   ffe5
003010   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003012   ffe5
003014   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
003016   ffe5
003018   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
00301a   ffe5
00301c   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
00301e   ffe5
003020   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
003022   ffe5
003024   0e02     movlw   0x2              	MOVLW	0x02
003026   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003028   f000
                                           ;	.line	371; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
00302a   0e00     movlw   0                	MOVLW	0x00
00302c   0103     movlb   0x3              	BANKSEL	(_wCount + 1)
00302e   5d0e     subwf   0xe, 0, 0x1      	SUBWF	(_wCount + 1), W, B
003030   e102     bnz     0x3036           	BNZ	_00310_DS_
003032   0e40     movlw   0x40             	MOVLW	0x40
                                           ; removed redundant BANKSEL
003034   5d0d     subwf   0xd, 0, 0x1      	SUBWF	_wCount, W, B
                                           _00310_DS_:
003036   e205     bc      0x3042           	BC	_00298_DS_
                                           ;	.line	372; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	bufferSize = wCount;
003038   c30d     movff   0x30d, 0x1       	MOVFF	_wCount, r0x01
00303a   f001
00303c   c30e     movff   0x30e, 0x2       	MOVFF	(_wCount + 1), r0x02
00303e   f002
003040   d003     bra     0x3048           	BRA	_00299_DS_
                                           _00298_DS_:
                                           ;	.line	374; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
003042   0e40     movlw   0x40             	MOVLW	0x40
003044   6e01     movwf   0x1, 0           	MOVWF	r0x01
003046   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           _00299_DS_:
                                           ;	.line	382; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
003048   4400     rlncf   0, 0, 0          	RLNCF	r0x00, W
00304a   0bfe     andlw   0xfe             	ANDLW	0xfe
00304c   6e03     movwf   0x3, 0           	MOVWF	r0x03
00304e   2803     incf    0x3, 0, 0        	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x00, W
003050   0d04     mullw   0x4              	MULLW	0x04
003052   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003054   f000
003056   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003058   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00305a   6e03     movwf   0x3, 0           	MOVWF	r0x03
00305c   6a04     clrf    0x4, 0           	CLRF	r0x04
00305e   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003060   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003062   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003064   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
003066   6e05     movwf   0x5, 0           	MOVWF	r0x05
003068   6a06     clrf    0x6, 0           	CLRF	r0x06
00306a   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
00306c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00306e   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
003070   ffe9
003072   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
003074   ffea
003076   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
003078   f005
00307a   0efc     movlw   0xfc             	MOVLW	0xfc
00307c   1605     andwf   0x5, 0x1, 0      	ANDWF	r0x05, F
00307e   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003080   ffe9
003082   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
003084   ffea
003086   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
003088   ffef
                                           ;	.line	383; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (byte)((bufferSize & 0x0300) >> 8);
00308a   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
00308c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00308e   6e03     movwf   0x3, 0           	MOVWF	r0x03
003090   6a04     clrf    0x4, 0           	CLRF	r0x04
003092   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003094   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
003096   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003098   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00309a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00309c   6a06     clrf    0x6, 0           	CLRF	r0x06
00309e   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0030a0   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0030a2   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0030a4   ffe9
0030a6   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0030a8   ffea
0030aa   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0030ac   f005
0030ae   0e03     movlw   0x3              	MOVLW	0x03
0030b0   1402     andwf   0x2, 0, 0        	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x07
                                           ; #	MOVF	r0x07, W
0030b2   1205     iorwf   0x5, 0x1, 0      	IORWF	r0x05, F
0030b4   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0030b6   ffe9
0030b8   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0030ba   ffea
0030bc   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
0030be   ffef
                                           ;	.line	384; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(ep).Cnt = (byte)(bufferSize & 0xFF);
0030c0   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0030c2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0030c4   6e03     movwf   0x3, 0           	MOVWF	r0x03
0030c6   6a04     clrf    0x4, 0           	CLRF	r0x04
0030c8   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0030ca   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0030cc   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0030ce   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0030d0   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
0030d2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0030d4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0030d6   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0030d8   ffe9
0030da   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0030dc   ffea
0030de   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
0030e0   ffef
                                           ;	.line	385; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
0030e2   6a03     clrf    0x3, 0           	CLRF	r0x03
0030e4   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0030e6   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0030e8   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0030ea   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0030ec   0e02     movlw   0x2              	MOVLW	0x02
0030ee   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0030f0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0030f2   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0030f4   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
0030f6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0030f8   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
0030fa   6e05     movwf   0x5, 0           	MOVWF	r0x05
0030fc   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0030fe   ffe9
003100   c003     movff   0x3, 0xfea       	MOVFF	r0x03, FSR0H
003102   ffea
003104   c004     movff   0x4, 0xfee       	MOVFF	r0x04, POSTINC0
003106   ffee
003108   c005     movff   0x5, 0xfef       	MOVFF	r0x05, INDF0
00310a   ffef
                                           ;	.line	390; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = wCount - bufferSize;
00310c   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00310e   0103     movlb   0x3              	BANKSEL	_wCount
003110   5f0d     subwf   0xd, 0x1, 0x1    	SUBWF	_wCount, F, B
003112   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
003114   5b0e     subwfb  0xe, 0x1, 0x1    	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	393; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	inPtr = (byte *)&controlTransferBuffer;
003116   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
003118   0103     movlb   0x3              	BANKSEL	(_inPtr + 1)
00311a   6f08     movwf   0x8, 0x1         	MOVWF	(_inPtr + 1), B
00311c   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00311e   6f07     movwf   0x7, 0x1         	MOVWF	_inPtr, B
003120   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003122   6f09     movwf   0x9, 0x1         	MOVWF	(_inPtr + 2), B
                                           ;	.line	398; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003124   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00300_DS_:
003126   c000     movff   0, 0x3           	MOVFF	r0x00, r0x03
003128   f003
00312a   6a04     clrf    0x4, 0           	CLRF	r0x04
00312c   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00312e   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
003130   e102     bnz     0x3136           	BNZ	_00316_DS_
003132   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003134   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
                                           _00316_DS_:
003136   e22d     bc      0x3192           	BC	_00304_DS_
                                           ;	.line	402; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	*inPtr++ = *outPtr++;
003138   c307     movff   0x307, 0x3       	MOVFF	_inPtr, r0x03
00313a   f003
00313c   c308     movff   0x308, 0x4       	MOVFF	(_inPtr + 1), r0x04
00313e   f004
003140   c309     movff   0x309, 0x5       	MOVFF	(_inPtr + 2), r0x05
003142   f005
003144   c2fc     movff   0x2fc, 0x6       	MOVFF	_outPtr, r0x06
003146   f006
003148   c2fd     movff   0x2fd, 0x7       	MOVFF	(_outPtr + 1), r0x07
00314a   f007
00314c   c2fe     movff   0x2fe, 0x8       	MOVFF	(_outPtr + 2), r0x08
00314e   f008
003150   c006     movff   0x6, 0xfe9       	MOVFF	r0x06, FSR0L
003152   ffe9
003154   c007     movff   0x7, 0xff3       	MOVFF	r0x07, PRODL
003156   fff3
003158   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00315a   ec29     call    0x52, 0          	CALL	__gptrget1
00315c   f000
00315e   6e06     movwf   0x6, 0           	MOVWF	r0x06
003160   0102     movlb   0x2              	BANKSEL	_outPtr
003162   2bfc     incf    0xfc, 0x1, 0x1   	INCF	_outPtr, F, B
003164   e301     bnc     0x3168           	BNC	_51260_DS_
                                           ; removed redundant BANKSEL
003166   2bfd     incf    0xfd, 0x1, 0x1   	INCF	(_outPtr + 1), F, B
                                           _51260_DS_:
003168   e302     bnc     0x316e           	BNC	_61261_DS_
00316a   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
00316c   2bfe     incf    0xfe, 0x1, 0x1   	INCF	(_outPtr + 2), F, B
                                           _61261_DS_:
00316e   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003170   ffe5
003172   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
003174   ffe9
003176   c004     movff   0x4, 0xff3       	MOVFF	r0x04, PRODL
003178   fff3
00317a   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
00317c   ec31     call    0x62, 0          	CALL	__gptrput1
00317e   f000
003180   0103     movlb   0x3              	BANKSEL	_inPtr
003182   2b07     incf    0x7, 0x1, 0x1    	INCF	_inPtr, F, B
003184   e301     bnc     0x3188           	BNC	_71262_DS_
                                           ; removed redundant BANKSEL
003186   2b08     incf    0x8, 0x1, 0x1    	INCF	(_inPtr + 1), F, B
                                           _71262_DS_:
003188   e302     bnc     0x318e           	BNC	_81263_DS_
00318a   0103     movlb   0x3              	BANKSEL	(_inPtr + 2)
00318c   2b09     incf    0x9, 0x1, 0x1    	INCF	(_inPtr + 2), F, B
                                           _81263_DS_:
                                           ;	.line	398; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
00318e   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
003190   d7ca     bra     0x3126           	BRA	_00300_DS_
                                           _00304_DS_:
003192   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
003194   f008
003196   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003198   f007
00319a   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00319c   f006
00319e   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
0031a0   f005
0031a2   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
0031a4   f004
0031a6   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
0031a8   f003
0031aa   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0031ac   f002
0031ae   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0031b0   f001
0031b2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0031b4   f000
0031b6   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0031b8   ffd9
0031ba   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	253; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	void ProcessStandardRequest(void) {
003b28   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003b2a   ffe5
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte request = SetupPacket.bRequest;
003b2c   c501     movff   0x501, 0         	MOVFF	(_SetupPacket + 1), r0x00
003b2e   f000
003b30   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
003b32   5100     movf    0, 0, 0x1        	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00231_DS_
                                           ; #	GOTO	_00263_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	259; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	return;
003b34   0b60     andlw   0x60             	ANDLW	0x60
                                           ;	.line	261; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (request == SET_ADDRESS) {
003b36   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
003b38   d061     bra     0x3bfc           	BRA	_00263_DS_
003b3a   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b3c   0a05     xorlw   0x5              	XORLW	0x05
003b3e   e109     bnz     0x3b52           	BNZ	_00261_DS_
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
003b40   0e01     movlw   0x1              	MOVLW	0x01
003b42   0103     movlb   0x3              	BANKSEL	_requestHandled
003b44   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	270; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = ADDRESS;
003b46   0e04     movlw   0x4              	MOVLW	0x04
003b48   0103     movlb   0x3              	BANKSEL	_deviceState
003b4a   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	271; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
003b4c   c502     movff   0x502, 0x30f     	MOVFF	(_SetupPacket + 2), _deviceAddress
003b4e   f30f
003b50   d055     bra     0x3bfc           	BRA	_00263_DS_
                                           _00261_DS_:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
003b52   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b54   0a06     xorlw   0x6              	XORLW	0x06
003b56   e103     bnz     0x3b5e           	BNZ	_00258_DS_
                                           ;	.line	274; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	GetDescriptor();
003b58   ec3e     call    0x387c, 0        	CALL	_GetDescriptor
003b5a   f01c
003b5c   d04f     bra     0x3bfc           	BRA	_00263_DS_
                                           _00258_DS_:
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
003b5e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b60   0a09     xorlw   0x9              	XORLW	0x09
003b62   e112     bnz     0x3b88           	BNZ	_00255_DS_
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
003b64   0e01     movlw   0x1              	MOVLW	0x01
003b66   0103     movlb   0x3              	BANKSEL	_requestHandled
003b68   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	281; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
003b6a   c502     movff   0x502, 0x31a     	MOVFF	(_SetupPacket + 2), _currentConfiguration
003b6c   f31a
003b6e   0103     movlb   0x3              	BANKSEL	_currentConfiguration
                                           ;	.line	284; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (currentConfiguration == 0)
003b70   511a     movf    0x1a, 0, 0x1     	MOVF	_currentConfiguration, W, B
003b72   e104     bnz     0x3b7c           	BNZ	_00233_DS_
                                           ;	.line	287; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = ADDRESS;
003b74   0e04     movlw   0x4              	MOVLW	0x04
003b76   0103     movlb   0x3              	BANKSEL	_deviceState
003b78   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
003b7a   d040     bra     0x3bfc           	BRA	_00263_DS_
                                           _00233_DS_:
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	deviceState = CONFIGURED;
003b7c   0e05     movlw   0x5              	MOVLW	0x05
003b7e   0103     movlb   0x3              	BANKSEL	_deviceState
003b80   6f19     movwf   0x19, 0x1        	MOVWF	_deviceState, B
                                           ;	.line	300; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	CDCInitEndpoint();
003b82   ec01     call    0x4602, 0        	CALL	_CDCInitEndpoint
003b84   f023
003b86   d03a     bra     0x3bfc           	BRA	_00263_DS_
                                           _00255_DS_:
                                           ;	.line	310; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
003b88   5000     movf    0, 0, 0          	MOVF	r0x00, W
003b8a   0a08     xorlw   0x8              	XORLW	0x08
003b8c   e10f     bnz     0x3bac           	BNZ	_00252_DS_
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
003b8e   0e01     movlw   0x1              	MOVLW	0x01
003b90   0103     movlb   0x3              	BANKSEL	_requestHandled
003b92   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	315; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte*)&currentConfiguration;
003b94   0e03     movlw   0x3              	MOVLW	HIGH(_currentConfiguration)
003b96   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003b98   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003b9a   0e1a     movlw   0x1a             	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
003b9c   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
003b9e   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003ba0   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	316; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = 1;
003ba2   0e01     movlw   0x1              	MOVLW	0x01
003ba4   0103     movlb   0x3              	BANKSEL	_wCount
003ba6   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003ba8   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
003baa   d028     bra     0x3bfc           	BRA	_00263_DS_
                                           _00252_DS_:
                                           ;	.line	318; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == GET_STATUS) {
003bac   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bae   e103     bnz     0x3bb6           	BNZ	_00249_DS_
                                           ;	.line	319; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	GetStatus();
003bb0   ecbc     call    0x3778, 0        	CALL	_GetStatus
003bb2   f01b
003bb4   d023     bra     0x3bfc           	BRA	_00263_DS_
                                           _00249_DS_:
                                           ;	.line	321; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
003bb6   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bb8   0a01     xorlw   0x1              	XORLW	0x01
003bba   e003     bz      0x3bc2           	BZ	_00244_DS_
                                           ;	.line	322; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	(request == SET_FEATURE)) {
003bbc   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bbe   0a03     xorlw   0x3              	XORLW	0x03
003bc0   e103     bnz     0x3bc8           	BNZ	_00245_DS_
                                           _00244_DS_:
                                           ;	.line	323; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	SetFeature();
003bc2   ec80     call    0x3300, 0        	CALL	_SetFeature
003bc4   f019
003bc6   d01a     bra     0x3bfc           	BRA	_00263_DS_
                                           _00245_DS_:
                                           ;	.line	325; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == GET_INTERFACE) {
003bc8   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bca   0a0a     xorlw   0xa              	XORLW	0x0a
003bcc   e111     bnz     0x3bf0           	BNZ	_00242_DS_
                                           ;	.line	331; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
003bce   0e01     movlw   0x1              	MOVLW	0x01
003bd0   0103     movlb   0x3              	BANKSEL	_requestHandled
003bd2   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
003bd4   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	332; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0;
003bd6   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ;	.line	333; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte *)&controlTransferBuffer;
003bd8   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
003bda   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003bdc   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003bde   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003be0   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
003be2   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
003be4   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	334; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = 1;
003be6   0e01     movlw   0x1              	MOVLW	0x01
003be8   0103     movlb   0x3              	BANKSEL	_wCount
003bea   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003bec   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
003bee   d006     bra     0x3bfc           	BRA	_00263_DS_
                                           _00242_DS_:
                                           ;	.line	336; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == SET_INTERFACE) {
003bf0   5000     movf    0, 0, 0          	MOVF	r0x00, W
003bf2   0a0b     xorlw   0xb              	XORLW	0x0b
003bf4   e103     bnz     0x3bfc           	BNZ	_00263_DS_
                                           ;	.line	341; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
003bf6   0e01     movlw   0x1              	MOVLW	0x01
003bf8   0103     movlb   0x3              	BANKSEL	_requestHandled
003bfa   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           _00263_DS_:
                                           ;	.line	348; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (request == SYNCH_FRAME) {
003bfc   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003bfe   f000
003c00   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetFeature	code
                                           _SetFeature:
                                           ;	.line	209; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	static void SetFeature(void) {
003300   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003302   ffe5
003304   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003306   ffe5
003308   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00330a   ffe5
00330c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00330e   ffe5
003310   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003312   ffe5
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte recipient = SetupPacket.bmRequestType & 0x1F;
003314   0e1f     movlw   0x1f             	MOVLW	0x1f
003316   0105     movlb   0x5              	BANKSEL	_SetupPacket
003318   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
00331a   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	211; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte feature = SetupPacket.wValue0;
00331c   c502     movff   0x502, 0x1       	MOVFF	(_SetupPacket + 2), r0x01
00331e   f001
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (recipient == 0x00) {
003320   5000     movf    0, 0, 0          	MOVF	r0x00, W
003322   e112     bnz     0x3348           	BNZ	_00200_DS_
                                           ;	.line	218; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
003324   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003326   0a01     xorlw   0x1              	XORLW	0x01
003328   e001     bz      0x332c           	BZ	_00215_DS_
00332a   d072     bra     0x3410           	BRA	_00202_DS_
                                           _00215_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
00332c   0e01     movlw   0x1              	MOVLW	0x01
00332e   0103     movlb   0x3              	BANKSEL	_requestHandled
003330   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
003332   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
003334   5101     movf    0x1, 0, 0x1      	MOVF	(_SetupPacket + 1), W, B
003336   0a03     xorlw   0x3              	XORLW	0x03
003338   e104     bnz     0x3342           	BNZ	_00182_DS_
                                           ;	.line	221; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	remoteWakeup = 1;
00333a   0e01     movlw   0x1              	MOVLW	0x01
00333c   0103     movlb   0x3              	BANKSEL	_remoteWakeup
00333e   6f18     movwf   0x18, 0x1        	MOVWF	_remoteWakeup, B
003340   d067     bra     0x3410           	BRA	_00202_DS_
                                           _00182_DS_:
003342   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	223; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	remoteWakeup = 0;
003344   6b18     clrf    0x18, 0x1        	CLRF	_remoteWakeup, B
003346   d064     bra     0x3410           	BRA	_00202_DS_
                                           _00200_DS_:
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (recipient == 0x02) {
003348   5000     movf    0, 0, 0          	MOVF	r0x00, W
00334a   0a02     xorlw   0x2              	XORLW	0x02
00334c   e001     bz      0x3350           	BZ	_00219_DS_
00334e   d060     bra     0x3410           	BRA	_00202_DS_
                                           _00219_DS_:
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte endpointNum = SetupPacket.wIndex0 & 0x0F;
003350   0e0f     movlw   0xf              	MOVLW	0x0f
003352   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
003354   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
003356   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte endpointDir = SetupPacket.wIndex0 & 0x80;
003358   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00335a   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
00335c   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
00335e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003360   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
003362   d056     bra     0x3410           	BRA	_00202_DS_
003364   5000     movf    0, 0, 0          	MOVF	r0x00, W
003366   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
003368   d053     bra     0x3410           	BRA	_00202_DS_
                                           ;	.line	233; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
00336a   0e01     movlw   0x1              	MOVLW	0x01
00336c   0103     movlb   0x3              	BANKSEL	_requestHandled
00336e   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	236; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	inPtr = (byte *)&EP_OUT_BD(0) + (endpointNum * 8);
003370   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
003372   6e03     movwf   0x3, 0           	MOVWF	r0x03
003374   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
003376   6e01     movwf   0x1, 0           	MOVWF	r0x01
003378   0e80     movlw   0x80             	MOVLW	0x80
00337a   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
00337c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00337e   0d08     mullw   0x8              	MULLW	0x08
003380   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003382   f000
003384   5000     movf    0, 0, 0          	MOVF	r0x00, W
003386   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
003388   0103     movlb   0x3              	BANKSEL	_inPtr
00338a   6f07     movwf   0x7, 0x1         	MOVWF	_inPtr, B
00338c   6ae8     clrf    0xe8, 0          	CLRF	WREG
00338e   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
003390   6f08     movwf   0x8, 0x1         	MOVWF	(_inPtr + 1), B
003392   6ae8     clrf    0xe8, 0          	CLRF	WREG
003394   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003396   6f09     movwf   0x9, 0x1         	MOVWF	(_inPtr + 2), B
                                           ;	.line	237; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (endpointDir)
003398   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00339a   e005     bz      0x33a6           	BZ	_00187_DS_
                                           ;	.line	238; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	inPtr += 4;
00339c   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00339e   2707     addwf   0x7, 0x1, 0x1    	ADDWF	_inPtr, F, B
0033a0   0e00     movlw   0                	MOVLW	0x00
                                           ; removed redundant BANKSEL
0033a2   2308     addwfc  0x8, 0x1, 0x1    	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
0033a4   2309     addwfc  0x9, 0x1, 0x1    	ADDWFC	(_inPtr + 2), F, B
                                           _00187_DS_:
0033a6   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	240; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
0033a8   5101     movf    0x1, 0, 0x1      	MOVF	(_SetupPacket + 1), W, B
0033aa   0a03     xorlw   0x3              	XORLW	0x03
0033ac   e110     bnz     0x33ce           	BNZ	_00192_DS_
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	*inPtr = 0x84;
0033ae   c307     movff   0x307, 0         	MOVFF	_inPtr, r0x00
0033b0   f000
0033b2   c308     movff   0x308, 0x1       	MOVFF	(_inPtr + 1), r0x01
0033b4   f001
0033b6   c309     movff   0x309, 0x3       	MOVFF	(_inPtr + 2), r0x03
0033b8   f003
0033ba   0e84     movlw   0x84             	MOVLW	0x84
0033bc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0033be   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0033c0   ffe9
0033c2   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0033c4   fff3
0033c6   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
0033c8   ec31     call    0x62, 0          	CALL	__gptrput1
0033ca   f000
0033cc   d021     bra     0x3410           	BRA	_00202_DS_
                                           _00192_DS_:
                                           ;	.line	243; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(endpointDir == 1)
0033ce   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0033d0   0a01     xorlw   0x1              	XORLW	0x01
0033d2   e10f     bnz     0x33f2           	BNZ	_00189_DS_
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	*inPtr = 0x00;
0033d4   c307     movff   0x307, 0         	MOVFF	_inPtr, r0x00
0033d6   f000
0033d8   c308     movff   0x308, 0x1       	MOVFF	(_inPtr + 1), r0x01
0033da   f001
0033dc   c309     movff   0x309, 0x2       	MOVFF	(_inPtr + 2), r0x02
0033de   f002
0033e0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0033e2   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0033e4   ffe9
0033e6   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
0033e8   fff3
0033ea   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0033ec   ec31     call    0x62, 0          	CALL	__gptrput1
0033ee   f000
0033f0   d00f     bra     0x3410           	BRA	_00202_DS_
                                           _00189_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	*inPtr = 0x88;
0033f2   c307     movff   0x307, 0         	MOVFF	_inPtr, r0x00
0033f4   f000
0033f6   c308     movff   0x308, 0x1       	MOVFF	(_inPtr + 1), r0x01
0033f8   f001
0033fa   c309     movff   0x309, 0x2       	MOVFF	(_inPtr + 2), r0x02
0033fc   f002
0033fe   0e88     movlw   0x88             	MOVLW	0x88
003400   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003402   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003404   ffe9
003406   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003408   fff3
00340a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00340c   ec31     call    0x62, 0          	CALL	__gptrput1
00340e   f000
                                           _00202_DS_:
003410   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003412   f004
003414   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003416   f003
003418   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00341a   f002
00341c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00341e   f001
003420   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003422   f000
003424   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetStatus	code
                                           _GetStatus:
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	static void GetStatus(void) {
003778   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00377a   ffe5
00377c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00377e   ffe5
003780   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003782   ffe5
003784   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003786   ffe5
003788   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00378a   ffe5
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte recipient = SetupPacket.bmRequestType & 0x1F;
00378c   0e1f     movlw   0x1f             	MOVLW	0x1f
00378e   0105     movlb   0x5              	BANKSEL	_SetupPacket
003790   1500     andwf   0, 0, 0x1        	ANDWF	_SetupPacket, W, B
003792   6e00     movwf   0, 0             	MOVWF	r0x00
003794   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0;
003796   6b40     clrf    0x40, 0x1        	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	controlTransferBuffer[1] = 0;
003798   6b41     clrf    0x41, 0x1        	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (recipient == 0x00) {
00379a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00379c   e113     bnz     0x37c4           	BNZ	_00153_DS_
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
00379e   0e01     movlw   0x1              	MOVLW	0x01
0037a0   0103     movlb   0x3              	BANKSEL	_requestHandled
0037a2   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
0037a4   0103     movlb   0x3              	BANKSEL	_selfPowered
                                           ;	.line	178; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (selfPowered)
0037a6   5117     movf    0x17, 0, 0x1     	MOVF	_selfPowered, W, B
0037a8   e004     bz      0x37b2           	BZ	_00140_DS_
                                           ;	.line	179; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
0037aa   0e01     movlw   0x1              	MOVLW	0x01
0037ac   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
0037ae   1140     iorwf   0x40, 0, 0x1     	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0037b0   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00140_DS_:
0037b2   0103     movlb   0x3              	BANKSEL	_remoteWakeup
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (remoteWakeup)
0037b4   5118     movf    0x18, 0, 0x1     	MOVF	_remoteWakeup, W, B
0037b6   b4d8     btfsc   0xd8, 0x2, 0     	BTFSC	STATUS, 2
0037b8   d048     bra     0x384a           	BRA	_00154_DS_
                                           ;	.line	181; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
0037ba   0e02     movlw   0x2              	MOVLW	0x02
0037bc   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
0037be   1140     iorwf   0x40, 0, 0x1     	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0037c0   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
0037c2   d043     bra     0x384a           	BRA	_00154_DS_
                                           _00153_DS_:
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (recipient == 0x01) {
0037c4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037c6   0a01     xorlw   0x1              	XORLW	0x01
0037c8   e104     bnz     0x37d2           	BNZ	_00150_DS_
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
0037ca   0e01     movlw   0x1              	MOVLW	0x01
0037cc   0103     movlb   0x3              	BANKSEL	_requestHandled
0037ce   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
0037d0   d03c     bra     0x384a           	BRA	_00154_DS_
                                           _00150_DS_:
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (recipient == 0x02) {
0037d2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037d4   0a02     xorlw   0x2              	XORLW	0x02
0037d6   e001     bz      0x37da           	BZ	_00173_DS_
0037d8   d038     bra     0x384a           	BRA	_00154_DS_
                                           _00173_DS_:
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte endpointNum = SetupPacket.wIndex0 & 0x0F;
0037da   0e0f     movlw   0xf              	MOVLW	0x0f
0037dc   0105     movlb   0x5              	BANKSEL	(_SetupPacket + 4)
0037de   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
0037e0   6e00     movwf   0, 0             	MOVWF	r0x00
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte endpointDir = SetupPacket.wIndex0 & 0x80;
0037e2   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
0037e4   1504     andwf   0x4, 0, 0x1      	ANDWF	(_SetupPacket + 4), W, B
0037e6   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
0037e8   0e01     movlw   0x1              	MOVLW	0x01
0037ea   0103     movlb   0x3              	BANKSEL	_requestHandled
0037ec   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	inPtr = (byte *)&EP_OUT_BD(0) + (endpointNum * 8);
0037ee   0e04     movlw   0x4              	MOVLW	HIGH(_ep_bdt)
0037f0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0037f2   0e00     movlw   0                	MOVLW	LOW(_ep_bdt)
0037f4   6e02     movwf   0x2, 0           	MOVWF	r0x02
0037f6   0e80     movlw   0x80             	MOVLW	0x80
0037f8   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
0037fa   5000     movf    0, 0, 0          	MOVF	r0x00, W
0037fc   0d08     mullw   0x8              	MULLW	0x08
0037fe   cff3     movff   0xff3, 0         	MOVFF	PRODL, r0x00
003800   f000
003802   5000     movf    0, 0, 0          	MOVF	r0x00, W
003804   2402     addwf   0x2, 0, 0        	ADDWF	r0x02, W
003806   0103     movlb   0x3              	BANKSEL	_inPtr
003808   6f07     movwf   0x7, 0x1         	MOVWF	_inPtr, B
00380a   6ae8     clrf    0xe8, 0          	CLRF	WREG
00380c   2003     addwfc  0x3, 0, 0        	ADDWFC	r0x03, W
                                           ; removed redundant BANKSEL
00380e   6f08     movwf   0x8, 0x1         	MOVWF	(_inPtr + 1), B
003810   6ae8     clrf    0xe8, 0          	CLRF	WREG
003812   2004     addwfc  0x4, 0, 0        	ADDWFC	r0x04, W
                                           ; removed redundant BANKSEL
003814   6f09     movwf   0x9, 0x1         	MOVWF	(_inPtr + 2), B
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (endpointDir)
003816   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003818   e005     bz      0x3824           	BZ	_00144_DS_
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	inPtr += 4;
00381a   0e04     movlw   0x4              	MOVLW	0x04
                                           ; removed redundant BANKSEL
00381c   2707     addwf   0x7, 0x1, 0x1    	ADDWF	_inPtr, F, B
00381e   0e00     movlw   0                	MOVLW	0x00
                                           ; removed redundant BANKSEL
003820   2308     addwfc  0x8, 0x1, 0x1    	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003822   2309     addwfc  0x9, 0x1, 0x1    	ADDWFC	(_inPtr + 2), F, B
                                           _00144_DS_:
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
003824   c307     movff   0x307, 0         	MOVFF	_inPtr, r0x00
003826   f000
003828   c308     movff   0x308, 0x1       	MOVFF	(_inPtr + 1), r0x01
00382a   f001
00382c   c309     movff   0x309, 0x2       	MOVFF	(_inPtr + 2), r0x02
00382e   f002
003830   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003832   ffe9
003834   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
003836   fff3
003838   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00383a   ec29     call    0x52, 0          	CALL	__gptrget1
00383c   f000
00383e   6e00     movwf   0, 0             	MOVWF	r0x00
003840   a400     btfss   0, 0x2, 0        	BTFSS	r0x00, 2
003842   d003     bra     0x384a           	BRA	_00154_DS_
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
003844   0e01     movlw   0x1              	MOVLW	0x01
003846   0105     movlb   0x5              	BANKSEL	_controlTransferBuffer
003848   6f40     movwf   0x40, 0x1        	MOVWF	_controlTransferBuffer, B
                                           _00154_DS_:
00384a   0103     movlb   0x3              	BANKSEL	_requestHandled
                                           ;	.line	201; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (requestHandled) {
00384c   5116     movf    0x16, 0, 0x1     	MOVF	_requestHandled, W, B
00384e   e00b     bz      0x3866           	BZ	_00157_DS_
                                           ;	.line	202; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte *)&controlTransferBuffer;
003850   0e05     movlw   0x5              	MOVLW	HIGH(_controlTransferBuffer)
003852   0102     movlb   0x2              	BANKSEL	(_outPtr + 1)
003854   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003856   0e40     movlw   0x40             	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003858   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
00385a   0e80     movlw   0x80             	MOVLW	0x80
                                           ; removed redundant BANKSEL
00385c   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = 2;
00385e   0e02     movlw   0x2              	MOVLW	0x02
003860   0103     movlb   0x3              	BANKSEL	_wCount
003862   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003864   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
                                           _00157_DS_:
003866   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003868   f004
00386a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00386c   f003
00386e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003870   f002
003872   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003874   f001
003876   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003878   f000
00387a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	static void GetDescriptor(void) {
00387c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00387e   ffe5
003880   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003882   ffe5
003884   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003886   ffe5
003888   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00388a   ffe5
00388c   0105     movlb   0x5              	BANKSEL	_SetupPacket
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80) {
00388e   5100     movf    0, 0, 0x1        	MOVF	_SetupPacket, W, B
003890   0a80     xorlw   0x80             	XORLW	0x80
003892   e001     bz      0x3896           	BZ	_00126_DS_
003894   d062     bra     0x395a           	BRA	_00118_DS_
                                           _00126_DS_:
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte descriptorType  = SetupPacket.wValue1;
003896   c503     movff   0x503, 0         	MOVFF	(_SetupPacket + 3), r0x00
003898   f000
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	byte descriptorIndex = SetupPacket.wValue0;
00389a   c502     movff   0x502, 0x1       	MOVFF	(_SetupPacket + 2), r0x01
00389c   f001
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR) {
00389e   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038a0   0a01     xorlw   0x1              	XORLW	0x01
0038a2   e10f     bnz     0x38c2           	BNZ	_00114_DS_
                                           ;	.line	109; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
0038a4   0e01     movlw   0x1              	MOVLW	0x01
0038a6   0103     movlb   0x3              	BANKSEL	_requestHandled
0038a8   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte *)&libdevice_descriptor;
0038aa   0e00     movlw   0                	MOVLW	UPPER(_libdevice_descriptor)
0038ac   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
0038ae   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
0038b0   0e23     movlw   0x23             	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
0038b2   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
0038b4   0e9a     movlw   0x9a             	MOVLW	LOW(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
0038b6   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
0038b8   0e12     movlw   0x12             	MOVLW	0x12
0038ba   0103     movlb   0x3              	BANKSEL	_wCount
0038bc   6f0d     movwf   0xd, 0x1         	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0038be   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
0038c0   d04c     bra     0x395a           	BRA	_00118_DS_
                                           _00114_DS_:
                                           ;	.line	113; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR) {
0038c2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038c4   0a02     xorlw   0x2              	XORLW	0x02
0038c6   e117     bnz     0x38f6           	BNZ	_00111_DS_
                                           ;	.line	117; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
0038c8   0e01     movlw   0x1              	MOVLW	0x01
0038ca   0103     movlb   0x3              	BANKSEL	_requestHandled
0038cc   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte *)&libconfiguration_descriptor;
0038ce   0e00     movlw   0                	MOVLW	UPPER(_libconfiguration_descriptor)
0038d0   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
0038d2   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
0038d4   0e23     movlw   0x23             	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0038d6   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
0038d8   0eac     movlw   0xac             	MOVLW	LOW(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0038da   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	130; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
0038dc   0eae     movlw   0xae             	MOVLW	LOW(_libconfiguration_descriptor + 2)
0038de   6ef6     movwf   0xf6, 0          	MOVWF	TBLPTRL
0038e0   0e23     movlw   0x23             	MOVLW	HIGH(_libconfiguration_descriptor + 2)
0038e2   6ef7     movwf   0xf7, 0          	MOVWF	TBLPTRH
0038e4   0e00     movlw   0                	MOVLW	UPPER(_libconfiguration_descriptor + 2)
0038e6   6ef8     movwf   0xf8, 0          	MOVWF	TBLPTRU
0038e8   0009     tblrd   *+               	TBLRD*+	
0038ea   cff5     movff   0xff5, 0x30d     	MOVFF	TABLAT, _wCount
0038ec   f30d
0038ee   0009     tblrd   *+               	TBLRD*+	
0038f0   cff5     movff   0xff5, 0x30e     	MOVFF	TABLAT, (_wCount + 1)
0038f2   f30e
0038f4   d032     bra     0x395a           	BRA	_00118_DS_
                                           _00111_DS_:
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR) {
0038f6   5000     movf    0, 0, 0          	MOVF	r0x00, W
0038f8   0a03     xorlw   0x3              	XORLW	0x03
0038fa   e129     bnz     0x394e           	BNZ	_00108_DS_
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
0038fc   0e01     movlw   0x1              	MOVLW	0x01
0038fe   0103     movlb   0x3              	BANKSEL	_requestHandled
003900   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	outPtr = (byte *)&libstring_descriptor[descriptorIndex];
003902   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003904   0d03     mullw   0x3              	MULLW	0x03
003906   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003908   f001
00390a   6a02     clrf    0x2, 0           	CLRF	r0x02
00390c   6a03     clrf    0x3, 0           	CLRF	r0x03
00390e   0ef0     movlw   0xf0             	MOVLW	LOW(_libstring_descriptor)
003910   2601     addwf   0x1, 0x1, 0      	ADDWF	r0x01, F
003912   0e23     movlw   0x23             	MOVLW	HIGH(_libstring_descriptor)
003914   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003916   0e00     movlw   0                	MOVLW	UPPER(_libstring_descriptor)
003918   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00391a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00391c   0102     movlb   0x2              	BANKSEL	(_outPtr + 2)
00391e   6ffe     movwf   0xfe, 0x1        	MOVWF	(_outPtr + 2), B
003920   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
003922   6ffd     movwf   0xfd, 0x1        	MOVWF	(_outPtr + 1), B
003924   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003926   6ffc     movwf   0xfc, 0x1        	MOVWF	_outPtr, B
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	wCount = *outPtr;
003928   c2fc     movff   0x2fc, 0x1       	MOVFF	_outPtr, r0x01
00392a   f001
00392c   c2fd     movff   0x2fd, 0x2       	MOVFF	(_outPtr + 1), r0x02
00392e   f002
003930   c2fe     movff   0x2fe, 0x3       	MOVFF	(_outPtr + 2), r0x03
003932   f003
003934   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
003936   ffe9
003938   c002     movff   0x2, 0xff3       	MOVFF	r0x02, PRODL
00393a   fff3
00393c   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00393e   ec29     call    0x52, 0          	CALL	__gptrget1
003940   f000
003942   6e01     movwf   0x1, 0           	MOVWF	r0x01
003944   c001     movff   0x1, 0x30d       	MOVFF	r0x01, _wCount
003946   f30d
003948   0103     movlb   0x3              	BANKSEL	(_wCount + 1)
00394a   6b0e     clrf    0xe, 0x1         	CLRF	(_wCount + 1), B
00394c   d006     bra     0x395a           	BRA	_00118_DS_
                                           _00108_DS_:
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR) {
00394e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003950   0a06     xorlw   0x6              	XORLW	0x06
003952   e103     bnz     0x395a           	BNZ	_00118_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tmp/usb/picUSB.c	requestHandled = 1;
003954   0e01     movlw   0x1              	MOVLW	0x01
003956   0103     movlb   0x3              	BANKSEL	_requestHandled
003958   6f16     movwf   0x16, 0x1        	MOVWF	_requestHandled, B
                                           _00118_DS_:
00395a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00395c   f003
00395e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003960   f002
003962   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003964   f001
003966   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003968   f000
00396a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _libdevice_descriptor:
00239a   0112     movlb   0x12             	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
00239c   0200     mulwf   0, 0             
00239e   0002     dw      0x2              
0023a0   4000     rrncf   0, 0, 0          
0023a2   04d8     decf    0xd8, 0, 0       
0023a4   feab     dw      0xfeab           
0023a6   0000     nop                      	DB	0x00, 0x00, 0x00, 0x01, 0x00, 0x01
0023a8   0100     movlb   0                
0023aa   0100     movlb   0                
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
0023ac   0209     mulwf   0x9, 0           	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0x03, 0x14, 0x09, 0x04, 0x00
0023ae   0043     dw      0x43             
0023b0   0102     movlb   0x2              
0023b2   0300     mulwf   0, 0x1           
0023b4   0914     iorlw   0x14             
0023b6   0004     clrwdt                   
0023b8   0100     movlb   0                	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
0023ba   0202     mulwf   0x2, 0           
0023bc   0001     dw      0x1              
0023be   2405     addwf   0x5, 0, 0        
0023c0   1000     iorwf   0, 0, 0          
0023c2   0401     decf    0x1, 0, 0        
0023c4   0224     mulwf   0x24, 0          	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
0023c6   0500     decf    0, 0, 0x1        
0023c8   0624     decf    0x24, 0x1, 0     
0023ca   0100     movlb   0                
0023cc   2405     addwf   0x5, 0, 0        
0023ce   0001     dw      0x1              
0023d0   0701     decf    0x1, 0x1, 0x1    	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
0023d2   8205     bsf     0x5, 0x1, 0      
0023d4   1003     iorwf   0x3, 0, 0        
0023d6   0200     mulwf   0, 0             
0023d8   0409     decf    0x9, 0, 0        
0023da   0001     dw      0x1              
0023dc   0a02     xorlw   0x2              	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
0023de   0000     nop                      
0023e0   0700     decf    0, 0x1, 0x1      
0023e2   0305     mulwf   0x5, 0x1         
0023e4   4002     rrncf   0x2, 0, 0        
0023e6   0000     nop                      
0023e8   0507     decf    0x7, 0, 0x1      	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
0023ea   0283     mulwf   0x83, 0          
0023ec   0040     dw      0x40             
0023ee   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
0023f0   0328     mulwf   0x28, 0x1        	DB	0x28, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x00, 0x00, 0x00
0023f2   0c50     retlw   0x50             
0023f4   5003     movf    0x3, 0, 0        
0023f6   030c     mulwf   0xc, 0x1         
0023f8   0050     dw      0x50             
0023fa   0000     nop                      
0023fc   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0023fe   0000     nop                      
002400   0000     nop                      
002402   0000     nop                      
002404   0000     nop                      
002406   0000     nop                      
002408   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00240a   0000     nop                      
00240c   0000     nop                      
00240e   0000     nop                      
002410   0000     nop                      
002412   0000     nop                      
002414   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002416   0000     nop                      
002418   0000     nop                      
00241a   0000     nop                      
00241c   0000     nop                      
00241e   0000     nop                      
002420   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002422   0000     nop                      
002424   0000     nop                      
002426   0000     nop                      
002428   0000     nop                      
00242a   0000     nop                      
00242c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00242e   0000     nop                      
002430   0000     nop                      
002432   0000     nop                      
002434   0000     nop                      
002436   0000     nop                      
002438   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00243a   0000     nop                      
00243c   0000     nop                      
00243e   0000     nop                      
002440   0000     nop                      
002442   0000     nop                      
002444   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002446   0000     nop                      
002448   0000     nop                      
00244a   0000     nop                      
00244c   0000     nop                      
00244e   0000     nop                      
002450   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002452   0000     nop                      
002454   0000     nop                      
002456   0000     nop                      
002458   0000     nop                      
00245a   0000     nop                      
00245c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00245e   0000     nop                      
002460   0000     nop                      
002462   0000     nop                      
002464   0000     nop                      
002466   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002468   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00246a   0804     sublw   0x4              
00246c   2010     addwfc  0x10, 0, 0       
00246e   8040     bsf     0x40, 0, 0       
002470   8040     bsf     0x40, 0, 0       
002472   0201     mulwf   0x1, 0           
002474   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002476   0402     decf    0x2, 0, 0        
002478   2008     addwfc  0x8, 0, 0        
                                           ; ; Starting pCode block for Ival
                                           _mask:
00247a   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00247c   0804     sublw   0x4              
00247e   2010     addwfc  0x10, 0, 0       
002480   8040     bsf     0x40, 0, 0       
002482   8040     bsf     0x40, 0, 0       
002484   0201     mulwf   0x1, 0           
002486   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002488   0402     decf    0x2, 0, 0        
00248a   2008     addwfc  0x8, 0, 0        
00248c   0201     mulwf   0x1, 0           
00248e   0104     movlb   0x4              
002490   0402     decf    0x2, 0, 0        
002492   1008     iorwf   0x8, 0, 0        	DB	0x08, 0x10, 0x20, 0x40, 0x80
002494   4020     rrncf   0x20, 0, 0       
002496   0080     dw      0x80             
                                           ; ; Starting pCode block for Ival
                                           _port:
002498   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
00249a   0000     nop                      
00249c   0000     nop                      
00249e   0000     nop                      
0024a0   0101     movlb   0x1              
0024a2   0101     movlb   0x1              
0024a4   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
0024a6   0202     mulwf   0x2, 0           
0024a8   0202     mulwf   0x2, 0           
0024aa   0404     decf    0x4, 0, 0        
0024ac   0304     mulwf   0x4, 0x1         
0024ae   0303     mulwf   0x3, 0x1         
0024b0   0303     mulwf   0x3, 0x1         	DB	0x03, 0x03, 0x03, 0x03, 0x03
0024b2   0303     mulwf   0x3, 0x1         
0024b4   0003     sleep                    
                                           ; ; Starting pCode block
                                           __str_0:
0024b6   6369     cpfseq  0x69, 0x1        	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x31
0024b8   7261     btg     0x61, 0x1, 0     
0024ba   206f     addwfc  0x6f, 0, 0       
0024bc   5355     movf    0x55, 0x1, 0x1   
0024be   2042     addwfc  0x42, 0, 0       
0024c0   3130     rrcf    0x30, 0, 0x1     
0024c2   0a20     xorlw   0x20             	DB	0x20, 0x0a, 0x00
0024c4   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 9126 (0x23a6) bytes ( 6.96%)
                                           ;           	 4563 (0x11d3) words
                                           ; udata size:	  532 (0x0214) bytes (29.69%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
