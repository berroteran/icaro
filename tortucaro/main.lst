gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 5-31-2012  08:56:40
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Thu May 31 08:56:35 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _i
                                           	global _loopvar
                                           	global _hidRxLen
                                           	global _hidProtocol
                                           	global _hidIdleRate
                                           	global _HIDPostProcess
                                           	global _deviceAddress
                                           	global _EnableUSBModule
                                           	global _ProcessUSBTransactions
                                           	global _ProcessCDCRequest
                                           	global _CDCgets
                                           	global _CDCInitEndpoint
                                           	global _CONTROL_LINE
                                           	global _deviceState
                                           	global _remoteWakeup
                                           	global _selfPowered
                                           	global _currentConfiguration
                                           	global _ctrlTransferStage
                                           	global _requestHandled
                                           	global _outPtr
                                           	global _inPtr
                                           	global _wCount
                                           	global _ep_bdt
                                           	global _SetupPacket
                                           	global _controlTransferBuffer
                                           	global _CDCControlBuffer
                                           	global _CDCRxBuffer
                                           	global _CDCTxBuffer
                                           	global _line_config
                                           	global _zlp
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _receivedbyte
                                           	global _receivedbyte2
                                           	global _rxstr
                                           	global _rxstr2
                                           	global _valor
                                           	global _ProcessStandardRequest
                                           	global _InDataStage
                                           	global _OutDataStage
                                           	global _SetupStage
                                           	global _WaitForSetupStage
                                           	global _ProcessControlTransfer
                                           	global _UnSuspend
                                           	global _StartOfFrame
                                           	global _Stall
                                           	global _Suspend
                                           	global _BusReset
                                           	global _CDCputs
                                           	global _Delayms
                                           	global _Delayus
                                           	global _init_CDC
                                           	global _analog_init
                                           	global _analogread
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _l293d
                                           	global _sensor
                                           	global _leer
                                           	global _motors
                                           	global _setup
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _libdevice_descriptor
                                           	global _libconfiguration_descriptor
                                           	global _libstring_descriptor
                                           	global _servomasks
                                           	global _mask
                                           	global _port
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget1
                                           	extern __gptrput1
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           	extern __mulint
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _CONTROL_LINE	db	0x00
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_main_0	udata
                                           _deviceAddress	res	1
                                           
                                           udata_main_1	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_main_2	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_main_3	udata
                                           _hidProtocol	res	1
                                           
                                           udata_main_4	udata
                                           _hidRxLen	res	1
                                           
                                           udata_main_5	udata
                                           _loopvar	res	1
                                           
                                           udata_main_6	udata
                                           _i	res	1
                                           
                                           udata_main_7	udata
                                           _requestHandled	res	1
                                           
                                           udata_main_8	udata
                                           _outPtr	res	3
                                           
                                           udata_main_9	udata
                                           _wCount	res	2
                                           
                                           udata_main_10	udata
                                           _inPtr	res	3
                                           
                                           udata_main_11	udata
                                           _selfPowered	res	1
                                           
                                           udata_main_12	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_main_13	udata
                                           _deviceState	res	1
                                           
                                           udata_main_14	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_main_15	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_main_16	udata
                                           _line_config	res	7
                                           
                                           udata_main_17	udata
                                           _zlp	res	8
                                           
                                           udata_main_18	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_main_19	udata
                                           _servovalues	res	18
                                           
                                           udata_main_20	udata
                                           _timingindex	res	1
                                           
                                           udata_main_21	udata
                                           _timings	res	72
                                           
                                           udata_main_22	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           udata_main_23	udata
                                           _receivedbyte2	res	1
                                           
                                           udata_main_24	udata
                                           _receivedbyte	res	1
                                           
                                           
                                           ustat_main_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tortucaro/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tortucaro/main.c	if(PIR2bits.USBIF)
002044   aaa1     btfss	0xa1, 0x5, 0       	BTFSS	_PIR2bits, 5
002046   d006     bra	0x2054               	BRA	_01251_DS_
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tortucaro/main.c	ProcessUSBTransactions();
002048   ec74     call	0x44e8, 0           	CALL	_ProcessUSBTransactions
00204a   f022
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tortucaro/main.c	UIRbits.SOFIF = 0;
00204c   9c68     bcf	0x68, 0x6, 0         	BCF	_UIRbits, 6
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tortucaro/main.c	UIRbits.URSTIF = 0;
00204e   9068     bcf	0x68, 0, 0           	BCF	_UIRbits, 0
                                           ;	.line	104; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIR2bits.USBIF = 0;
002050   9aa1     bcf	0xa1, 0x5, 0         	BCF	_PIR2bits, 5
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tortucaro/main.c	UEIR = 0;
002052   6a6a     clrf	0x6a, 0             	CLRF	_UEIR
                                           _01251_DS_:
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tortucaro/main.c	servos_interrupt();
002054   ec8d     call	0x471a, 0           	CALL	_servos_interrupt
002056   f023
002058   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00205a   fffb
00205c   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00205e   fffa
002060   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002062   ffea
002064   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002066   ffe9
002068   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00206a   fff4
00206c   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00206e   fff3
002070   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002072   ffe0
002074   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002076   ffd8
002078   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00207a   ffe8
00207c   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tortucaro/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tortucaro/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE1=0;
0048a0   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE2=0;
0048a2   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tortucaro/main.c	ADCON1=0x0F;
0048a4   0e0f     movlw	0xf                	MOVLW	0x0f
0048a6   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tortucaro/main.c	setup();
0048a8   ec36     call	0x446c, 0           	CALL	_setup
0048aa   f022
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tortucaro/main.c	analog_init();
0048ac   eca2     call	0x4944, 0           	CALL	_analog_init
0048ae   f024
                                           ;	.line	67; /home/valentin/github/icaro-bloques/tortucaro/main.c	servos_init();
0048b0   ec68     call	0x46d0, 0           	CALL	_servos_init
0048b2   f023
                                           ;	.line	70; /home/valentin/github/icaro-bloques/tortucaro/main.c	init_CDC();
0048b4   ecde     call	0x45bc, 0           	CALL	_init_CDC
0048b6   f022
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE2bits.USBIE = 1;
0048b8   8aa0     bsf	0xa0, 0x5, 0         	BSF	_PIE2bits, 5
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCON = 0xC0;      
0048ba   0ec0     movlw	0xc0               	MOVLW	0xc0
0048bc   6ef2     movwf	0xf2, 0            	MOVWF	_INTCON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCONbits.PEIE=1;
0048be   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCONbits.GIE=1;
0048c0   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _01243_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/tortucaro/main.c	loop();
0048c2   ec64     call	0x42c8, 0           	CALL	_loop
0048c4   f021
0048c6   d7fd     bra	0x48c2               	BRA	_01243_DS_
0048c8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tortucaro/user.c	void loop()
0042c8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0042ca   ffe5
0042cc   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0042ce   ffe5
0042d0   0102     movlb	0x2                	BANKSEL	_valor
                                           ;	.line	201; /home/valentin/github/icaro-bloques/tortucaro/user.c	PORTD=valor;
0042d2   5188     movf	0x88, 0, 0x1        	MOVF	_valor, W, B
0042d4   6e83     movwf	0x83, 0            	MOVWF	_PORTD
                                           ;	.line	202; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte=CDCgets(rxstr);
0042d6   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
0042d8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0042da   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr)
0042dc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0042de   0e08     movlw	0x8                	MOVLW	LOW(_rxstr)
0042e0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0042e2   ecce     call	0x339c, 0           	CALL	_CDCgets
0042e4   f019
0042e6   0103     movlb	0x3                	BANKSEL	_receivedbyte
0042e8   6f1e     movwf	0x1e, 0x1          	MOVWF	_receivedbyte, B
0042ea   0e03     movlw	0x3                	MOVLW	0x03
0042ec   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr[receivedbyte]=0;
0042ee   0e08     movlw	0x8                	MOVLW	LOW(_rxstr)
                                           ; removed redundant BANKSEL
0042f0   251e     addwf	0x1e, 0, 0x1       	ADDWF	_receivedbyte, W, B
0042f2   6e00     movwf	0, 0               	MOVWF	r0x00
0042f4   6a01     clrf	0x1, 0              	CLRF	r0x01
0042f6   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr)
0042f8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0042fa   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0042fc   ffe9
0042fe   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004300   ffea
004302   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	204; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte>0)
004304   511e     movf	0x1e, 0, 0x1        	MOVF	_receivedbyte, W, B
004306   e022     bz	0x434c                	BZ	_01222_DS_
004308   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='b')
00430a   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
00430c   0a62     xorlw	0x62               	XORLW	0x62
00430e   e10c     bnz	0x4328               	BNZ	_01214_DS_
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tortucaro/user.c	CDCputs("icaro USB 01 \n",14);
004310   0e0e     movlw	0xe                	MOVLW	0x0e
004312   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004314   0e00     movlw	0                  	MOVLW	UPPER(__str_0)
004316   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004318   0e29     movlw	0x29               	MOVLW	HIGH(__str_0)
00431a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00431c   0e18     movlw	0x18               	MOVLW	LOW(__str_0)
00431e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004320   ec5d     call	0x34ba, 0           	CALL	_CDCputs
004322   f01a
004324   0e04     movlw	0x4                	MOVLW	0x04
004326   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _01214_DS_:
004328   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='m')
00432a   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
00432c   0a6d     xorlw	0x6d               	XORLW	0x6d
00432e   e102     bnz	0x4334               	BNZ	_01216_DS_
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tortucaro/user.c	motors();
004330   eceb     call	0x35d6, 0           	CALL	_motors
004332   f01a
                                           _01216_DS_:
004334   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='e')
004336   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
004338   0a65     xorlw	0x65               	XORLW	0x65
00433a   e102     bnz	0x4340               	BNZ	_01218_DS_
                                           ;	.line	218; /home/valentin/github/icaro-bloques/tortucaro/user.c	sensor();
00433c   ec62     call	0x3ec4, 0           	CALL	_sensor
00433e   f01f
                                           _01218_DS_:
004340   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='l')
004342   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
004344   0a6c     xorlw	0x6c               	XORLW	0x6c
004346   e102     bnz	0x434c               	BNZ	_01222_DS_
                                           ;	.line	222; /home/valentin/github/icaro-bloques/tortucaro/user.c	l293d();
004348   ecbe     call	0x3f7c, 0           	CALL	_l293d
00434a   f01f
                                           _01222_DS_:
00434c   0103     movlb	0x3                	BANKSEL	_receivedbyte
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte=0;
00434e   6b1e     clrf	0x1e, 0x1           	CLRF	_receivedbyte, B
004350   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
004352   f001
004354   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004356   f000
004358   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(25,OUTPUT);
00446c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00446e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004470   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004472   0e19     movlw	0x19               	MOVLW	0x19
004474   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004476   ec94     call	0x2928, 0           	CALL	_pinmode
004478   f014
00447a   0e04     movlw	0x4                	MOVLW	0x04
00447c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(26,OUTPUT);
00447e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004480   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004482   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004484   0e1a     movlw	0x1a               	MOVLW	0x1a
004486   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004488   ec94     call	0x2928, 0           	CALL	_pinmode
00448a   f014
00448c   0e04     movlw	0x4                	MOVLW	0x04
00448e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(27,OUTPUT);
004490   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004492   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004494   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004496   0e1b     movlw	0x1b               	MOVLW	0x1b
004498   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00449a   ec94     call	0x2928, 0           	CALL	_pinmode
00449c   f014
00449e   0e04     movlw	0x4                	MOVLW	0x04
0044a0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	188; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(28,OUTPUT);
0044a2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0044a4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0044a6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0044a8   0e1c     movlw	0x1c               	MOVLW	0x1c
0044aa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0044ac   ec94     call	0x2928, 0           	CALL	_pinmode
0044ae   f014
0044b0   0e04     movlw	0x4                	MOVLW	0x04
0044b2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(8);
0044b4   0e08     movlw	0x8                	MOVLW	0x08
0044b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0044b8   ecec     call	0x39d8, 0           	CALL	_ServoAttach
0044ba   f01c
0044bc   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(9);
0044be   0e09     movlw	0x9                	MOVLW	0x09
0044c0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0044c2   ecec     call	0x39d8, 0           	CALL	_ServoAttach
0044c4   f01c
0044c6   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(10);
0044c8   0e0a     movlw	0xa                	MOVLW	0x0a
0044ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0044cc   ecec     call	0x39d8, 0           	CALL	_ServoAttach
0044ce   f01c
0044d0   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	192; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(11);
0044d2   0e0b     movlw	0xb                	MOVLW	0x0b
0044d4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0044d6   ecec     call	0x39d8, 0           	CALL	_ServoAttach
0044d8   f01c
0044da   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	193; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(12);
0044dc   0e0c     movlw	0xc                	MOVLW	0x0c
0044de   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0044e0   ecec     call	0x39d8, 0           	CALL	_ServoAttach
0044e2   f01c
0044e4   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
0044e6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__motors	code
                                           _motors:
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tortucaro/user.c	void motors()
0035d6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0035d8   ffe5
0035da   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0035dc   ffe5
0035de   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0035e0   ffe5
0035e2   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0035e4   ffe5
0035e6   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0035e8   ffe5
0035ea   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0035ec   ffe5
0035ee   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0035f0   ffe5
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tortucaro/user.c	int resultado=0;
0035f2   6a00     clrf	0, 0                	CLRF	r0x00
0035f4   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           ;	.line	133; /home/valentin/github/icaro-bloques/tortucaro/user.c	int val=0;
0035f6   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           _01168_DS_:
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
0035f8   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
0035fa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035fc   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
0035fe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003600   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003602   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003604   ecce     call	0x339c, 0           	CALL	_CDCgets
003606   f019
003608   0103     movlb	0x3                	BANKSEL	_receivedbyte2
00360a   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
00360c   0e03     movlw	0x3                	MOVLW	0x03
00360e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003610   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
003612   e0f2     bz	0x35f8                	BZ	_01168_DS_
                                           ;	.line	139; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
003614   c248     movff	0x248, 0x4         	MOVFF	_rxstr2, r0x04
003616   f004
003618   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00361a   0a31     xorlw	0x31               	XORLW	0x31
00361c   e102     bnz	0x3622               	BNZ	_01156_DS_
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=10;
00361e   0e0a     movlw	0xa                	MOVLW	0x0a
003620   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01156_DS_:
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
003622   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003624   0a32     xorlw	0x32               	XORLW	0x32
003626   e102     bnz	0x362c               	BNZ	_01158_DS_
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=11;
003628   0e0b     movlw	0xb                	MOVLW	0x0b
00362a   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01158_DS_:
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
00362c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00362e   0a33     xorlw	0x33               	XORLW	0x33
003630   e102     bnz	0x3636               	BNZ	_01160_DS_
                                           ;	.line	149; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=12;
003632   0e0c     movlw	0xc                	MOVLW	0x0c
003634   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01160_DS_:
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
003636   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003638   0a34     xorlw	0x34               	XORLW	0x34
00363a   e102     bnz	0x3640               	BNZ	_01162_DS_
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=8;
00363c   0e08     movlw	0x8                	MOVLW	0x08
00363e   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01162_DS_:
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
003640   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003642   0a35     xorlw	0x35               	XORLW	0x35
003644   e102     bnz	0x364a               	BNZ	_01164_DS_
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=9;
003646   0e09     movlw	0x9                	MOVLW	0x09
003648   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01164_DS_:
00364a   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
00364c   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           _01177_DS_:
                                           ;	.line	165; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
00364e   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
003650   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003652   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003654   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003656   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003658   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00365a   ecce     call	0x339c, 0           	CALL	_CDCgets
00365c   f019
00365e   0103     movlb	0x3                	BANKSEL	_receivedbyte2
003660   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
003662   0e03     movlw	0x3                	MOVLW	0x03
003664   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003666   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
003668   e0f2     bz	0x364e                	BZ	_01177_DS_
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr2[receivedbyte2]=0;
00366a   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
                                           ; removed redundant BANKSEL
00366c   251d     addwf	0x1d, 0, 0x1       	ADDWF	_receivedbyte2, W, B
00366e   6e04     movwf	0x4, 0             	MOVWF	r0x04
003670   6a05     clrf	0x5, 0              	CLRF	r0x05
003672   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003674   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
003676   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
003678   ffe9
00367a   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
00367c   ffea
00367e   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
003680   6a04     clrf	0x4, 0              	CLRF	r0x04
003682   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _01172_DS_:
003684   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003686   0f80     addlw	0x80               	ADDLW	0x80
003688   0f80     addlw	0x80               	ADDLW	0x80
00368a   e102     bnz	0x3690               	BNZ	_01203_DS_
00368c   0e08     movlw	0x8                	MOVLW	0x08
00368e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _01203_DS_:
003690   e215     bc	0x36bc                	BC	_01175_DS_
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tortucaro/user.c	rb=(rxstr2[posic]);
003692   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003694   2404     addwf	0x4, 0, 0          	ADDWF	r0x04, W
003696   6e06     movwf	0x6, 0             	MOVWF	r0x06
003698   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
00369a   2005     addwfc	0x5, 0, 0         	ADDWFC	r0x05, W
00369c   6e07     movwf	0x7, 0             	MOVWF	r0x07
00369e   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0036a0   ffe9
0036a2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0036a4   ffea
0036a6   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0036a8   f006
0036aa   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           ;	.line	172; /home/valentin/github/icaro-bloques/tortucaro/user.c	resultado=resultado+rb;
0036ac   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0036ae   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0036b0   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0036b2   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
0036b4   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0036b6   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0036b8   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
0036ba   d7e4     bra	0x3684               	BRA	_01172_DS_
                                           _01175_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoWrite(val,resultado);
0036bc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0036be   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036c0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0036c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036c4   ecaa     call	0x4554, 0           	CALL	_ServoWrite
0036c6   f022
0036c8   0e02     movlw	0x2                	MOVLW	0x02
0036ca   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0036cc   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
0036ce   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tortucaro/user.c	return;
0036d0   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0036d2   f007
0036d4   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0036d6   f006
0036d8   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0036da   f005
0036dc   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0036de   f004
0036e0   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0036e2   f002
0036e4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0036e6   f001
0036e8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0036ea   f000
0036ec   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__leer	code
                                           _leer:
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tortucaro/user.c	void leer()
003ab8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003aba   ffe5
003abc   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003abe   ffe5
003ac0   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003ac2   ffe5
003ac4   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003ac6   ffe5
003ac8   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003aca   ffe5
003acc   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003ace   ffe5
003ad0   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003ad2   ffe5
003ad4   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003ad6   ffe5
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tortucaro/user.c	int resultado=0;
003ad8   6a00     clrf	0, 0                	CLRF	r0x00
003ada   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           ;	.line	106; /home/valentin/github/icaro-bloques/tortucaro/user.c	int	i=1;
003adc   0e01     movlw	0x1                	MOVLW	0x01
003ade   6e02     movwf	0x2, 0             	MOVWF	r0x02
003ae0   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _01141_DS_:
                                           ;	.line	109; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003ae2   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
003ae4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ae6   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003ae8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003aea   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003aec   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003aee   ecce     call	0x339c, 0           	CALL	_CDCgets
003af0   f019
003af2   0103     movlb	0x3                	BANKSEL	_receivedbyte2
003af4   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
003af6   0e03     movlw	0x3                	MOVLW	0x03
003af8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003afa   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
003afc   e0f2     bz	0x3ae2                	BZ	_01141_DS_
                                           ;	.line	112; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr2[receivedbyte2]=0;
003afe   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
                                           ; removed redundant BANKSEL
003b00   251d     addwf	0x1d, 0, 0x1       	ADDWF	_receivedbyte2, W, B
003b02   6e04     movwf	0x4, 0             	MOVWF	r0x04
003b04   6a05     clrf	0x5, 0              	CLRF	r0x05
003b06   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003b08   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
003b0a   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
003b0c   ffe9
003b0e   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
003b10   ffea
003b12   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	114; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
003b14   6a04     clrf	0x4, 0              	CLRF	r0x04
003b16   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _01136_DS_:
003b18   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003b1a   0f80     addlw	0x80               	ADDLW	0x80
003b1c   0f80     addlw	0x80               	ADDLW	0x80
003b1e   e102     bnz	0x3b24               	BNZ	_01150_DS_
003b20   0e08     movlw	0x8                	MOVLW	0x08
003b22   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _01150_DS_:
003b24   e224     bc	0x3b6e                	BC	_01139_DS_
                                           ;	.line	116; /home/valentin/github/icaro-bloques/tortucaro/user.c	rb=(rxstr2[posic]);
003b26   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003b28   2404     addwf	0x4, 0, 0          	ADDWF	r0x04, W
003b2a   6e06     movwf	0x6, 0             	MOVWF	r0x06
003b2c   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003b2e   2005     addwfc	0x5, 0, 0         	ADDWFC	r0x05, W
003b30   6e07     movwf	0x7, 0             	MOVWF	r0x07
003b32   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
003b34   ffe9
003b36   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
003b38   ffea
003b3a   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
003b3c   f006
003b3e   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           ;	.line	117; /home/valentin/github/icaro-bloques/tortucaro/user.c	i=i*i;// en cada iteracion i se duplica: 1,2,4,8,16,32,64,128
003b40   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003b42   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b44   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003b46   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b48   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003b4a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b4c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003b4e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003b50   ec27     call	0x4e, 0             	CALL	__mulint
003b52   f000
003b54   6e02     movwf	0x2, 0             	MOVWF	r0x02
003b56   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
003b58   f003
003b5a   0e04     movlw	0x4                	MOVLW	0x04
003b5c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	118; /home/valentin/github/icaro-bloques/tortucaro/user.c	resultado=resultado+rb;
003b5e   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
003b60   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003b62   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
003b64   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ;	.line	114; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
003b66   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003b68   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003b6a   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
003b6c   d7d5     bra	0x3b18               	BRA	_01136_DS_
                                           _01139_DS_:
                                           ;	.line	123; /home/valentin/github/icaro-bloques/tortucaro/user.c	PORTB=resultado;// en ves de usar digitalwrite, mando directamente al PORTB
003b6e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b70   6e81     movwf	0x81, 0            	MOVWF	_PORTB
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tortucaro/user.c	return;
003b72   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003b74   f007
003b76   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003b78   f006
003b7a   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003b7c   f005
003b7e   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003b80   f004
003b82   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003b84   f003
003b86   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003b88   f002
003b8a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003b8c   f001
003b8e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003b90   f000
003b92   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tortucaro/user.c	void sensor()
003ec4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003ec6   ffe5
003ec8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003eca   ffe5
003ecc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003ece   ffe5
                                           ;	.line	53; /home/valentin/github/icaro-bloques/tortucaro/user.c	unsigned int val=0;
003ed0   6a00     clrf	0, 0                	CLRF	r0x00
                                           _01100_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003ed2   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003ed4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ed6   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003ed8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003eda   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003edc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ede   ecce     call	0x339c, 0           	CALL	_CDCgets
003ee0   f019
003ee2   0103     movlb	0x3                	BANKSEL	_receivedbyte2
003ee4   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
003ee6   0e03     movlw	0x3                	MOVLW	0x03
003ee8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003eea   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
003eec   e0f2     bz	0x3ed2                	BZ	_01100_DS_
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
003eee   c248     movff	0x248, 0x2         	MOVFF	_rxstr2, r0x02
003ef0   f002
003ef2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003ef4   0a31     xorlw	0x31               	XORLW	0x31
003ef6   e102     bnz	0x3efc               	BNZ	_01082_DS_
                                           ;	.line	63; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=13;
003ef8   0e0d     movlw	0xd                	MOVLW	0x0d
003efa   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01082_DS_:
                                           ;	.line	65; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
003efc   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003efe   0a32     xorlw	0x32               	XORLW	0x32
003f00   e102     bnz	0x3f06               	BNZ	_01084_DS_
                                           ;	.line	67; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=14;
003f02   0e0e     movlw	0xe                	MOVLW	0x0e
003f04   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01084_DS_:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
003f06   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003f08   0a33     xorlw	0x33               	XORLW	0x33
003f0a   e102     bnz	0x3f10               	BNZ	_01086_DS_
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=15;
003f0c   0e0f     movlw	0xf                	MOVLW	0x0f
003f0e   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01086_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
003f10   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003f12   0a34     xorlw	0x34               	XORLW	0x34
003f14   e102     bnz	0x3f1a               	BNZ	_01088_DS_
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=16;
003f16   0e10     movlw	0x10               	MOVLW	0x10
003f18   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01088_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
003f1a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003f1c   0a35     xorlw	0x35               	XORLW	0x35
003f1e   e102     bnz	0x3f24               	BNZ	_01090_DS_
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=17;
003f20   0e11     movlw	0x11               	MOVLW	0x11
003f22   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01090_DS_:
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='6')
003f24   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003f26   0a36     xorlw	0x36               	XORLW	0x36
003f28   e102     bnz	0x3f2e               	BNZ	_01092_DS_
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=18;
003f2a   0e12     movlw	0x12               	MOVLW	0x12
003f2c   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01092_DS_:
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='7')
003f2e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003f30   0a37     xorlw	0x37               	XORLW	0x37
003f32   e102     bnz	0x3f38               	BNZ	_01094_DS_
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=19;
003f34   0e13     movlw	0x13               	MOVLW	0x13
003f36   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01094_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='8')
003f38   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003f3a   0a38     xorlw	0x38               	XORLW	0x38
003f3c   e102     bnz	0x3f42               	BNZ	_01096_DS_
                                           ;	.line	91; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=20;
003f3e   0e14     movlw	0x14               	MOVLW	0x14
003f40   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01096_DS_:
003f42   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	93; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
003f44   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tortucaro/user.c	valor=analogread(val);
003f46   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f48   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f4a   ecf2     call	0x43e4, 0           	CALL	_analogread
003f4c   f021
003f4e   6e00     movwf	0, 0               	MOVWF	r0x00
003f50   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003f52   f001
003f54   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tortucaro/user.c	CDCputs(valor,DEC);
003f56   0e01     movlw	0x1                	MOVLW	0x01
003f58   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f5a   0e80     movlw	0x80               	MOVLW	0x80
003f5c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f5e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003f60   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f62   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f64   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f66   ec5d     call	0x34ba, 0           	CALL	_CDCputs
003f68   f01a
003f6a   0e04     movlw	0x4                	MOVLW	0x04
003f6c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003f6e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003f70   f002
003f72   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003f74   f001
003f76   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003f78   f000
003f7a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__l293d	code
                                           _l293d:
                                           ;	.line	8; /home/valentin/github/icaro-bloques/tortucaro/user.c	void l293d()
003f7c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003f7e   ffe5
003f80   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003f82   ffe5
003f84   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003f86   ffe5
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tortucaro/user.c	int val=0;
003f88   6a00     clrf	0, 0                	CLRF	r0x00
003f8a   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01056_DS_:
                                           ;	.line	17; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003f8c   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003f8e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f90   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003f92   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f94   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003f96   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f98   ecce     call	0x339c, 0           	CALL	_CDCgets
003f9a   f019
003f9c   0103     movlb	0x3                	BANKSEL	_receivedbyte2
003f9e   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
003fa0   0e03     movlw	0x3                	MOVLW	0x03
003fa2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	18; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003fa4   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
003fa6   e0f2     bz	0x3f8c                	BZ	_01056_DS_
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
003fa8   c248     movff	0x248, 0x2         	MOVFF	_rxstr2, r0x02
003faa   f002
003fac   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003fae   0a31     xorlw	0x31               	XORLW	0x31
003fb0   e103     bnz	0x3fb8               	BNZ	_01044_DS_
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=96;
003fb2   0e60     movlw	0x60               	MOVLW	0x60
003fb4   6e00     movwf	0, 0               	MOVWF	r0x00
003fb6   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01044_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
003fb8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003fba   0a32     xorlw	0x32               	XORLW	0x32
003fbc   e103     bnz	0x3fc4               	BNZ	_01046_DS_
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=144;
003fbe   0e90     movlw	0x90               	MOVLW	0x90
003fc0   6e00     movwf	0, 0               	MOVWF	r0x00
003fc2   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01046_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
003fc4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003fc6   0a33     xorlw	0x33               	XORLW	0x33
003fc8   e103     bnz	0x3fd0               	BNZ	_01048_DS_
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=64;
003fca   0e40     movlw	0x40               	MOVLW	0x40
003fcc   6e00     movwf	0, 0               	MOVWF	r0x00
003fce   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01048_DS_:
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
003fd0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003fd2   0a34     xorlw	0x34               	XORLW	0x34
003fd4   e103     bnz	0x3fdc               	BNZ	_01050_DS_
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=32;
003fd6   0e20     movlw	0x20               	MOVLW	0x20
003fd8   6e00     movwf	0, 0               	MOVWF	r0x00
003fda   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01050_DS_:
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
003fdc   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003fde   0a35     xorlw	0x35               	XORLW	0x35
003fe0   e102     bnz	0x3fe6               	BNZ	_01052_DS_
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=0;
003fe2   6a00     clrf	0, 0                	CLRF	r0x00
003fe4   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01052_DS_:
003fe6   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	40; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
003fe8   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           ;	.line	45; /home/valentin/github/icaro-bloques/tortucaro/user.c	valor=val;
003fea   c000     movff	0, 0x288           	MOVFF	r0x00, _valor
003fec   f288
003fee   c001     movff	0x1, 0x289         	MOVFF	r0x01, (_valor + 1)
003ff0   f289
003ff2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003ff4   f002
003ff6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003ff8   f001
003ffa   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003ffc   f000
003ffe   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epapout_init() { return; }
00497c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epapin_init() { return; }
00497e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epap_out() { return; }
004980   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epap_in() { return; }
004982   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void pinmode(int input, int state)
002928   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00292a   ffe5
00292c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00292e   ffd9
002930   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002932   ffe5
002934   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002936   ffe5
002938   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00293a   ffe5
00293c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00293e   ffe5
002940   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002942   ffe5
002944   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002946   ffe5
002948   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00294a   ffe5
00294c   0e02     movlw	0x2                	MOVLW	0x02
00294e   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002950   f000
002952   0e03     movlw	0x3                	MOVLW	0x03
002954   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002956   f001
002958   0e04     movlw	0x4                	MOVLW	0x04
00295a   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00295c   f002
00295e   0e05     movlw	0x5                	MOVLW	0x05
002960   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002962   f003
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002964   0efa     movlw	0xfa               	MOVLW	LOW(_port)
002966   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002968   6e04     movwf	0x4, 0             	MOVWF	r0x04
00296a   0e28     movlw	0x28               	MOVLW	HIGH(_port)
00296c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00296e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002970   6a06     clrf	0x6, 0              	CLRF	r0x06
002972   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002974   6806     setf	0x6, 0              	SETF	r0x06
002976   0e00     movlw	0                  	MOVLW	UPPER(_port)
002978   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00297a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00297c   fff6
00297e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002980   fff7
002982   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002984   fff8
002986   0009     tblrd	*+                 	TBLRD*+	
002988   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00298a   f004
00298c   0e05     movlw	0x5                	MOVLW	0x05
00298e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002990   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002992   d11c     bra	0x2bcc               	BRA	_01009_DS_
002994   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002996   ffe5
002998   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
00299a   ffe5
00299c   6a08     clrf	0x8, 0              	CLRF	r0x08
00299e   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
0029a0   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
0029a2   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
0029a4   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
0029a6   0bfc     andlw	0xfc               	ANDLW	0xfc
0029a8   6e07     movwf	0x7, 0             	MOVWF	r0x07
0029aa   0e00     movlw	0                  	MOVLW	UPPER(_01018_DS_)
0029ac   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
0029ae   0e29     movlw	0x29               	MOVLW	HIGH(_01018_DS_)
0029b0   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
0029b2   0eca     movlw	0xca               	MOVLW	LOW(_01018_DS_)
0029b4   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
0029b6   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
0029b8   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
0029ba   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0029bc   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
0029be   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0029c0   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0029c2   f008
0029c4   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0029c6   f007
0029c8   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _01018_DS_:
0029ca   efef     goto	0x29de              	GOTO	_00988_DS_
0029cc   f014
0029ce   ef21     goto	0x2a42              	GOTO	_00992_DS_
0029d0   f015
0029d2   ef53     goto	0x2aa6              	GOTO	_00996_DS_
0029d4   f015
0029d6   ef85     goto	0x2b0a              	GOTO	_01000_DS_
0029d8   f015
0029da   efb7     goto	0x2b6e              	GOTO	_01004_DS_
0029dc   f015
                                           _00988_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
0029de   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0029e0   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0029e2   e017     bz	0x2a12                	BZ	_00990_DS_
0029e4   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
0029e6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029e8   6e04     movwf	0x4, 0             	MOVWF	r0x04
0029ea   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
0029ec   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029ee   6e05     movwf	0x5, 0             	MOVWF	r0x05
0029f0   6a06     clrf	0x6, 0              	CLRF	r0x06
0029f2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029f4   6806     setf	0x6, 0              	SETF	r0x06
0029f6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0029f8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0029fa   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0029fc   fff6
0029fe   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a00   fff7
002a02   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a04   fff8
002a06   0009     tblrd	*+                 	TBLRD*+	
002a08   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a0a   f004
002a0c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a0e   1293     iorwf	0x93, 0x1, 0       	IORWF	_TRISB, F
002a10   d0dd     bra	0x2bcc               	BRA	_01009_DS_
                                           _00990_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISB=TRISB & (255-mask[input]);
002a12   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002a14   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a16   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a18   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002a1a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a1c   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a1e   6a06     clrf	0x6, 0              	CLRF	r0x06
002a20   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a22   6806     setf	0x6, 0              	SETF	r0x06
002a24   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a26   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a28   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a2a   fff6
002a2c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a2e   fff7
002a30   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a32   fff8
002a34   0009     tblrd	*+                 	TBLRD*+	
002a36   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a38   f004
002a3a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a3c   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a3e   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002a40   d0c5     bra	0x2bcc               	BRA	_01009_DS_
                                           _00992_DS_:
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
002a42   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a44   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002a46   e017     bz	0x2a76                	BZ	_00994_DS_
002a48   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002a4a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a4c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a4e   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002a50   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a52   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a54   6a06     clrf	0x6, 0              	CLRF	r0x06
002a56   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a58   6806     setf	0x6, 0              	SETF	r0x06
002a5a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a5c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a5e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a60   fff6
002a62   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a64   fff7
002a66   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a68   fff8
002a6a   0009     tblrd	*+                 	TBLRD*+	
002a6c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a6e   f004
002a70   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a72   1294     iorwf	0x94, 0x1, 0       	IORWF	_TRISC, F
002a74   d0ab     bra	0x2bcc               	BRA	_01009_DS_
                                           _00994_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISC=TRISC & (255-mask[input]);
002a76   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002a78   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a7a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a7c   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002a7e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a80   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a82   6a06     clrf	0x6, 0              	CLRF	r0x06
002a84   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a86   6806     setf	0x6, 0              	SETF	r0x06
002a88   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a8a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a8c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a8e   fff6
002a90   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a92   fff7
002a94   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a96   fff8
002a98   0009     tblrd	*+                 	TBLRD*+	
002a9a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a9c   f004
002a9e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002aa0   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002aa2   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002aa4   d093     bra	0x2bcc               	BRA	_01009_DS_
                                           _00996_DS_:
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002aa6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002aa8   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002aaa   e017     bz	0x2ada                	BZ	_00998_DS_
002aac   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002aae   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ab0   6e04     movwf	0x4, 0             	MOVWF	r0x04
002ab2   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002ab4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ab6   6e05     movwf	0x5, 0             	MOVWF	r0x05
002ab8   6a06     clrf	0x6, 0              	CLRF	r0x06
002aba   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002abc   6806     setf	0x6, 0              	SETF	r0x06
002abe   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ac0   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002ac2   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002ac4   fff6
002ac6   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ac8   fff7
002aca   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002acc   fff8
002ace   0009     tblrd	*+                 	TBLRD*+	
002ad0   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002ad2   f004
002ad4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002ad6   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
002ad8   d079     bra	0x2bcc               	BRA	_01009_DS_
                                           _00998_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002ada   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002adc   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ade   6e04     movwf	0x4, 0             	MOVWF	r0x04
002ae0   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002ae2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ae4   6e05     movwf	0x5, 0             	MOVWF	r0x05
002ae6   6a06     clrf	0x6, 0              	CLRF	r0x06
002ae8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002aea   6806     setf	0x6, 0              	SETF	r0x06
002aec   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002aee   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002af0   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002af2   fff6
002af4   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002af6   fff7
002af8   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002afa   fff8
002afc   0009     tblrd	*+                 	TBLRD*+	
002afe   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002b00   f004
002b02   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002b04   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002b06   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002b08   d061     bra	0x2bcc               	BRA	_01009_DS_
                                           _01000_DS_:
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002b0a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002b0c   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002b0e   e017     bz	0x2b3e                	BZ	_01002_DS_
002b10   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002b12   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b14   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b16   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002b18   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b1a   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b1c   6a06     clrf	0x6, 0              	CLRF	r0x06
002b1e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b20   6806     setf	0x6, 0              	SETF	r0x06
002b22   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b24   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b26   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b28   fff6
002b2a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002b2c   fff7
002b2e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002b30   fff8
002b32   0009     tblrd	*+                 	TBLRD*+	
002b34   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002b36   f004
002b38   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002b3a   1295     iorwf	0x95, 0x1, 0       	IORWF	_TRISD, F
002b3c   d047     bra	0x2bcc               	BRA	_01009_DS_
                                           _01002_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISD=TRISD & (255-mask[input]);
002b3e   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002b40   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b42   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b44   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002b46   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b48   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b4a   6a06     clrf	0x6, 0              	CLRF	r0x06
002b4c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b4e   6806     setf	0x6, 0              	SETF	r0x06
002b50   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b52   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b54   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b56   fff6
002b58   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002b5a   fff7
002b5c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002b5e   fff8
002b60   0009     tblrd	*+                 	TBLRD*+	
002b62   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002b64   f004
002b66   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002b68   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002b6a   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002b6c   d02f     bra	0x2bcc               	BRA	_01009_DS_
                                           _01004_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
002b6e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002b70   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002b72   e017     bz	0x2ba2                	BZ	_01006_DS_
002b74   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002b76   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b78   6e02     movwf	0x2, 0             	MOVWF	r0x02
002b7a   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002b7c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b7e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002b80   6a04     clrf	0x4, 0              	CLRF	r0x04
002b82   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b84   6804     setf	0x4, 0              	SETF	r0x04
002b86   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b88   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002b8a   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002b8c   fff6
002b8e   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002b90   fff7
002b92   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002b94   fff8
002b96   0009     tblrd	*+                 	TBLRD*+	
002b98   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002b9a   f002
002b9c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002b9e   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
002ba0   d015     bra	0x2bcc               	BRA	_01009_DS_
                                           _01006_DS_:
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002ba2   6a02     clrf	0x2, 0              	CLRF	r0x02
002ba4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ba6   6802     setf	0x2, 0              	SETF	r0x02
002ba8   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002baa   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002bac   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002bae   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002bb0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002bb2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002bb4   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002bb6   fff6
002bb8   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002bba   fff7
002bbc   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002bbe   fff8
002bc0   0009     tblrd	*+                 	TBLRD*+	
002bc2   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002bc4   f000
002bc6   5000     movf	0, 0, 0             	MOVF	r0x00, W
002bc8   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002bca   1696     andwf	0x96, 0x1, 0       	ANDWF	_TRISE, F
                                           _01009_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002bcc   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002bce   f006
002bd0   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002bd2   f005
002bd4   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002bd6   f004
002bd8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002bda   f003
002bdc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002bde   f002
002be0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002be2   f001
002be4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002be6   f000
002be8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002bea   ffd9
002bec   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	int digitalread(int input)
002eb4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002eb6   ffe5
002eb8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002eba   ffd9
002ebc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002ebe   ffe5
002ec0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002ec2   ffe5
002ec4   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002ec6   ffe5
002ec8   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002eca   ffe5
002ecc   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002ece   ffe5
002ed0   0e02     movlw	0x2                	MOVLW	0x02
002ed2   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002ed4   f000
002ed6   0e03     movlw	0x3                	MOVLW	0x03
002ed8   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002eda   f001
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002edc   0efa     movlw	0xfa               	MOVLW	LOW(_port)
002ede   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ee0   6e02     movwf	0x2, 0             	MOVWF	r0x02
002ee2   0e28     movlw	0x28               	MOVLW	HIGH(_port)
002ee4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ee6   6e03     movwf	0x3, 0             	MOVWF	r0x03
002ee8   6a04     clrf	0x4, 0              	CLRF	r0x04
002eea   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002eec   6804     setf	0x4, 0              	SETF	r0x04
002eee   0e00     movlw	0                  	MOVLW	UPPER(_port)
002ef0   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002ef2   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002ef4   fff6
002ef6   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002ef8   fff7
002efa   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002efc   fff8
002efe   0009     tblrd	*+                 	TBLRD*+	
002f00   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f02   f002
002f04   0e05     movlw	0x5                	MOVLW	0x05
002f06   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
002f08   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002f0a   d0b9     bra	0x307e               	BRA	_00973_DS_
002f0c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002f0e   ffe5
002f10   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002f12   ffe5
002f14   6a06     clrf	0x6, 0              	CLRF	r0x06
002f16   3402     rlcf	0x2, 0, 0           	RLCF	r0x02, W
002f18   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002f1a   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002f1c   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002f1e   0bfc     andlw	0xfc               	ANDLW	0xfc
002f20   6e05     movwf	0x5, 0             	MOVWF	r0x05
002f22   0e00     movlw	0                  	MOVLW	UPPER(_00983_DS_)
002f24   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002f26   0e2f     movlw	0x2f               	MOVLW	HIGH(_00983_DS_)
002f28   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002f2a   0e42     movlw	0x42               	MOVLW	LOW(_00983_DS_)
002f2c   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
002f2e   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002f30   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002f32   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002f34   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002f36   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002f38   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002f3a   f006
002f3c   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002f3e   f005
002f40   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00983_DS_:
002f42   efab     goto	0x2f56              	GOTO	_00953_DS_
002f44   f017
002f46   efc9     goto	0x2f92              	GOTO	_00957_DS_
002f48   f017
002f4a   efe7     goto	0x2fce              	GOTO	_00961_DS_
002f4c   f017
002f4e   ef05     goto	0x300a              	GOTO	_00965_DS_
002f50   f018
002f52   ef23     goto	0x3046              	GOTO	_00969_DS_
002f54   f018
                                           _00953_DS_:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002f56   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002f58   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f5a   6e02     movwf	0x2, 0             	MOVWF	r0x02
002f5c   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002f5e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f60   6e03     movwf	0x3, 0             	MOVWF	r0x03
002f62   6a04     clrf	0x4, 0              	CLRF	r0x04
002f64   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f66   6804     setf	0x4, 0              	SETF	r0x04
002f68   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002f6a   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002f6c   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002f6e   fff6
002f70   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002f72   fff7
002f74   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002f76   fff8
002f78   0009     tblrd	*+                 	TBLRD*+	
002f7a   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f7c   f002
002f7e   5081     movf	0x81, 0, 0          	MOVF	_PORTB, W
002f80   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002f82   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002f84   e003     bz	0x2f8c                	BZ	_00955_DS_
002f86   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f88   0e01     movlw	0x1                	MOVLW	0x01
002f8a   d07b     bra	0x3082               	BRA	_00974_DS_
                                           _00955_DS_:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f8c   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f8e   6ae8     clrf	0xe8, 0             	CLRF	WREG
002f90   d078     bra	0x3082               	BRA	_00974_DS_
                                           _00957_DS_:
                                           ;	.line	51; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002f92   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002f94   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f96   6e02     movwf	0x2, 0             	MOVWF	r0x02
002f98   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002f9a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f9c   6e03     movwf	0x3, 0             	MOVWF	r0x03
002f9e   6a04     clrf	0x4, 0              	CLRF	r0x04
002fa0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002fa2   6804     setf	0x4, 0              	SETF	r0x04
002fa4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002fa6   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002fa8   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002faa   fff6
002fac   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002fae   fff7
002fb0   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002fb2   fff8
002fb4   0009     tblrd	*+                 	TBLRD*+	
002fb6   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002fb8   f002
002fba   5082     movf	0x82, 0, 0          	MOVF	_PORTC, W
002fbc   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002fbe   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002fc0   e003     bz	0x2fc8                	BZ	_00959_DS_
002fc2   6af3     clrf	0xf3, 0             	CLRF	PRODL
002fc4   0e01     movlw	0x1                	MOVLW	0x01
002fc6   d05d     bra	0x3082               	BRA	_00974_DS_
                                           _00959_DS_:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002fc8   6af3     clrf	0xf3, 0             	CLRF	PRODL
002fca   6ae8     clrf	0xe8, 0             	CLRF	WREG
002fcc   d05a     bra	0x3082               	BRA	_00974_DS_
                                           _00961_DS_:
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002fce   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002fd0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002fd2   6e02     movwf	0x2, 0             	MOVWF	r0x02
002fd4   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002fd6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002fd8   6e03     movwf	0x3, 0             	MOVWF	r0x03
002fda   6a04     clrf	0x4, 0              	CLRF	r0x04
002fdc   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002fde   6804     setf	0x4, 0              	SETF	r0x04
002fe0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002fe2   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002fe4   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002fe6   fff6
002fe8   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002fea   fff7
002fec   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002fee   fff8
002ff0   0009     tblrd	*+                 	TBLRD*+	
002ff2   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002ff4   f002
002ff6   5080     movf	0x80, 0, 0          	MOVF	_PORTA, W
002ff8   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002ffa   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ffc   e003     bz	0x3004                	BZ	_00963_DS_
002ffe   6af3     clrf	0xf3, 0             	CLRF	PRODL
003000   0e01     movlw	0x1                	MOVLW	0x01
003002   d03f     bra	0x3082               	BRA	_00974_DS_
                                           _00963_DS_:
                                           ;	.line	55; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003004   6af3     clrf	0xf3, 0             	CLRF	PRODL
003006   6ae8     clrf	0xe8, 0             	CLRF	WREG
003008   d03c     bra	0x3082               	BRA	_00974_DS_
                                           _00965_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
00300a   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
00300c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00300e   6e02     movwf	0x2, 0             	MOVWF	r0x02
003010   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
003012   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003014   6e03     movwf	0x3, 0             	MOVWF	r0x03
003016   6a04     clrf	0x4, 0              	CLRF	r0x04
003018   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00301a   6804     setf	0x4, 0              	SETF	r0x04
00301c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00301e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003020   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
003022   fff6
003024   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
003026   fff7
003028   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
00302a   fff8
00302c   0009     tblrd	*+                 	TBLRD*+	
00302e   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
003030   f002
003032   5083     movf	0x83, 0, 0          	MOVF	_PORTD, W
003034   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
003036   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003038   e003     bz	0x3040                	BZ	_00967_DS_
00303a   6af3     clrf	0xf3, 0             	CLRF	PRODL
00303c   0e01     movlw	0x1                	MOVLW	0x01
00303e   d021     bra	0x3082               	BRA	_00974_DS_
                                           _00967_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003040   6af3     clrf	0xf3, 0             	CLRF	PRODL
003042   6ae8     clrf	0xe8, 0             	CLRF	WREG
003044   d01e     bra	0x3082               	BRA	_00974_DS_
                                           _00969_DS_:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
003046   6a02     clrf	0x2, 0              	CLRF	r0x02
003048   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00304a   6802     setf	0x2, 0              	SETF	r0x02
00304c   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
00304e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003050   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
003052   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003054   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003056   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003058   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
00305a   fff6
00305c   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
00305e   fff7
003060   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003062   fff8
003064   0009     tblrd	*+                 	TBLRD*+	
003066   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003068   f000
00306a   5084     movf	0x84, 0, 0          	MOVF	_PORTE, W
00306c   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
00306e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003070   e003     bz	0x3078                	BZ	_00971_DS_
003072   6af3     clrf	0xf3, 0             	CLRF	PRODL
003074   0e01     movlw	0x1                	MOVLW	0x01
003076   d005     bra	0x3082               	BRA	_00974_DS_
                                           _00971_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003078   6af3     clrf	0xf3, 0             	CLRF	PRODL
00307a   6ae8     clrf	0xe8, 0             	CLRF	WREG
00307c   d002     bra	0x3082               	BRA	_00974_DS_
                                           _00973_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	return (0);
00307e   6af3     clrf	0xf3, 0             	CLRF	PRODL
003080   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00974_DS_:
003082   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003084   f004
003086   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003088   f003
00308a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00308c   f002
00308e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003090   f001
003092   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003094   f000
003096   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003098   ffd9
00309a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void digitalwrite(int output,int state)
002bee   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002bf0   ffe5
002bf2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002bf4   ffd9
002bf6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002bf8   ffe5
002bfa   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002bfc   ffe5
002bfe   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002c00   ffe5
002c02   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002c04   ffe5
002c06   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002c08   ffe5
002c0a   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002c0c   ffe5
002c0e   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002c10   ffe5
002c12   0e02     movlw	0x2                	MOVLW	0x02
002c14   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002c16   f000
002c18   0e03     movlw	0x3                	MOVLW	0x03
002c1a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002c1c   f001
002c1e   0e04     movlw	0x4                	MOVLW	0x04
002c20   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002c22   f002
002c24   0e05     movlw	0x5                	MOVLW	0x05
002c26   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002c28   f003
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[output])
002c2a   0efa     movlw	0xfa               	MOVLW	LOW(_port)
002c2c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c2e   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c30   0e28     movlw	0x28               	MOVLW	HIGH(_port)
002c32   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c34   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c36   6a06     clrf	0x6, 0              	CLRF	r0x06
002c38   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c3a   6806     setf	0x6, 0              	SETF	r0x06
002c3c   0e00     movlw	0                  	MOVLW	UPPER(_port)
002c3e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c40   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c42   fff6
002c44   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c46   fff7
002c48   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c4a   fff8
002c4c   0009     tblrd	*+                 	TBLRD*+	
002c4e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c50   f004
002c52   0e05     movlw	0x5                	MOVLW	0x05
002c54   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002c56   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002c58   d11c     bra	0x2e92               	BRA	_00939_DS_
002c5a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002c5c   ffe5
002c5e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002c60   ffe5
002c62   6a08     clrf	0x8, 0              	CLRF	r0x08
002c64   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002c66   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002c68   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002c6a   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002c6c   0bfc     andlw	0xfc               	ANDLW	0xfc
002c6e   6e07     movwf	0x7, 0             	MOVWF	r0x07
002c70   0e00     movlw	0                  	MOVLW	UPPER(_00948_DS_)
002c72   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002c74   0e2c     movlw	0x2c               	MOVLW	HIGH(_00948_DS_)
002c76   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002c78   0e90     movlw	0x90               	MOVLW	LOW(_00948_DS_)
002c7a   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002c7c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002c7e   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002c80   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002c82   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002c84   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002c86   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002c88   f008
002c8a   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002c8c   f007
002c8e   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00948_DS_:
002c90   ef52     goto	0x2ca4              	GOTO	_00918_DS_
002c92   f016
002c94   ef84     goto	0x2d08              	GOTO	_00922_DS_
002c96   f016
002c98   efb6     goto	0x2d6c              	GOTO	_00926_DS_
002c9a   f016
002c9c   efe8     goto	0x2dd0              	GOTO	_00930_DS_
002c9e   f016
002ca0   ef1a     goto	0x2e34              	GOTO	_00934_DS_
002ca2   f017
                                           _00918_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002ca4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ca6   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002ca8   e017     bz	0x2cd8                	BZ	_00920_DS_
002caa   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002cac   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cae   6e04     movwf	0x4, 0             	MOVWF	r0x04
002cb0   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002cb2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002cb4   6e05     movwf	0x5, 0             	MOVWF	r0x05
002cb6   6a06     clrf	0x6, 0              	CLRF	r0x06
002cb8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cba   6806     setf	0x6, 0              	SETF	r0x06
002cbc   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cbe   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002cc0   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002cc2   fff6
002cc4   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002cc6   fff7
002cc8   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002cca   fff8
002ccc   0009     tblrd	*+                 	TBLRD*+	
002cce   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002cd0   f004
002cd2   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002cd4   1281     iorwf	0x81, 0x1, 0       	IORWF	_PORTB, F
002cd6   d0dd     bra	0x2e92               	BRA	_00939_DS_
                                           _00920_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002cd8   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002cda   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cdc   6e04     movwf	0x4, 0             	MOVWF	r0x04
002cde   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002ce0   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ce2   6e05     movwf	0x5, 0             	MOVWF	r0x05
002ce4   6a06     clrf	0x6, 0              	CLRF	r0x06
002ce6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ce8   6806     setf	0x6, 0              	SETF	r0x06
002cea   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cec   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002cee   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002cf0   fff6
002cf2   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002cf4   fff7
002cf6   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002cf8   fff8
002cfa   0009     tblrd	*+                 	TBLRD*+	
002cfc   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002cfe   f004
002d00   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d02   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d04   1681     andwf	0x81, 0x1, 0       	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002d06   d0c5     bra	0x2e92               	BRA	_00939_DS_
                                           _00922_DS_:
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002d08   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d0a   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002d0c   e017     bz	0x2d3c                	BZ	_00924_DS_
002d0e   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002d10   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d12   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d14   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002d16   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d18   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d1a   6a06     clrf	0x6, 0              	CLRF	r0x06
002d1c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d1e   6806     setf	0x6, 0              	SETF	r0x06
002d20   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d22   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d24   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d26   fff6
002d28   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d2a   fff7
002d2c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d2e   fff8
002d30   0009     tblrd	*+                 	TBLRD*+	
002d32   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d34   f004
002d36   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d38   1282     iorwf	0x82, 0x1, 0       	IORWF	_PORTC, F
002d3a   d0ab     bra	0x2e92               	BRA	_00939_DS_
                                           _00924_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002d3c   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002d3e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d40   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d42   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002d44   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d46   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d48   6a06     clrf	0x6, 0              	CLRF	r0x06
002d4a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d4c   6806     setf	0x6, 0              	SETF	r0x06
002d4e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d50   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d52   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d54   fff6
002d56   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d58   fff7
002d5a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d5c   fff8
002d5e   0009     tblrd	*+                 	TBLRD*+	
002d60   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d62   f004
002d64   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d66   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d68   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002d6a   d093     bra	0x2e92               	BRA	_00939_DS_
                                           _00926_DS_:
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002d6c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d6e   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002d70   e017     bz	0x2da0                	BZ	_00928_DS_
002d72   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002d74   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d76   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d78   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002d7a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d7c   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d7e   6a06     clrf	0x6, 0              	CLRF	r0x06
002d80   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d82   6806     setf	0x6, 0              	SETF	r0x06
002d84   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d86   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d88   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d8a   fff6
002d8c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d8e   fff7
002d90   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d92   fff8
002d94   0009     tblrd	*+                 	TBLRD*+	
002d96   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d98   f004
002d9a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d9c   1280     iorwf	0x80, 0x1, 0       	IORWF	_PORTA, F
002d9e   d079     bra	0x2e92               	BRA	_00939_DS_
                                           _00928_DS_:
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002da0   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002da2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002da4   6e04     movwf	0x4, 0             	MOVWF	r0x04
002da6   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002da8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002daa   6e05     movwf	0x5, 0             	MOVWF	r0x05
002dac   6a06     clrf	0x6, 0              	CLRF	r0x06
002dae   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002db0   6806     setf	0x6, 0              	SETF	r0x06
002db2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002db4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002db6   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002db8   fff6
002dba   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002dbc   fff7
002dbe   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002dc0   fff8
002dc2   0009     tblrd	*+                 	TBLRD*+	
002dc4   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002dc6   f004
002dc8   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002dca   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002dcc   1680     andwf	0x80, 0x1, 0       	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002dce   d061     bra	0x2e92               	BRA	_00939_DS_
                                           _00930_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002dd0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002dd2   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002dd4   e017     bz	0x2e04                	BZ	_00932_DS_
002dd6   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002dd8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002dda   6e04     movwf	0x4, 0             	MOVWF	r0x04
002ddc   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002dde   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002de0   6e05     movwf	0x5, 0             	MOVWF	r0x05
002de2   6a06     clrf	0x6, 0              	CLRF	r0x06
002de4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002de6   6806     setf	0x6, 0              	SETF	r0x06
002de8   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002dea   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002dec   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002dee   fff6
002df0   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002df2   fff7
002df4   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002df6   fff8
002df8   0009     tblrd	*+                 	TBLRD*+	
002dfa   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002dfc   f004
002dfe   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002e00   1283     iorwf	0x83, 0x1, 0       	IORWF	_PORTD, F
002e02   d047     bra	0x2e92               	BRA	_00939_DS_
                                           _00932_DS_:
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002e04   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002e06   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e08   6e04     movwf	0x4, 0             	MOVWF	r0x04
002e0a   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002e0c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e0e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002e10   6a06     clrf	0x6, 0              	CLRF	r0x06
002e12   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e14   6806     setf	0x6, 0              	SETF	r0x06
002e16   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e18   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002e1a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002e1c   fff6
002e1e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002e20   fff7
002e22   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002e24   fff8
002e26   0009     tblrd	*+                 	TBLRD*+	
002e28   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002e2a   f004
002e2c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002e2e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002e30   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002e32   d02f     bra	0x2e92               	BRA	_00939_DS_
                                           _00934_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002e34   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e36   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002e38   e017     bz	0x2e68                	BZ	_00936_DS_
002e3a   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002e3c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e3e   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e40   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002e42   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e44   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e46   6a04     clrf	0x4, 0              	CLRF	r0x04
002e48   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e4a   6804     setf	0x4, 0              	SETF	r0x04
002e4c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e4e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e50   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e52   fff6
002e54   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e56   fff7
002e58   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e5a   fff8
002e5c   0009     tblrd	*+                 	TBLRD*+	
002e5e   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e60   f002
002e62   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e64   1284     iorwf	0x84, 0x1, 0       	IORWF	_PORTE, F
002e66   d015     bra	0x2e92               	BRA	_00939_DS_
                                           _00936_DS_:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002e68   6a02     clrf	0x2, 0              	CLRF	r0x02
002e6a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e6c   6802     setf	0x2, 0              	SETF	r0x02
002e6e   0edc     movlw	0xdc               	MOVLW	LOW(_mask)
002e70   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002e72   0e28     movlw	0x28               	MOVLW	HIGH(_mask)
002e74   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002e76   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e78   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002e7a   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002e7c   fff6
002e7e   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002e80   fff7
002e82   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002e84   fff8
002e86   0009     tblrd	*+                 	TBLRD*+	
002e88   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002e8a   f000
002e8c   5000     movf	0, 0, 0             	MOVF	r0x00, W
002e8e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002e90   1684     andwf	0x84, 0x1, 0       	ANDWF	_PORTE, F
                                           _00939_DS_:
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002e92   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002e94   f006
002e96   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002e98   f005
002e9a   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002e9c   f004
002e9e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002ea0   f003
002ea2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002ea4   f002
002ea6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002ea8   f001
002eaa   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002eac   f000
002eae   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002eb0   ffd9
002eb2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (PIR1bits.TMR1IF) {
00471a   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
00471c   d020     bra	0x475e               	BRA	_00913_DS_
                                           ;	.line	289; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIR1bits.TMR1IF=0;
00471e   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x00;
004720   6acd     clrf	0xcd, 0             	CLRF	_T1CON
004722   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	291; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (phase) {
004724   5102     movf	0x2, 0, 0x1         	MOVF	_phase, W, B
004726   e00b     bz	0x473e                	BZ	_00909_DS_
                                           ;	.line	293; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseUp();
004728   ecaa     call	0x4954, 0           	CALL	_ServosPulseUp
00472a   f024
                                           ;	.line	295; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0xd3;
00472c   0ed3     movlw	0xd3               	MOVLW	0xd3
00472e   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	296; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x8f;
004730   0e8f     movlw	0x8f               	MOVLW	0x8f
004732   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ;	.line	298; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=1;
004734   0e01     movlw	0x1                	MOVLW	0x01
004736   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
004738   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	299; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 0;
00473a   6b02     clrf	0x2, 0x1            	CLRF	_phase, B
00473c   d010     bra	0x475e               	BRA	_00913_DS_
                                           _00909_DS_:
                                           ;	.line	304; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseDown();
00473e   ec02     call	0x3e04, 0           	CALL	_ServosPulseDown
004740   f01f
                                           ;	.line	308; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0x2d;
004742   0e2d     movlw	0x2d               	MOVLW	0x2d
004744   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	309; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x0f;
004746   0e0f     movlw	0xf                	MOVLW	0x0f
004748   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00907_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
00474a   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	311; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (needreordering)	
00474c   5103     movf	0x3, 0, 0x1         	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
00474e   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
                                           ;	.line	313; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
004750   ec3f     call	0x207e, 0           	CALL	_SortServoTimings
004752   f010
004754   0e21     movlw	0x21               	MOVLW	0x21
004756   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
004758   0e01     movlw	0x1                	MOVLW	0x01
00475a   0102     movlb	0x2                	BANKSEL	_phase
00475c   6f02     movwf	0x2, 0x1           	MOVWF	_phase, B
                                           _00913_DS_:
                                           ;	.line	317; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
00475e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMaximumPulse(uchar servo)
004760   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004762   ffe5
004764   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
004766   ffd9
004768   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00476a   ffe5
00476c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00476e   ffe5
004770   0e02     movlw	0x2                	MOVLW	0x02
004772   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
004774   f000
                                           ;	.line	275; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
004776   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00897_DS_
                                           ; #	GOTO	_00898_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
004778   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	278; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
00477a   e20e     bc	0x4798                	BC	_00898_DS_
00477c   6a01     clrf	0x1, 0              	CLRF	r0x01
00477e   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
004780   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004782   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
004784   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
004786   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
004788   ffe9
00478a   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
00478c   ffea
00478e   0efa     movlw	0xfa               	MOVLW	0xfa
004790   6eef     movwf	0xef, 0            	MOVWF	INDF0
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004792   0e01     movlw	0x1                	MOVLW	0x01
004794   0102     movlb	0x2                	BANKSEL	_needreordering
004796   6f03     movwf	0x3, 0x1           	MOVWF	_needreordering, B
                                           _00898_DS_:
004798   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00479a   f001
00479c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00479e   f000
0047a0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0047a2   ffd9
0047a4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMinimumPulse(uchar servo)
0047ec   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0047ee   ffe5
0047f0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0047f2   ffd9
0047f4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0047f6   ffe5
0047f8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0047fa   ffe5
0047fc   0e02     movlw	0x2                	MOVLW	0x02
0047fe   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
004800   f000
                                           ;	.line	264; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
004802   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00887_DS_
                                           ; #	GOTO	_00888_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
004804   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	267; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
004806   e20d     bc	0x4822                	BC	_00888_DS_
004808   6a01     clrf	0x1, 0              	CLRF	r0x01
00480a   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
00480c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00480e   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
004810   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
004812   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
004814   ffe9
004816   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004818   ffea
00481a   0e01     movlw	0x1                	MOVLW	0x01
00481c   6eef     movwf	0xef, 0            	MOVWF	INDF0
00481e   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004820   6f03     movwf	0x3, 0x1           	MOVWF	_needreordering, B
                                           _00888_DS_:
004822   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
004824   f001
004826   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004828   f000
00482a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00482c   ffd9
00482e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	unsigned char ServoRead(uchar servo)
0047a6   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0047a8   ffe5
0047aa   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0047ac   ffd9
0047ae   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0047b0   ffe5
0047b2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0047b4   ffe5
0047b6   0e02     movlw	0x2                	MOVLW	0x02
0047b8   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0047ba   f000
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
0047bc   0e12     movlw	0x12               	MOVLW	0x12
0047be   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0047c0   e302     bnc	0x47c6               	BNC	_00877_DS_
                                           ;	.line	257; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return 0;
0047c2   6ae8     clrf	0xe8, 0             	CLRF	WREG
0047c4   d00c     bra	0x47de               	BRA	_00878_DS_
                                           _00877_DS_:
                                           ;	.line	258; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return servovalues[servo];
0047c6   6a01     clrf	0x1, 0              	CLRF	r0x01
0047c8   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
0047ca   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0047cc   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0047ce   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0047d0   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0047d2   ffe9
0047d4   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0047d6   ffea
0047d8   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0047da   f000
0047dc   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00878_DS_:
0047de   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0047e0   f001
0047e2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0047e4   f000
0047e6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0047e8   ffd9
0047ea   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoWrite(uchar servo, uchar value)
004554   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004556   ffe5
004558   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00455a   ffd9
00455c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00455e   ffe5
004560   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004562   ffe5
004564   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
004566   ffe5
004568   0e02     movlw	0x2                	MOVLW	0x02
00456a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00456c   f000
00456e   0e03     movlw	0x3                	MOVLW	0x03
004570   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
004572   f001
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
004574   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00859_DS_
                                           ; #	GOTO	_00864_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
004576   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
004578   e218     bc	0x45aa                	BC	_00864_DS_
00457a   0e01     movlw	0x1                	MOVLW	0x01
00457c   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
00457e   e202     bc	0x4584                	BC	_00861_DS_
                                           ;	.line	245; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMIN;
004580   0e01     movlw	0x1                	MOVLW	0x01
004582   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00861_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
004584   0efb     movlw	0xfb               	MOVLW	0xfb
004586   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
004588   e302     bnc	0x458e               	BNC	_00863_DS_
                                           ;	.line	247; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMAX;
00458a   0efa     movlw	0xfa               	MOVLW	0xfa
00458c   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00863_DS_:
                                           ;	.line	248; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=value;
00458e   6a02     clrf	0x2, 0              	CLRF	r0x02
004590   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
004592   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004594   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
004596   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
004598   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00459a   ffe9
00459c   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
00459e   ffea
0045a0   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
0045a2   ffef
                                           ;	.line	250; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0045a4   0e01     movlw	0x1                	MOVLW	0x01
0045a6   0102     movlb	0x2                	BANKSEL	_needreordering
0045a8   6f03     movwf	0x3, 0x1           	MOVWF	_needreordering, B
                                           _00864_DS_:
0045aa   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0045ac   f002
0045ae   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0045b0   f001
0045b2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0045b4   f000
0045b6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0045b8   ffd9
0045ba   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoDetach(uchar pin)
003c6e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003c70   ffe5
003c72   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003c74   ffd9
003c76   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003c78   ffe5
003c7a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003c7c   ffe5
003c7e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003c80   ffe5
003c82   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003c84   ffe5
003c86   0e02     movlw	0x2                	MOVLW	0x02
003c88   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003c8a   f000
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
003c8c   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00838_DS_
                                           ; #	GOTO	_00845_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
003c8e   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003c90   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003c92   d04c     bra	0x3d2c               	BRA	_00845_DS_
003c94   0e08     movlw	0x8                	MOVLW	0x08
003c96   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003c98   e218     bc	0x3cca                	BC	_00843_DS_
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
003c9a   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
003c9c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003c9e   6e01     movwf	0x1, 0             	MOVWF	r0x01
003ca0   6a02     clrf	0x2, 0              	CLRF	r0x02
003ca2   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003ca4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003ca6   6a03     clrf	0x3, 0              	CLRF	r0x03
003ca8   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003caa   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003cac   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003cae   fff6
003cb0   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003cb2   fff7
003cb4   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003cb6   fff8
003cb8   0009     tblrd	*+                 	TBLRD*+	
003cba   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003cbc   f001
003cbe   0102     movlb	0x2                	BANKSEL	_activatedservos
003cc0   5105     movf	0x5, 0, 0x1         	MOVF	_activatedservos, W, B
003cc2   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003cc4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003cc6   6f05     movwf	0x5, 0x1           	MOVWF	_activatedservos, B
003cc8   d031     bra	0x3d2c               	BRA	_00845_DS_
                                           _00843_DS_:
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003cca   0e0d     movlw	0xd                	MOVLW	0x0d
003ccc   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003cce   e318     bnc	0x3d00               	BNC	_00840_DS_
                                           ;	.line	232; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
003cd0   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
003cd2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003cd4   6e01     movwf	0x1, 0             	MOVWF	r0x01
003cd6   6a02     clrf	0x2, 0              	CLRF	r0x02
003cd8   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003cda   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003cdc   6a03     clrf	0x3, 0              	CLRF	r0x03
003cde   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003ce0   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003ce2   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003ce4   fff6
003ce6   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003ce8   fff7
003cea   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003cec   fff8
003cee   0009     tblrd	*+                 	TBLRD*+	
003cf0   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003cf2   f001
003cf4   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003cf6   5107     movf	0x7, 0, 0x1         	MOVF	(_activatedservos + 2), W, B
003cf8   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003cfa   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003cfc   6f07     movwf	0x7, 0x1           	MOVWF	(_activatedservos + 2), B
003cfe   d016     bra	0x3d2c               	BRA	_00845_DS_
                                           _00840_DS_:
                                           ;	.line	234; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
003d00   6a01     clrf	0x1, 0              	CLRF	r0x01
003d02   6a02     clrf	0x2, 0              	CLRF	r0x02
003d04   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
003d06   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003d08   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003d0a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003d0c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003d0e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003d10   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003d12   fff6
003d14   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003d16   fff7
003d18   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003d1a   fff8
003d1c   0009     tblrd	*+                 	TBLRD*+	
003d1e   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003d20   f000
003d22   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003d24   5106     movf	0x6, 0, 0x1         	MOVF	(_activatedservos + 1), W, B
003d26   1a00     xorwf	0, 0x1, 0          	XORWF	r0x00, F
003d28   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003d2a   6f06     movwf	0x6, 0x1           	MOVWF	(_activatedservos + 1), B
                                           _00845_DS_:
003d2c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003d2e   f003
003d30   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003d32   f002
003d34   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003d36   f001
003d38   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003d3a   f000
003d3c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003d3e   ffd9
003d40   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoAttach(uchar pin)
0039d8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0039da   ffe5
0039dc   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0039de   ffd9
0039e0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0039e2   ffe5
0039e4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0039e6   ffe5
0039e8   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0039ea   ffe5
0039ec   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0039ee   ffe5
0039f0   0e02     movlw	0x2                	MOVLW	0x02
0039f2   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0039f4   f000
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0039f6   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00816_DS_
                                           ; #	GOTO	_00823_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0039f8   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0039fa   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0039fc   d052     bra	0x3aa2               	BRA	_00823_DS_
0039fe   0e08     movlw	0x8                	MOVLW	0x08
003a00   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003a02   e21a     bc	0x3a38                	BC	_00821_DS_
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003a04   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
003a06   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003a08   6e01     movwf	0x1, 0             	MOVWF	r0x01
003a0a   6a02     clrf	0x2, 0              	CLRF	r0x02
003a0c   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003a0e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003a10   6a03     clrf	0x3, 0              	CLRF	r0x03
003a12   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003a14   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003a16   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003a18   fff6
003a1a   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003a1c   fff7
003a1e   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003a20   fff8
003a22   0009     tblrd	*+                 	TBLRD*+	
003a24   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003a26   f001
003a28   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003a2a   0102     movlb	0x2                	BANKSEL	_activatedservos
003a2c   1105     iorwf	0x5, 0, 0x1        	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003a2e   6f05     movwf	0x5, 0x1           	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003a30   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003a32   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003a34   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
003a36   d035     bra	0x3aa2               	BRA	_00823_DS_
                                           _00821_DS_:
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003a38   0e0d     movlw	0xd                	MOVLW	0x0d
003a3a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003a3c   e31a     bnc	0x3a72               	BNC	_00818_DS_
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
003a3e   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
003a40   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003a42   6e01     movwf	0x1, 0             	MOVWF	r0x01
003a44   6a02     clrf	0x2, 0              	CLRF	r0x02
003a46   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003a48   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003a4a   6a03     clrf	0x3, 0              	CLRF	r0x03
003a4c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003a4e   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003a50   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003a52   fff6
003a54   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003a56   fff7
003a58   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003a5a   fff8
003a5c   0009     tblrd	*+                 	TBLRD*+	
003a5e   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003a60   f001
003a62   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003a64   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003a66   1107     iorwf	0x7, 0, 0x1        	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003a68   6f07     movwf	0x7, 0x1           	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
003a6a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003a6c   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003a6e   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
003a70   d018     bra	0x3aa2               	BRA	_00823_DS_
                                           _00818_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003a72   6a01     clrf	0x1, 0              	CLRF	r0x01
003a74   6a02     clrf	0x2, 0              	CLRF	r0x02
003a76   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
003a78   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003a7a   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003a7c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003a7e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003a80   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003a82   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003a84   fff6
003a86   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003a88   fff7
003a8a   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003a8c   fff8
003a8e   0009     tblrd	*+                 	TBLRD*+	
003a90   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003a92   f000
003a94   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a96   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003a98   1106     iorwf	0x6, 0, 0x1        	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003a9a   6f06     movwf	0x6, 0x1           	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003a9c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a9e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003aa0   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           _00823_DS_:
003aa2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003aa4   f003
003aa6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003aa8   f002
003aaa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003aac   f001
003aae   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003ab0   f000
003ab2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003ab4   ffd9
003ab6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void SortServoTimings()
00207e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002080   ffe5
002082   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002084   ffe5
002086   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002088   ffe5
00208a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00208c   ffe5
00208e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002090   ffe5
002092   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002094   ffe5
002096   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002098   ffe5
00209a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00209c   ffe5
00209e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0020a0   ffe5
0020a2   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
0020a4   ffe5
0020a6   0103     movlb	0x3                	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0020a8   6b0a     clrf	0xa, 0x1            	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
0020aa   6b0b     clrf	0xb, 0x1            	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
0020ac   6b0c     clrf	0xc, 0x1            	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
0020ae   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00762_DS_:
0020b0   0e12     movlw	0x12               	MOVLW	0x12
0020b2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0020b4   e22e     bc	0x2112                	BC	_00765_DS_
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=255;
0020b6   0ec0     movlw	0xc0               	MOVLW	LOW(_timings + 54)
0020b8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020ba   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020bc   6a02     clrf	0x2, 0              	CLRF	r0x02
0020be   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0020c0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020c2   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020c4   ffe9
0020c6   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020c8   ffea
0020ca   68ef     setf	0xef, 0             	SETF	INDF0
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0020cc   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
0020ce   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020d0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020d2   6a02     clrf	0x2, 0              	CLRF	r0x02
0020d4   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0020d6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020d8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020da   ffe9
0020dc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020de   ffea
0020e0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0020e2   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
0020e4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020e6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020e8   6a02     clrf	0x2, 0              	CLRF	r0x02
0020ea   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0020ec   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020ee   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020f0   ffe9
0020f2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020f4   ffea
0020f6   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0020f8   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
0020fa   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020fc   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020fe   6a02     clrf	0x2, 0              	CLRF	r0x02
002100   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002102   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002104   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
002106   ffe9
002108   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
00210a   ffea
00210c   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
00210e   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002110   d7cf     bra	0x20b0               	BRA	_00762_DS_
                                           _00765_DS_:
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos=0;
002112   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	while(totalservos<18) {
002114   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00759_DS_:
002116   0e12     movlw	0x12               	MOVLW	0x12
002118   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00211a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00211c   d1ca     bra	0x24b2               	BRA	_00761_DS_
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
00211e   0e01     movlw	0x1                	MOVLW	0x01
002120   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002122   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00766_DS_:
002124   0e12     movlw	0x12               	MOVLW	0x12
002126   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002128   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00212a   d18e     bra	0x2448               	BRA	_00769_DS_
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (s<8){
00212c   0e08     movlw	0x8                	MOVLW	0x08
00212e   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002130   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002132   d082     bra	0x2238               	BRA	_00757_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002134   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
002136   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002138   6e04     movwf	0x4, 0             	MOVWF	r0x04
00213a   6a05     clrf	0x5, 0              	CLRF	r0x05
00213c   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00213e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002140   6a06     clrf	0x6, 0              	CLRF	r0x06
002142   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002144   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002146   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002148   fff6
00214a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00214c   fff7
00214e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002150   fff8
002152   0009     tblrd	*+                 	TBLRD*+	
002154   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002156   f004
002158   0103     movlb	0x3                	BANKSEL	_SortServoTimings_mascaratotal_1_1
00215a   510a     movf	0xa, 0, 0x1         	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
00215c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00215e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002160   0102     movlb	0x2                	BANKSEL	_activatedservos
002162   5105     movf	0x5, 0, 0x1         	MOVF	_activatedservos, W, B
002164   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002166   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002168   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00216a   d16c     bra	0x2444               	BRA	_00768_DS_
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00216c   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
00216e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002170   6e05     movwf	0x5, 0             	MOVWF	r0x05
002172   6a06     clrf	0x6, 0              	CLRF	r0x06
002174   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002176   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002178   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00217a   ffe9
00217c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00217e   ffea
002180   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002182   f005
002184   0ec0     movlw	0xc0               	MOVLW	LOW(_timings + 54)
002186   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002188   6e06     movwf	0x6, 0             	MOVWF	r0x06
00218a   6a07     clrf	0x7, 0              	CLRF	r0x07
00218c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00218e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002190   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002192   ffe9
002194   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002196   ffea
002198   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00219a   f008
00219c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00219e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0021a0   e22b     bc	0x21f8                	BC	_00732_DS_
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0021a2   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0021a4   ffe9
0021a6   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0021a8   ffea
0021aa   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0021ac   ffef
                                           ;	.line	152; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=servomasks[s];
0021ae   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
0021b0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021b2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021b4   6a09     clrf	0x9, 0              	CLRF	r0x09
0021b6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0021b8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021ba   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021bc   ffe9
0021be   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021c0   ffea
0021c2   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0021c4   ffef
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0021c6   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
0021c8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021ca   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021cc   6a09     clrf	0x9, 0              	CLRF	r0x09
0021ce   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0021d0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021d2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021d4   ffe9
0021d6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021d8   ffea
0021da   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0021dc   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
0021de   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021e0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021e2   6a09     clrf	0x9, 0              	CLRF	r0x09
0021e4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0021e6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021e8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021ea   ffe9
0021ec   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021ee   ffea
0021f0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0021f2   0e01     movlw	0x1                	MOVLW	0x01
0021f4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0021f6   d126     bra	0x2444               	BRA	_00768_DS_
                                           _00732_DS_:
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0021f8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0021fa   ffe9
0021fc   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0021fe   ffea
002200   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
002202   f006
002204   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002206   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002208   e001     bz	0x220c                	BZ	_00799_DS_
00220a   d11c     bra	0x2444               	BRA	_00768_DS_
                                           _00799_DS_:
                                           ;	.line	158; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t] |= servomasks[s];
00220c   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
00220e   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002210   6e05     movwf	0x5, 0             	MOVWF	r0x05
002212   6a06     clrf	0x6, 0              	CLRF	r0x06
002214   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002216   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002218   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00221a   ffe9
00221c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00221e   ffea
002220   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002222   f007
002224   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002226   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002228   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00222a   ffe9
00222c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00222e   ffea
002230   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002232   ffef
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002234   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002236   d106     bra	0x2444               	BRA	_00768_DS_
                                           _00757_DS_:
                                           ;	.line	163; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (s>12){
002238   0e0d     movlw	0xd                	MOVLW	0x0d
00223a   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00223c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00223e   d082     bra	0x2344               	BRA	_00754_DS_
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002240   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
002242   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002244   6e04     movwf	0x4, 0             	MOVWF	r0x04
002246   6a05     clrf	0x5, 0              	CLRF	r0x05
002248   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00224a   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00224c   6a06     clrf	0x6, 0              	CLRF	r0x06
00224e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002250   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002252   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002254   fff6
002256   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002258   fff7
00225a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00225c   fff8
00225e   0009     tblrd	*+                 	TBLRD*+	
002260   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002262   f004
002264   0103     movlb	0x3                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
002266   510c     movf	0xc, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002268   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00226a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00226c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00226e   5107     movf	0x7, 0, 0x1         	MOVF	(_activatedservos + 2), W, B
002270   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002272   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002274   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002276   d0e6     bra	0x2444               	BRA	_00768_DS_
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002278   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
00227a   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00227c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00227e   6a06     clrf	0x6, 0              	CLRF	r0x06
002280   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002282   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002284   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002286   ffe9
002288   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00228a   ffea
00228c   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00228e   f005
002290   0ec0     movlw	0xc0               	MOVLW	LOW(_timings + 54)
002292   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002294   6e06     movwf	0x6, 0             	MOVWF	r0x06
002296   6a07     clrf	0x7, 0              	CLRF	r0x07
002298   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00229a   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00229c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00229e   ffe9
0022a0   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022a2   ffea
0022a4   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
0022a6   f008
0022a8   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
0022aa   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0022ac   e22b     bc	0x2304                	BC	_00740_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0022ae   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022b0   ffe9
0022b2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022b4   ffea
0022b6   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0022b8   ffef
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0022ba   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
0022bc   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022be   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022c0   6a09     clrf	0x9, 0              	CLRF	r0x09
0022c2   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0022c4   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022c6   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022c8   ffe9
0022ca   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022cc   ffea
0022ce   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0022d0   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
0022d2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022d4   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022d6   6a09     clrf	0x9, 0              	CLRF	r0x09
0022d8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0022da   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022dc   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022de   ffe9
0022e0   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022e2   ffea
0022e4   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=servomasks[s];
0022e6   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
0022e8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022ea   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022ec   6a09     clrf	0x9, 0              	CLRF	r0x09
0022ee   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0022f0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022f2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022f4   ffe9
0022f6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022f8   ffea
0022fa   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0022fc   ffef
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0022fe   0e01     movlw	0x1                	MOVLW	0x01
002300   6e02     movwf	0x2, 0             	MOVWF	r0x02
002302   d0a0     bra	0x2444               	BRA	_00768_DS_
                                           _00740_DS_:
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002304   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002306   ffe9
002308   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00230a   ffea
00230c   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
00230e   f006
002310   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002312   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002314   e001     bz	0x2318                	BZ	_00805_DS_
002316   d096     bra	0x2444               	BRA	_00768_DS_
                                           _00805_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t] |= servomasks[s];
002318   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
00231a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00231c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00231e   6a06     clrf	0x6, 0              	CLRF	r0x06
002320   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002322   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002324   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002326   ffe9
002328   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00232a   ffea
00232c   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
00232e   f007
002330   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002332   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002334   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002336   ffe9
002338   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00233a   ffea
00233c   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
00233e   ffef
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002340   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002342   d080     bra	0x2444               	BRA	_00768_DS_
                                           _00754_DS_:
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002344   0eca     movlw	0xca               	MOVLW	LOW(_servomasks)
002346   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002348   6e04     movwf	0x4, 0             	MOVWF	r0x04
00234a   6a05     clrf	0x5, 0              	CLRF	r0x05
00234c   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00234e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002350   6a06     clrf	0x6, 0              	CLRF	r0x06
002352   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002354   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002356   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002358   fff6
00235a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00235c   fff7
00235e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002360   fff8
002362   0009     tblrd	*+                 	TBLRD*+	
002364   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002366   f004
002368   0103     movlb	0x3                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
00236a   510b     movf	0xb, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
00236c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00236e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002370   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
002372   5106     movf	0x6, 0, 0x1         	MOVF	(_activatedservos + 1), W, B
002374   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002376   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002378   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00237a   d064     bra	0x2444               	BRA	_00768_DS_
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00237c   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
00237e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002380   6e05     movwf	0x5, 0             	MOVWF	r0x05
002382   6a06     clrf	0x6, 0              	CLRF	r0x06
002384   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002386   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002388   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00238a   ffe9
00238c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00238e   ffea
002390   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002392   f005
002394   0ec0     movlw	0xc0               	MOVLW	LOW(_timings + 54)
002396   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002398   6e06     movwf	0x6, 0             	MOVWF	r0x06
00239a   6a07     clrf	0x7, 0              	CLRF	r0x07
00239c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00239e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
0023a0   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023a2   ffe9
0023a4   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023a6   ffea
0023a8   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
0023aa   f008
0023ac   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
0023ae   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0023b0   e22b     bc	0x2408                	BC	_00748_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0023b2   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023b4   ffe9
0023b6   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023b8   ffea
0023ba   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0023bc   ffef
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0023be   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
0023c0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023c2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023c4   6a09     clrf	0x9, 0              	CLRF	r0x09
0023c6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0023c8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023ca   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023cc   ffe9
0023ce   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023d0   ffea
0023d2   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=servomasks[s];
0023d4   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
0023d6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023d8   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023da   6a09     clrf	0x9, 0              	CLRF	r0x09
0023dc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0023de   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023e0   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023e2   ffe9
0023e4   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023e6   ffea
0023e8   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0023ea   ffef
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0023ec   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
0023ee   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023f0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023f2   6a09     clrf	0x9, 0              	CLRF	r0x09
0023f4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0023f6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023f8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023fa   ffe9
0023fc   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023fe   ffea
002400   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
002402   0e01     movlw	0x1                	MOVLW	0x01
002404   6e02     movwf	0x2, 0             	MOVWF	r0x02
002406   d01e     bra	0x2444               	BRA	_00768_DS_
                                           _00748_DS_:
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings [timevalue][t]){
002408   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00240a   ffe9
00240c   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00240e   ffea
002410   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
002412   f006
002414   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002416   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002418   e115     bnz	0x2444               	BNZ	_00768_DS_
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t] |= servomasks[s];
00241a   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
00241c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00241e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002420   6a06     clrf	0x6, 0              	CLRF	r0x06
002422   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002424   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002426   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002428   ffe9
00242a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00242c   ffea
00242e   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002430   f007
002432   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002434   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002436   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002438   ffe9
00243a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00243c   ffea
00243e   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002440   ffef
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002442   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
                                           _00768_DS_:
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002444   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002446   d66e     bra	0x2124               	BRA	_00766_DS_
                                           _00769_DS_:
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_B] |= timings[MaskPort_B][t];
002448   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
00244a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00244c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00244e   6a04     clrf	0x4, 0              	CLRF	r0x04
002450   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002452   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002454   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002456   ffe9
002458   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00245a   ffea
00245c   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
00245e   f003
002460   0103     movlb	0x3                	BANKSEL	_SortServoTimings_mascaratotal_1_1
002462   510a     movf	0xa, 0, 0x1         	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
002464   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002466   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002468   6f0a     movwf	0xa, 0x1           	MOVWF	_SortServoTimings_mascaratotal_1_1, B
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
00246a   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
00246c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00246e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002470   6a04     clrf	0x4, 0              	CLRF	r0x04
002472   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002474   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002476   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002478   ffe9
00247a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00247c   ffea
00247e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002480   f003
                                           ; removed redundant BANKSEL
002482   510b     movf	0xb, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002484   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002486   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002488   6f0b     movwf	0xb, 0x1           	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
00248a   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
00248c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00248e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002490   6a04     clrf	0x4, 0              	CLRF	r0x04
002492   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002494   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002496   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002498   ffe9
00249a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00249c   ffea
00249e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
0024a0   f003
                                           ; removed redundant BANKSEL
0024a2   510c     movf	0xc, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
0024a4   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
0024a6   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0024a8   6f0c     movwf	0xc, 0x1           	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos += numservos;
0024aa   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0024ac   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	t++;
0024ae   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0024b0   d632     bra	0x2116               	BRA	_00759_DS_
                                           _00761_DS_:
0024b2   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
0024b4   6b03     clrf	0x3, 0x1            	CLRF	_needreordering, B
0024b6   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0024b8   f009
0024ba   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0024bc   f008
0024be   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0024c0   f007
0024c2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0024c4   f006
0024c6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0024c8   f005
0024ca   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0024cc   f004
0024ce   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0024d0   f003
0024d2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0024d4   f002
0024d6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0024d8   f001
0024da   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0024dc   f000
0024de   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	118; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = activatedservos[MaskPort_B] & 0xFF;
004954   c205     movff	0x205, 0xf81       	MOVFF	_activatedservos, _PORTB
004956   ff81
                                           ;	.line	119; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
004958   c206     movff	0x206, 0xf82       	MOVFF	(_activatedservos + 1), _PORTC
00495a   ff82
                                           ;	.line	120; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
00495c   c207     movff	0x207, 0xf80       	MOVFF	(_activatedservos + 2), _PORTA
00495e   ff80
004960   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void ServosPulseDown()
003e04   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003e06   ffe5
003e08   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003e0a   ffd9
003e0c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003e0e   ffe5
003e10   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003e12   ffe5
003e14   0103     movlb	0x3                	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex = 0;
003e16   6b1c     clrf	0x1c, 0x1           	CLRF	_timingindex, B
003e18   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003e1a   6b04     clrf	0x4, 0x1            	CLRF	_timedivision, B
                                           _00708_DS_:
003e1c   0efb     movlw	0xfb               	MOVLW	0xfb
003e1e   0102     movlb	0x2                	BANKSEL	_timedivision
003e20   5d04     subwf	0x4, 0, 0x1        	SUBWF	_timedivision, W, B
003e22   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003e24   d048     bra	0x3eb6               	BRA	_00712_DS_
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (timings[timevalue][timingindex] == timedivision){
003e26   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
003e28   f000
003e2a   6a01     clrf	0x1, 0              	CLRF	r0x01
003e2c   0ec0     movlw	0xc0               	MOVLW	LOW(_timings + 54)
003e2e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003e30   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
003e32   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003e34   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003e36   ffe9
003e38   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003e3a   ffea
003e3c   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003e3e   f000
003e40   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003e42   1904     xorwf	0x4, 0, 0x1        	XORWF	_timedivision, W, B
003e44   e12f     bnz	0x3ea4               	BNZ	_00707_DS_
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = PORTB ^ timings[MaskPort_B][timingindex];
003e46   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
003e48   f000
003e4a   6a01     clrf	0x1, 0              	CLRF	r0x01
003e4c   0e8a     movlw	0x8a               	MOVLW	LOW(_timings)
003e4e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003e50   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
003e52   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003e54   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003e56   ffe9
003e58   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003e5a   ffea
003e5c   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003e5e   f000
003e60   5000     movf	0, 0, 0             	MOVF	r0x00, W
003e62   1a81     xorwf	0x81, 0x1, 0       	XORWF	_PORTB, F
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
003e64   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
003e66   f000
003e68   6a01     clrf	0x1, 0              	CLRF	r0x01
003e6a   0e9c     movlw	0x9c               	MOVLW	LOW(_timings + 18)
003e6c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003e6e   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
003e70   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003e72   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003e74   ffe9
003e76   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003e78   ffea
003e7a   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003e7c   f000
003e7e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003e80   1a82     xorwf	0x82, 0x1, 0       	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
003e82   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
003e84   f000
003e86   6a01     clrf	0x1, 0              	CLRF	r0x01
003e88   0eae     movlw	0xae               	MOVLW	LOW(_timings + 36)
003e8a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003e8c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
003e8e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003e90   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003e92   ffe9
003e94   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003e96   ffea
003e98   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003e9a   f000
003e9c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003e9e   1a80     xorwf	0x80, 0x1, 0       	XORWF	_PORTA, F
003ea0   0103     movlb	0x3                	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex++;
003ea2   2b1c     incf	0x1c, 0x1, 0x1      	INCF	_timingindex, F, B
                                           _00707_DS_:
003ea4   0e06     movlw	0x6                	movlw 6
003ea6   6f14     movwf	0x14, 0x1          	movwf _loopvar
                                           bucle:
003ea8   0000     nop                      	NOP
003eaa   2f14     decfsz	0x14, 0x1, 0x1    	decfsz _loopvar,1
003eac   ef54     goto	0x3ea8              	goto bucle
003eae   f01f
                                           	
003eb0   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003eb2   2b04     incf	0x4, 0x1, 0x1       	INCF	_timedivision, F, B
003eb4   d7b3     bra	0x3e1c               	BRA	_00708_DS_
                                           _00712_DS_:
003eb6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003eb8   f001
003eba   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003ebc   f000
003ebe   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003ec0   ffd9
003ec2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void servos_init()
0046d0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0046d2   ffe5
0046d4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0046d6   ffe5
0046d8   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0046da   ffe5
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
0046dc   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00692_DS_:
0046de   0e12     movlw	0x12               	MOVLW	0x12
0046e0   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0046e2   e20d     bc	0x46fe                	BC	_00695_DS_
0046e4   0ed2     movlw	0xd2               	MOVLW	LOW(_servovalues)
0046e6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0046e8   6e01     movwf	0x1, 0             	MOVWF	r0x01
0046ea   6a02     clrf	0x2, 0              	CLRF	r0x02
0046ec   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0046ee   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0046f0   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0046f2   ffe9
0046f4   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0046f6   ffea
0046f8   68ef     setf	0xef, 0             	SETF	INDF0
0046fa   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0046fc   d7f0     bra	0x46de               	BRA	_00692_DS_
                                           _00695_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H=0xFF;
0046fe   68cf     setf	0xcf, 0             	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L=0x00;
004700   6ace     clrf	0xce, 0             	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x01;
004702   0e01     movlw	0x1                	MOVLW	0x01
004704   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIE1bits.TMR1IE=1;
004706   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.PEIE=1;
004708   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.GIE=1;
00470a   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
00470c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00470e   f002
004710   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
004712   f001
004714   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004716   f000
004718   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	unsigned int analogread(unsigned char channel)
0043e4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0043e6   ffe5
0043e8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0043ea   ffd9
0043ec   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0043ee   ffe5
0043f0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0043f2   ffe5
0043f4   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0043f6   ffe5
0043f8   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0043fa   ffe5
0043fc   0e02     movlw	0x2                	MOVLW	0x02
0043fe   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
004400   f000
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x0A;
004402   0e0a     movlw	0xa                	MOVLW	0x0a
004404   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0=(channel-13)*4;
004406   0ef3     movlw	0xf3               	MOVLW	0xf3
004408   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
00440a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00440c   0d04     mullw	0x4                	MULLW	0x04
00440e   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
004410   ffc2
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
004412   0ebd     movlw	0xbd               	MOVLW	0xbd
004414   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=1;
004416   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
004418   0e09     movlw	0x9                	MOVLW	0x09
00441a   6e00     movwf	0, 0               	MOVWF	r0x00
00441c   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00686_DS_:
00441e   0000     nop                      	NOP 
004420   0eff     movlw	0xff               	MOVLW	0xff
004422   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004424   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
004426   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
004428   5000     movf	0, 0, 0             	MOVF	r0x00, W
00442a   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
00442c   e1f8     bnz	0x441e               	BNZ	_00686_DS_
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.GO=1;
00442e   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00681_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	while (ADCON0bits.GO);
004430   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
004432   d7fe     bra	0x4430               	BRA	_00681_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result=ADRESH<<8;
004434   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
004436   f000
004438   6a01     clrf	0x1, 0              	CLRF	r0x01
00443a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00443c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00443e   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result+=ADRESL;
004440   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
004442   f000
004444   6a01     clrf	0x1, 0              	CLRF	r0x01
004446   5000     movf	0, 0, 0             	MOVF	r0x00, W
004448   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
00444a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00444c   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=0;
00444e   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	return(result);
004450   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
004452   fff3
004454   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
004456   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
004458   f003
00445a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00445c   f002
00445e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
004460   f001
004462   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004464   f000
004466   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
004468   ffd9
00446a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISA=TRISA | 0x2F;
004944   0e2f     movlw	0x2f               	MOVLW	0x2f
004946   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISE=TRISE | 0x07;
004948   0e07     movlw	0x7                	MOVLW	0x07
00494a   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x07;
00494c   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
00494e   0ebd     movlw	0xbd               	MOVLW	0xbd
004950   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
004952   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_CDC	code
                                           _init_CDC:
                                           ;	.line	17; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	INTCON=0;
0045bc   6af2     clrf	0xf2, 0             	CLRF	_INTCON
                                           ;	.line	18; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	INTCON2=0xC0;
0045be   0ec0     movlw	0xc0               	MOVLW	0xc0
0045c0   6ef1     movwf	0xf1, 0            	MOVWF	_INTCON2
                                           ;	.line	19; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UCON=0;
0045c2   6a6d     clrf	0x6d, 0             	CLRF	_UCON
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UCFG=0;
0045c4   6a6f     clrf	0x6f, 0             	CLRF	_UCFG
                                           ;	.line	21; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UEP0=0;UEP1=0;UEP2=0;UEP3=0;UEP4=0;UEP5=0;
0045c6   6a70     clrf	0x70, 0             	CLRF	_UEP0
0045c8   6a71     clrf	0x71, 0             	CLRF	_UEP1
0045ca   6a72     clrf	0x72, 0             	CLRF	_UEP2
0045cc   6a73     clrf	0x73, 0             	CLRF	_UEP3
0045ce   6a74     clrf	0x74, 0             	CLRF	_UEP4
0045d0   6a75     clrf	0x75, 0             	CLRF	_UEP5
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UEP6=0;UEP7=0;UEP8=0;UEP9=0;UEP10=0;UEP11=0;
0045d2   6a76     clrf	0x76, 0             	CLRF	_UEP6
0045d4   6a77     clrf	0x77, 0             	CLRF	_UEP7
0045d6   6a78     clrf	0x78, 0             	CLRF	_UEP8
0045d8   6a79     clrf	0x79, 0             	CLRF	_UEP9
0045da   6a7a     clrf	0x7a, 0             	CLRF	_UEP10
0045dc   6a7b     clrf	0x7b, 0             	CLRF	_UEP11
                                           ;	.line	23; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UEP12=0;UEP13=0;UEP14=0;UEP15=0;
0045de   6a7c     clrf	0x7c, 0             	CLRF	_UEP12
0045e0   6a7d     clrf	0x7d, 0             	CLRF	_UEP13
0045e2   6a7e     clrf	0x7e, 0             	CLRF	_UEP14
0045e4   6a7f     clrf	0x7f, 0             	CLRF	_UEP15
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	Delayms(2000);
0045e6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0045e8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0045ea   0e07     movlw	0x7                	MOVLW	0x07
0045ec   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0045ee   0ed0     movlw	0xd0               	MOVLW	0xd0
0045f0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0045f2   ecca     call	0x4194, 0           	CALL	_Delayms
0045f4   f020
0045f6   0e04     movlw	0x4                	MOVLW	0x04
0045f8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UCFG = 0x14; 				// Enable pullup resistors; full speed mode
0045fa   0e14     movlw	0x14               	MOVLW	0x14
0045fc   6e6f     movwf	0x6f, 0            	MOVWF	_UCFG
0045fe   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	deviceState = DETACHED;
004600   6b19     clrf	0x19, 0x1           	CLRF	_deviceState, B
004602   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	remoteWakeup = 0x00;
004604   6b18     clrf	0x18, 0x1           	CLRF	_remoteWakeup, B
004606   0103     movlb	0x3                	BANKSEL	_currentConfiguration
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	currentConfiguration = 0x00;
004608   6b1a     clrf	0x1a, 0x1           	CLRF	_currentConfiguration, B
                                           _00663_DS_:
00460a   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	while(deviceState != CONFIGURED)
00460c   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
00460e   0a05     xorlw	0x5                	XORLW	0x05
004610   e005     bz	0x461c                	BZ	_00666_DS_
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	EnableUSBModule();
004612   ec3a     call	0x4874, 0           	CALL	_EnableUSBModule
004614   f024
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	ProcessUSBTransactions();
004616   ec74     call	0x44e8, 0           	CALL	_ProcessUSBTransactions
004618   f022
00461a   d7f7     bra	0x460a               	BRA	_00663_DS_
                                           _00666_DS_:
00461c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayus(int microsecondes)
00467e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004680   ffe5
004682   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
004684   ffd9
004686   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004688   ffe5
00468a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00468c   ffe5
00468e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
004690   ffe5
004692   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
004694   ffe5
004696   0e02     movlw	0x2                	MOVLW	0x02
004698   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00469a   f000
00469c   0e03     movlw	0x3                	MOVLW	0x03
00469e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0046a0   f001
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<microsecondes;i++);
0046a2   6a02     clrf	0x2, 0              	CLRF	r0x02
0046a4   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00649_DS_:
0046a6   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0046a8   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
0046aa   e102     bnz	0x46b0               	BNZ	_00658_DS_
0046ac   5000     movf	0, 0, 0             	MOVF	r0x00, W
0046ae   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00658_DS_:
0046b0   e204     bc	0x46ba                	BC	_00653_DS_
0046b2   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
0046b4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0046b6   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0046b8   d7f6     bra	0x46a6               	BRA	_00649_DS_
                                           _00653_DS_:
0046ba   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0046bc   f003
0046be   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0046c0   f002
0046c2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0046c4   f001
0046c6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0046c8   f000
0046ca   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0046cc   ffd9
0046ce   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayms(unsigned long milliseconde)
004194   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004196   ffe5
004198   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00419a   ffd9
00419c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00419e   ffe5
0041a0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0041a2   ffe5
0041a4   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0041a6   ffe5
0041a8   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0041aa   ffe5
0041ac   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0041ae   ffe5
0041b0   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0041b2   ffe5
0041b4   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0041b6   ffe5
0041b8   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0041ba   ffe5
0041bc   0e02     movlw	0x2                	MOVLW	0x02
0041be   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0041c0   f000
0041c2   0e03     movlw	0x3                	MOVLW	0x03
0041c4   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0041c6   f001
0041c8   0e04     movlw	0x4                	MOVLW	0x04
0041ca   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
0041cc   f002
0041ce   0e05     movlw	0x5                	MOVLW	0x05
0041d0   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0041d2   f003
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
0041d4   6a04     clrf	0x4, 0              	CLRF	r0x04
0041d6   6a05     clrf	0x5, 0              	CLRF	r0x05
0041d8   6a06     clrf	0x6, 0              	CLRF	r0x06
0041da   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           _00635_DS_:
0041dc   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0041de   5c07     subwf	0x7, 0, 0          	SUBWF	r0x07, W
0041e0   e108     bnz	0x41f2               	BNZ	_00644_DS_
0041e2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0041e4   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
0041e6   e105     bnz	0x41f2               	BNZ	_00644_DS_
0041e8   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0041ea   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0041ec   e102     bnz	0x41f2               	BNZ	_00644_DS_
0041ee   5000     movf	0, 0, 0             	MOVF	r0x00, W
0041f0   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _00644_DS_:
0041f2   e20b     bc	0x420a                	BC	_00639_DS_
0041f4   0e01     movlw	0x1                	MOVLW	0x01
0041f6   ec37     call	0x6e, 0             	CALL	_delay10ktcy
0041f8   f000
0041fa   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0041fc   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0041fe   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
004200   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
004202   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
004204   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
004206   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
004208   d7e9     bra	0x41dc               	BRA	_00635_DS_
                                           _00639_DS_:
00420a   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
00420c   f007
00420e   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
004210   f006
004212   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
004214   f005
004216   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
004218   f004
00421a   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00421c   f003
00421e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
004220   f002
004222   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
004224   f001
004226   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004228   f000
00422a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00422c   ffd9
00422e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
00461e   0103     movlb	0x3                	BANKSEL	_line_config
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
004620   6b00     clrf	0, 0x1              	CLRF	_line_config, B
004622   0ec2     movlw	0xc2               	MOVLW	0xc2
                                           ; removed redundant BANKSEL
004624   6f01     movwf	0x1, 0x1           	MOVWF	(_line_config + 1), B
004626   0e01     movlw	0x1                	MOVLW	0x01
                                           ; removed redundant BANKSEL
004628   6f02     movwf	0x2, 0x1           	MOVWF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
00462a   6b03     clrf	0x3, 0x1            	CLRF	(_line_config + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
00462c   6b04     clrf	0x4, 0x1            	CLRF	(_line_config + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
00462e   6b05     clrf	0x5, 0x1            	CLRF	(_line_config + 5), B
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
004630   0e08     movlw	0x8                	MOVLW	0x08
                                           ; removed redundant BANKSEL
004632   6f06     movwf	0x6, 0x1           	MOVWF	(_line_config + 6), B
004634   0102     movlb	0x2                	BANKSEL	_zlp
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue0=0;
004636   6bf4     clrf	0xf4, 0x1           	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	172; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue1=0;
004638   6bf5     clrf	0xf5, 0x1           	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue2=0;
00463a   6bf6     clrf	0xf6, 0x1           	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue3=0;
00463c   6bf7     clrf	0xf7, 0x1           	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue4=0;
00463e   6bf8     clrf	0xf8, 0x1           	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue5=0;
004640   6bf9     clrf	0xf9, 0x1           	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	177; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue6=0;
004642   6bfa     clrf	0xfa, 0x1           	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	178; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue7=0;
004644   6bfb     clrf	0xfb, 0x1           	CLRF	(_zlp + 7), B
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
004646   0e1a     movlw	0x1a               	MOVLW	0x1a
004648   6e72     movwf	0x72, 0            	MOVWF	_UEP2
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
00464a   0e1e     movlw	0x1e               	MOVLW	0x1e
00464c   6e73     movwf	0x73, 0            	MOVWF	_UEP3
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
00464e   0ee4     movlw	0xe4               	MOVLW	LOW(_CDCControlBuffer)
004650   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 22)
004652   6f16     movwf	0x16, 0x1          	MOVWF	(_ep_bdt + 22), B
004654   0e02     movlw	0x2                	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
004656   6f17     movwf	0x17, 0x1          	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
004658   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
00465a   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
00465c   6f19     movwf	0x19, 0x1          	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
00465e   0e80     movlw	0x80               	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004660   6f1a     movwf	0x1a, 0x1          	MOVWF	(_ep_bdt + 26), B
004662   0e05     movlw	0x5                	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004664   6f1b     movwf	0x1b, 0x1          	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
004666   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
004668   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
00466a   0ec0     movlw	0xc0               	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
00466c   6f1e     movwf	0x1e, 0x1          	MOVWF	(_ep_bdt + 30), B
00466e   0e05     movlw	0x5                	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004670   6f1f     movwf	0x1f, 0x1          	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
004672   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
004674   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	deviceState=CONFIGURED; 
004676   0e05     movlw	0x5                	MOVLW	0x05
004678   0103     movlb	0x3                	BANKSEL	_deviceState
00467a   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
00467c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCputs	code
                                           _CDCputs:
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte CDCputs(char *buffer, byte length) {
0034ba   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0034bc   ffe5
0034be   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0034c0   ffd9
0034c2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0034c4   ffe5
0034c6   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0034c8   ffe5
0034ca   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0034cc   ffe5
0034ce   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0034d0   ffe5
0034d2   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0034d4   ffe5
0034d6   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0034d8   ffe5
0034da   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0034dc   ffe5
0034de   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0034e0   ffe5
0034e2   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0034e4   ffe5
0034e6   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
0034e8   ffe5
0034ea   0e02     movlw	0x2                	MOVLW	0x02
0034ec   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0034ee   f000
0034f0   0e03     movlw	0x3                	MOVLW	0x03
0034f2   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0034f4   f001
0034f6   0e04     movlw	0x4                	MOVLW	0x04
0034f8   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
0034fa   f002
0034fc   0e05     movlw	0x5                	MOVLW	0x05
0034fe   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003500   f003
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte i=0;
003502   6a04     clrf	0x4, 0              	CLRF	r0x04
003504   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
003506   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
003508   0a05     xorlw	0x5                	XORLW	0x05
00350a   e002     bz	0x3510                	BZ	_00602_DS_
00350c   6ae8     clrf	0xe8, 0             	CLRF	WREG
00350e   d04c     bra	0x35a8               	BRA	_00613_DS_
                                           _00602_DS_:
003510   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
003512   5101     movf	0x1, 0, 0x1         	MOVF	_CONTROL_LINE, W, B
003514   e102     bnz	0x351a               	BNZ	_00604_DS_
003516   6ae8     clrf	0xe8, 0             	CLRF	WREG
003518   d047     bra	0x35a8               	BRA	_00613_DS_
                                           _00604_DS_:
00351a   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
00351c   bf1c     btfsc	0x1c, 0x7, 0x1     	BTFSC	(_ep_bdt + 28), 7, B
00351e   d043     bra	0x35a6               	BRA	_00608_DS_
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE) length = CDC_BULK_IN_SIZE;
003520   0e41     movlw	0x41               	MOVLW	0x41
003522   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003524   e302     bnc	0x352a               	BNC	_00620_DS_
003526   0e40     movlw	0x40               	MOVLW	0x40
003528   6e03     movwf	0x3, 0             	MOVWF	r0x03
                                           _00620_DS_:
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < length; i++) {
00352a   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _00609_DS_:
00352c   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00352e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
003530   e21d     bc	0x356c                	BC	_00621_DS_
                                           ;	.line	139; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
003532   0ec0     movlw	0xc0               	MOVLW	LOW(_CDCTxBuffer)
003534   2405     addwf	0x5, 0, 0          	ADDWF	r0x05, W
003536   6e06     movwf	0x6, 0             	MOVWF	r0x06
003538   6a07     clrf	0x7, 0              	CLRF	r0x07
00353a   0e05     movlw	0x5                	MOVLW	HIGH(_CDCTxBuffer)
00353c   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00353e   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003540   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003542   6e08     movwf	0x8, 0             	MOVWF	r0x08
003544   6ae8     clrf	0xe8, 0             	CLRF	WREG
003546   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003548   6e09     movwf	0x9, 0             	MOVWF	r0x09
00354a   6ae8     clrf	0xe8, 0             	CLRF	WREG
00354c   2002     addwfc	0x2, 0, 0         	ADDWFC	r0x02, W
00354e   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
003550   ffe9
003552   c009     movff	0x9, 0xff3         	MOVFF	r0x09, PRODL
003554   fff3
003556   ec29     call	0x52, 0             	CALL	__gptrget1
003558   f000
00355a   6e08     movwf	0x8, 0             	MOVWF	r0x08
00355c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00355e   ffe9
003560   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
003562   ffea
003564   c008     movff	0x8, 0xfef         	MOVFF	r0x08, INDF0
003566   ffef
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < length; i++) {
003568   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
00356a   d7e0     bra	0x352c               	BRA	_00609_DS_
                                           _00621_DS_:
00356c   c005     movff	0x5, 0x4           	MOVFF	r0x05, r0x04
00356e   f004
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
003570   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003572   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 29)
003574   6f1d     movwf	0x1d, 0x1          	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
003576   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
003578   151c     andwf	0x1c, 0, 0x1       	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00357a   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
00357c   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
00357e   bd1c     btfsc	0x1c, 0x6, 0x1     	BTFSC	(_ep_bdt + 28), 6, B
003580   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003582   5000     movf	0, 0, 0             	MOVF	r0x00, W
003584   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
003586   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
003588   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
00358a   6a00     clrf	0, 0                	CLRF	r0x00
00358c   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
00358e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003590   0b01     andlw	0x1                	ANDLW	0x01
003592   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
003594   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
003596   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003598   511c     movf	0x1c, 0, 0x1        	MOVF	(_ep_bdt + 28), W, B
00359a   0bbf     andlw	0xbf               	ANDLW	0xbf
00359c   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
00359e   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
0035a0   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
0035a2   111c     iorwf	0x1c, 0, 0x1       	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0035a4   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           _00608_DS_:
                                           ;	.line	156; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	return i;
0035a6   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
                                           _00613_DS_:
0035a8   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0035aa   f009
0035ac   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0035ae   f008
0035b0   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0035b2   f007
0035b4   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0035b6   f006
0035b8   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0035ba   f005
0035bc   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0035be   f004
0035c0   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0035c2   f003
0035c4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0035c6   f002
0035c8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0035ca   f001
0035cc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0035ce   f000
0035d0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0035d2   ffd9
0035d4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCgets	code
                                           _CDCgets:
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte CDCgets(char *buffer) {
00339c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00339e   ffe5
0033a0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0033a2   ffd9
0033a4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0033a6   ffe5
0033a8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0033aa   ffe5
0033ac   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0033ae   ffe5
0033b0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0033b2   ffe5
0033b4   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0033b6   ffe5
0033b8   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0033ba   ffe5
0033bc   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0033be   ffe5
0033c0   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0033c2   ffe5
0033c4   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0033c6   ffe5
0033c8   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
0033ca   ffe5
0033cc   0e02     movlw	0x2                	MOVLW	0x02
0033ce   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0033d0   f000
0033d2   0e03     movlw	0x3                	MOVLW	0x03
0033d4   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0033d6   f001
0033d8   0e04     movlw	0x4                	MOVLW	0x04
0033da   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
0033dc   f002
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte i=0;
0033de   6a03     clrf	0x3, 0              	CLRF	r0x03
0033e0   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
0033e2   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
0033e4   0a05     xorlw	0x5                	XORLW	0x05
0033e6   e002     bz	0x33ec                	BZ	_00573_DS_
0033e8   6ae8     clrf	0xe8, 0             	CLRF	WREG
0033ea   d050     bra	0x348c               	BRA	_00584_DS_
                                           _00573_DS_:
0033ec   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
0033ee   5101     movf	0x1, 0, 0x1         	MOVF	_CONTROL_LINE, W, B
0033f0   e102     bnz	0x33f6               	BNZ	_00575_DS_
0033f2   6ae8     clrf	0xe8, 0             	CLRF	WREG
0033f4   d04b     bra	0x348c               	BRA	_00584_DS_
                                           _00575_DS_:
0033f6   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
0033f8   bf18     btfsc	0x18, 0x7, 0x1     	BTFSC	(_ep_bdt + 24), 7, B
0033fa   d047     bra	0x348a               	BRA	_00579_DS_
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt) length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
0033fc   0e40     movlw	0x40               	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00591_DS_
                                           ; #;;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
0033fe   5d19     subwf	0x19, 0, 0x1       	SUBWF	(_ep_bdt + 25), W, B
003400   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
003402   c419     movff	0x419, 0xfe8       	MOVFF	(_ep_bdt + 25), WREG
003404   ffe8
003406   6a04     clrf	0x4, 0              	CLRF	r0x04
                                           _00580_DS_:
003408   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 25)
00340a   5119     movf	0x19, 0, 0x1        	MOVF	(_ep_bdt + 25), W, B
00340c   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
00340e   e220     bc	0x3450                	BC	_00592_DS_
                                           ;	.line	112; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
003410   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003412   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003414   6e05     movwf	0x5, 0             	MOVWF	r0x05
003416   6ae8     clrf	0xe8, 0             	CLRF	WREG
003418   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00341a   6e06     movwf	0x6, 0             	MOVWF	r0x06
00341c   6ae8     clrf	0xe8, 0             	CLRF	WREG
00341e   2002     addwfc	0x2, 0, 0         	ADDWFC	r0x02, W
003420   6e07     movwf	0x7, 0             	MOVWF	r0x07
003422   0e80     movlw	0x80               	MOVLW	LOW(_CDCRxBuffer)
003424   2404     addwf	0x4, 0, 0          	ADDWF	r0x04, W
003426   6e08     movwf	0x8, 0             	MOVWF	r0x08
003428   6a09     clrf	0x9, 0              	CLRF	r0x09
00342a   0e05     movlw	0x5                	MOVLW	HIGH(_CDCRxBuffer)
00342c   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
00342e   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
003430   ffe9
003432   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
003434   ffea
003436   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
003438   f008
00343a   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
00343c   ffe5
00343e   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
003440   ffe9
003442   c006     movff	0x6, 0xff3         	MOVFF	r0x06, PRODL
003444   fff3
003446   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
003448   ec31     call	0x62, 0             	CALL	__gptrput1
00344a   f000
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
00344c   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
00344e   d7dc     bra	0x3408               	BRA	_00580_DS_
                                           _00592_DS_:
003450   c004     movff	0x4, 0x3           	MOVFF	r0x04, r0x03
003452   f003
                                           ;	.line	121; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
003454   0e40     movlw	0x40               	MOVLW	0x40
003456   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 24)
003458   1518     andwf	0x18, 0, 0x1       	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00345a   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	122; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
00345c   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
00345e   bd18     btfsc	0x18, 0x6, 0x1     	BTFSC	(_ep_bdt + 24), 6, B
003460   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003462   5000     movf	0, 0, 0             	MOVF	r0x00, W
003464   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
003466   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
003468   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
00346a   6a00     clrf	0, 0                	CLRF	r0x00
00346c   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
00346e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003470   0b01     andlw	0x1                	ANDLW	0x01
003472   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
003474   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
003476   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
003478   5118     movf	0x18, 0, 0x1        	MOVF	(_ep_bdt + 24), W, B
00347a   0bbf     andlw	0xbf               	ANDLW	0xbf
00347c   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
00347e   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
003480   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
003482   6f19     movwf	0x19, 0x1          	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	125; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
003484   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
003486   1118     iorwf	0x18, 0, 0x1       	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003488   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           _00579_DS_:
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	return i;
00348a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           _00584_DS_:
00348c   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
00348e   f009
003490   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
003492   f008
003494   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003496   f007
003498   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00349a   f006
00349c   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00349e   f005
0034a0   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0034a2   f004
0034a4   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0034a6   f003
0034a8   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0034aa   f002
0034ac   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0034ae   f001
0034b0   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0034b2   f000
0034b4   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0034b6   ffd9
0034b8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	void ProcessCDCRequest(void)
00404a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00404c   ffe5
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
00404e   0e60     movlw	0x60               	MOVLW	0x60
004050   0105     movlb	0x5                	BANKSEL	_SetupPacket
004052   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
004054   0a20     xorlw	0x20               	XORLW	0x20
004056   e001     bz	0x405a                	BZ	_00534_DS_
004058   d049     bra	0x40ec               	BRA	_00544_DS_
                                           _00534_DS_:
                                           ;	.line	42; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	switch(SetupPacket.bRequest)
00405a   c501     movff	0x501, 0           	MOVFF	(_SetupPacket + 1), r0x00
00405c   f000
00405e   5000     movf	0, 0, 0             	MOVF	r0x00, W
004060   e101     bnz	0x4064               	BNZ	_00557_DS_
004062   d044     bra	0x40ec               	BRA	_00544_DS_
                                           _00557_DS_:
004064   5000     movf	0, 0, 0             	MOVF	r0x00, W
004066   0a01     xorlw	0x1                	XORLW	0x01
004068   e101     bnz	0x406c               	BNZ	_00559_DS_
00406a   d040     bra	0x40ec               	BRA	_00544_DS_
                                           _00559_DS_:
00406c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00406e   0a20     xorlw	0x20               	XORLW	0x20
004070   e007     bz	0x4080                	BZ	_00537_DS_
004072   5000     movf	0, 0, 0             	MOVF	r0x00, W
004074   0a21     xorlw	0x21               	XORLW	0x21
004076   e013     bz	0x409e                	BZ	_00538_DS_
004078   5000     movf	0, 0, 0             	MOVF	r0x00, W
00407a   0a22     xorlw	0x22               	XORLW	0x22
00407c   e01f     bz	0x40bc                	BZ	_00539_DS_
00407e   d036     bra	0x40ec               	BRA	_00544_DS_
                                           _00537_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	outPtr = (data byte *)&line_config;
004080   0e03     movlw	0x3                	MOVLW	HIGH(_line_config)
004082   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
004084   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
004086   0e00     movlw	0                  	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
004088   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
00408a   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
00408c   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	63; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
00408e   0e07     movlw	0x7                	MOVLW	0x07
004090   0103     movlb	0x3                	BANKSEL	_wCount
004092   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
004094   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
                                           ;	.line	64; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	requestHandled = 1;				
004096   0e01     movlw	0x1                	MOVLW	0x01
004098   0103     movlb	0x3                	BANKSEL	_requestHandled
00409a   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	65; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	break;
00409c   d027     bra	0x40ec               	BRA	_00544_DS_
                                           _00538_DS_:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	outPtr = (data byte *)&line_config;
00409e   0e03     movlw	0x3                	MOVLW	HIGH(_line_config)
0040a0   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
0040a2   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
0040a4   0e00     movlw	0                  	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
0040a6   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
0040a8   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0040aa   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
0040ac   0e07     movlw	0x7                	MOVLW	0x07
0040ae   0103     movlb	0x3                	BANKSEL	_wCount
0040b0   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0040b2   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	requestHandled = 1;
0040b4   0e01     movlw	0x1                	MOVLW	0x01
0040b6   0103     movlb	0x3                	BANKSEL	_requestHandled
0040b8   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	break;
0040ba   d018     bra	0x40ec               	BRA	_00544_DS_
                                           _00539_DS_:
0040bc   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	82; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
0040be   5102     movf	0x2, 0, 0x1         	MOVF	(_SetupPacket + 2), W, B
0040c0   0a03     xorlw	0x3                	XORLW	0x03
0040c2   e104     bnz	0x40cc               	BNZ	_00541_DS_
0040c4   0e01     movlw	0x1                	MOVLW	0x01
0040c6   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
0040c8   6f01     movwf	0x1, 0x1           	MOVWF	_CONTROL_LINE, B
0040ca   d002     bra	0x40d0               	BRA	_00542_DS_
                                           _00541_DS_:
0040cc   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	else CONTROL_LINE=0;		
0040ce   6b01     clrf	0x1, 0x1            	CLRF	_CONTROL_LINE, B
                                           _00542_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	outPtr = (data byte *)&zlp;
0040d0   0e02     movlw	0x2                	MOVLW	HIGH(_zlp)
0040d2   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
0040d4   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
0040d6   0ef4     movlw	0xf4               	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
0040d8   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
0040da   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0040dc   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
0040de   0e08     movlw	0x8                	MOVLW	0x08
0040e0   0103     movlb	0x3                	BANKSEL	_wCount
0040e2   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0040e4   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	requestHandled = 1;						
0040e6   0e01     movlw	0x1                	MOVLW	0x01
0040e8   0103     movlb	0x3                	BANKSEL	_requestHandled
0040ea   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           _00544_DS_:
                                           ;	.line	88; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	}
0040ec   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0040ee   f000
0040f0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	740; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void ProcessUSBTransactions(void) {
0044e8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0044ea   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00481_DS_
                                           ; #	GOTO	_00507_DS_
                                           ; #	BTFSS	_UIRbits, 2
0044ec   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	742; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(deviceState == DETACHED)
0044ee   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
                                           ;	.line	743; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
0044f0   e02e     bz	0x454e                	BZ	_00507_DS_
                                           ;	.line	746; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
0044f2   a468     btfss	0x68, 0x2, 0       	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_00483_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_00483_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	747; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UnSuspend();
0044f4   d003     bra	0x44fc               	BRA	_00483_DS_
                                           ;	.line	751; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UCONbits.SUSPND == 1)
0044f6   b469     btfsc	0x69, 0x2, 0       	BTFSC	_UIEbits, 2
0044f8   ecb8     call	0x4970, 0           	CALL	_UnSuspend
0044fa   f024
                                           _00483_DS_:
0044fc   6a00     clrf	0, 0                	CLRF	r0x00
0044fe   b26d     btfsc	0x6d, 0x1, 0       	BTFSC	_UCONbits, 1
004500   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
004502   5000     movf	0, 0, 0             	MOVF	r0x00, W
004504   0a01     xorlw	0x1                	XORLW	0x01
                                           ;	.line	752; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
004506   e023     bz	0x454e                	BZ	_00507_DS_
                                           ;	.line	755; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE) {
004508   a068     btfss	0x68, 0, 0         	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_00488_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_00488_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	756; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	BusReset();
00450a   d003     bra	0x4512               	BRA	_00488_DS_
                                           ;	.line	759; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE) {
00450c   b069     btfsc	0x69, 0, 0         	BTFSC	_UIEbits, 0
00450e   ec18     call	0x4830, 0           	CALL	_BusReset
004510   f024
                                           _00488_DS_:
004512   a868     btfss	0x68, 0x4, 0       	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_00491_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_00491_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	761; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	Suspend();
004514   d003     bra	0x451c               	BRA	_00491_DS_
                                           ;	.line	763; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE) {
004516   b869     btfsc	0x69, 0x4, 0       	BTFSC	_UIEbits, 4
004518   ec65     call	0x48ca, 0           	CALL	_Suspend
00451a   f024
                                           _00491_DS_:
00451c   ac68     btfss	0x68, 0x6, 0       	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_00494_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_00494_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	764; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	StartOfFrame();
00451e   d003     bra	0x4526               	BRA	_00494_DS_
                                           ;	.line	766; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE) {
004520   bc69     btfsc	0x69, 0x6, 0       	BTFSC	_UIEbits, 6
004522   ecbc     call	0x4978, 0           	CALL	_StartOfFrame
004524   f024
                                           _00494_DS_:
004526   aa68     btfss	0x68, 0x5, 0       	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_00497_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_00497_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	767; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	Stall();
004528   d003     bra	0x4530               	BRA	_00497_DS_
                                           ;	.line	770; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE) {
00452a   ba69     btfsc	0x69, 0x5, 0       	BTFSC	_UIEbits, 5
00452c   ec7a     call	0x48f4, 0           	CALL	_Stall
00452e   f024
                                           _00497_DS_:
004530   a268     btfss	0x68, 0x1, 0       	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_00500_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_00500_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	774; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.UERRIF = 0;
004532   d002     bra	0x4538               	BRA	_00500_DS_
                                           ;	.line	778; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (deviceState < DEFAULT)
004534   b269     btfsc	0x69, 0x1, 0       	BTFSC	_UIEbits, 1
004536   9268     bcf	0x68, 0x1, 0         	BCF	_UIRbits, 1
                                           _00500_DS_:
004538   0e03     movlw	0x3                	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00507_DS_
                                           ; #	BTFSS	_UIRbits, 3
00453a   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	779; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
00453c   5d19     subwf	0x19, 0, 0x1       	SUBWF	_deviceState, W, B
                                           ;	.line	782; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE) {
00453e   e307     bnc	0x454e               	BNC	_00507_DS_
004540   a668     btfss	0x68, 0x3, 0       	BTFSS	_UIRbits, 3
004542   d005     bra	0x454e               	BRA	_00507_DS_
004544   a669     btfss	0x69, 0x3, 0       	BTFSS	_UIEbits, 3
004546   d003     bra	0x454e               	BRA	_00507_DS_
                                           ;	.line	783; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ProcessControlTransfer();
004548   ec79     call	0x40f2, 0           	CALL	_ProcessControlTransfer
00454a   f020
                                           ;	.line	786; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.TRNIF = 0;
00454c   9668     bcf	0x68, 0x3, 0         	BCF	_UIRbits, 3
                                           _00507_DS_:
00454e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004550   f000
004552   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__BusReset	code
                                           _BusReset:
                                           ;	.line	712; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void BusReset() {
004830   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004832   ffe5
                                           ;	.line	713; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEIR  = 0x00;
004834   6a6a     clrf	0x6a, 0             	CLRF	_UEIR
                                           ;	.line	714; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIR   = 0x00;
004836   6a68     clrf	0x68, 0             	CLRF	_UIR
                                           ;	.line	715; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEIE  = 0x9f;
004838   0e9f     movlw	0x9f               	MOVLW	0x9f
00483a   6e6b     movwf	0x6b, 0            	MOVWF	_UEIE
                                           ;	.line	716; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIE   = 0x7b;
00483c   0e7b     movlw	0x7b               	MOVLW	0x7b
00483e   6e69     movwf	0x69, 0            	MOVWF	_UIE
                                           ;	.line	717; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UADDR = 0x00;
004840   6a6e     clrf	0x6e, 0             	CLRF	_UADDR
                                           ;	.line	720; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
004842   0e16     movlw	0x16               	MOVLW	0x16
004844   6e70     movwf	0x70, 0            	MOVWF	_UEP0
                                           _00467_DS_:
                                           ;	.line	723; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	while (UIRbits.TRNIF == 1)
004846   6a00     clrf	0, 0                	CLRF	r0x00
004848   b668     btfsc	0x68, 0x3, 0       	BTFSC	_UIRbits, 3
00484a   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
00484c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00484e   0a01     xorlw	0x1                	XORLW	0x01
004850   e102     bnz	0x4856               	BNZ	_00469_DS_
                                           ;	.line	724; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.TRNIF = 0;
004852   9668     bcf	0x68, 0x3, 0         	BCF	_UIRbits, 3
004854   d7f8     bra	0x4846               	BRA	_00467_DS_
                                           _00469_DS_:
                                           ;	.line	727; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.PKTDIS = 0;
004856   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
                                           ;	.line	730; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
004858   ec89     call	0x4912, 0           	CALL	_WaitForSetupStage
00485a   f024
00485c   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	732; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
00485e   6b18     clrf	0x18, 0x1           	CLRF	_remoteWakeup, B
004860   0103     movlb	0x3                	BANKSEL	_selfPowered
                                           ;	.line	733; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
004862   6b17     clrf	0x17, 0x1           	CLRF	_selfPowered, B
004864   0103     movlb	0x3                	BANKSEL	_currentConfiguration
                                           ;	.line	734; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
004866   6b1a     clrf	0x1a, 0x1           	CLRF	_currentConfiguration, B
                                           ;	.line	735; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = DEFAULT;
004868   0e03     movlw	0x3                	MOVLW	0x03
00486a   0103     movlb	0x3                	BANKSEL	_deviceState
00486c   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
00486e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004870   f000
004872   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Suspend	code
                                           _Suspend:
                                           ;	.line	682; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void Suspend(void) {
0048ca   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0048cc   ffe5
0048ce   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0048d0   ffd9
                                           ;	.line	687; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.ACTVIE = 1;
0048d2   8469     bsf	0x69, 0x2, 0         	BSF	_UIEbits, 2
                                           ;	.line	688; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.IDLEIF = 0;
0048d4   9868     bcf	0x68, 0x4, 0         	BCF	_UIRbits, 4
                                           ;	.line	689; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.SUSPND = 1;
0048d6   826d     bsf	0x6d, 0x1, 0         	BSF	_UCONbits, 1
                                           ;	.line	691; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	PIR2bits.USBIF = 0;
0048d8   9aa1     bcf	0xa1, 0x5, 0         	BCF	_PIR2bits, 5
                                           ;	.line	692; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	INTCONbits.RBIF = 0;
0048da   90f2     bcf	0xf2, 0, 0           	BCF	_INTCONbits, 0
                                           ;	.line	693; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	PIE2bits.USBIE = 1;
0048dc   8aa0     bsf	0xa0, 0x5, 0         	BSF	_PIE2bits, 5
                                           ;	.line	694; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	INTCONbits.RBIE = 1;
0048de   86f2     bsf	0xf2, 0x3, 0         	BSF	_INTCONbits, 3
                                           ;	.line	697; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	RCSTAbits.CREN = 0;
0048e0   98ab     bcf	0xab, 0x4, 0         	BCF	_RCSTAbits, 4
                                           ;	.line	698; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	TXSTAbits.TXEN = 0;
0048e2   9aac     bcf	0xac, 0x5, 0         	BCF	_TXSTAbits, 5
0048e4   0003     sleep                    	sleep 
                                           ;	.line	703; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	RCSTAbits.CREN = 1;
0048e6   88ab     bsf	0xab, 0x4, 0         	BSF	_RCSTAbits, 4
                                           ;	.line	704; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	TXSTAbits.TXEN = 1;
0048e8   8aac     bsf	0xac, 0x5, 0         	BSF	_TXSTAbits, 5
                                           ;	.line	706; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	PIE2bits.USBIE = 0;
0048ea   9aa0     bcf	0xa0, 0x5, 0         	BCF	_PIE2bits, 5
                                           ;	.line	707; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	INTCONbits.RBIE = 0;
0048ec   96f2     bcf	0xf2, 0x3, 0         	BCF	_INTCONbits, 3
0048ee   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0048f0   ffd9
0048f2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Stall	code
                                           _Stall:
                                           ;	.line	668; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void Stall(void) {
0048f4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0048f6   ffe5
                                           ;	.line	672; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UEP0bits.EPSTALL == 1) {
0048f8   6a00     clrf	0, 0                	CLRF	r0x00
0048fa   b070     btfsc	0x70, 0, 0         	BTFSC	_UEP0bits, 0
0048fc   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0048fe   5000     movf	0, 0, 0             	MOVF	r0x00, W
004900   0a01     xorlw	0x1                	XORLW	0x01
004902   e103     bnz	0x490a               	BNZ	_00449_DS_
                                           ;	.line	674; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
004904   ec89     call	0x4912, 0           	CALL	_WaitForSetupStage
004906   f024
                                           ;	.line	675; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEP0bits.EPSTALL = 0;
004908   9070     bcf	0x70, 0, 0           	BCF	_UEP0bits, 0
                                           _00449_DS_:
                                           ;	.line	677; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.STALLIF = 0;
00490a   9a68     bcf	0x68, 0x5, 0         	BCF	_UIRbits, 5
00490c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00490e   f000
004910   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	663; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.SOFIF = 0;
004978   9c68     bcf	0x68, 0x6, 0         	BCF	_UIRbits, 6
00497a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	653; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.SUSPND = 0;
004970   926d     bcf	0x6d, 0x1, 0         	BCF	_UCONbits, 1
                                           ;	.line	654; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.ACTVIE = 0;
004972   9469     bcf	0x69, 0x2, 0         	BCF	_UIEbits, 2
                                           ;	.line	655; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.ACTVIF = 0;
004974   9468     bcf	0x68, 0x2, 0         	BCF	_UIRbits, 2
004976   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	623; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UCONbits.USBEN == 0) {
004874   b66d     btfsc	0x6d, 0x3, 0       	BTFSC	_UCONbits, 3
004876   d006     bra	0x4884               	BRA	_00423_DS_
                                           ;	.line	627; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCON = 0;
004878   6a6d     clrf	0x6d, 0             	CLRF	_UCON
                                           ;	.line	628; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIE = 0;
00487a   6a69     clrf	0x69, 0             	CLRF	_UIE
                                           ;	.line	629; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.USBEN = 1;
00487c   866d     bsf	0x6d, 0x3, 0         	BSF	_UCONbits, 3
                                           ;	.line	630; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = ATTACHED;
00487e   0e01     movlw	0x1                	MOVLW	0x01
004880   0103     movlb	0x3                	BANKSEL	_deviceState
004882   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           _00423_DS_:
004884   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	634; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0) {
004886   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
004888   0a01     xorlw	0x1                	XORLW	0x01
00488a   e109     bnz	0x489e               	BNZ	_00427_DS_
00488c   ba6d     btfsc	0x6d, 0x5, 0       	BTFSC	_UCONbits, 5
00488e   d007     bra	0x489e               	BRA	_00427_DS_
                                           ;	.line	635; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIR = 0;
004890   6a68     clrf	0x68, 0             	CLRF	_UIR
                                           ;	.line	636; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIE = 0;
004892   6a69     clrf	0x69, 0             	CLRF	_UIE
                                           ;	.line	637; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.URSTIE = 1;
004894   8069     bsf	0x69, 0, 0           	BSF	_UIEbits, 0
                                           ;	.line	638; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.IDLEIE = 1;
004896   8869     bsf	0x69, 0x4, 0         	BSF	_UIEbits, 4
                                           ;	.line	639; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = POWERED;
004898   0e02     movlw	0x2                	MOVLW	0x02
00489a   0103     movlb	0x3                	BANKSEL	_deviceState
00489c   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           _00427_DS_:
00489e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	533; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void ProcessControlTransfer(void) {
0040f2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0040f4   ffe5
                                           ;	.line	537; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (USTATbits.DIR == OUT) {
0040f6   b46c     btfsc	0x6c, 0x2, 0       	BTFSC	_USTATbits, 2
0040f8   d022     bra	0x413e               	BRA	_00393_DS_
                                           ;	.line	540; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
0040fa   0e3c     movlw	0x3c               	MOVLW	0x3c
0040fc   0104     movlb	0x4                	BANKSEL	_ep_bdt
0040fe   1500     andwf	0, 0, 0x1          	ANDWF	_ep_bdt, W, B
004100   6e00     movwf	0, 0               	MOVWF	r0x00
004102   4000     rrncf	0, 0, 0            	RRNCF	r0x00, W
004104   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
004106   0b3f     andlw	0x3f               	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	541; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (PID == 0x0D)
004108   0a0d     xorlw	0xd                	XORLW	0x0d
00410a   e103     bnz	0x4112               	BNZ	_00377_DS_
                                           ;	.line	543; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	SetupStage();
00410c   eca1     call	0x3d42, 0           	CALL	_SetupStage
00410e   f01e
004110   d03e     bra	0x418e               	BRA	_00395_DS_
                                           _00377_DS_:
004112   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	544; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE) {
004114   511b     movf	0x1b, 0, 0x1        	MOVF	_ctrlTransferStage, W, B
004116   0a01     xorlw	0x1                	XORLW	0x01
004118   e10f     bnz	0x4138               	BNZ	_00374_DS_
                                           ;	.line	547; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	OutDataStage(0);
00411a   0e00     movlw	0                  	MOVLW	0x00
00411c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00411e   ec30     call	0x3260, 0           	CALL	_OutDataStage
004120   f019
004122   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
004124   0104     movlb	0x4                	BANKSEL	_ep_bdt
                                           ;	.line	571; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
004126   ad00     btfss	0, 0x6, 0x1        	BTFSS	_ep_bdt, 6, B
004128   d003     bra	0x4130               	BRA	_00371_DS_
                                           ;	.line	572; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
00412a   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
00412c   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
00412e   d02f     bra	0x418e               	BRA	_00395_DS_
                                           _00371_DS_:
                                           ;	.line	574; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004130   0ec8     movlw	0xc8               	MOVLW	0xc8
004132   0104     movlb	0x4                	BANKSEL	_ep_bdt
004134   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
004136   d02b     bra	0x418e               	BRA	_00395_DS_
                                           _00374_DS_:
                                           ;	.line	578; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
004138   ec89     call	0x4912, 0           	CALL	_WaitForSetupStage
00413a   f024
00413c   d028     bra	0x418e               	BRA	_00395_DS_
                                           _00393_DS_:
                                           ;	.line	581; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if(USTATbits.DIR == IN) {
00413e   6a00     clrf	0, 0                	CLRF	r0x00
004140   b46c     btfsc	0x6c, 0x2, 0       	BTFSC	_USTATbits, 2
004142   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
004144   5000     movf	0, 0, 0             	MOVF	r0x00, W
004146   0a01     xorlw	0x1                	XORLW	0x01
004148   e122     bnz	0x418e               	BNZ	_00395_DS_
                                           ;	.line	583; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS)) {
00414a   506e     movf	0x6e, 0, 0          	MOVF	_UADDR, W
00414c   e10b     bnz	0x4164               	BNZ	_00382_DS_
00414e   0103     movlb	0x3                	BANKSEL	_deviceState
004150   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
004152   0a04     xorlw	0x4                	XORLW	0x04
004154   e107     bnz	0x4164               	BNZ	_00382_DS_
                                           ;	.line	586; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UADDR = SetupPacket.wValue0;
004156   c502     movff	0x502, 0xf6e       	MOVFF	(_SetupPacket + 2), _UADDR
004158   ff6e
                                           ;	.line	590; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UADDR == 0)
00415a   506e     movf	0x6e, 0, 0          	MOVF	_UADDR, W
00415c   e103     bnz	0x4164               	BNZ	_00382_DS_
                                           ;	.line	593; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = DEFAULT;
00415e   0e03     movlw	0x3                	MOVLW	0x03
004160   0103     movlb	0x3                	BANKSEL	_deviceState
004162   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           _00382_DS_:
004164   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	596; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE) {
004166   511b     movf	0x1b, 0, 0x1        	MOVF	_ctrlTransferStage, W, B
004168   0a02     xorlw	0x2                	XORLW	0x02
00416a   e10f     bnz	0x418a               	BNZ	_00388_DS_
                                           ;	.line	598; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	InDataStage(0);
00416c   0e00     movlw	0                  	MOVLW	0x00
00416e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004170   ec4e     call	0x309c, 0           	CALL	_InDataStage
004172   f018
004174   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
004176   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	601; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
004178   ad04     btfss	0x4, 0x6, 0x1      	BTFSS	(_ep_bdt + 4), 6, B
00417a   d003     bra	0x4182               	BRA	_00385_DS_
                                           ;	.line	602; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
00417c   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
00417e   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
004180   d006     bra	0x418e               	BRA	_00395_DS_
                                           _00385_DS_:
                                           ;	.line	604; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004182   0ec8     movlw	0xc8               	MOVLW	0xc8
004184   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
004186   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
004188   d002     bra	0x418e               	BRA	_00395_DS_
                                           _00388_DS_:
                                           ;	.line	608; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
00418a   ec89     call	0x4912, 0           	CALL	_WaitForSetupStage
00418c   f024
                                           _00395_DS_:
00418e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004190   f000
004192   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__WaitForSetupStage	code
                                           _WaitForSetupStage:
004912   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	520; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
004914   6b1b     clrf	0x1b, 0x1           	CLRF	_ctrlTransferStage, B
                                           ;	.line	521; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
004916   0e40     movlw	0x40               	MOVLW	0x40
004918   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
00491a   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	522; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
00491c   0e00     movlw	0                  	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
00491e   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
004920   0e05     movlw	0x5                	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
004922   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	524; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
004924   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
004926   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	525; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
004928   6b04     clrf	0x4, 0x1            	CLRF	(_ep_bdt + 4), B
00492a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetupStage	code
                                           _SetupStage:
                                           ;	.line	450; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
003d42   0e7f     movlw	0x7f               	MOVLW	0x7f
003d44   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
003d46   1504     andwf	0x4, 0, 0x1        	ANDWF	(_ep_bdt + 4), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d48   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	451; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
003d4a   0e7f     movlw	0x7f               	MOVLW	0x7f
                                           ; removed redundant BANKSEL
003d4c   1500     andwf	0, 0, 0x1          	ANDWF	_ep_bdt, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d4e   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
003d50   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	454; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
003d52   6b1b     clrf	0x1b, 0x1           	CLRF	_ctrlTransferStage, B
003d54   0103     movlb	0x3                	BANKSEL	_requestHandled
                                           ;	.line	455; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
003d56   6b16     clrf	0x16, 0x1           	CLRF	_requestHandled, B
003d58   0103     movlb	0x3                	BANKSEL	_HIDPostProcess
                                           ;	.line	456; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
003d5a   6b10     clrf	0x10, 0x1           	CLRF	_HIDPostProcess, B
003d5c   0103     movlb	0x3                	BANKSEL	_wCount
                                           ;	.line	457; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 0;                           // No bytes transferred
003d5e   6b0d     clrf	0xd, 0x1            	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
003d60   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
                                           ;	.line	460; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ProcessStandardRequest();
003d62   ecca     call	0x3b94, 0           	CALL	_ProcessStandardRequest
003d64   f01d
                                           ;	.line	470; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
003d66   0e1f     movlw	0x1f               	MOVLW	0x1f
003d68   0105     movlb	0x5                	BANKSEL	_SetupPacket
003d6a   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d6c   0a01     xorlw	0x1                	XORLW	0x01
003d6e   e102     bnz	0x3d74               	BNZ	_00338_DS_
                                           ;	.line	471; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ProcessCDCRequest();
003d70   ec25     call	0x404a, 0           	CALL	_ProcessCDCRequest
003d72   f020
                                           _00338_DS_:
003d74   0103     movlb	0x3                	BANKSEL	_requestHandled
                                           ;	.line	474; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (!requestHandled) {
003d76   5116     movf	0x16, 0, 0x1        	MOVF	_requestHandled, W, B
003d78   e10b     bnz	0x3d90               	BNZ	_00345_DS_
                                           ;	.line	476; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003d7a   0e40     movlw	0x40               	MOVLW	0x40
003d7c   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
003d7e   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	477; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
003d80   0e00     movlw	0                  	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
003d82   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
003d84   0e05     movlw	0x5                	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
003d86   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	478; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
003d88   0e84     movlw	0x84               	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	479; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
003d8a   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
003d8c   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
003d8e   d038     bra	0x3e00               	BRA	_00346_DS_
                                           _00345_DS_:
003d90   0105     movlb	0x5                	BANKSEL	_SetupPacket
                                           ;	.line	481; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
003d92   af00     btfss	0, 0x7, 0x1        	BTFSS	_SetupPacket, 7, B
003d94   d026     bra	0x3de2               	BRA	_00342_DS_
003d96   0103     movlb	0x3                	BANKSEL	(_wCount + 1)
                                           ;	.line	483; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(SetupPacket.wLength < wCount)
003d98   510e     movf	0xe, 0, 0x1         	MOVF	(_wCount + 1), W, B
003d9a   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 7)
003d9c   5d07     subwf	0x7, 0, 0x1        	SUBWF	(_SetupPacket + 7), W, B
003d9e   e104     bnz	0x3da8               	BNZ	_00360_DS_
003da0   0103     movlb	0x3                	BANKSEL	_wCount
003da2   510d     movf	0xd, 0, 0x1         	MOVF	_wCount, W, B
003da4   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 6)
003da6   5d06     subwf	0x6, 0, 0x1        	SUBWF	(_SetupPacket + 6), W, B
                                           _00360_DS_:
003da8   e204     bc	0x3db2                	BC	_00340_DS_
                                           ;	.line	484; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = SetupPacket.wLength;
003daa   c506     movff	0x506, 0x30d       	MOVFF	(_SetupPacket + 6), _wCount
003dac   f30d
003dae   c507     movff	0x507, 0x30e       	MOVFF	(_SetupPacket + 7), (_wCount + 1)
003db0   f30e
                                           _00340_DS_:
                                           ;	.line	485; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	InDataStage(0);
003db2   0e00     movlw	0                  	MOVLW	0x00
003db4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003db6   ec4e     call	0x309c, 0           	CALL	_InDataStage
003db8   f018
003dba   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	486; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
003dbc   0e02     movlw	0x2                	MOVLW	0x02
003dbe   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
003dc0   6f1b     movwf	0x1b, 0x1          	MOVWF	_ctrlTransferStage, B
                                           ;	.line	488; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003dc2   0e40     movlw	0x40               	MOVLW	0x40
003dc4   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
003dc6   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	489; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
003dc8   0e00     movlw	0                  	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
003dca   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
003dcc   0e05     movlw	0x5                	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
003dce   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	490; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
003dd0   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003dd2   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ;	.line	493; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
003dd4   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003dd6   6f06     movwf	0x6, 0x1           	MOVWF	(_ep_bdt + 6), B
003dd8   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003dda   6f07     movwf	0x7, 0x1           	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	495; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003ddc   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003dde   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
003de0   d00f     bra	0x3e00               	BRA	_00346_DS_
                                           _00342_DS_:
                                           ;	.line	499; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
003de2   0e01     movlw	0x1                	MOVLW	0x01
003de4   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
003de6   6f1b     movwf	0x1b, 0x1          	MOVWF	_ctrlTransferStage, B
003de8   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	502; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
003dea   6b05     clrf	0x5, 0x1            	CLRF	(_ep_bdt + 5), B
                                           ;	.line	503; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003dec   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003dee   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	506; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003df0   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
003df2   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	507; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
003df4   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003df6   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
003df8   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003dfa   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	509; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003dfc   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003dfe   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           _00346_DS_:
                                           ;	.line	513; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.PKTDIS = 0;
003e00   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
003e02   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	411; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void OutDataStage(unsigned char ep) {
003260   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003262   ffe5
003264   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003266   ffd9
003268   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00326a   ffe5
00326c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00326e   ffe5
003270   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003272   ffe5
003274   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003276   ffe5
003278   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00327a   ffe5
00327c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
00327e   ffe5
003280   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003282   ffe5
003284   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003286   ffe5
003288   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
00328a   ffe5
00328c   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
00328e   ffe5
003290   0e02     movlw	0x2                	MOVLW	0x02
003292   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003294   f000
                                           ;	.line	414; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
003296   4400     rlncf	0, 0, 0            	RLNCF	r0x00, W
003298   0bfe     andlw	0xfe               	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x01, W
00329a   0d04     mullw	0x4                	MULLW	0x04
00329c   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
00329e   f000
0032a0   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0032a2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0032a4   6e01     movwf	0x1, 0             	MOVWF	r0x01
0032a6   6a02     clrf	0x2, 0              	CLRF	r0x02
0032a8   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0032aa   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0032ac   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0032ae   ffe9
0032b0   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0032b2   ffea
0032b4   cfef     movff	0xfef, 0x1         	MOVFF	INDF0, r0x01
0032b6   f001
0032b8   0e03     movlw	0x3                	MOVLW	0x03
0032ba   1601     andwf	0x1, 0x1, 0        	ANDWF	r0x01, F
0032bc   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0032be   6e04     movwf	0x4, 0             	MOVWF	r0x04
0032c0   6a03     clrf	0x3, 0              	CLRF	r0x03
0032c2   6a01     clrf	0x1, 0              	CLRF	r0x01
0032c4   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0032c6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0032c8   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0032ca   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0032cc   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0032ce   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032d0   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0032d2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0032d4   ffe9
0032d6   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0032d8   ffea
0032da   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0032dc   f000
0032de   6a01     clrf	0x1, 0              	CLRF	r0x01
0032e0   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0032e2   1200     iorwf	0, 0x1, 0          	IORWF	r0x00, F
0032e4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0032e6   1201     iorwf	0x1, 0x1, 0        	IORWF	r0x01, F
                                           ;	.line	421; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = wCount + bufferSize;
0032e8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0032ea   0103     movlb	0x3                	BANKSEL	_wCount
0032ec   270d     addwf	0xd, 0x1, 0x1      	ADDWF	_wCount, F, B
0032ee   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0032f0   230e     addwfc	0xe, 0x1, 0x1     	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	423; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte*)&controlTransferBuffer;
0032f2   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
0032f4   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
0032f6   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
0032f8   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0032fa   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
0032fc   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0032fe   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	427; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003300   6a02     clrf	0x2, 0              	CLRF	r0x02
003302   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00321_DS_:
003304   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003306   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003308   e102     bnz	0x330e               	BNZ	_00332_DS_
00330a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00330c   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00332_DS_:
00330e   e22f     bc	0x336e                	BC	_00325_DS_
                                           ;	.line	431; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr++ = *outPtr++;
003310   c307     movff	0x307, 0x4         	MOVFF	_inPtr, r0x04
003312   f004
003314   c308     movff	0x308, 0x5         	MOVFF	(_inPtr + 1), r0x05
003316   f005
003318   c309     movff	0x309, 0x6         	MOVFF	(_inPtr + 2), r0x06
00331a   f006
00331c   c2fc     movff	0x2fc, 0x7         	MOVFF	_outPtr, r0x07
00331e   f007
003320   c2fd     movff	0x2fd, 0x8         	MOVFF	(_outPtr + 1), r0x08
003322   f008
003324   c2fe     movff	0x2fe, 0x9         	MOVFF	(_outPtr + 2), r0x09
003326   f009
003328   c007     movff	0x7, 0xfe9         	MOVFF	r0x07, FSR0L
00332a   ffe9
00332c   c008     movff	0x8, 0xff3         	MOVFF	r0x08, PRODL
00332e   fff3
003330   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
003332   ec29     call	0x52, 0             	CALL	__gptrget1
003334   f000
003336   6e07     movwf	0x7, 0             	MOVWF	r0x07
003338   0102     movlb	0x2                	BANKSEL	_outPtr
00333a   2bfc     incf	0xfc, 0x1, 0x1      	INCF	_outPtr, F, B
00333c   e301     bnc	0x3340               	BNC	_11257_DS_
                                           ; removed redundant BANKSEL
00333e   2bfd     incf	0xfd, 0x1, 0x1      	INCF	(_outPtr + 1), F, B
                                           _11257_DS_:
003340   e302     bnc	0x3346               	BNC	_21258_DS_
003342   0102     movlb	0x2                	BANKSEL	(_outPtr + 2)
003344   2bfe     incf	0xfe, 0x1, 0x1      	INCF	(_outPtr + 2), F, B
                                           _21258_DS_:
003346   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003348   ffe5
00334a   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
00334c   ffe9
00334e   c005     movff	0x5, 0xff3         	MOVFF	r0x05, PRODL
003350   fff3
003352   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
003354   ec31     call	0x62, 0             	CALL	__gptrput1
003356   f000
003358   0103     movlb	0x3                	BANKSEL	_inPtr
00335a   2b07     incf	0x7, 0x1, 0x1       	INCF	_inPtr, F, B
00335c   e301     bnc	0x3360               	BNC	_31259_DS_
                                           ; removed redundant BANKSEL
00335e   2b08     incf	0x8, 0x1, 0x1       	INCF	(_inPtr + 1), F, B
                                           _31259_DS_:
003360   e302     bnc	0x3366               	BNC	_41260_DS_
003362   0103     movlb	0x3                	BANKSEL	(_inPtr + 2)
003364   2b09     incf	0x9, 0x1, 0x1       	INCF	(_inPtr + 2), F, B
                                           _41260_DS_:
                                           ;	.line	427; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003366   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
003368   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00336a   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
00336c   d7cb     bra	0x3304               	BRA	_00321_DS_
                                           _00325_DS_:
00336e   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
003370   f009
003372   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
003374   f008
003376   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003378   f007
00337a   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00337c   f006
00337e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003380   f005
003382   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003384   f004
003386   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003388   f003
00338a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00338c   f002
00338e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003390   f001
003392   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003394   f000
003396   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003398   ffd9
00339a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__InDataStage	code
                                           _InDataStage:
                                           ;	.line	364; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void InDataStage(unsigned char ep) {
00309c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00309e   ffe5
0030a0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0030a2   ffd9
0030a4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0030a6   ffe5
0030a8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0030aa   ffe5
0030ac   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0030ae   ffe5
0030b0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0030b2   ffe5
0030b4   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0030b6   ffe5
0030b8   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0030ba   ffe5
0030bc   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0030be   ffe5
0030c0   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0030c2   ffe5
0030c4   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0030c6   ffe5
0030c8   0e02     movlw	0x2                	MOVLW	0x02
0030ca   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0030cc   f000
                                           ;	.line	371; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
0030ce   0e00     movlw	0                  	MOVLW	0x00
0030d0   0103     movlb	0x3                	BANKSEL	(_wCount + 1)
0030d2   5d0e     subwf	0xe, 0, 0x1        	SUBWF	(_wCount + 1), W, B
0030d4   e102     bnz	0x30da               	BNZ	_00310_DS_
0030d6   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
0030d8   5d0d     subwf	0xd, 0, 0x1        	SUBWF	_wCount, W, B
                                           _00310_DS_:
0030da   e205     bc	0x30e6                	BC	_00298_DS_
                                           ;	.line	372; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	bufferSize = wCount;
0030dc   c30d     movff	0x30d, 0x1         	MOVFF	_wCount, r0x01
0030de   f001
0030e0   c30e     movff	0x30e, 0x2         	MOVFF	(_wCount + 1), r0x02
0030e2   f002
0030e4   d003     bra	0x30ec               	BRA	_00299_DS_
                                           _00298_DS_:
                                           ;	.line	374; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
0030e6   0e40     movlw	0x40               	MOVLW	0x40
0030e8   6e01     movwf	0x1, 0             	MOVWF	r0x01
0030ea   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           _00299_DS_:
                                           ;	.line	382; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
0030ec   4400     rlncf	0, 0, 0            	RLNCF	r0x00, W
0030ee   0bfe     andlw	0xfe               	ANDLW	0xfe
0030f0   6e03     movwf	0x3, 0             	MOVWF	r0x03
0030f2   2803     incf	0x3, 0, 0           	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x00, W
0030f4   0d04     mullw	0x4                	MULLW	0x04
0030f6   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0030f8   f000
0030fa   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0030fc   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030fe   6e03     movwf	0x3, 0             	MOVWF	r0x03
003100   6a04     clrf	0x4, 0              	CLRF	r0x04
003102   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003104   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003106   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003108   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00310a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00310c   6a06     clrf	0x6, 0              	CLRF	r0x06
00310e   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003110   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003112   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
003114   ffe9
003116   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
003118   ffea
00311a   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00311c   f005
00311e   0efc     movlw	0xfc               	MOVLW	0xfc
003120   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
003122   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
003124   ffe9
003126   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
003128   ffea
00312a   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
00312c   ffef
                                           ;	.line	383; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (byte)((bufferSize & 0x0300) >> 8);
00312e   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003130   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003132   6e03     movwf	0x3, 0             	MOVWF	r0x03
003134   6a04     clrf	0x4, 0              	CLRF	r0x04
003136   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003138   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
00313a   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
00313c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00313e   6e05     movwf	0x5, 0             	MOVWF	r0x05
003140   6a06     clrf	0x6, 0              	CLRF	r0x06
003142   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003144   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003146   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
003148   ffe9
00314a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00314c   ffea
00314e   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
003150   f005
003152   0e03     movlw	0x3                	MOVLW	0x03
003154   1402     andwf	0x2, 0, 0          	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x07
                                           ; #	MOVF	r0x07, W
003156   1205     iorwf	0x5, 0x1, 0        	IORWF	r0x05, F
003158   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
00315a   ffe9
00315c   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00315e   ffea
003160   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
003162   ffef
                                           ;	.line	384; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).Cnt = (byte)(bufferSize & 0xFF);
003164   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003166   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003168   6e03     movwf	0x3, 0             	MOVWF	r0x03
00316a   6a04     clrf	0x4, 0              	CLRF	r0x04
00316c   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
00316e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003170   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
003172   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003174   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003176   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003178   6e05     movwf	0x5, 0             	MOVWF	r0x05
00317a   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
00317c   ffe9
00317e   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
003180   ffea
003182   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
003184   ffef
                                           ;	.line	385; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
003186   6a03     clrf	0x3, 0              	CLRF	r0x03
003188   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
00318a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00318c   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
00318e   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003190   0e02     movlw	0x2                	MOVLW	0x02
003192   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003194   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003196   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
003198   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
00319a   6e04     movwf	0x4, 0             	MOVWF	r0x04
00319c   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
00319e   6e05     movwf	0x5, 0             	MOVWF	r0x05
0031a0   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0031a2   ffe9
0031a4   c003     movff	0x3, 0xfea         	MOVFF	r0x03, FSR0H
0031a6   ffea
0031a8   c004     movff	0x4, 0xfee         	MOVFF	r0x04, POSTINC0
0031aa   ffee
0031ac   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0031ae   ffef
                                           ;	.line	390; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = wCount - bufferSize;
0031b0   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0031b2   0103     movlb	0x3                	BANKSEL	_wCount
0031b4   5f0d     subwf	0xd, 0x1, 0x1      	SUBWF	_wCount, F, B
0031b6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
0031b8   5b0e     subwfb	0xe, 0x1, 0x1     	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	393; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr = (byte *)&controlTransferBuffer;
0031ba   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
0031bc   0103     movlb	0x3                	BANKSEL	(_inPtr + 1)
0031be   6f08     movwf	0x8, 0x1           	MOVWF	(_inPtr + 1), B
0031c0   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0031c2   6f07     movwf	0x7, 0x1           	MOVWF	_inPtr, B
0031c4   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0031c6   6f09     movwf	0x9, 0x1           	MOVWF	(_inPtr + 2), B
                                           ;	.line	398; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
0031c8   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00300_DS_:
0031ca   c000     movff	0, 0x3             	MOVFF	r0x00, r0x03
0031cc   f003
0031ce   6a04     clrf	0x4, 0              	CLRF	r0x04
0031d0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0031d2   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
0031d4   e102     bnz	0x31da               	BNZ	_00316_DS_
0031d6   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0031d8   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
                                           _00316_DS_:
0031da   e22d     bc	0x3236                	BC	_00304_DS_
                                           ;	.line	402; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr++ = *outPtr++;
0031dc   c307     movff	0x307, 0x3         	MOVFF	_inPtr, r0x03
0031de   f003
0031e0   c308     movff	0x308, 0x4         	MOVFF	(_inPtr + 1), r0x04
0031e2   f004
0031e4   c309     movff	0x309, 0x5         	MOVFF	(_inPtr + 2), r0x05
0031e6   f005
0031e8   c2fc     movff	0x2fc, 0x6         	MOVFF	_outPtr, r0x06
0031ea   f006
0031ec   c2fd     movff	0x2fd, 0x7         	MOVFF	(_outPtr + 1), r0x07
0031ee   f007
0031f0   c2fe     movff	0x2fe, 0x8         	MOVFF	(_outPtr + 2), r0x08
0031f2   f008
0031f4   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0031f6   ffe9
0031f8   c007     movff	0x7, 0xff3         	MOVFF	r0x07, PRODL
0031fa   fff3
0031fc   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
0031fe   ec29     call	0x52, 0             	CALL	__gptrget1
003200   f000
003202   6e06     movwf	0x6, 0             	MOVWF	r0x06
003204   0102     movlb	0x2                	BANKSEL	_outPtr
003206   2bfc     incf	0xfc, 0x1, 0x1      	INCF	_outPtr, F, B
003208   e301     bnc	0x320c               	BNC	_51261_DS_
                                           ; removed redundant BANKSEL
00320a   2bfd     incf	0xfd, 0x1, 0x1      	INCF	(_outPtr + 1), F, B
                                           _51261_DS_:
00320c   e302     bnc	0x3212               	BNC	_61262_DS_
00320e   0102     movlb	0x2                	BANKSEL	(_outPtr + 2)
003210   2bfe     incf	0xfe, 0x1, 0x1      	INCF	(_outPtr + 2), F, B
                                           _61262_DS_:
003212   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003214   ffe5
003216   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
003218   ffe9
00321a   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
00321c   fff3
00321e   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003220   ec31     call	0x62, 0             	CALL	__gptrput1
003222   f000
003224   0103     movlb	0x3                	BANKSEL	_inPtr
003226   2b07     incf	0x7, 0x1, 0x1       	INCF	_inPtr, F, B
003228   e301     bnc	0x322c               	BNC	_71263_DS_
                                           ; removed redundant BANKSEL
00322a   2b08     incf	0x8, 0x1, 0x1       	INCF	(_inPtr + 1), F, B
                                           _71263_DS_:
00322c   e302     bnc	0x3232               	BNC	_81264_DS_
00322e   0103     movlb	0x3                	BANKSEL	(_inPtr + 2)
003230   2b09     incf	0x9, 0x1, 0x1       	INCF	(_inPtr + 2), F, B
                                           _81264_DS_:
                                           ;	.line	398; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003232   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003234   d7ca     bra	0x31ca               	BRA	_00300_DS_
                                           _00304_DS_:
003236   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
003238   f008
00323a   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
00323c   f007
00323e   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003240   f006
003242   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003244   f005
003246   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003248   f004
00324a   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00324c   f003
00324e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003250   f002
003252   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003254   f001
003256   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003258   f000
00325a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00325c   ffd9
00325e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	253; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void ProcessStandardRequest(void) {
003b94   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003b96   ffe5
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte request = SetupPacket.bRequest;
003b98   c501     movff	0x501, 0           	MOVFF	(_SetupPacket + 1), r0x00
003b9a   f000
003b9c   0105     movlb	0x5                	BANKSEL	_SetupPacket
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
003b9e   5100     movf	0, 0, 0x1           	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00231_DS_
                                           ; #	GOTO	_00263_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	259; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
003ba0   0b60     andlw	0x60               	ANDLW	0x60
                                           ;	.line	261; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (request == SET_ADDRESS) {
003ba2   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
003ba4   d061     bra	0x3c68               	BRA	_00263_DS_
003ba6   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ba8   0a05     xorlw	0x5                	XORLW	0x05
003baa   e109     bnz	0x3bbe               	BNZ	_00261_DS_
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003bac   0e01     movlw	0x1                	MOVLW	0x01
003bae   0103     movlb	0x3                	BANKSEL	_requestHandled
003bb0   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	270; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = ADDRESS;
003bb2   0e04     movlw	0x4                	MOVLW	0x04
003bb4   0103     movlb	0x3                	BANKSEL	_deviceState
003bb6   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           ;	.line	271; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
003bb8   c502     movff	0x502, 0x30f       	MOVFF	(_SetupPacket + 2), _deviceAddress
003bba   f30f
003bbc   d055     bra	0x3c68               	BRA	_00263_DS_
                                           _00261_DS_:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
003bbe   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bc0   0a06     xorlw	0x6                	XORLW	0x06
003bc2   e103     bnz	0x3bca               	BNZ	_00258_DS_
                                           ;	.line	274; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	GetDescriptor();
003bc4   ec79     call	0x38f2, 0           	CALL	_GetDescriptor
003bc6   f01c
003bc8   d04f     bra	0x3c68               	BRA	_00263_DS_
                                           _00258_DS_:
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
003bca   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bcc   0a09     xorlw	0x9                	XORLW	0x09
003bce   e112     bnz	0x3bf4               	BNZ	_00255_DS_
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003bd0   0e01     movlw	0x1                	MOVLW	0x01
003bd2   0103     movlb	0x3                	BANKSEL	_requestHandled
003bd4   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	281; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
003bd6   c502     movff	0x502, 0x31a       	MOVFF	(_SetupPacket + 2), _currentConfiguration
003bd8   f31a
003bda   0103     movlb	0x3                	BANKSEL	_currentConfiguration
                                           ;	.line	284; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (currentConfiguration == 0)
003bdc   511a     movf	0x1a, 0, 0x1        	MOVF	_currentConfiguration, W, B
003bde   e104     bnz	0x3be8               	BNZ	_00233_DS_
                                           ;	.line	287; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = ADDRESS;
003be0   0e04     movlw	0x4                	MOVLW	0x04
003be2   0103     movlb	0x3                	BANKSEL	_deviceState
003be4   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
003be6   d040     bra	0x3c68               	BRA	_00263_DS_
                                           _00233_DS_:
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = CONFIGURED;
003be8   0e05     movlw	0x5                	MOVLW	0x05
003bea   0103     movlb	0x3                	BANKSEL	_deviceState
003bec   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           ;	.line	300; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	CDCInitEndpoint();
003bee   ec0f     call	0x461e, 0           	CALL	_CDCInitEndpoint
003bf0   f023
003bf2   d03a     bra	0x3c68               	BRA	_00263_DS_
                                           _00255_DS_:
                                           ;	.line	310; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
003bf4   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bf6   0a08     xorlw	0x8                	XORLW	0x08
003bf8   e10f     bnz	0x3c18               	BNZ	_00252_DS_
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003bfa   0e01     movlw	0x1                	MOVLW	0x01
003bfc   0103     movlb	0x3                	BANKSEL	_requestHandled
003bfe   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	315; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte*)&currentConfiguration;
003c00   0e03     movlw	0x3                	MOVLW	HIGH(_currentConfiguration)
003c02   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
003c04   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
003c06   0e1a     movlw	0x1a               	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
003c08   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
003c0a   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003c0c   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	316; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 1;
003c0e   0e01     movlw	0x1                	MOVLW	0x01
003c10   0103     movlb	0x3                	BANKSEL	_wCount
003c12   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003c14   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
003c16   d028     bra	0x3c68               	BRA	_00263_DS_
                                           _00252_DS_:
                                           ;	.line	318; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_STATUS) {
003c18   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c1a   e103     bnz	0x3c22               	BNZ	_00249_DS_
                                           ;	.line	319; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	GetStatus();
003c1c   ec03     call	0x3806, 0           	CALL	_GetStatus
003c1e   f01c
003c20   d023     bra	0x3c68               	BRA	_00263_DS_
                                           _00249_DS_:
                                           ;	.line	321; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
003c22   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c24   0a01     xorlw	0x1                	XORLW	0x01
003c26   e003     bz	0x3c2e                	BZ	_00244_DS_
                                           ;	.line	322; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	(request == SET_FEATURE)) {
003c28   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c2a   0a03     xorlw	0x3                	XORLW	0x03
003c2c   e103     bnz	0x3c34               	BNZ	_00245_DS_
                                           _00244_DS_:
                                           ;	.line	323; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	SetFeature();
003c2e   ec77     call	0x36ee, 0           	CALL	_SetFeature
003c30   f01b
003c32   d01a     bra	0x3c68               	BRA	_00263_DS_
                                           _00245_DS_:
                                           ;	.line	325; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_INTERFACE) {
003c34   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c36   0a0a     xorlw	0xa                	XORLW	0x0a
003c38   e111     bnz	0x3c5c               	BNZ	_00242_DS_
                                           ;	.line	331; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003c3a   0e01     movlw	0x1                	MOVLW	0x01
003c3c   0103     movlb	0x3                	BANKSEL	_requestHandled
003c3e   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
003c40   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
                                           ;	.line	332; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] = 0;
003c42   6b40     clrf	0x40, 0x1           	CLRF	_controlTransferBuffer, B
                                           ;	.line	333; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&controlTransferBuffer;
003c44   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
003c46   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
003c48   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
003c4a   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003c4c   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
003c4e   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003c50   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	334; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 1;
003c52   0e01     movlw	0x1                	MOVLW	0x01
003c54   0103     movlb	0x3                	BANKSEL	_wCount
003c56   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003c58   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
003c5a   d006     bra	0x3c68               	BRA	_00263_DS_
                                           _00242_DS_:
                                           ;	.line	336; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == SET_INTERFACE) {
003c5c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c5e   0a0b     xorlw	0xb                	XORLW	0x0b
003c60   e103     bnz	0x3c68               	BNZ	_00263_DS_
                                           ;	.line	341; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003c62   0e01     movlw	0x1                	MOVLW	0x01
003c64   0103     movlb	0x3                	BANKSEL	_requestHandled
003c66   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           _00263_DS_:
                                           ;	.line	348; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == SYNCH_FRAME) {
003c68   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003c6a   f000
003c6c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetFeature	code
                                           _SetFeature:
                                           ;	.line	209; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	static void SetFeature(void) {
0036ee   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0036f0   ffe5
0036f2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0036f4   ffe5
0036f6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0036f8   ffe5
0036fa   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0036fc   ffe5
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte recipient = SetupPacket.bmRequestType & 0x1F;
0036fe   0e1f     movlw	0x1f               	MOVLW	0x1f
003700   0105     movlb	0x5                	BANKSEL	_SetupPacket
003702   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
003704   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	211; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte feature = SetupPacket.wValue0;
003706   c502     movff	0x502, 0x1         	MOVFF	(_SetupPacket + 2), r0x01
003708   f001
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (recipient == 0x00) {
00370a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00370c   e112     bnz	0x3732               	BNZ	_00200_DS_
                                           ;	.line	218; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
00370e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003710   0a01     xorlw	0x1                	XORLW	0x01
003712   e001     bz	0x3716                	BZ	_00215_DS_
003714   d06f     bra	0x37f4               	BRA	_00202_DS_
                                           _00215_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003716   0e01     movlw	0x1                	MOVLW	0x01
003718   0103     movlb	0x3                	BANKSEL	_requestHandled
00371a   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
00371c   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
00371e   5101     movf	0x1, 0, 0x1         	MOVF	(_SetupPacket + 1), W, B
003720   0a03     xorlw	0x3                	XORLW	0x03
003722   e104     bnz	0x372c               	BNZ	_00182_DS_
                                           ;	.line	221; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	remoteWakeup = 1;
003724   0e01     movlw	0x1                	MOVLW	0x01
003726   0103     movlb	0x3                	BANKSEL	_remoteWakeup
003728   6f18     movwf	0x18, 0x1          	MOVWF	_remoteWakeup, B
00372a   d064     bra	0x37f4               	BRA	_00202_DS_
                                           _00182_DS_:
00372c   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	223; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	remoteWakeup = 0;
00372e   6b18     clrf	0x18, 0x1           	CLRF	_remoteWakeup, B
003730   d061     bra	0x37f4               	BRA	_00202_DS_
                                           _00200_DS_:
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (recipient == 0x02) {
003732   5000     movf	0, 0, 0             	MOVF	r0x00, W
003734   0a02     xorlw	0x2                	XORLW	0x02
003736   e001     bz	0x373a                	BZ	_00219_DS_
003738   d05d     bra	0x37f4               	BRA	_00202_DS_
                                           _00219_DS_:
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointNum = SetupPacket.wIndex0 & 0x0F;
00373a   0e0f     movlw	0xf                	MOVLW	0x0f
00373c   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 4)
00373e   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
003740   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointDir = SetupPacket.wIndex0 & 0x80;
003742   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003744   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
003746   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
003748   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00374a   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00374c   d053     bra	0x37f4               	BRA	_00202_DS_
00374e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003750   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
003752   d050     bra	0x37f4               	BRA	_00202_DS_
                                           ;	.line	233; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003754   0e01     movlw	0x1                	MOVLW	0x01
003756   0103     movlb	0x3                	BANKSEL	_requestHandled
003758   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	236; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr = (byte *)&EP_OUT_BD(0) + (endpointNum * 8);
00375a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00375c   0d08     mullw	0x8                	MULLW	0x08
00375e   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
003760   f000
003762   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
003764   f001
003766   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003768   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00376a   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
00376c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00376e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003770   0103     movlb	0x3                	BANKSEL	(_inPtr + 1)
003772   6f08     movwf	0x8, 0x1           	MOVWF	(_inPtr + 1), B
003774   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003776   6f07     movwf	0x7, 0x1           	MOVWF	_inPtr, B
003778   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
00377a   6f09     movwf	0x9, 0x1           	MOVWF	(_inPtr + 2), B
                                           ;	.line	237; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (endpointDir)
00377c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00377e   e005     bz	0x378a                	BZ	_00187_DS_
                                           ;	.line	238; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr += 4;
003780   0e04     movlw	0x4                	MOVLW	0x04
                                           ; removed redundant BANKSEL
003782   2707     addwf	0x7, 0x1, 0x1      	ADDWF	_inPtr, F, B
003784   0e00     movlw	0                  	MOVLW	0x00
                                           ; removed redundant BANKSEL
003786   2308     addwfc	0x8, 0x1, 0x1     	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003788   2309     addwfc	0x9, 0x1, 0x1     	ADDWFC	(_inPtr + 2), F, B
                                           _00187_DS_:
00378a   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	240; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
00378c   5101     movf	0x1, 0, 0x1         	MOVF	(_SetupPacket + 1), W, B
00378e   0a03     xorlw	0x3                	XORLW	0x03
003790   e110     bnz	0x37b2               	BNZ	_00192_DS_
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr = 0x84;
003792   c307     movff	0x307, 0           	MOVFF	_inPtr, r0x00
003794   f000
003796   c308     movff	0x308, 0x1         	MOVFF	(_inPtr + 1), r0x01
003798   f001
00379a   c309     movff	0x309, 0x3         	MOVFF	(_inPtr + 2), r0x03
00379c   f003
00379e   0e84     movlw	0x84               	MOVLW	0x84
0037a0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037a2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0037a4   ffe9
0037a6   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0037a8   fff3
0037aa   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0037ac   ec31     call	0x62, 0             	CALL	__gptrput1
0037ae   f000
0037b0   d021     bra	0x37f4               	BRA	_00202_DS_
                                           _00192_DS_:
                                           ;	.line	243; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(endpointDir == 1)
0037b2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0037b4   0a01     xorlw	0x1                	XORLW	0x01
0037b6   e10f     bnz	0x37d6               	BNZ	_00189_DS_
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr = 0x00;
0037b8   c307     movff	0x307, 0           	MOVFF	_inPtr, r0x00
0037ba   f000
0037bc   c308     movff	0x308, 0x1         	MOVFF	(_inPtr + 1), r0x01
0037be   f001
0037c0   c309     movff	0x309, 0x2         	MOVFF	(_inPtr + 2), r0x02
0037c2   f002
0037c4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0037c6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0037c8   ffe9
0037ca   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0037cc   fff3
0037ce   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0037d0   ec31     call	0x62, 0             	CALL	__gptrput1
0037d2   f000
0037d4   d00f     bra	0x37f4               	BRA	_00202_DS_
                                           _00189_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr = 0x88;
0037d6   c307     movff	0x307, 0           	MOVFF	_inPtr, r0x00
0037d8   f000
0037da   c308     movff	0x308, 0x1         	MOVFF	(_inPtr + 1), r0x01
0037dc   f001
0037de   c309     movff	0x309, 0x2         	MOVFF	(_inPtr + 2), r0x02
0037e0   f002
0037e2   0e88     movlw	0x88               	MOVLW	0x88
0037e4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037e6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0037e8   ffe9
0037ea   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0037ec   fff3
0037ee   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0037f0   ec31     call	0x62, 0             	CALL	__gptrput1
0037f2   f000
                                           _00202_DS_:
0037f4   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0037f6   f003
0037f8   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0037fa   f002
0037fc   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0037fe   f001
003800   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003802   f000
003804   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetStatus	code
                                           _GetStatus:
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	static void GetStatus(void) {
003806   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003808   ffe5
00380a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00380c   ffe5
00380e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003810   ffe5
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte recipient = SetupPacket.bmRequestType & 0x1F;
003812   0e1f     movlw	0x1f               	MOVLW	0x1f
003814   0105     movlb	0x5                	BANKSEL	_SetupPacket
003816   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
003818   6e00     movwf	0, 0               	MOVWF	r0x00
00381a   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] = 0;
00381c   6b40     clrf	0x40, 0x1           	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[1] = 0;
00381e   6b41     clrf	0x41, 0x1           	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (recipient == 0x00) {
003820   5000     movf	0, 0, 0             	MOVF	r0x00, W
003822   e113     bnz	0x384a               	BNZ	_00153_DS_
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003824   0e01     movlw	0x1                	MOVLW	0x01
003826   0103     movlb	0x3                	BANKSEL	_requestHandled
003828   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
00382a   0103     movlb	0x3                	BANKSEL	_selfPowered
                                           ;	.line	178; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (selfPowered)
00382c   5117     movf	0x17, 0, 0x1        	MOVF	_selfPowered, W, B
00382e   e004     bz	0x3838                	BZ	_00140_DS_
                                           ;	.line	179; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
003830   0e01     movlw	0x1                	MOVLW	0x01
003832   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
003834   1140     iorwf	0x40, 0, 0x1       	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003836   6f40     movwf	0x40, 0x1          	MOVWF	_controlTransferBuffer, B
                                           _00140_DS_:
003838   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (remoteWakeup)
00383a   5118     movf	0x18, 0, 0x1        	MOVF	_remoteWakeup, W, B
00383c   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
00383e   d044     bra	0x38c8               	BRA	_00154_DS_
                                           ;	.line	181; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
003840   0e02     movlw	0x2                	MOVLW	0x02
003842   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
003844   1140     iorwf	0x40, 0, 0x1       	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003846   6f40     movwf	0x40, 0x1          	MOVWF	_controlTransferBuffer, B
003848   d03f     bra	0x38c8               	BRA	_00154_DS_
                                           _00153_DS_:
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (recipient == 0x01) {
00384a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00384c   0a01     xorlw	0x1                	XORLW	0x01
00384e   e104     bnz	0x3858               	BNZ	_00150_DS_
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003850   0e01     movlw	0x1                	MOVLW	0x01
003852   0103     movlb	0x3                	BANKSEL	_requestHandled
003854   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
003856   d038     bra	0x38c8               	BRA	_00154_DS_
                                           _00150_DS_:
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (recipient == 0x02) {
003858   5000     movf	0, 0, 0             	MOVF	r0x00, W
00385a   0a02     xorlw	0x2                	XORLW	0x02
00385c   e135     bnz	0x38c8               	BNZ	_00154_DS_
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointNum = SetupPacket.wIndex0 & 0x0F;
00385e   0e0f     movlw	0xf                	MOVLW	0x0f
003860   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 4)
003862   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
003864   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointDir = SetupPacket.wIndex0 & 0x80;
003866   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003868   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
00386a   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
00386c   0e01     movlw	0x1                	MOVLW	0x01
00386e   0103     movlb	0x3                	BANKSEL	_requestHandled
003870   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr = (byte *)&EP_OUT_BD(0) + (endpointNum * 8);
003872   5000     movf	0, 0, 0             	MOVF	r0x00, W
003874   0d08     mullw	0x8                	MULLW	0x08
003876   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
003878   f000
00387a   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
00387c   f002
00387e   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003880   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003882   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003884   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003886   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003888   0103     movlb	0x3                	BANKSEL	(_inPtr + 1)
00388a   6f08     movwf	0x8, 0x1           	MOVWF	(_inPtr + 1), B
00388c   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00388e   6f07     movwf	0x7, 0x1           	MOVWF	_inPtr, B
003890   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003892   6f09     movwf	0x9, 0x1           	MOVWF	(_inPtr + 2), B
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (endpointDir)
003894   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003896   e005     bz	0x38a2                	BZ	_00144_DS_
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr += 4;
003898   0e04     movlw	0x4                	MOVLW	0x04
                                           ; removed redundant BANKSEL
00389a   2707     addwf	0x7, 0x1, 0x1      	ADDWF	_inPtr, F, B
00389c   0e00     movlw	0                  	MOVLW	0x00
                                           ; removed redundant BANKSEL
00389e   2308     addwfc	0x8, 0x1, 0x1     	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
0038a0   2309     addwfc	0x9, 0x1, 0x1     	ADDWFC	(_inPtr + 2), F, B
                                           _00144_DS_:
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
0038a2   c307     movff	0x307, 0           	MOVFF	_inPtr, r0x00
0038a4   f000
0038a6   c308     movff	0x308, 0x1         	MOVFF	(_inPtr + 1), r0x01
0038a8   f001
0038aa   c309     movff	0x309, 0x2         	MOVFF	(_inPtr + 2), r0x02
0038ac   f002
0038ae   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0038b0   ffe9
0038b2   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0038b4   fff3
0038b6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0038b8   ec29     call	0x52, 0             	CALL	__gptrget1
0038ba   f000
0038bc   6e00     movwf	0, 0               	MOVWF	r0x00
0038be   a400     btfss	0, 0x2, 0          	BTFSS	r0x00, 2
0038c0   d003     bra	0x38c8               	BRA	_00154_DS_
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
0038c2   0e01     movlw	0x1                	MOVLW	0x01
0038c4   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
0038c6   6f40     movwf	0x40, 0x1          	MOVWF	_controlTransferBuffer, B
                                           _00154_DS_:
0038c8   0103     movlb	0x3                	BANKSEL	_requestHandled
                                           ;	.line	201; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (requestHandled) {
0038ca   5116     movf	0x16, 0, 0x1        	MOVF	_requestHandled, W, B
0038cc   e00b     bz	0x38e4                	BZ	_00157_DS_
                                           ;	.line	202; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&controlTransferBuffer;
0038ce   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
0038d0   0102     movlb	0x2                	BANKSEL	(_outPtr + 1)
0038d2   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
0038d4   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
0038d6   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
0038d8   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0038da   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 2;
0038dc   0e02     movlw	0x2                	MOVLW	0x02
0038de   0103     movlb	0x3                	BANKSEL	_wCount
0038e0   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
0038e2   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
                                           _00157_DS_:
0038e4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0038e6   f002
0038e8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0038ea   f001
0038ec   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0038ee   f000
0038f0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	static void GetDescriptor(void) {
0038f2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0038f4   ffe5
0038f6   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0038f8   ffe5
0038fa   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0038fc   ffe5
0038fe   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003900   ffe5
003902   0105     movlb	0x5                	BANKSEL	_SetupPacket
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80) {
003904   5100     movf	0, 0, 0x1           	MOVF	_SetupPacket, W, B
003906   0a80     xorlw	0x80               	XORLW	0x80
003908   e001     bz	0x390c                	BZ	_00126_DS_
00390a   d05d     bra	0x39c6               	BRA	_00118_DS_
                                           _00126_DS_:
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte descriptorType  = SetupPacket.wValue1;
00390c   c503     movff	0x503, 0           	MOVFF	(_SetupPacket + 3), r0x00
00390e   f000
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte descriptorIndex = SetupPacket.wValue0;
003910   c502     movff	0x502, 0x1         	MOVFF	(_SetupPacket + 2), r0x01
003912   f001
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR) {
003914   5000     movf	0, 0, 0             	MOVF	r0x00, W
003916   0a01     xorlw	0x1                	XORLW	0x01
003918   e10f     bnz	0x3938               	BNZ	_00114_DS_
                                           ;	.line	109; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
00391a   0e01     movlw	0x1                	MOVLW	0x01
00391c   0103     movlb	0x3                	BANKSEL	_requestHandled
00391e   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&libdevice_descriptor;
003920   0efc     movlw	0xfc               	MOVLW	LOW(_libdevice_descriptor)
003922   0102     movlb	0x2                	BANKSEL	_outPtr
003924   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
003926   0e27     movlw	0x27               	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
003928   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
00392a   0e00     movlw	0                  	MOVLW	UPPER(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
00392c   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
00392e   0e12     movlw	0x12               	MOVLW	0x12
003930   0103     movlb	0x3                	BANKSEL	_wCount
003932   6f0d     movwf	0xd, 0x1           	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003934   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
003936   d047     bra	0x39c6               	BRA	_00118_DS_
                                           _00114_DS_:
                                           ;	.line	113; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR) {
003938   5000     movf	0, 0, 0             	MOVF	r0x00, W
00393a   0a02     xorlw	0x2                	XORLW	0x02
00393c   e117     bnz	0x396c               	BNZ	_00111_DS_
                                           ;	.line	117; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
00393e   0e01     movlw	0x1                	MOVLW	0x01
003940   0103     movlb	0x3                	BANKSEL	_requestHandled
003942   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&libconfiguration_descriptor;
003944   0e0e     movlw	0xe                	MOVLW	LOW(_libconfiguration_descriptor)
003946   0102     movlb	0x2                	BANKSEL	_outPtr
003948   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
00394a   0e28     movlw	0x28               	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
00394c   6ffd     movwf	0xfd, 0x1          	MOVWF	(_outPtr + 1), B
00394e   0e00     movlw	0                  	MOVLW	UPPER(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
003950   6ffe     movwf	0xfe, 0x1          	MOVWF	(_outPtr + 2), B
                                           ;	.line	130; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
003952   0e10     movlw	0x10               	MOVLW	LOW(_libconfiguration_descriptor + 2)
003954   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
003956   0e28     movlw	0x28               	MOVLW	HIGH(_libconfiguration_descriptor + 2)
003958   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
00395a   0e00     movlw	0                  	MOVLW	UPPER(_libconfiguration_descriptor + 2)
00395c   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
00395e   0009     tblrd	*+                 	TBLRD*+	
003960   cff5     movff	0xff5, 0x30d       	MOVFF	TABLAT, _wCount
003962   f30d
003964   0009     tblrd	*+                 	TBLRD*+	
003966   cff5     movff	0xff5, 0x30e       	MOVFF	TABLAT, (_wCount + 1)
003968   f30e
00396a   d02d     bra	0x39c6               	BRA	_00118_DS_
                                           _00111_DS_:
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR) {
00396c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00396e   0a03     xorlw	0x3                	XORLW	0x03
003970   e124     bnz	0x39ba               	BNZ	_00108_DS_
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003972   0e01     movlw	0x1                	MOVLW	0x01
003974   0103     movlb	0x3                	BANKSEL	_requestHandled
003976   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&libstring_descriptor[descriptorIndex];
003978   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00397a   0d03     mullw	0x3                	MULLW	0x03
00397c   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
00397e   f001
003980   0e52     movlw	0x52               	MOVLW	LOW(_libstring_descriptor)
003982   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
003984   0102     movlb	0x2                	BANKSEL	_outPtr
003986   6ffc     movwf	0xfc, 0x1          	MOVWF	_outPtr, B
                                           ; removed redundant BANKSEL
003988   6bfd     clrf	0xfd, 0x1           	CLRF	(_outPtr + 1), B
00398a   0e28     movlw	0x28               	MOVLW	HIGH(_libstring_descriptor)
                                           ; removed redundant BANKSEL
00398c   23fd     addwfc	0xfd, 0x1, 0x1    	ADDWFC	(_outPtr + 1), F, B
                                           ; removed redundant BANKSEL
00398e   6bfe     clrf	0xfe, 0x1           	CLRF	(_outPtr + 2), B
003990   0e00     movlw	0                  	MOVLW	UPPER(_libstring_descriptor)
                                           ; removed redundant BANKSEL
003992   23fe     addwfc	0xfe, 0x1, 0x1    	ADDWFC	(_outPtr + 2), F, B
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = *outPtr;
003994   c2fc     movff	0x2fc, 0x1         	MOVFF	_outPtr, r0x01
003996   f001
003998   c2fd     movff	0x2fd, 0x2         	MOVFF	(_outPtr + 1), r0x02
00399a   f002
00399c   c2fe     movff	0x2fe, 0x3         	MOVFF	(_outPtr + 2), r0x03
00399e   f003
0039a0   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0039a2   ffe9
0039a4   c002     movff	0x2, 0xff3         	MOVFF	r0x02, PRODL
0039a6   fff3
0039a8   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0039aa   ec29     call	0x52, 0             	CALL	__gptrget1
0039ac   f000
0039ae   6e01     movwf	0x1, 0             	MOVWF	r0x01
0039b0   c001     movff	0x1, 0x30d         	MOVFF	r0x01, _wCount
0039b2   f30d
0039b4   0103     movlb	0x3                	BANKSEL	(_wCount + 1)
0039b6   6b0e     clrf	0xe, 0x1            	CLRF	(_wCount + 1), B
0039b8   d006     bra	0x39c6               	BRA	_00118_DS_
                                           _00108_DS_:
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR) {
0039ba   5000     movf	0, 0, 0             	MOVF	r0x00, W
0039bc   0a06     xorlw	0x6                	XORLW	0x06
0039be   e103     bnz	0x39c6               	BNZ	_00118_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
0039c0   0e01     movlw	0x1                	MOVLW	0x01
0039c2   0103     movlb	0x3                	BANKSEL	_requestHandled
0039c4   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           _00118_DS_:
0039c6   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0039c8   f003
0039ca   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0039cc   f002
0039ce   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0039d0   f001
0039d2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0039d4   f000
0039d6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _libdevice_descriptor:
0027fc   0112     movlb	0x12               	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
0027fe   0200     mulwf	0, 0               
002800   0002     dw	0x2  ;unknown opcode  
002802   4000     rrncf	0, 0, 0            
002804   04d8     decf	0xd8, 0, 0          
002806   feab     dw	0xfeab  ;unknown opcode 
002808   0000     nop                      	DB	0x00, 0x00, 0x00, 0x01, 0x00, 0x01
00280a   0100     movlb	0                  
00280c   0100     movlb	0                  
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
00280e   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0x03, 0x14, 0x09, 0x04, 0x00
002810   0043     dw	0x43  ;unknown opcode 
002812   0102     movlb	0x2                
002814   0300     mulwf	0, 0x1             
002816   0914     iorlw	0x14               
002818   0004     clrwdt                   
00281a   0100     movlb	0                  	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
00281c   0202     mulwf	0x2, 0             
00281e   0001     dw	0x1  ;unknown opcode  
002820   2405     addwf	0x5, 0, 0          
002822   1000     iorwf	0, 0, 0            
002824   0401     decf	0x1, 0, 0           
002826   0224     mulwf	0x24, 0            	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
002828   0500     decf	0, 0, 0x1           
00282a   0624     decf	0x24, 0x1, 0        
00282c   0100     movlb	0                  
00282e   2405     addwf	0x5, 0, 0          
002830   0001     dw	0x1  ;unknown opcode  
002832   0701     decf	0x1, 0x1, 0x1       	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
002834   8205     bsf	0x5, 0x1, 0          
002836   1003     iorwf	0x3, 0, 0          
002838   0200     mulwf	0, 0               
00283a   0409     decf	0x9, 0, 0           
00283c   0001     dw	0x1  ;unknown opcode  
00283e   0a02     xorlw	0x2                	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
002840   0000     nop                      
002842   0700     decf	0, 0x1, 0x1         
002844   0305     mulwf	0x5, 0x1           
002846   4002     rrncf	0x2, 0, 0          
002848   0000     nop                      
00284a   0507     decf	0x7, 0, 0x1         	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
00284c   0283     mulwf	0x83, 0            
00284e   0040     dw	0x40  ;unknown opcode 
002850   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
002852   0328     mulwf	0x28, 0x1          	DB	0x28, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x00, 0x00, 0x00
002854   0c50     retlw	0x50               
002856   5003     movf	0x3, 0, 0           
002858   030c     mulwf	0xc, 0x1           
00285a   0050     dw	0x50  ;unknown opcode 
00285c   0000     nop                      
00285e   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002860   0000     nop                      
002862   0000     nop                      
002864   0000     nop                      
002866   0000     nop                      
002868   0000     nop                      
00286a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00286c   0000     nop                      
00286e   0000     nop                      
002870   0000     nop                      
002872   0000     nop                      
002874   0000     nop                      
002876   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002878   0000     nop                      
00287a   0000     nop                      
00287c   0000     nop                      
00287e   0000     nop                      
002880   0000     nop                      
002882   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002884   0000     nop                      
002886   0000     nop                      
002888   0000     nop                      
00288a   0000     nop                      
00288c   0000     nop                      
00288e   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002890   0000     nop                      
002892   0000     nop                      
002894   0000     nop                      
002896   0000     nop                      
002898   0000     nop                      
00289a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00289c   0000     nop                      
00289e   0000     nop                      
0028a0   0000     nop                      
0028a2   0000     nop                      
0028a4   0000     nop                      
0028a6   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0028a8   0000     nop                      
0028aa   0000     nop                      
0028ac   0000     nop                      
0028ae   0000     nop                      
0028b0   0000     nop                      
0028b2   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0028b4   0000     nop                      
0028b6   0000     nop                      
0028b8   0000     nop                      
0028ba   0000     nop                      
0028bc   0000     nop                      
0028be   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0028c0   0000     nop                      
0028c2   0000     nop                      
0028c4   0000     nop                      
0028c6   0000     nop                      
0028c8   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
0028ca   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0028cc   0804     sublw	0x4                
0028ce   2010     addwfc	0x10, 0, 0        
0028d0   8040     bsf	0x40, 0, 0           
0028d2   8040     bsf	0x40, 0, 0           
0028d4   0201     mulwf	0x1, 0             
0028d6   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
0028d8   0402     decf	0x2, 0, 0           
0028da   2008     addwfc	0x8, 0, 0         
                                           ; ; Starting pCode block for Ival
                                           _mask:
0028dc   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0028de   0804     sublw	0x4                
0028e0   2010     addwfc	0x10, 0, 0        
0028e2   8040     bsf	0x40, 0, 0           
0028e4   8040     bsf	0x40, 0, 0           
0028e6   0201     mulwf	0x1, 0             
0028e8   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
0028ea   0402     decf	0x2, 0, 0           
0028ec   2008     addwfc	0x8, 0, 0         
0028ee   0201     mulwf	0x1, 0             
0028f0   0104     movlb	0x4                
0028f2   0402     decf	0x2, 0, 0           
0028f4   1008     iorwf	0x8, 0, 0          	DB	0x08, 0x10, 0x20, 0x40, 0x80
0028f6   4020     rrncf	0x20, 0, 0         
0028f8   0080     dw	0x80  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _port:
0028fa   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
0028fc   0000     nop                      
0028fe   0000     nop                      
002900   0000     nop                      
002902   0101     movlb	0x1                
002904   0101     movlb	0x1                
002906   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002908   0202     mulwf	0x2, 0             
00290a   0202     mulwf	0x2, 0             
00290c   0404     decf	0x4, 0, 0           
00290e   0304     mulwf	0x4, 0x1           
002910   0303     mulwf	0x3, 0x1           
002912   0303     mulwf	0x3, 0x1           	DB	0x03, 0x03, 0x03, 0x03, 0x03
002914   0303     mulwf	0x3, 0x1           
002916   0003     sleep                    
                                           ; ; Starting pCode block
                                           __str_0:
002918   6369     cpfseq	0x69, 0x1         	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x31
00291a   7261     btg	0x61, 0x1, 0         
00291c   206f     addwfc	0x6f, 0, 0        
00291e   5355     movf	0x55, 0x1, 0x1      
002920   2042     addwfc	0x42, 0, 0        
002922   3130     rrcf	0x30, 0, 0x1        
002924   0a20     xorlw	0x20               	DB	0x20, 0x0a, 0x00
002926   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 9232 (0x2410) bytes ( 7.04%)
                                           ;           	 4616 (0x1208) words
                                           ; udata size:	  532 (0x0214) bytes (29.69%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
