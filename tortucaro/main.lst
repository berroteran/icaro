gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 6-28-2012  14:37:32
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Thu Jun 28 14:37:26 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _loopvar
                                           	global _hidRxLen
                                           	global _hidProtocol
                                           	global _hidIdleRate
                                           	global _HIDPostProcess
                                           	global _deviceAddress
                                           	global _EnableUSBModule
                                           	global _ProcessUSBTransactions
                                           	global _ProcessCDCRequest
                                           	global _CDCgets
                                           	global _CDCInitEndpoint
                                           	global _CONTROL_LINE
                                           	global _deviceState
                                           	global _remoteWakeup
                                           	global _selfPowered
                                           	global _currentConfiguration
                                           	global _ctrlTransferStage
                                           	global _requestHandled
                                           	global _outPtr
                                           	global _inPtr
                                           	global _wCount
                                           	global _ep_bdt
                                           	global _SetupPacket
                                           	global _controlTransferBuffer
                                           	global _CDCControlBuffer
                                           	global _CDCRxBuffer
                                           	global _CDCTxBuffer
                                           	global _line_config
                                           	global _zlp
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _i
                                           	global _receivedbyte
                                           	global _receivedbyte2
                                           	global _rxstr
                                           	global _rxstr2
                                           	global _valor
                                           	global _valorb
                                           	global _ProcessStandardRequest
                                           	global _InDataStage
                                           	global _OutDataStage
                                           	global _SetupStage
                                           	global _WaitForSetupStage
                                           	global _ProcessControlTransfer
                                           	global _UnSuspend
                                           	global _StartOfFrame
                                           	global _Stall
                                           	global _Suspend
                                           	global _BusReset
                                           	global _CDCputs
                                           	global _Delayms
                                           	global _Delayus
                                           	global _init_CDC
                                           	global _analog_init
                                           	global _analogread
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _l293d
                                           	global _sensor
                                           	global _activar
                                           	global _serv
                                           	global _setup
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _libdevice_descriptor
                                           	global _libconfiguration_descriptor
                                           	global _libstring_descriptor
                                           	global _servomasks
                                           	global _mask
                                           	global _port
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget1
                                           	extern __gptrput1
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           	extern __mulint
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _CONTROL_LINE	db	0x00
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _rxstr	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _rxstr2	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                                           	db	0x00, 0x00, 0x00, 0x00
                                           _valor	db	0x00, 0x00
                                           _valorb	db	0xff, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           
                                           usbram5	udata
                                           _SetupPacket	res	64
                                           _controlTransferBuffer	res	64
                                           _CDCRxBuffer	res	64
                                           _CDCTxBuffer	res	64
                                           
                                           udata_main_0	udata
                                           _deviceAddress	res	1
                                           
                                           udata_main_1	udata
                                           _HIDPostProcess	res	1
                                           
                                           udata_main_2	udata
                                           _hidIdleRate	res	1
                                           
                                           udata_main_3	udata
                                           _hidProtocol	res	1
                                           
                                           udata_main_4	udata
                                           _hidRxLen	res	1
                                           
                                           udata_main_5	udata
                                           _loopvar	res	1
                                           
                                           udata_main_6	udata
                                           _requestHandled	res	1
                                           
                                           udata_main_7	udata
                                           _outPtr	res	3
                                           
                                           udata_main_8	udata
                                           _wCount	res	2
                                           
                                           udata_main_9	udata
                                           _inPtr	res	3
                                           
                                           udata_main_10	udata
                                           _selfPowered	res	1
                                           
                                           udata_main_11	udata
                                           _remoteWakeup	res	1
                                           
                                           udata_main_12	udata
                                           _deviceState	res	1
                                           
                                           udata_main_13	udata
                                           _currentConfiguration	res	1
                                           
                                           udata_main_14	udata
                                           _ctrlTransferStage	res	1
                                           
                                           udata_main_15	udata
                                           _line_config	res	7
                                           
                                           udata_main_16	udata
                                           _zlp	res	8
                                           
                                           udata_main_17	udata
                                           _CDCControlBuffer	res	16
                                           
                                           udata_main_18	udata
                                           _servovalues	res	18
                                           
                                           udata_main_19	udata
                                           _timingindex	res	1
                                           
                                           udata_main_20	udata
                                           _timings	res	72
                                           
                                           udata_main_21	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           udata_main_22	udata
                                           _receivedbyte2	res	1
                                           
                                           udata_main_23	udata
                                           _i	res	1
                                           
                                           udata_main_24	udata
                                           _receivedbyte	res	1
                                           
                                           
                                           ustat_main_00	udata	0X0400
                                           _ep_bdt        	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tortucaro/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tortucaro/main.c	if(PIR2bits.USBIF)
002044   aaa1     btfss	0xa1, 0x5, 0       	BTFSS	_PIR2bits, 5
002046   d006     bra	0x2054               	BRA	_01263_DS_
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tortucaro/main.c	ProcessUSBTransactions();
002048   ec7f     call	0x44fe, 0           	CALL	_ProcessUSBTransactions
00204a   f022
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tortucaro/main.c	UIRbits.SOFIF = 0;
00204c   9c68     bcf	0x68, 0x6, 0         	BCF	_UIRbits, 6
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tortucaro/main.c	UIRbits.URSTIF = 0;
00204e   9068     bcf	0x68, 0, 0           	BCF	_UIRbits, 0
                                           ;	.line	104; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIR2bits.USBIF = 0;
002050   9aa1     bcf	0xa1, 0x5, 0         	BCF	_PIR2bits, 5
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tortucaro/main.c	UEIR = 0;
002052   6a6a     clrf	0x6a, 0             	CLRF	_UEIR
                                           _01263_DS_:
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tortucaro/main.c	servos_interrupt();
002054   ec6f     call	0x46de, 0           	CALL	_servos_interrupt
002056   f023
002058   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00205a   fffb
00205c   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00205e   fffa
002060   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002062   ffea
002064   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002066   ffe9
002068   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00206a   fff4
00206c   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00206e   fff3
002070   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002072   ffe0
002074   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002076   ffd8
002078   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00207a   ffe8
00207c   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tortucaro/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tortucaro/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE1=0;
004864   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE2=0;
004866   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tortucaro/main.c	ADCON1=0x0F;
004868   0e0f     movlw	0xf                	MOVLW	0x0f
00486a   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tortucaro/main.c	setup();
00486c   ec63     call	0x3cc6, 0           	CALL	_setup
00486e   f01e
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tortucaro/main.c	analog_init();
004870   ec84     call	0x4908, 0           	CALL	_analog_init
004872   f024
                                           ;	.line	67; /home/valentin/github/icaro-bloques/tortucaro/main.c	servos_init();
004874   ec4a     call	0x4694, 0           	CALL	_servos_init
004876   f023
                                           ;	.line	70; /home/valentin/github/icaro-bloques/tortucaro/main.c	init_CDC();
004878   ece9     call	0x45d2, 0           	CALL	_init_CDC
00487a   f022
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tortucaro/main.c	PIE2bits.USBIE = 1;
00487c   8aa0     bsf	0xa0, 0x5, 0         	BSF	_PIE2bits, 5
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCON = 0xC0;      
00487e   0ec0     movlw	0xc0               	MOVLW	0xc0
004880   6ef2     movwf	0xf2, 0            	MOVWF	_INTCON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCONbits.PEIE=1;
004882   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tortucaro/main.c	INTCONbits.GIE=1;
004884   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _01255_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/tortucaro/main.c	loop();
004886   ec25     call	0x404a, 0           	CALL	_loop
004888   f020
00488a   d7fd     bra	0x4886               	BRA	_01255_DS_
00488c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tortucaro/user.c	void loop()
00404a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00404c   ffe5
00404e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004050   ffe5
004052   0102     movlb	0x2                	BANKSEL	_valorb
                                           ;	.line	205; /home/valentin/github/icaro-bloques/tortucaro/user.c	PORTB=valorb;
004054   518a     movf	0x8a, 0, 0x1        	MOVF	_valorb, W, B
004056   6e81     movwf	0x81, 0            	MOVWF	_PORTB
004058   0102     movlb	0x2                	BANKSEL	_valor
                                           ;	.line	206; /home/valentin/github/icaro-bloques/tortucaro/user.c	PORTD=valor;
00405a   5188     movf	0x88, 0, 0x1        	MOVF	_valor, W, B
00405c   6e83     movwf	0x83, 0            	MOVWF	_PORTD
                                           ;	.line	207; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte=CDCgets(rxstr);
00405e   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
004060   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004062   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr)
004064   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004066   0e08     movlw	0x8                	MOVLW	LOW(_rxstr)
004068   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00406a   ec7c     call	0x32f8, 0           	CALL	_CDCgets
00406c   f019
00406e   0103     movlb	0x3                	BANKSEL	_receivedbyte
004070   6f1f     movwf	0x1f, 0x1          	MOVWF	_receivedbyte, B
004072   0e03     movlw	0x3                	MOVLW	0x03
004074   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr[receivedbyte]=0;
004076   0e08     movlw	0x8                	MOVLW	LOW(_rxstr)
                                           ; removed redundant BANKSEL
004078   251f     addwf	0x1f, 0, 0x1       	ADDWF	_receivedbyte, W, B
00407a   6e00     movwf	0, 0               	MOVWF	r0x00
00407c   6a01     clrf	0x1, 0              	CLRF	r0x01
00407e   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr)
004080   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
004082   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
004084   ffe9
004086   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004088   ffea
00408a   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ; removed redundant BANKSEL
                                           ;	.line	209; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte>0)
00408c   511f     movf	0x1f, 0, 0x1        	MOVF	_receivedbyte, W, B
00408e   e028     bz	0x40e0                	BZ	_01231_DS_
004090   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='b')
004092   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
004094   0a62     xorlw	0x62               	XORLW	0x62
004096   e10c     bnz	0x40b0               	BNZ	_01221_DS_
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tortucaro/user.c	CDCputs("icaro USB 02 \n",14);
004098   0e0e     movlw	0xe                	MOVLW	0x0e
00409a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00409c   0e00     movlw	0                  	MOVLW	UPPER(__str_0)
00409e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0040a0   0e24     movlw	0x24               	MOVLW	HIGH(__str_0)
0040a2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0040a4   0eb6     movlw	0xb6               	MOVLW	LOW(__str_0)
0040a6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0040a8   ec0b     call	0x3416, 0           	CALL	_CDCputs
0040aa   f01a
0040ac   0e04     movlw	0x4                	MOVLW	0x04
0040ae   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           _01221_DS_:
0040b0   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='s')
0040b2   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
0040b4   0a73     xorlw	0x73               	XORLW	0x73
0040b6   e102     bnz	0x40bc               	BNZ	_01223_DS_
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tortucaro/user.c	activar();
0040b8   ecb1     call	0x3762, 0           	CALL	_activar
0040ba   f01b
                                           _01223_DS_:
0040bc   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	221; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='e')
0040be   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
0040c0   0a65     xorlw	0x65               	XORLW	0x65
0040c2   e102     bnz	0x40c8               	BNZ	_01225_DS_
                                           ;	.line	223; /home/valentin/github/icaro-bloques/tortucaro/user.c	sensor();
0040c4   ec25     call	0x3e4a, 0           	CALL	_sensor
0040c6   f01f
                                           _01225_DS_:
0040c8   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='l')
0040ca   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
0040cc   0a6c     xorlw	0x6c               	XORLW	0x6c
0040ce   e102     bnz	0x40d4               	BNZ	_01227_DS_
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tortucaro/user.c	l293d();
0040d0   ec3d     call	0x447a, 0           	CALL	_l293d
0040d2   f022
                                           _01227_DS_:
0040d4   0102     movlb	0x2                	BANKSEL	_rxstr
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr[0]=='m')
0040d6   5108     movf	0x8, 0, 0x1         	MOVF	_rxstr, W, B
0040d8   0a6d     xorlw	0x6d               	XORLW	0x6d
0040da   e102     bnz	0x40e0               	BNZ	_01231_DS_
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tortucaro/user.c	serv();
0040dc   ec99     call	0x3532, 0           	CALL	_serv
0040de   f01a
                                           _01231_DS_:
0040e0   0103     movlb	0x3                	BANKSEL	_receivedbyte
                                           ;	.line	234; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte=0;
0040e2   6b1f     clrf	0x1f, 0x1           	CLRF	_receivedbyte, B
0040e4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0040e6   f001
0040e8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0040ea   f000
0040ec   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	179; /home/valentin/github/icaro-bloques/tortucaro/user.c	void setup()
003cc6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003cc8   ffe5
003cca   0103     movlb	0x3                	BANKSEL	_i
                                           ;	.line	181; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (i=0;i<8;i++)
003ccc   6b1e     clrf	0x1e, 0x1           	CLRF	_i, B
                                           _01207_DS_:
003cce   0e08     movlw	0x8                	MOVLW	0x08
003cd0   0103     movlb	0x3                	BANKSEL	_i
003cd2   5d1e     subwf	0x1e, 0, 0x1       	SUBWF	_i, W, B
003cd4   e219     bc	0x3d08                	BC	_01210_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(i,OUTPUT);
003cd6   c31e     movff	0x31e, 0           	MOVFF	_i, r0x00
003cd8   f000
003cda   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003cdc   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003cde   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003ce0   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ce2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ce4   ec42     call	0x2884, 0           	CALL	_pinmode
003ce6   f014
003ce8   0e04     movlw	0x4                	MOVLW	0x04
003cea   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tortucaro/user.c	digitalwrite(i,LOW);
003cec   c31e     movff	0x31e, 0           	MOVFF	_i, r0x00
003cee   f000
003cf0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003cf2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003cf4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003cf6   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cf8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003cfa   eca5     call	0x2b4a, 0           	CALL	_digitalwrite
003cfc   f015
003cfe   0e04     movlw	0x4                	MOVLW	0x04
003d00   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003d02   0103     movlb	0x3                	BANKSEL	_i
                                           ;	.line	181; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (i=0;i<8;i++)
003d04   2b1e     incf	0x1e, 0x1, 0x1      	INCF	_i, F, B
003d06   d7e3     bra	0x3cce               	BRA	_01207_DS_
                                           _01210_DS_:
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(25,OUTPUT);
003d08   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d0a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d0c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d0e   0e19     movlw	0x19               	MOVLW	0x19
003d10   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d12   ec42     call	0x2884, 0           	CALL	_pinmode
003d14   f014
003d16   0e04     movlw	0x4                	MOVLW	0x04
003d18   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	188; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(26,OUTPUT);
003d1a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d1c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d1e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d20   0e1a     movlw	0x1a               	MOVLW	0x1a
003d22   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d24   ec42     call	0x2884, 0           	CALL	_pinmode
003d26   f014
003d28   0e04     movlw	0x4                	MOVLW	0x04
003d2a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(27,OUTPUT);
003d2c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d2e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d30   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d32   0e1b     movlw	0x1b               	MOVLW	0x1b
003d34   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d36   ec42     call	0x2884, 0           	CALL	_pinmode
003d38   f014
003d3a   0e04     movlw	0x4                	MOVLW	0x04
003d3c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	192; /home/valentin/github/icaro-bloques/tortucaro/user.c	pinmode(28,OUTPUT);
003d3e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d40   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d42   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003d44   0e1c     movlw	0x1c               	MOVLW	0x1c
003d46   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d48   ec42     call	0x2884, 0           	CALL	_pinmode
003d4a   f014
003d4c   0e04     movlw	0x4                	MOVLW	0x04
003d4e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	193; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(8);
003d50   0e08     movlw	0x8                	MOVLW	0x08
003d52   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d54   ec1c     call	0x3a38, 0           	CALL	_ServoAttach
003d56   f01d
003d58   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(9);
003d5a   0e09     movlw	0x9                	MOVLW	0x09
003d5c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d5e   ec1c     call	0x3a38, 0           	CALL	_ServoAttach
003d60   f01d
003d62   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(10);
003d64   0e0a     movlw	0xa                	MOVLW	0x0a
003d66   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d68   ec1c     call	0x3a38, 0           	CALL	_ServoAttach
003d6a   f01d
003d6c   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(11);
003d6e   0e0b     movlw	0xb                	MOVLW	0x0b
003d70   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d72   ec1c     call	0x3a38, 0           	CALL	_ServoAttach
003d74   f01d
003d76   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoAttach(12);
003d78   0e0c     movlw	0xc                	MOVLW	0x0c
003d7a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003d7c   ec1c     call	0x3a38, 0           	CALL	_ServoAttach
003d7e   f01d
003d80   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
003d82   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003d84   f000
003d86   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__serv	code
                                           _serv:
                                           ;	.line	127; /home/valentin/github/icaro-bloques/tortucaro/user.c	void serv()
003532   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003534   ffe5
003536   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003538   ffe5
00353a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00353c   ffe5
00353e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003540   ffe5
003542   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003544   ffe5
003546   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003548   ffe5
00354a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00354c   ffe5
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tortucaro/user.c	int resultado=0;
00354e   6a00     clrf	0, 0                	CLRF	r0x00
003550   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tortucaro/user.c	int val=0;
003552   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           _01167_DS_:
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003554   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
003556   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003558   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
00355a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00355c   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
00355e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003560   ec7c     call	0x32f8, 0           	CALL	_CDCgets
003562   f019
003564   0103     movlb	0x3                	BANKSEL	_receivedbyte2
003566   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
003568   0e03     movlw	0x3                	MOVLW	0x03
00356a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
00356c   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
00356e   e0f2     bz	0x3554                	BZ	_01167_DS_
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
003570   c248     movff	0x248, 0x4         	MOVFF	_rxstr2, r0x04
003572   f004
003574   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003576   0a31     xorlw	0x31               	XORLW	0x31
003578   e102     bnz	0x357e               	BNZ	_01155_DS_
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=10;
00357a   0e0a     movlw	0xa                	MOVLW	0x0a
00357c   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01155_DS_:
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
00357e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003580   0a32     xorlw	0x32               	XORLW	0x32
003582   e102     bnz	0x3588               	BNZ	_01157_DS_
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=11;
003584   0e0b     movlw	0xb                	MOVLW	0x0b
003586   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01157_DS_:
                                           ;	.line	146; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
003588   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00358a   0a33     xorlw	0x33               	XORLW	0x33
00358c   e102     bnz	0x3592               	BNZ	_01159_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=12;
00358e   0e0c     movlw	0xc                	MOVLW	0x0c
003590   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01159_DS_:
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
003592   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003594   0a34     xorlw	0x34               	XORLW	0x34
003596   e102     bnz	0x359c               	BNZ	_01161_DS_
                                           ;	.line	152; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=8;
003598   0e08     movlw	0x8                	MOVLW	0x08
00359a   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01161_DS_:
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
00359c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00359e   0a35     xorlw	0x35               	XORLW	0x35
0035a0   e102     bnz	0x35a6               	BNZ	_01163_DS_
                                           ;	.line	156; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=9;
0035a2   0e09     movlw	0x9                	MOVLW	0x09
0035a4   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _01163_DS_:
0035a6   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	158; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
0035a8   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           _01176_DS_:
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
0035aa   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
0035ac   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035ae   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
0035b0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035b2   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
0035b4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035b6   ec7c     call	0x32f8, 0           	CALL	_CDCgets
0035b8   f019
0035ba   0103     movlb	0x3                	BANKSEL	_receivedbyte2
0035bc   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
0035be   0e03     movlw	0x3                	MOVLW	0x03
0035c0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	165; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
0035c2   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
0035c4   e0f2     bz	0x35aa                	BZ	_01176_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr2[receivedbyte2]=0;
0035c6   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
                                           ; removed redundant BANKSEL
0035c8   251d     addwf	0x1d, 0, 0x1       	ADDWF	_receivedbyte2, W, B
0035ca   6e04     movwf	0x4, 0             	MOVWF	r0x04
0035cc   6a05     clrf	0x5, 0              	CLRF	r0x05
0035ce   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
0035d0   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
0035d2   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
0035d4   ffe9
0035d6   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
0035d8   ffea
0035da   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
0035dc   6a04     clrf	0x4, 0              	CLRF	r0x04
0035de   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _01171_DS_:
0035e0   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0035e2   0f80     addlw	0x80               	ADDLW	0x80
0035e4   0f80     addlw	0x80               	ADDLW	0x80
0035e6   e102     bnz	0x35ec               	BNZ	_01202_DS_
0035e8   0e08     movlw	0x8                	MOVLW	0x08
0035ea   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _01202_DS_:
0035ec   e215     bc	0x3618                	BC	_01174_DS_
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tortucaro/user.c	rb=(rxstr2[posic]);
0035ee   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
0035f0   2404     addwf	0x4, 0, 0          	ADDWF	r0x04, W
0035f2   6e06     movwf	0x6, 0             	MOVWF	r0x06
0035f4   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
0035f6   2005     addwfc	0x5, 0, 0         	ADDWFC	r0x05, W
0035f8   6e07     movwf	0x7, 0             	MOVWF	r0x07
0035fa   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0035fc   ffe9
0035fe   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
003600   ffea
003602   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
003604   f006
003606   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tortucaro/user.c	resultado=resultado+rb;
003608   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
00360a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00360c   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00360e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
003610   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003612   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003614   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
003616   d7e4     bra	0x35e0               	BRA	_01171_DS_
                                           _01174_DS_:
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tortucaro/user.c	ServoWrite(val,resultado);
003618   5000     movf	0, 0, 0             	MOVF	r0x00, W
00361a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00361c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00361e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003620   ecb5     call	0x456a, 0           	CALL	_ServoWrite
003622   f022
003624   0e02     movlw	0x2                	MOVLW	0x02
003626   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003628   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
00362a   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tortucaro/user.c	return;
00362c   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
00362e   f007
003630   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003632   f006
003634   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003636   f005
003638   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00363a   f004
00363c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00363e   f002
003640   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003642   f001
003644   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003646   f000
003648   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__activar	code
                                           _activar:
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tortucaro/user.c	void activar()
003762   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003764   ffe5
003766   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003768   ffe5
00376a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00376c   ffe5
00376e   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003770   ffe5
003772   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003774   ffe5
003776   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003778   ffe5
00377a   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00377c   ffe5
00377e   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003780   ffe5
                                           ;	.line	106; /home/valentin/github/icaro-bloques/tortucaro/user.c	int resultado=0;
003782   6a00     clrf	0, 0                	CLRF	r0x00
003784   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           ;	.line	107; /home/valentin/github/icaro-bloques/tortucaro/user.c	int	i=1;
003786   0e01     movlw	0x1                	MOVLW	0x01
003788   6e02     movwf	0x2, 0             	MOVWF	r0x02
00378a   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _01140_DS_:
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
00378c   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x06
                                           ; #	MOVF	r0x06, W
00378e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003790   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003792   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003794   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003796   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003798   ec7c     call	0x32f8, 0           	CALL	_CDCgets
00379a   f019
00379c   0103     movlb	0x3                	BANKSEL	_receivedbyte2
00379e   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
0037a0   0e03     movlw	0x3                	MOVLW	0x03
0037a2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
0037a4   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
0037a6   e0f2     bz	0x378c                	BZ	_01140_DS_
                                           ;	.line	113; /home/valentin/github/icaro-bloques/tortucaro/user.c	rxstr2[receivedbyte2]=0;
0037a8   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
                                           ; removed redundant BANKSEL
0037aa   251d     addwf	0x1d, 0, 0x1       	ADDWF	_receivedbyte2, W, B
0037ac   6e04     movwf	0x4, 0             	MOVWF	r0x04
0037ae   6a05     clrf	0x5, 0              	CLRF	r0x05
0037b0   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
0037b2   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
0037b4   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
0037b6   ffe9
0037b8   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
0037ba   ffea
0037bc   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	115; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
0037be   6a04     clrf	0x4, 0              	CLRF	r0x04
0037c0   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _01135_DS_:
0037c2   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0037c4   0f80     addlw	0x80               	ADDLW	0x80
0037c6   0f80     addlw	0x80               	ADDLW	0x80
0037c8   e102     bnz	0x37ce               	BNZ	_01149_DS_
0037ca   0e08     movlw	0x8                	MOVLW	0x08
0037cc   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _01149_DS_:
0037ce   e233     bc	0x3836                	BC	_01138_DS_
                                           ;	.line	117; /home/valentin/github/icaro-bloques/tortucaro/user.c	rb=(rxstr2[posic]);
0037d0   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
0037d2   2404     addwf	0x4, 0, 0          	ADDWF	r0x04, W
0037d4   6e06     movwf	0x6, 0             	MOVWF	r0x06
0037d6   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
0037d8   2005     addwfc	0x5, 0, 0         	ADDWFC	r0x05, W
0037da   6e07     movwf	0x7, 0             	MOVWF	r0x07
0037dc   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0037de   ffe9
0037e0   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0037e2   ffea
0037e4   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0037e6   f006
0037e8   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           ;	.line	118; /home/valentin/github/icaro-bloques/tortucaro/user.c	i=i*i;// en cada iteracion i se duplica: 1,2,4,8,16,32,64,128
0037ea   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0037ec   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037ee   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0037f0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037f2   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0037f4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037f6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0037f8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037fa   ec27     call	0x4e, 0             	CALL	__mulint
0037fc   f000
0037fe   6e02     movwf	0x2, 0             	MOVWF	r0x02
003800   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
003802   f003
003804   0e04     movlw	0x4                	MOVLW	0x04
003806   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	119; /home/valentin/github/icaro-bloques/tortucaro/user.c	resultado=resultado+(rb*i);
003808   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00380a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00380c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00380e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003810   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
003812   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003814   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
003816   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003818   ec27     call	0x4e, 0             	CALL	__mulint
00381a   f000
00381c   6e06     movwf	0x6, 0             	MOVWF	r0x06
00381e   cff3     movff	0xff3, 0x7         	MOVFF	PRODL, r0x07
003820   f007
003822   0e04     movlw	0x4                	MOVLW	0x04
003824   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003826   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
003828   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00382a   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00382c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ;	.line	115; /home/valentin/github/icaro-bloques/tortucaro/user.c	for (posic=0;posic<=7;posic++)
00382e   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003830   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003832   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
003834   d7c6     bra	0x37c2               	BRA	_01135_DS_
                                           _01138_DS_:
                                           ;	.line	121; /home/valentin/github/icaro-bloques/tortucaro/user.c	valorb=255-resultado;
003836   5000     movf	0, 0, 0             	MOVF	r0x00, W
003838   08ff     sublw	0xff               	SUBLW	0xff
00383a   0102     movlb	0x2                	BANKSEL	_valorb
00383c   6f8a     movwf	0x8a, 0x1          	MOVWF	_valorb, B
00383e   0e00     movlw	0                  	MOVLW	0x00
003840   5401     subfwb	0x1, 0, 0         	SUBFWB	r0x01, W
                                           ; removed redundant BANKSEL
003842   6f8b     movwf	0x8b, 0x1          	MOVWF	(_valorb + 1), B
                                           ;	.line	122; /home/valentin/github/icaro-bloques/tortucaro/user.c	return;
003844   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003846   f007
003848   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00384a   f006
00384c   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00384e   f005
003850   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003852   f004
003854   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003856   f003
003858   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00385a   f002
00385c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00385e   f001
003860   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003862   f000
003864   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tortucaro/user.c	void sensor()
003e4a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003e4c   ffe5
003e4e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003e50   ffe5
003e52   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003e54   ffe5
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tortucaro/user.c	unsigned int val=0;
003e56   6a00     clrf	0, 0                	CLRF	r0x00
                                           _01099_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
003e58   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003e5a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003e5c   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
003e5e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003e60   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
003e62   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003e64   ec7c     call	0x32f8, 0           	CALL	_CDCgets
003e66   f019
003e68   0103     movlb	0x3                	BANKSEL	_receivedbyte2
003e6a   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
003e6c   0e03     movlw	0x3                	MOVLW	0x03
003e6e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	60; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
003e70   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
003e72   e0f2     bz	0x3e58                	BZ	_01099_DS_
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
003e74   c248     movff	0x248, 0x2         	MOVFF	_rxstr2, r0x02
003e76   f002
003e78   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003e7a   0a31     xorlw	0x31               	XORLW	0x31
003e7c   e102     bnz	0x3e82               	BNZ	_01081_DS_
                                           ;	.line	64; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=13;
003e7e   0e0d     movlw	0xd                	MOVLW	0x0d
003e80   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01081_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
003e82   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003e84   0a32     xorlw	0x32               	XORLW	0x32
003e86   e102     bnz	0x3e8c               	BNZ	_01083_DS_
                                           ;	.line	68; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=14;
003e88   0e0e     movlw	0xe                	MOVLW	0x0e
003e8a   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01083_DS_:
                                           ;	.line	70; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
003e8c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003e8e   0a33     xorlw	0x33               	XORLW	0x33
003e90   e102     bnz	0x3e96               	BNZ	_01085_DS_
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=15;
003e92   0e0f     movlw	0xf                	MOVLW	0x0f
003e94   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01085_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
003e96   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003e98   0a34     xorlw	0x34               	XORLW	0x34
003e9a   e102     bnz	0x3ea0               	BNZ	_01087_DS_
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=16;
003e9c   0e10     movlw	0x10               	MOVLW	0x10
003e9e   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01087_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
003ea0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003ea2   0a35     xorlw	0x35               	XORLW	0x35
003ea4   e102     bnz	0x3eaa               	BNZ	_01089_DS_
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=17;
003ea6   0e11     movlw	0x11               	MOVLW	0x11
003ea8   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01089_DS_:
                                           ;	.line	82; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='6')
003eaa   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003eac   0a36     xorlw	0x36               	XORLW	0x36
003eae   e102     bnz	0x3eb4               	BNZ	_01091_DS_
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=18;
003eb0   0e12     movlw	0x12               	MOVLW	0x12
003eb2   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01091_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='7')
003eb4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003eb6   0a37     xorlw	0x37               	XORLW	0x37
003eb8   e102     bnz	0x3ebe               	BNZ	_01093_DS_
                                           ;	.line	88; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=19;
003eba   0e13     movlw	0x13               	MOVLW	0x13
003ebc   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01093_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='8')
003ebe   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003ec0   0a38     xorlw	0x38               	XORLW	0x38
003ec2   e102     bnz	0x3ec8               	BNZ	_01095_DS_
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=20;
003ec4   0e14     movlw	0x14               	MOVLW	0x14
003ec6   6e00     movwf	0, 0               	MOVWF	r0x00
                                           _01095_DS_:
003ec8   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
003eca   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tortucaro/user.c	valor=analogread(val);
003ecc   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ece   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ed0   ecf9     call	0x43f2, 0           	CALL	_analogread
003ed2   f021
003ed4   6e00     movwf	0, 0               	MOVWF	r0x00
003ed6   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003ed8   f001
003eda   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVF	r0x00, W
                                           ; #	MOVWF	r0x00
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tortucaro/user.c	CDCputs(valor,DEC);
003edc   0e01     movlw	0x1                	MOVLW	0x01
003ede   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ee0   0e80     movlw	0x80               	MOVLW	0x80
003ee2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ee4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003ee6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003ee8   5000     movf	0, 0, 0             	MOVF	r0x00, W
003eea   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003eec   ec0b     call	0x3416, 0           	CALL	_CDCputs
003eee   f01a
003ef0   0e04     movlw	0x4                	MOVLW	0x04
003ef2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003ef4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003ef6   f002
003ef8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003efa   f001
003efc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003efe   f000
003f00   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__l293d	code
                                           _l293d:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tortucaro/user.c	void l293d()
00447a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00447c   ffe5
00447e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004480   ffe5
004482   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
004484   ffe5
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tortucaro/user.c	int val=0;
004486   6a00     clrf	0, 0                	CLRF	r0x00
004488   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01055_DS_:
                                           ;	.line	18; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=CDCgets(rxstr2);
00448a   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00448c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00448e   0e02     movlw	0x2                	MOVLW	HIGH(_rxstr2)
004490   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004492   0e48     movlw	0x48               	MOVLW	LOW(_rxstr2)
004494   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004496   ec7c     call	0x32f8, 0           	CALL	_CDCgets
004498   f019
00449a   0103     movlb	0x3                	BANKSEL	_receivedbyte2
00449c   6f1d     movwf	0x1d, 0x1          	MOVWF	_receivedbyte2, B
00449e   0e03     movlw	0x3                	MOVLW	0x03
0044a0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ; removed redundant BANKSEL
                                           ;	.line	19; /home/valentin/github/icaro-bloques/tortucaro/user.c	if (receivedbyte2>0)
0044a2   511d     movf	0x1d, 0, 0x1        	MOVF	_receivedbyte2, W, B
0044a4   e0f2     bz	0x448a                	BZ	_01055_DS_
                                           ;	.line	21; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='1')
0044a6   c248     movff	0x248, 0x2         	MOVFF	_rxstr2, r0x02
0044a8   f002
0044aa   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0044ac   0a31     xorlw	0x31               	XORLW	0x31
0044ae   e103     bnz	0x44b6               	BNZ	_01043_DS_
                                           ;	.line	23; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=96;
0044b0   0e60     movlw	0x60               	MOVLW	0x60
0044b2   6e00     movwf	0, 0               	MOVWF	r0x00
0044b4   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01043_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='2')
0044b6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0044b8   0a32     xorlw	0x32               	XORLW	0x32
0044ba   e103     bnz	0x44c2               	BNZ	_01045_DS_
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=144;
0044bc   0e90     movlw	0x90               	MOVLW	0x90
0044be   6e00     movwf	0, 0               	MOVWF	r0x00
0044c0   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01045_DS_:
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='3')
0044c2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0044c4   0a33     xorlw	0x33               	XORLW	0x33
0044c6   e103     bnz	0x44ce               	BNZ	_01047_DS_
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=64;
0044c8   0e40     movlw	0x40               	MOVLW	0x40
0044ca   6e00     movwf	0, 0               	MOVWF	r0x00
0044cc   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01047_DS_:
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='4')
0044ce   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0044d0   0a34     xorlw	0x34               	XORLW	0x34
0044d2   e103     bnz	0x44da               	BNZ	_01049_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=32;
0044d4   0e20     movlw	0x20               	MOVLW	0x20
0044d6   6e00     movwf	0, 0               	MOVWF	r0x00
0044d8   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01049_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tortucaro/user.c	if(rxstr2[0]=='5')
0044da   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0044dc   0a35     xorlw	0x35               	XORLW	0x35
0044de   e102     bnz	0x44e4               	BNZ	_01051_DS_
                                           ;	.line	39; /home/valentin/github/icaro-bloques/tortucaro/user.c	val=0;
0044e0   6a00     clrf	0, 0                	CLRF	r0x00
0044e2   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _01051_DS_:
0044e4   0103     movlb	0x3                	BANKSEL	_receivedbyte2
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tortucaro/user.c	receivedbyte2=0;
0044e6   6b1d     clrf	0x1d, 0x1           	CLRF	_receivedbyte2, B
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tortucaro/user.c	valor=val;
0044e8   c000     movff	0, 0x288           	MOVFF	r0x00, _valor
0044ea   f288
0044ec   c001     movff	0x1, 0x289         	MOVFF	r0x01, (_valor + 1)
0044ee   f289
0044f0   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0044f2   f002
0044f4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0044f6   f001
0044f8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0044fa   f000
0044fc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epapout_init() { return; }
004938   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epapin_init() { return; }
00493a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epap_out() { return; }
00493c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tortucaro/main.c	void epap_in() { return; }
00493e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void pinmode(int input, int state)
002884   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002886   ffe5
002888   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00288a   ffd9
00288c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00288e   ffe5
002890   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002892   ffe5
002894   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002896   ffe5
002898   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00289a   ffe5
00289c   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00289e   ffe5
0028a0   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0028a2   ffe5
0028a4   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0028a6   ffe5
0028a8   0e02     movlw	0x2                	MOVLW	0x02
0028aa   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0028ac   f000
0028ae   0e03     movlw	0x3                	MOVLW	0x03
0028b0   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0028b2   f001
0028b4   0e04     movlw	0x4                	MOVLW	0x04
0028b6   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
0028b8   f002
0028ba   0e05     movlw	0x5                	MOVLW	0x05
0028bc   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0028be   f003
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
0028c0   0e98     movlw	0x98               	MOVLW	LOW(_port)
0028c2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0028c4   6e04     movwf	0x4, 0             	MOVWF	r0x04
0028c6   0e24     movlw	0x24               	MOVLW	HIGH(_port)
0028c8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0028ca   6e05     movwf	0x5, 0             	MOVWF	r0x05
0028cc   6a06     clrf	0x6, 0              	CLRF	r0x06
0028ce   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0028d0   6806     setf	0x6, 0              	SETF	r0x06
0028d2   0e00     movlw	0                  	MOVLW	UPPER(_port)
0028d4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0028d6   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0028d8   fff6
0028da   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0028dc   fff7
0028de   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0028e0   fff8
0028e2   0009     tblrd	*+                 	TBLRD*+	
0028e4   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0028e6   f004
0028e8   0e05     movlw	0x5                	MOVLW	0x05
0028ea   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
0028ec   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0028ee   d11c     bra	0x2b28               	BRA	_01008_DS_
0028f0   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0028f2   ffe5
0028f4   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0028f6   ffe5
0028f8   6a08     clrf	0x8, 0              	CLRF	r0x08
0028fa   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
0028fc   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
0028fe   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002900   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002902   0bfc     andlw	0xfc               	ANDLW	0xfc
002904   6e07     movwf	0x7, 0             	MOVWF	r0x07
002906   0e00     movlw	0                  	MOVLW	UPPER(_01017_DS_)
002908   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
00290a   0e29     movlw	0x29               	MOVLW	HIGH(_01017_DS_)
00290c   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
00290e   0e26     movlw	0x26               	MOVLW	LOW(_01017_DS_)
002910   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002912   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002914   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002916   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002918   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
00291a   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00291c   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
00291e   f008
002920   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002922   f007
002924   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _01017_DS_:
002926   ef9d     goto	0x293a              	GOTO	_00987_DS_
002928   f014
00292a   efcf     goto	0x299e              	GOTO	_00991_DS_
00292c   f014
00292e   ef01     goto	0x2a02              	GOTO	_00995_DS_
002930   f015
002932   ef33     goto	0x2a66              	GOTO	_00999_DS_
002934   f015
002936   ef65     goto	0x2aca              	GOTO	_01003_DS_
002938   f015
                                           _00987_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
00293a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00293c   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
00293e   e017     bz	0x296e                	BZ	_00989_DS_
002940   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002942   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002944   6e04     movwf	0x4, 0             	MOVWF	r0x04
002946   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002948   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00294a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00294c   6a06     clrf	0x6, 0              	CLRF	r0x06
00294e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002950   6806     setf	0x6, 0              	SETF	r0x06
002952   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002954   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002956   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002958   fff6
00295a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00295c   fff7
00295e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002960   fff8
002962   0009     tblrd	*+                 	TBLRD*+	
002964   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002966   f004
002968   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00296a   1293     iorwf	0x93, 0x1, 0       	IORWF	_TRISB, F
00296c   d0dd     bra	0x2b28               	BRA	_01008_DS_
                                           _00989_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISB=TRISB & (255-mask[input]);
00296e   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002970   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002972   6e04     movwf	0x4, 0             	MOVWF	r0x04
002974   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002976   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002978   6e05     movwf	0x5, 0             	MOVWF	r0x05
00297a   6a06     clrf	0x6, 0              	CLRF	r0x06
00297c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00297e   6806     setf	0x6, 0              	SETF	r0x06
002980   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002982   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002984   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002986   fff6
002988   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00298a   fff7
00298c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00298e   fff8
002990   0009     tblrd	*+                 	TBLRD*+	
002992   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002994   f004
002996   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002998   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00299a   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
00299c   d0c5     bra	0x2b28               	BRA	_01008_DS_
                                           _00991_DS_:
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
00299e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0029a0   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0029a2   e017     bz	0x29d2                	BZ	_00993_DS_
0029a4   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
0029a6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029a8   6e04     movwf	0x4, 0             	MOVWF	r0x04
0029aa   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
0029ac   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029ae   6e05     movwf	0x5, 0             	MOVWF	r0x05
0029b0   6a06     clrf	0x6, 0              	CLRF	r0x06
0029b2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029b4   6806     setf	0x6, 0              	SETF	r0x06
0029b6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0029b8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0029ba   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0029bc   fff6
0029be   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0029c0   fff7
0029c2   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0029c4   fff8
0029c6   0009     tblrd	*+                 	TBLRD*+	
0029c8   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0029ca   f004
0029cc   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029ce   1294     iorwf	0x94, 0x1, 0       	IORWF	_TRISC, F
0029d0   d0ab     bra	0x2b28               	BRA	_01008_DS_
                                           _00993_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISC=TRISC & (255-mask[input]);
0029d2   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
0029d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029d6   6e04     movwf	0x4, 0             	MOVWF	r0x04
0029d8   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
0029da   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029dc   6e05     movwf	0x5, 0             	MOVWF	r0x05
0029de   6a06     clrf	0x6, 0              	CLRF	r0x06
0029e0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029e2   6806     setf	0x6, 0              	SETF	r0x06
0029e4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0029e6   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0029e8   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0029ea   fff6
0029ec   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0029ee   fff7
0029f0   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0029f2   fff8
0029f4   0009     tblrd	*+                 	TBLRD*+	
0029f6   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0029f8   f004
0029fa   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029fc   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0029fe   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002a00   d093     bra	0x2b28               	BRA	_01008_DS_
                                           _00995_DS_:
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002a02   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a04   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002a06   e017     bz	0x2a36                	BZ	_00997_DS_
002a08   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002a0a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a0c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a0e   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002a10   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a12   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a14   6a06     clrf	0x6, 0              	CLRF	r0x06
002a16   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a18   6806     setf	0x6, 0              	SETF	r0x06
002a1a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a1c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a1e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a20   fff6
002a22   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a24   fff7
002a26   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a28   fff8
002a2a   0009     tblrd	*+                 	TBLRD*+	
002a2c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a2e   f004
002a30   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a32   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
002a34   d079     bra	0x2b28               	BRA	_01008_DS_
                                           _00997_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002a36   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002a38   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a3a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a3c   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002a3e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a40   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a42   6a06     clrf	0x6, 0              	CLRF	r0x06
002a44   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a46   6806     setf	0x6, 0              	SETF	r0x06
002a48   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a4a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a4c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a4e   fff6
002a50   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a52   fff7
002a54   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a56   fff8
002a58   0009     tblrd	*+                 	TBLRD*+	
002a5a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a5c   f004
002a5e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a60   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a62   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002a64   d061     bra	0x2b28               	BRA	_01008_DS_
                                           _00999_DS_:
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002a66   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a68   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002a6a   e017     bz	0x2a9a                	BZ	_01001_DS_
002a6c   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002a6e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a70   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a72   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002a74   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a76   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a78   6a06     clrf	0x6, 0              	CLRF	r0x06
002a7a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a7c   6806     setf	0x6, 0              	SETF	r0x06
002a7e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a80   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a82   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a84   fff6
002a86   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a88   fff7
002a8a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a8c   fff8
002a8e   0009     tblrd	*+                 	TBLRD*+	
002a90   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a92   f004
002a94   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a96   1295     iorwf	0x95, 0x1, 0       	IORWF	_TRISD, F
002a98   d047     bra	0x2b28               	BRA	_01008_DS_
                                           _01001_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISD=TRISD & (255-mask[input]);
002a9a   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002a9c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a9e   6e04     movwf	0x4, 0             	MOVWF	r0x04
002aa0   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002aa2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002aa4   6e05     movwf	0x5, 0             	MOVWF	r0x05
002aa6   6a06     clrf	0x6, 0              	CLRF	r0x06
002aa8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002aaa   6806     setf	0x6, 0              	SETF	r0x06
002aac   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002aae   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002ab0   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002ab2   fff6
002ab4   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ab6   fff7
002ab8   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002aba   fff8
002abc   0009     tblrd	*+                 	TBLRD*+	
002abe   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002ac0   f004
002ac2   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002ac4   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002ac6   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002ac8   d02f     bra	0x2b28               	BRA	_01008_DS_
                                           _01003_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
002aca   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002acc   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002ace   e017     bz	0x2afe                	BZ	_01005_DS_
002ad0   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002ad2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ad4   6e02     movwf	0x2, 0             	MOVWF	r0x02
002ad6   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002ad8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ada   6e03     movwf	0x3, 0             	MOVWF	r0x03
002adc   6a04     clrf	0x4, 0              	CLRF	r0x04
002ade   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ae0   6804     setf	0x4, 0              	SETF	r0x04
002ae2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ae4   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002ae6   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002ae8   fff6
002aea   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002aec   fff7
002aee   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002af0   fff8
002af2   0009     tblrd	*+                 	TBLRD*+	
002af4   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002af6   f002
002af8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002afa   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
002afc   d015     bra	0x2b28               	BRA	_01008_DS_
                                           _01005_DS_:
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002afe   6a02     clrf	0x2, 0              	CLRF	r0x02
002b00   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b02   6802     setf	0x2, 0              	SETF	r0x02
002b04   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002b06   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002b08   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002b0a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002b0c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b0e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002b10   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002b12   fff6
002b14   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002b16   fff7
002b18   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002b1a   fff8
002b1c   0009     tblrd	*+                 	TBLRD*+	
002b1e   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002b20   f000
002b22   5000     movf	0, 0, 0             	MOVF	r0x00, W
002b24   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002b26   1696     andwf	0x96, 0x1, 0       	ANDWF	_TRISE, F
                                           _01008_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002b28   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002b2a   f006
002b2c   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002b2e   f005
002b30   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002b32   f004
002b34   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002b36   f003
002b38   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002b3a   f002
002b3c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002b3e   f001
002b40   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002b42   f000
002b44   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002b46   ffd9
002b48   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	int digitalread(int input)
002e10   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002e12   ffe5
002e14   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002e16   ffd9
002e18   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002e1a   ffe5
002e1c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002e1e   ffe5
002e20   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002e22   ffe5
002e24   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002e26   ffe5
002e28   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002e2a   ffe5
002e2c   0e02     movlw	0x2                	MOVLW	0x02
002e2e   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002e30   f000
002e32   0e03     movlw	0x3                	MOVLW	0x03
002e34   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002e36   f001
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002e38   0e98     movlw	0x98               	MOVLW	LOW(_port)
002e3a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e3c   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e3e   0e24     movlw	0x24               	MOVLW	HIGH(_port)
002e40   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e42   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e44   6a04     clrf	0x4, 0              	CLRF	r0x04
002e46   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e48   6804     setf	0x4, 0              	SETF	r0x04
002e4a   0e00     movlw	0                  	MOVLW	UPPER(_port)
002e4c   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e4e   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e50   fff6
002e52   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e54   fff7
002e56   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e58   fff8
002e5a   0009     tblrd	*+                 	TBLRD*+	
002e5c   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e5e   f002
002e60   0e05     movlw	0x5                	MOVLW	0x05
002e62   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
002e64   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002e66   d0b9     bra	0x2fda               	BRA	_00972_DS_
002e68   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002e6a   ffe5
002e6c   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002e6e   ffe5
002e70   6a06     clrf	0x6, 0              	CLRF	r0x06
002e72   3402     rlcf	0x2, 0, 0           	RLCF	r0x02, W
002e74   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002e76   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002e78   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002e7a   0bfc     andlw	0xfc               	ANDLW	0xfc
002e7c   6e05     movwf	0x5, 0             	MOVWF	r0x05
002e7e   0e00     movlw	0                  	MOVLW	UPPER(_00982_DS_)
002e80   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002e82   0e2e     movlw	0x2e               	MOVLW	HIGH(_00982_DS_)
002e84   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002e86   0e9e     movlw	0x9e               	MOVLW	LOW(_00982_DS_)
002e88   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
002e8a   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002e8c   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002e8e   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002e90   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002e92   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002e94   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002e96   f006
002e98   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002e9a   f005
002e9c   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00982_DS_:
002e9e   ef59     goto	0x2eb2              	GOTO	_00952_DS_
002ea0   f017
002ea2   ef77     goto	0x2eee              	GOTO	_00956_DS_
002ea4   f017
002ea6   ef95     goto	0x2f2a              	GOTO	_00960_DS_
002ea8   f017
002eaa   efb3     goto	0x2f66              	GOTO	_00964_DS_
002eac   f017
002eae   efd1     goto	0x2fa2              	GOTO	_00968_DS_
002eb0   f017
                                           _00952_DS_:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002eb2   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002eb4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002eb6   6e02     movwf	0x2, 0             	MOVWF	r0x02
002eb8   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002eba   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ebc   6e03     movwf	0x3, 0             	MOVWF	r0x03
002ebe   6a04     clrf	0x4, 0              	CLRF	r0x04
002ec0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ec2   6804     setf	0x4, 0              	SETF	r0x04
002ec4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ec6   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002ec8   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002eca   fff6
002ecc   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002ece   fff7
002ed0   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002ed2   fff8
002ed4   0009     tblrd	*+                 	TBLRD*+	
002ed6   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002ed8   f002
002eda   5081     movf	0x81, 0, 0          	MOVF	_PORTB, W
002edc   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002ede   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ee0   e003     bz	0x2ee8                	BZ	_00954_DS_
002ee2   6af3     clrf	0xf3, 0             	CLRF	PRODL
002ee4   0e01     movlw	0x1                	MOVLW	0x01
002ee6   d07b     bra	0x2fde               	BRA	_00973_DS_
                                           _00954_DS_:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002ee8   6af3     clrf	0xf3, 0             	CLRF	PRODL
002eea   6ae8     clrf	0xe8, 0             	CLRF	WREG
002eec   d078     bra	0x2fde               	BRA	_00973_DS_
                                           _00956_DS_:
                                           ;	.line	51; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002eee   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002ef0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ef2   6e02     movwf	0x2, 0             	MOVWF	r0x02
002ef4   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002ef6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ef8   6e03     movwf	0x3, 0             	MOVWF	r0x03
002efa   6a04     clrf	0x4, 0              	CLRF	r0x04
002efc   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002efe   6804     setf	0x4, 0              	SETF	r0x04
002f00   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002f02   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002f04   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002f06   fff6
002f08   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002f0a   fff7
002f0c   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002f0e   fff8
002f10   0009     tblrd	*+                 	TBLRD*+	
002f12   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f14   f002
002f16   5082     movf	0x82, 0, 0          	MOVF	_PORTC, W
002f18   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002f1a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002f1c   e003     bz	0x2f24                	BZ	_00958_DS_
002f1e   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f20   0e01     movlw	0x1                	MOVLW	0x01
002f22   d05d     bra	0x2fde               	BRA	_00973_DS_
                                           _00958_DS_:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f24   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f26   6ae8     clrf	0xe8, 0             	CLRF	WREG
002f28   d05a     bra	0x2fde               	BRA	_00973_DS_
                                           _00960_DS_:
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002f2a   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002f2c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f2e   6e02     movwf	0x2, 0             	MOVWF	r0x02
002f30   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002f32   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f34   6e03     movwf	0x3, 0             	MOVWF	r0x03
002f36   6a04     clrf	0x4, 0              	CLRF	r0x04
002f38   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f3a   6804     setf	0x4, 0              	SETF	r0x04
002f3c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002f3e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002f40   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002f42   fff6
002f44   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002f46   fff7
002f48   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002f4a   fff8
002f4c   0009     tblrd	*+                 	TBLRD*+	
002f4e   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f50   f002
002f52   5080     movf	0x80, 0, 0          	MOVF	_PORTA, W
002f54   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002f56   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002f58   e003     bz	0x2f60                	BZ	_00962_DS_
002f5a   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f5c   0e01     movlw	0x1                	MOVLW	0x01
002f5e   d03f     bra	0x2fde               	BRA	_00973_DS_
                                           _00962_DS_:
                                           ;	.line	55; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f60   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f62   6ae8     clrf	0xe8, 0             	CLRF	WREG
002f64   d03c     bra	0x2fde               	BRA	_00973_DS_
                                           _00964_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
002f66   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002f68   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f6a   6e02     movwf	0x2, 0             	MOVWF	r0x02
002f6c   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002f6e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f70   6e03     movwf	0x3, 0             	MOVWF	r0x03
002f72   6a04     clrf	0x4, 0              	CLRF	r0x04
002f74   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f76   6804     setf	0x4, 0              	SETF	r0x04
002f78   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002f7a   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002f7c   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002f7e   fff6
002f80   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002f82   fff7
002f84   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002f86   fff8
002f88   0009     tblrd	*+                 	TBLRD*+	
002f8a   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f8c   f002
002f8e   5083     movf	0x83, 0, 0          	MOVF	_PORTD, W
002f90   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002f92   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002f94   e003     bz	0x2f9c                	BZ	_00966_DS_
002f96   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f98   0e01     movlw	0x1                	MOVLW	0x01
002f9a   d021     bra	0x2fde               	BRA	_00973_DS_
                                           _00966_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f9c   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f9e   6ae8     clrf	0xe8, 0             	CLRF	WREG
002fa0   d01e     bra	0x2fde               	BRA	_00973_DS_
                                           _00968_DS_:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
002fa2   6a02     clrf	0x2, 0              	CLRF	r0x02
002fa4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002fa6   6802     setf	0x2, 0              	SETF	r0x02
002fa8   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002faa   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002fac   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002fae   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002fb0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002fb2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002fb4   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002fb6   fff6
002fb8   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002fba   fff7
002fbc   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002fbe   fff8
002fc0   0009     tblrd	*+                 	TBLRD*+	
002fc2   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002fc4   f000
002fc6   5084     movf	0x84, 0, 0          	MOVF	_PORTE, W
002fc8   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002fca   5000     movf	0, 0, 0             	MOVF	r0x00, W
002fcc   e003     bz	0x2fd4                	BZ	_00970_DS_
002fce   6af3     clrf	0xf3, 0             	CLRF	PRODL
002fd0   0e01     movlw	0x1                	MOVLW	0x01
002fd2   d005     bra	0x2fde               	BRA	_00973_DS_
                                           _00970_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002fd4   6af3     clrf	0xf3, 0             	CLRF	PRODL
002fd6   6ae8     clrf	0xe8, 0             	CLRF	WREG
002fd8   d002     bra	0x2fde               	BRA	_00973_DS_
                                           _00972_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	return (0);
002fda   6af3     clrf	0xf3, 0             	CLRF	PRODL
002fdc   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00973_DS_:
002fde   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002fe0   f004
002fe2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002fe4   f003
002fe6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002fe8   f002
002fea   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002fec   f001
002fee   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002ff0   f000
002ff2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002ff4   ffd9
002ff6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void digitalwrite(int output,int state)
002b4a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002b4c   ffe5
002b4e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002b50   ffd9
002b52   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002b54   ffe5
002b56   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002b58   ffe5
002b5a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002b5c   ffe5
002b5e   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002b60   ffe5
002b62   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002b64   ffe5
002b66   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002b68   ffe5
002b6a   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002b6c   ffe5
002b6e   0e02     movlw	0x2                	MOVLW	0x02
002b70   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002b72   f000
002b74   0e03     movlw	0x3                	MOVLW	0x03
002b76   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002b78   f001
002b7a   0e04     movlw	0x4                	MOVLW	0x04
002b7c   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002b7e   f002
002b80   0e05     movlw	0x5                	MOVLW	0x05
002b82   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002b84   f003
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[output])
002b86   0e98     movlw	0x98               	MOVLW	LOW(_port)
002b88   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b8a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b8c   0e24     movlw	0x24               	MOVLW	HIGH(_port)
002b8e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b90   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b92   6a06     clrf	0x6, 0              	CLRF	r0x06
002b94   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b96   6806     setf	0x6, 0              	SETF	r0x06
002b98   0e00     movlw	0                  	MOVLW	UPPER(_port)
002b9a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b9c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b9e   fff6
002ba0   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ba2   fff7
002ba4   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002ba6   fff8
002ba8   0009     tblrd	*+                 	TBLRD*+	
002baa   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002bac   f004
002bae   0e05     movlw	0x5                	MOVLW	0x05
002bb0   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002bb2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002bb4   d11c     bra	0x2dee               	BRA	_00938_DS_
002bb6   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002bb8   ffe5
002bba   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002bbc   ffe5
002bbe   6a08     clrf	0x8, 0              	CLRF	r0x08
002bc0   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002bc2   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002bc4   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002bc6   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002bc8   0bfc     andlw	0xfc               	ANDLW	0xfc
002bca   6e07     movwf	0x7, 0             	MOVWF	r0x07
002bcc   0e00     movlw	0                  	MOVLW	UPPER(_00947_DS_)
002bce   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002bd0   0e2b     movlw	0x2b               	MOVLW	HIGH(_00947_DS_)
002bd2   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002bd4   0eec     movlw	0xec               	MOVLW	LOW(_00947_DS_)
002bd6   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002bd8   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002bda   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002bdc   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002bde   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002be0   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002be2   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002be4   f008
002be6   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002be8   f007
002bea   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00947_DS_:
002bec   ef00     goto	0x2c00              	GOTO	_00917_DS_
002bee   f016
002bf0   ef32     goto	0x2c64              	GOTO	_00921_DS_
002bf2   f016
002bf4   ef64     goto	0x2cc8              	GOTO	_00925_DS_
002bf6   f016
002bf8   ef96     goto	0x2d2c              	GOTO	_00929_DS_
002bfa   f016
002bfc   efc8     goto	0x2d90              	GOTO	_00933_DS_
002bfe   f016
                                           _00917_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002c00   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002c02   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002c04   e017     bz	0x2c34                	BZ	_00919_DS_
002c06   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002c08   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c0a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c0c   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002c0e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c10   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c12   6a06     clrf	0x6, 0              	CLRF	r0x06
002c14   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c16   6806     setf	0x6, 0              	SETF	r0x06
002c18   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c1a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c1c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c1e   fff6
002c20   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c22   fff7
002c24   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c26   fff8
002c28   0009     tblrd	*+                 	TBLRD*+	
002c2a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c2c   f004
002c2e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c30   1281     iorwf	0x81, 0x1, 0       	IORWF	_PORTB, F
002c32   d0dd     bra	0x2dee               	BRA	_00938_DS_
                                           _00919_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002c34   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002c36   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c38   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c3a   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002c3c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c3e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c40   6a06     clrf	0x6, 0              	CLRF	r0x06
002c42   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c44   6806     setf	0x6, 0              	SETF	r0x06
002c46   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c48   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c4a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c4c   fff6
002c4e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c50   fff7
002c52   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c54   fff8
002c56   0009     tblrd	*+                 	TBLRD*+	
002c58   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c5a   f004
002c5c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c5e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c60   1681     andwf	0x81, 0x1, 0       	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002c62   d0c5     bra	0x2dee               	BRA	_00938_DS_
                                           _00921_DS_:
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002c64   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002c66   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002c68   e017     bz	0x2c98                	BZ	_00923_DS_
002c6a   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002c6c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c6e   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c70   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002c72   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c74   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c76   6a06     clrf	0x6, 0              	CLRF	r0x06
002c78   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c7a   6806     setf	0x6, 0              	SETF	r0x06
002c7c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c7e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c80   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c82   fff6
002c84   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c86   fff7
002c88   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c8a   fff8
002c8c   0009     tblrd	*+                 	TBLRD*+	
002c8e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c90   f004
002c92   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c94   1282     iorwf	0x82, 0x1, 0       	IORWF	_PORTC, F
002c96   d0ab     bra	0x2dee               	BRA	_00938_DS_
                                           _00923_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002c98   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002c9a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c9c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c9e   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002ca0   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002ca2   6e05     movwf	0x5, 0             	MOVWF	r0x05
002ca4   6a06     clrf	0x6, 0              	CLRF	r0x06
002ca6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ca8   6806     setf	0x6, 0              	SETF	r0x06
002caa   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cac   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002cae   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002cb0   fff6
002cb2   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002cb4   fff7
002cb6   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002cb8   fff8
002cba   0009     tblrd	*+                 	TBLRD*+	
002cbc   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002cbe   f004
002cc0   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002cc2   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002cc4   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002cc6   d093     bra	0x2dee               	BRA	_00938_DS_
                                           _00925_DS_:
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002cc8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002cca   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002ccc   e017     bz	0x2cfc                	BZ	_00927_DS_
002cce   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002cd0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cd2   6e04     movwf	0x4, 0             	MOVWF	r0x04
002cd4   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002cd6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002cd8   6e05     movwf	0x5, 0             	MOVWF	r0x05
002cda   6a06     clrf	0x6, 0              	CLRF	r0x06
002cdc   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cde   6806     setf	0x6, 0              	SETF	r0x06
002ce0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ce2   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002ce4   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002ce6   fff6
002ce8   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002cea   fff7
002cec   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002cee   fff8
002cf0   0009     tblrd	*+                 	TBLRD*+	
002cf2   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002cf4   f004
002cf6   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002cf8   1280     iorwf	0x80, 0x1, 0       	IORWF	_PORTA, F
002cfa   d079     bra	0x2dee               	BRA	_00938_DS_
                                           _00927_DS_:
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002cfc   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002cfe   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d00   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d02   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002d04   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d06   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d08   6a06     clrf	0x6, 0              	CLRF	r0x06
002d0a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d0c   6806     setf	0x6, 0              	SETF	r0x06
002d0e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d10   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d12   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d14   fff6
002d16   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d18   fff7
002d1a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d1c   fff8
002d1e   0009     tblrd	*+                 	TBLRD*+	
002d20   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d22   f004
002d24   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d26   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d28   1680     andwf	0x80, 0x1, 0       	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002d2a   d061     bra	0x2dee               	BRA	_00938_DS_
                                           _00929_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002d2c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d2e   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002d30   e017     bz	0x2d60                	BZ	_00931_DS_
002d32   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002d34   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d36   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d38   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002d3a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d3c   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d3e   6a06     clrf	0x6, 0              	CLRF	r0x06
002d40   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d42   6806     setf	0x6, 0              	SETF	r0x06
002d44   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d46   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d48   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d4a   fff6
002d4c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d4e   fff7
002d50   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d52   fff8
002d54   0009     tblrd	*+                 	TBLRD*+	
002d56   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d58   f004
002d5a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d5c   1283     iorwf	0x83, 0x1, 0       	IORWF	_PORTD, F
002d5e   d047     bra	0x2dee               	BRA	_00938_DS_
                                           _00931_DS_:
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002d60   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002d62   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d64   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d66   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002d68   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d6a   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d6c   6a06     clrf	0x6, 0              	CLRF	r0x06
002d6e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d70   6806     setf	0x6, 0              	SETF	r0x06
002d72   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d74   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d76   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d78   fff6
002d7a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d7c   fff7
002d7e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d80   fff8
002d82   0009     tblrd	*+                 	TBLRD*+	
002d84   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d86   f004
002d88   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d8a   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d8c   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002d8e   d02f     bra	0x2dee               	BRA	_00938_DS_
                                           _00933_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002d90   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d92   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002d94   e017     bz	0x2dc4                	BZ	_00935_DS_
002d96   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002d98   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d9a   6e02     movwf	0x2, 0             	MOVWF	r0x02
002d9c   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002d9e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002da0   6e03     movwf	0x3, 0             	MOVWF	r0x03
002da2   6a04     clrf	0x4, 0              	CLRF	r0x04
002da4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002da6   6804     setf	0x4, 0              	SETF	r0x04
002da8   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002daa   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002dac   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002dae   fff6
002db0   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002db2   fff7
002db4   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002db6   fff8
002db8   0009     tblrd	*+                 	TBLRD*+	
002dba   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002dbc   f002
002dbe   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002dc0   1284     iorwf	0x84, 0x1, 0       	IORWF	_PORTE, F
002dc2   d015     bra	0x2dee               	BRA	_00938_DS_
                                           _00935_DS_:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002dc4   6a02     clrf	0x2, 0              	CLRF	r0x02
002dc6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002dc8   6802     setf	0x2, 0              	SETF	r0x02
002dca   0e7a     movlw	0x7a               	MOVLW	LOW(_mask)
002dcc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002dce   0e24     movlw	0x24               	MOVLW	HIGH(_mask)
002dd0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002dd2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002dd4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002dd6   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002dd8   fff6
002dda   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002ddc   fff7
002dde   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002de0   fff8
002de2   0009     tblrd	*+                 	TBLRD*+	
002de4   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002de6   f000
002de8   5000     movf	0, 0, 0             	MOVF	r0x00, W
002dea   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002dec   1684     andwf	0x84, 0x1, 0       	ANDWF	_PORTE, F
                                           _00938_DS_:
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002dee   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002df0   f006
002df2   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002df4   f005
002df6   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002df8   f004
002dfa   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002dfc   f003
002dfe   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002e00   f002
002e02   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002e04   f001
002e06   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002e08   f000
002e0a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002e0c   ffd9
002e0e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (PIR1bits.TMR1IF) {
0046de   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
0046e0   d020     bra	0x4722               	BRA	_00912_DS_
                                           ;	.line	289; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIR1bits.TMR1IF=0;
0046e2   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x00;
0046e4   6acd     clrf	0xcd, 0             	CLRF	_T1CON
0046e6   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	291; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (phase) {
0046e8   5102     movf	0x2, 0, 0x1         	MOVF	_phase, W, B
0046ea   e00b     bz	0x4702                	BZ	_00908_DS_
                                           ;	.line	293; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseUp();
0046ec   ec93     call	0x4926, 0           	CALL	_ServosPulseUp
0046ee   f024
                                           ;	.line	295; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0xd3;
0046f0   0ed3     movlw	0xd3               	MOVLW	0xd3
0046f2   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	296; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x8f;
0046f4   0e8f     movlw	0x8f               	MOVLW	0x8f
0046f6   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ;	.line	298; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=1;
0046f8   0e01     movlw	0x1                	MOVLW	0x01
0046fa   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
0046fc   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	299; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 0;
0046fe   6b02     clrf	0x2, 0x1            	CLRF	_phase, B
004700   d010     bra	0x4722               	BRA	_00912_DS_
                                           _00908_DS_:
                                           ;	.line	304; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseDown();
004702   ec77     call	0x40ee, 0           	CALL	_ServosPulseDown
004704   f020
                                           ;	.line	308; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0x2d;
004706   0e2d     movlw	0x2d               	MOVLW	0x2d
004708   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	309; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x0f;
00470a   0e0f     movlw	0xf                	MOVLW	0x0f
00470c   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00906_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
00470e   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	311; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (needreordering)	
004710   5103     movf	0x3, 0, 0x1         	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
004712   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
                                           ;	.line	313; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
004714   ec63     call	0x24c6, 0           	CALL	_SortServoTimings
004716   f012
004718   0e21     movlw	0x21               	MOVLW	0x21
00471a   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
00471c   0e01     movlw	0x1                	MOVLW	0x01
00471e   0102     movlb	0x2                	BANKSEL	_phase
004720   6f02     movwf	0x2, 0x1           	MOVWF	_phase, B
                                           _00912_DS_:
                                           ;	.line	317; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
004722   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMaximumPulse(uchar servo)
004724   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004726   ffe5
004728   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00472a   ffd9
00472c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00472e   ffe5
004730   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004732   ffe5
004734   0e02     movlw	0x2                	MOVLW	0x02
004736   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
004738   f000
                                           ;	.line	275; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
00473a   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00896_DS_
                                           ; #	GOTO	_00897_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
00473c   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	278; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
00473e   e20e     bc	0x475c                	BC	_00897_DS_
004740   6a01     clrf	0x1, 0              	CLRF	r0x01
004742   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
004744   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004746   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
004748   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00474a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00474c   ffe9
00474e   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004750   ffea
004752   0efa     movlw	0xfa               	MOVLW	0xfa
004754   6eef     movwf	0xef, 0            	MOVWF	INDF0
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
004756   0e01     movlw	0x1                	MOVLW	0x01
004758   0102     movlb	0x2                	BANKSEL	_needreordering
00475a   6f03     movwf	0x3, 0x1           	MOVWF	_needreordering, B
                                           _00897_DS_:
00475c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00475e   f001
004760   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004762   f000
004764   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
004766   ffd9
004768   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMinimumPulse(uchar servo)
0047b0   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0047b2   ffe5
0047b4   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0047b6   ffd9
0047b8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0047ba   ffe5
0047bc   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0047be   ffe5
0047c0   0e02     movlw	0x2                	MOVLW	0x02
0047c2   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0047c4   f000
                                           ;	.line	264; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
0047c6   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00886_DS_
                                           ; #	GOTO	_00887_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
0047c8   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	267; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
0047ca   e20d     bc	0x47e6                	BC	_00887_DS_
0047cc   6a01     clrf	0x1, 0              	CLRF	r0x01
0047ce   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
0047d0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0047d2   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0047d4   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0047d6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0047d8   ffe9
0047da   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0047dc   ffea
0047de   0e01     movlw	0x1                	MOVLW	0x01
0047e0   6eef     movwf	0xef, 0            	MOVWF	INDF0
0047e2   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0047e4   6f03     movwf	0x3, 0x1           	MOVWF	_needreordering, B
                                           _00887_DS_:
0047e6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0047e8   f001
0047ea   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0047ec   f000
0047ee   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0047f0   ffd9
0047f2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	unsigned char ServoRead(uchar servo)
00476a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00476c   ffe5
00476e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
004770   ffd9
004772   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004774   ffe5
004776   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004778   ffe5
00477a   0e02     movlw	0x2                	MOVLW	0x02
00477c   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00477e   f000
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
004780   0e12     movlw	0x12               	MOVLW	0x12
004782   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
004784   e302     bnc	0x478a               	BNC	_00876_DS_
                                           ;	.line	257; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return 0;
004786   6ae8     clrf	0xe8, 0             	CLRF	WREG
004788   d00c     bra	0x47a2               	BRA	_00877_DS_
                                           _00876_DS_:
                                           ;	.line	258; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return servovalues[servo];
00478a   6a01     clrf	0x1, 0              	CLRF	r0x01
00478c   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
00478e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004790   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
004792   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
004794   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
004796   ffe9
004798   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
00479a   ffea
00479c   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
00479e   f000
0047a0   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00877_DS_:
0047a2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0047a4   f001
0047a6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0047a8   f000
0047aa   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0047ac   ffd9
0047ae   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoWrite(uchar servo, uchar value)
00456a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00456c   ffe5
00456e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
004570   ffd9
004572   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004574   ffe5
004576   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004578   ffe5
00457a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00457c   ffe5
00457e   0e02     movlw	0x2                	MOVLW	0x02
004580   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
004582   f000
004584   0e03     movlw	0x3                	MOVLW	0x03
004586   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
004588   f001
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
00458a   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00858_DS_
                                           ; #	GOTO	_00863_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
00458c   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
00458e   e218     bc	0x45c0                	BC	_00863_DS_
004590   0e01     movlw	0x1                	MOVLW	0x01
004592   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
004594   e202     bc	0x459a                	BC	_00860_DS_
                                           ;	.line	245; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMIN;
004596   0e01     movlw	0x1                	MOVLW	0x01
004598   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00860_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
00459a   0efb     movlw	0xfb               	MOVLW	0xfb
00459c   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
00459e   e302     bnc	0x45a4               	BNC	_00862_DS_
                                           ;	.line	247; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMAX;
0045a0   0efa     movlw	0xfa               	MOVLW	0xfa
0045a2   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00862_DS_:
                                           ;	.line	248; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=value;
0045a4   6a02     clrf	0x2, 0              	CLRF	r0x02
0045a6   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
0045a8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0045aa   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0045ac   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0045ae   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0045b0   ffe9
0045b2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0045b4   ffea
0045b6   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
0045b8   ffef
                                           ;	.line	250; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0045ba   0e01     movlw	0x1                	MOVLW	0x01
0045bc   0102     movlb	0x2                	BANKSEL	_needreordering
0045be   6f03     movwf	0x3, 0x1           	MOVWF	_needreordering, B
                                           _00863_DS_:
0045c0   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0045c2   f002
0045c4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0045c6   f001
0045c8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0045ca   f000
0045cc   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0045ce   ffd9
0045d0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoDetach(uchar pin)
003bf2   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003bf4   ffe5
003bf6   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003bf8   ffd9
003bfa   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003bfc   ffe5
003bfe   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003c00   ffe5
003c02   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003c04   ffe5
003c06   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003c08   ffe5
003c0a   0e02     movlw	0x2                	MOVLW	0x02
003c0c   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003c0e   f000
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
003c10   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00837_DS_
                                           ; #	GOTO	_00844_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
003c12   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003c14   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003c16   d04c     bra	0x3cb0               	BRA	_00844_DS_
003c18   0e08     movlw	0x8                	MOVLW	0x08
003c1a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003c1c   e218     bc	0x3c4e                	BC	_00842_DS_
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
003c1e   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
003c20   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003c22   6e01     movwf	0x1, 0             	MOVWF	r0x01
003c24   6a02     clrf	0x2, 0              	CLRF	r0x02
003c26   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
003c28   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003c2a   6a03     clrf	0x3, 0              	CLRF	r0x03
003c2c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003c2e   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003c30   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003c32   fff6
003c34   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003c36   fff7
003c38   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003c3a   fff8
003c3c   0009     tblrd	*+                 	TBLRD*+	
003c3e   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003c40   f001
003c42   0102     movlb	0x2                	BANKSEL	_activatedservos
003c44   5105     movf	0x5, 0, 0x1         	MOVF	_activatedservos, W, B
003c46   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003c48   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003c4a   6f05     movwf	0x5, 0x1           	MOVWF	_activatedservos, B
003c4c   d031     bra	0x3cb0               	BRA	_00844_DS_
                                           _00842_DS_:
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003c4e   0e0d     movlw	0xd                	MOVLW	0x0d
003c50   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003c52   e318     bnc	0x3c84               	BNC	_00839_DS_
                                           ;	.line	232; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
003c54   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
003c56   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003c58   6e01     movwf	0x1, 0             	MOVWF	r0x01
003c5a   6a02     clrf	0x2, 0              	CLRF	r0x02
003c5c   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
003c5e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003c60   6a03     clrf	0x3, 0              	CLRF	r0x03
003c62   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003c64   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003c66   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003c68   fff6
003c6a   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003c6c   fff7
003c6e   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003c70   fff8
003c72   0009     tblrd	*+                 	TBLRD*+	
003c74   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003c76   f001
003c78   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003c7a   5107     movf	0x7, 0, 0x1         	MOVF	(_activatedservos + 2), W, B
003c7c   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003c7e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003c80   6f07     movwf	0x7, 0x1           	MOVWF	(_activatedservos + 2), B
003c82   d016     bra	0x3cb0               	BRA	_00844_DS_
                                           _00839_DS_:
                                           ;	.line	234; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
003c84   6a01     clrf	0x1, 0              	CLRF	r0x01
003c86   6a02     clrf	0x2, 0              	CLRF	r0x02
003c88   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
003c8a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003c8c   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
003c8e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003c90   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003c92   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003c94   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003c96   fff6
003c98   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003c9a   fff7
003c9c   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003c9e   fff8
003ca0   0009     tblrd	*+                 	TBLRD*+	
003ca2   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003ca4   f000
003ca6   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003ca8   5106     movf	0x6, 0, 0x1         	MOVF	(_activatedservos + 1), W, B
003caa   1a00     xorwf	0, 0x1, 0          	XORWF	r0x00, F
003cac   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003cae   6f06     movwf	0x6, 0x1           	MOVWF	(_activatedservos + 1), B
                                           _00844_DS_:
003cb0   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003cb2   f003
003cb4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003cb6   f002
003cb8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003cba   f001
003cbc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003cbe   f000
003cc0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003cc2   ffd9
003cc4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoAttach(uchar pin)
003a38   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003a3a   ffe5
003a3c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003a3e   ffd9
003a40   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003a42   ffe5
003a44   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003a46   ffe5
003a48   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003a4a   ffe5
003a4c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003a4e   ffe5
003a50   0e02     movlw	0x2                	MOVLW	0x02
003a52   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003a54   f000
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
003a56   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00815_DS_
                                           ; #	GOTO	_00822_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
003a58   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003a5a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003a5c   d052     bra	0x3b02               	BRA	_00822_DS_
003a5e   0e08     movlw	0x8                	MOVLW	0x08
003a60   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003a62   e21a     bc	0x3a98                	BC	_00820_DS_
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003a64   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
003a66   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003a68   6e01     movwf	0x1, 0             	MOVWF	r0x01
003a6a   6a02     clrf	0x2, 0              	CLRF	r0x02
003a6c   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
003a6e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003a70   6a03     clrf	0x3, 0              	CLRF	r0x03
003a72   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003a74   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003a76   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003a78   fff6
003a7a   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003a7c   fff7
003a7e   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003a80   fff8
003a82   0009     tblrd	*+                 	TBLRD*+	
003a84   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003a86   f001
003a88   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003a8a   0102     movlb	0x2                	BANKSEL	_activatedservos
003a8c   1105     iorwf	0x5, 0, 0x1        	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003a8e   6f05     movwf	0x5, 0x1           	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003a90   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003a92   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003a94   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
003a96   d035     bra	0x3b02               	BRA	_00822_DS_
                                           _00820_DS_:
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003a98   0e0d     movlw	0xd                	MOVLW	0x0d
003a9a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003a9c   e31a     bnc	0x3ad2               	BNC	_00817_DS_
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
003a9e   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
003aa0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003aa2   6e01     movwf	0x1, 0             	MOVWF	r0x01
003aa4   6a02     clrf	0x2, 0              	CLRF	r0x02
003aa6   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
003aa8   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003aaa   6a03     clrf	0x3, 0              	CLRF	r0x03
003aac   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003aae   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003ab0   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003ab2   fff6
003ab4   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003ab6   fff7
003ab8   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003aba   fff8
003abc   0009     tblrd	*+                 	TBLRD*+	
003abe   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003ac0   f001
003ac2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003ac4   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003ac6   1107     iorwf	0x7, 0, 0x1        	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003ac8   6f07     movwf	0x7, 0x1           	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
003aca   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003acc   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003ace   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
003ad0   d018     bra	0x3b02               	BRA	_00822_DS_
                                           _00817_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003ad2   6a01     clrf	0x1, 0              	CLRF	r0x01
003ad4   6a02     clrf	0x2, 0              	CLRF	r0x02
003ad6   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
003ad8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003ada   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
003adc   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003ade   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003ae0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003ae2   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003ae4   fff6
003ae6   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003ae8   fff7
003aea   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003aec   fff8
003aee   0009     tblrd	*+                 	TBLRD*+	
003af0   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003af2   f000
003af4   5000     movf	0, 0, 0             	MOVF	r0x00, W
003af6   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003af8   1106     iorwf	0x6, 0, 0x1        	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003afa   6f06     movwf	0x6, 0x1           	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003afc   5000     movf	0, 0, 0             	MOVF	r0x00, W
003afe   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003b00   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           _00822_DS_:
003b02   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003b04   f003
003b06   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003b08   f002
003b0a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003b0c   f001
003b0e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003b10   f000
003b12   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003b14   ffd9
003b16   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void SortServoTimings()
0024c6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0024c8   ffe5
0024ca   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0024cc   ffe5
0024ce   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0024d0   ffe5
0024d2   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0024d4   ffe5
0024d6   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0024d8   ffe5
0024da   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0024dc   ffe5
0024de   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0024e0   ffe5
0024e2   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0024e4   ffe5
0024e6   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0024e8   ffe5
0024ea   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
0024ec   ffe5
0024ee   0103     movlb	0x3                	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0024f0   6b0d     clrf	0xd, 0x1            	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
0024f2   6b0e     clrf	0xe, 0x1            	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
0024f4   6b0f     clrf	0xf, 0x1            	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
0024f6   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00762_DS_:
0024f8   0e12     movlw	0x12               	MOVLW	0x12
0024fa   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0024fc   e223     bc	0x2544                	BC	_00765_DS_
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=255;
0024fe   0ec2     movlw	0xc2               	MOVLW	LOW(_timings + 54)
002500   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002502   6e01     movwf	0x1, 0             	MOVWF	r0x01
002504   6a02     clrf	0x2, 0              	CLRF	r0x02
002506   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
002508   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00250a   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
00250c   ffe9
00250e   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
002510   ffea
002512   68ef     setf	0xef, 0             	SETF	INDF0
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
002514   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
002516   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002518   6e01     movwf	0x1, 0             	MOVWF	r0x01
00251a   6a02     clrf	0x2, 0              	CLRF	r0x02
00251c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
00251e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002520   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
002522   ffe9
002524   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
002526   ffea
002528   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
00252a   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
00252c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00252e   6e01     movwf	0x1, 0             	MOVWF	r0x01
002530   6a02     clrf	0x2, 0              	CLRF	r0x02
002532   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002534   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002536   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
002538   ffe9
00253a   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
00253c   ffea
00253e   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
002540   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002542   d7da     bra	0x24f8               	BRA	_00762_DS_
                                           _00765_DS_:
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos=0;
002544   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	while(totalservos<18) {
002546   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00759_DS_:
002548   0e12     movlw	0x12               	MOVLW	0x12
00254a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00254c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00254e   d183     bra	0x2856               	BRA	_00761_DS_
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
002550   0e01     movlw	0x1                	MOVLW	0x01
002552   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002554   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00766_DS_:
002556   0e12     movlw	0x12               	MOVLW	0x12
002558   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00255a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00255c   d157     bra	0x280c               	BRA	_00769_DS_
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (s<8){
00255e   0e08     movlw	0x8                	MOVLW	0x08
002560   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002562   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002564   d061     bra	0x2628               	BRA	_00757_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002566   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
002568   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00256a   6e04     movwf	0x4, 0             	MOVWF	r0x04
00256c   6a05     clrf	0x5, 0              	CLRF	r0x05
00256e   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
002570   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002572   6a06     clrf	0x6, 0              	CLRF	r0x06
002574   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002576   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002578   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00257a   fff6
00257c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00257e   fff7
002580   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002582   fff8
002584   0009     tblrd	*+                 	TBLRD*+	
002586   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002588   f004
00258a   0103     movlb	0x3                	BANKSEL	_SortServoTimings_mascaratotal_1_1
00258c   510d     movf	0xd, 0, 0x1         	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
00258e   1604     andwf	0x4, 0x1, 0        	ANDWF	r0x04, F
002590   0102     movlb	0x2                	BANKSEL	_activatedservos
002592   5105     movf	0x5, 0, 0x1         	MOVF	_activatedservos, W, B
002594   1604     andwf	0x4, 0x1, 0        	ANDWF	r0x04, F
002596   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002598   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00259a   d136     bra	0x2808               	BRA	_00768_DS_
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00259c   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
00259e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
0025a0   6e04     movwf	0x4, 0             	MOVWF	r0x04
0025a2   6a05     clrf	0x5, 0              	CLRF	r0x05
0025a4   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0025a6   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
0025a8   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
0025aa   ffe9
0025ac   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
0025ae   ffea
0025b0   cfef     movff	0xfef, 0x4         	MOVFF	INDF0, r0x04
0025b2   f004
0025b4   0ec2     movlw	0xc2               	MOVLW	LOW(_timings + 54)
0025b6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0025b8   6e05     movwf	0x5, 0             	MOVWF	r0x05
0025ba   6a06     clrf	0x6, 0              	CLRF	r0x06
0025bc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0025be   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0025c0   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0025c2   ffe9
0025c4   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0025c6   ffea
0025c8   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
0025ca   f007
0025cc   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0025ce   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
0025d0   e21f     bc	0x2610                	BC	_00732_DS_
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0025d2   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0025d4   ffe9
0025d6   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0025d8   ffea
0025da   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0025dc   ffef
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0025de   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
0025e0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0025e2   6e07     movwf	0x7, 0             	MOVWF	r0x07
0025e4   6a08     clrf	0x8, 0              	CLRF	r0x08
0025e6   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0025e8   2208     addwfc	0x8, 0x1, 0       	ADDWFC	r0x08, F
0025ea   c007     movff	0x7, 0xfe9         	MOVFF	r0x07, FSR0L
0025ec   ffe9
0025ee   c008     movff	0x8, 0xfea         	MOVFF	r0x08, FSR0H
0025f0   ffea
0025f2   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0025f4   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
0025f6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0025f8   6e07     movwf	0x7, 0             	MOVWF	r0x07
0025fa   6a08     clrf	0x8, 0              	CLRF	r0x08
0025fc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0025fe   2208     addwfc	0x8, 0x1, 0       	ADDWFC	r0x08, F
002600   c007     movff	0x7, 0xfe9         	MOVFF	r0x07, FSR0L
002602   ffe9
002604   c008     movff	0x8, 0xfea         	MOVFF	r0x08, FSR0H
002606   ffea
002608   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
00260a   0e01     movlw	0x1                	MOVLW	0x01
00260c   6e02     movwf	0x2, 0             	MOVWF	r0x02
00260e   d0fc     bra	0x2808               	BRA	_00768_DS_
                                           _00732_DS_:
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002610   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002612   ffe9
002614   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002616   ffea
002618   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00261a   f005
00261c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00261e   1805     xorwf	0x5, 0, 0          	XORWF	r0x05, W
002620   e001     bz	0x2624                	BZ	_00799_DS_
002622   d0f2     bra	0x2808               	BRA	_00768_DS_
                                           _00799_DS_:
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002624   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002626   d0f0     bra	0x2808               	BRA	_00768_DS_
                                           _00757_DS_:
                                           ;	.line	163; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (s>12){
002628   0e0d     movlw	0xd                	MOVLW	0x0d
00262a   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00262c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00262e   d077     bra	0x271e               	BRA	_00754_DS_
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002630   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
002632   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002634   6e04     movwf	0x4, 0             	MOVWF	r0x04
002636   6a05     clrf	0x5, 0              	CLRF	r0x05
002638   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
00263a   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00263c   6a06     clrf	0x6, 0              	CLRF	r0x06
00263e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002640   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002642   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002644   fff6
002646   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002648   fff7
00264a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00264c   fff8
00264e   0009     tblrd	*+                 	TBLRD*+	
002650   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002652   f004
002654   0103     movlb	0x3                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
002656   510f     movf	0xf, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002658   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00265a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00265c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00265e   5107     movf	0x7, 0, 0x1         	MOVF	(_activatedservos + 2), W, B
002660   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002662   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002664   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002666   d0d0     bra	0x2808               	BRA	_00768_DS_
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002668   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
00266a   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00266c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00266e   6a06     clrf	0x6, 0              	CLRF	r0x06
002670   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002672   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002674   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002676   ffe9
002678   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00267a   ffea
00267c   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00267e   f005
002680   0ec2     movlw	0xc2               	MOVLW	LOW(_timings + 54)
002682   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002684   6e06     movwf	0x6, 0             	MOVWF	r0x06
002686   6a07     clrf	0x7, 0              	CLRF	r0x07
002688   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00268a   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00268c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00268e   ffe9
002690   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002692   ffea
002694   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
002696   f008
002698   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00269a   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00269c   e220     bc	0x26de                	BC	_00740_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
00269e   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0026a0   ffe9
0026a2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0026a4   ffea
0026a6   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0026a8   ffef
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0026aa   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
0026ac   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0026ae   6e08     movwf	0x8, 0             	MOVWF	r0x08
0026b0   6a09     clrf	0x9, 0              	CLRF	r0x09
0026b2   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0026b4   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0026b6   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0026b8   ffe9
0026ba   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0026bc   ffea
0026be   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=servomasks[s];
0026c0   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
0026c2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0026c4   6e08     movwf	0x8, 0             	MOVWF	r0x08
0026c6   6a09     clrf	0x9, 0              	CLRF	r0x09
0026c8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0026ca   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0026cc   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0026ce   ffe9
0026d0   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0026d2   ffea
0026d4   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0026d6   ffef
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0026d8   0e01     movlw	0x1                	MOVLW	0x01
0026da   6e02     movwf	0x2, 0             	MOVWF	r0x02
0026dc   d095     bra	0x2808               	BRA	_00768_DS_
                                           _00740_DS_:
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0026de   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0026e0   ffe9
0026e2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0026e4   ffea
0026e6   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0026e8   f006
0026ea   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0026ec   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
0026ee   e001     bz	0x26f2                	BZ	_00804_DS_
0026f0   d08b     bra	0x2808               	BRA	_00768_DS_
                                           _00804_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t] |= servomasks[s];
0026f2   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
0026f4   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0026f6   6e05     movwf	0x5, 0             	MOVWF	r0x05
0026f8   6a06     clrf	0x6, 0              	CLRF	r0x06
0026fa   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0026fc   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0026fe   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002700   ffe9
002702   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002704   ffea
002706   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002708   f007
00270a   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00270c   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
00270e   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002710   ffe9
002712   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002714   ffea
002716   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002718   ffef
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
00271a   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
00271c   d075     bra	0x2808               	BRA	_00768_DS_
                                           _00754_DS_:
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
00271e   0e68     movlw	0x68               	MOVLW	LOW(_servomasks)
002720   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002722   6e04     movwf	0x4, 0             	MOVWF	r0x04
002724   6a05     clrf	0x5, 0              	CLRF	r0x05
002726   0e24     movlw	0x24               	MOVLW	HIGH(_servomasks)
002728   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00272a   6a06     clrf	0x6, 0              	CLRF	r0x06
00272c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00272e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002730   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002732   fff6
002734   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002736   fff7
002738   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00273a   fff8
00273c   0009     tblrd	*+                 	TBLRD*+	
00273e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002740   f004
002742   0103     movlb	0x3                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
002744   510e     movf	0xe, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002746   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
002748   6e05     movwf	0x5, 0             	MOVWF	r0x05
00274a   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
00274c   5106     movf	0x6, 0, 0x1         	MOVF	(_activatedservos + 1), W, B
00274e   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002750   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002752   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002754   d059     bra	0x2808               	BRA	_00768_DS_
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002756   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
002758   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00275a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00275c   6a06     clrf	0x6, 0              	CLRF	r0x06
00275e   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002760   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002762   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002764   ffe9
002766   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002768   ffea
00276a   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00276c   f005
00276e   0ec2     movlw	0xc2               	MOVLW	LOW(_timings + 54)
002770   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002772   6e06     movwf	0x6, 0             	MOVWF	r0x06
002774   6a07     clrf	0x7, 0              	CLRF	r0x07
002776   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
002778   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00277a   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00277c   ffe9
00277e   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002780   ffea
002782   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
002784   f008
002786   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002788   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00278a   e220     bc	0x27cc                	BC	_00748_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
00278c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00278e   ffe9
002790   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002792   ffea
002794   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
002796   ffef
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=servomasks[s];
002798   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
00279a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00279c   6e08     movwf	0x8, 0             	MOVWF	r0x08
00279e   6a09     clrf	0x9, 0              	CLRF	r0x09
0027a0   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0027a2   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0027a4   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0027a6   ffe9
0027a8   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0027aa   ffea
0027ac   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0027ae   ffef
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0027b0   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
0027b2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0027b4   6e08     movwf	0x8, 0             	MOVWF	r0x08
0027b6   6a09     clrf	0x9, 0              	CLRF	r0x09
0027b8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0027ba   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0027bc   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0027be   ffe9
0027c0   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0027c2   ffea
0027c4   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0027c6   0e01     movlw	0x1                	MOVLW	0x01
0027c8   6e02     movwf	0x2, 0             	MOVWF	r0x02
0027ca   d01e     bra	0x2808               	BRA	_00768_DS_
                                           _00748_DS_:
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings [timevalue][t]){
0027cc   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0027ce   ffe9
0027d0   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0027d2   ffea
0027d4   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0027d6   f006
0027d8   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0027da   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
0027dc   e115     bnz	0x2808               	BNZ	_00768_DS_
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t] |= servomasks[s];
0027de   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
0027e0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0027e2   6e05     movwf	0x5, 0             	MOVWF	r0x05
0027e4   6a06     clrf	0x6, 0              	CLRF	r0x06
0027e6   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0027e8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0027ea   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0027ec   ffe9
0027ee   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0027f0   ffea
0027f2   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
0027f4   f007
0027f6   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0027f8   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
0027fa   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0027fc   ffe9
0027fe   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002800   ffea
002802   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002804   ffef
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002806   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
                                           _00768_DS_:
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002808   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
00280a   d6a5     bra	0x2556               	BRA	_00766_DS_
                                           _00769_DS_:
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
00280c   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
00280e   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002810   6e03     movwf	0x3, 0             	MOVWF	r0x03
002812   6a04     clrf	0x4, 0              	CLRF	r0x04
002814   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002816   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002818   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
00281a   ffe9
00281c   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00281e   ffea
002820   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002822   f003
002824   0103     movlb	0x3                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
002826   510e     movf	0xe, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002828   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
00282a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00282c   6f0e     movwf	0xe, 0x1           	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
00282e   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
002830   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002832   6e03     movwf	0x3, 0             	MOVWF	r0x03
002834   6a04     clrf	0x4, 0              	CLRF	r0x04
002836   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002838   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
00283a   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
00283c   ffe9
00283e   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
002840   ffea
002842   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002844   f003
                                           ; removed redundant BANKSEL
002846   510f     movf	0xf, 0, 0x1         	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002848   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
00284a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00284c   6f0f     movwf	0xf, 0x1           	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos += numservos;
00284e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002850   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	t++;
002852   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
002854   d679     bra	0x2548               	BRA	_00759_DS_
                                           _00761_DS_:
002856   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002858   6b03     clrf	0x3, 0x1            	CLRF	_needreordering, B
00285a   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
00285c   f009
00285e   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002860   f008
002862   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002864   f007
002866   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002868   f006
00286a   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00286c   f005
00286e   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002870   f004
002872   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002874   f003
002876   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002878   f002
00287a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00287c   f001
00287e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002880   f000
002882   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	119; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
004926   c206     movff	0x206, 0xf82       	MOVFF	(_activatedservos + 1), _PORTC
004928   ff82
                                           ;	.line	120; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
00492a   c207     movff	0x207, 0xf80       	MOVFF	(_activatedservos + 2), _PORTA
00492c   ff80
00492e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void ServosPulseDown()
0040ee   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0040f0   ffe5
0040f2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0040f4   ffd9
0040f6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0040f8   ffe5
0040fa   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0040fc   ffe5
0040fe   0103     movlb	0x3                	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex = 0;
004100   6b1c     clrf	0x1c, 0x1           	CLRF	_timingindex, B
004102   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
004104   6b04     clrf	0x4, 0x1            	CLRF	_timedivision, B
                                           _00708_DS_:
004106   0efb     movlw	0xfb               	MOVLW	0xfb
004108   0102     movlb	0x2                	BANKSEL	_timedivision
00410a   5d04     subwf	0x4, 0, 0x1        	SUBWF	_timedivision, W, B
00410c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00410e   d039     bra	0x4182               	BRA	_00712_DS_
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (timings[timevalue][timingindex] == timedivision){
004110   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
004112   f000
004114   6a01     clrf	0x1, 0              	CLRF	r0x01
004116   0ec2     movlw	0xc2               	MOVLW	LOW(_timings + 54)
004118   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00411a   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00411c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00411e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
004120   ffe9
004122   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004124   ffea
004126   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
004128   f000
00412a   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00412c   1904     xorwf	0x4, 0, 0x1        	XORWF	_timedivision, W, B
00412e   e120     bnz	0x4170               	BNZ	_00707_DS_
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
004130   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
004132   f000
004134   6a01     clrf	0x1, 0              	CLRF	r0x01
004136   0e9e     movlw	0x9e               	MOVLW	LOW(_timings + 18)
004138   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00413a   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
00413c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00413e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
004140   ffe9
004142   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004144   ffea
004146   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
004148   f000
00414a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00414c   1a82     xorwf	0x82, 0x1, 0       	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
00414e   c31c     movff	0x31c, 0           	MOVFF	_timingindex, r0x00
004150   f000
004152   6a01     clrf	0x1, 0              	CLRF	r0x01
004154   0eb0     movlw	0xb0               	MOVLW	LOW(_timings + 36)
004156   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004158   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
00415a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00415c   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00415e   ffe9
004160   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
004162   ffea
004164   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
004166   f000
004168   5000     movf	0, 0, 0             	MOVF	r0x00, W
00416a   1a80     xorwf	0x80, 0x1, 0       	XORWF	_PORTA, F
00416c   0103     movlb	0x3                	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex++;
00416e   2b1c     incf	0x1c, 0x1, 0x1      	INCF	_timingindex, F, B
                                           _00707_DS_:
004170   0e06     movlw	0x6                	movlw 6
004172   6f15     movwf	0x15, 0x1          	movwf _loopvar
                                           bucle:
004174   0000     nop                      	NOP
004176   2f15     decfsz	0x15, 0x1, 0x1    	decfsz _loopvar,1
004178   efba     goto	0x4174              	goto bucle
00417a   f020
                                           	
00417c   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
00417e   2b04     incf	0x4, 0x1, 0x1       	INCF	_timedivision, F, B
004180   d7c2     bra	0x4106               	BRA	_00708_DS_
                                           _00712_DS_:
004182   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
004184   f001
004186   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004188   f000
00418a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00418c   ffd9
00418e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void servos_init()
004694   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004696   ffe5
004698   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00469a   ffe5
00469c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00469e   ffe5
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
0046a0   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00692_DS_:
0046a2   0e12     movlw	0x12               	MOVLW	0x12
0046a4   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0046a6   e20d     bc	0x46c2                	BC	_00695_DS_
0046a8   0ed4     movlw	0xd4               	MOVLW	LOW(_servovalues)
0046aa   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0046ac   6e01     movwf	0x1, 0             	MOVWF	r0x01
0046ae   6a02     clrf	0x2, 0              	CLRF	r0x02
0046b0   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0046b2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0046b4   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0046b6   ffe9
0046b8   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0046ba   ffea
0046bc   68ef     setf	0xef, 0             	SETF	INDF0
0046be   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0046c0   d7f0     bra	0x46a2               	BRA	_00692_DS_
                                           _00695_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H=0xFF;
0046c2   68cf     setf	0xcf, 0             	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L=0x00;
0046c4   6ace     clrf	0xce, 0             	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x01;
0046c6   0e01     movlw	0x1                	MOVLW	0x01
0046c8   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIE1bits.TMR1IE=1;
0046ca   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.PEIE=1;
0046cc   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.GIE=1;
0046ce   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
0046d0   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0046d2   f002
0046d4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0046d6   f001
0046d8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0046da   f000
0046dc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	unsigned int analogread(unsigned char channel)
0043f2   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0043f4   ffe5
0043f6   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0043f8   ffd9
0043fa   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0043fc   ffe5
0043fe   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004400   ffe5
004402   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
004404   ffe5
004406   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
004408   ffe5
00440a   0e02     movlw	0x2                	MOVLW	0x02
00440c   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00440e   f000
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x0A;
004410   0e0a     movlw	0xa                	MOVLW	0x0a
004412   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0=(channel-13)*4;
004414   0ef3     movlw	0xf3               	MOVLW	0xf3
004416   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
004418   5000     movf	0, 0, 0             	MOVF	r0x00, W
00441a   0d04     mullw	0x4                	MULLW	0x04
00441c   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
00441e   ffc2
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
004420   0ebd     movlw	0xbd               	MOVLW	0xbd
004422   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=1;
004424   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
004426   0e09     movlw	0x9                	MOVLW	0x09
004428   6e00     movwf	0, 0               	MOVWF	r0x00
00442a   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00686_DS_:
00442c   0000     nop                      	NOP 
00442e   0eff     movlw	0xff               	MOVLW	0xff
004430   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
004432   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
004434   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
004436   5000     movf	0, 0, 0             	MOVF	r0x00, W
004438   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
00443a   e1f8     bnz	0x442c               	BNZ	_00686_DS_
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.GO=1;
00443c   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00681_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	while (ADCON0bits.GO);
00443e   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
004440   d7fe     bra	0x443e               	BRA	_00681_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result=ADRESH<<8;
004442   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
004444   f000
004446   6a01     clrf	0x1, 0              	CLRF	r0x01
004448   5000     movf	0, 0, 0             	MOVF	r0x00, W
00444a   6e03     movwf	0x3, 0             	MOVWF	r0x03
00444c   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result+=ADRESL;
00444e   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
004450   f000
004452   6a01     clrf	0x1, 0              	CLRF	r0x01
004454   5000     movf	0, 0, 0             	MOVF	r0x00, W
004456   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
004458   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00445a   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=0;
00445c   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	return(result);
00445e   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
004460   fff3
004462   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
004464   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
004466   f003
004468   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00446a   f002
00446c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00446e   f001
004470   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004472   f000
004474   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
004476   ffd9
004478   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISA=TRISA | 0x2F;
004908   0e2f     movlw	0x2f               	MOVLW	0x2f
00490a   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISE=TRISE | 0x07;
00490c   0e07     movlw	0x7                	MOVLW	0x07
00490e   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x07;
004910   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
004912   0ebd     movlw	0xbd               	MOVLW	0xbd
004914   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
004916   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__init_CDC	code
                                           _init_CDC:
                                           ;	.line	17; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	INTCON=0;
0045d2   6af2     clrf	0xf2, 0             	CLRF	_INTCON
                                           ;	.line	18; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	INTCON2=0xC0;
0045d4   0ec0     movlw	0xc0               	MOVLW	0xc0
0045d6   6ef1     movwf	0xf1, 0            	MOVWF	_INTCON2
                                           ;	.line	19; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UCON=0;
0045d8   6a6d     clrf	0x6d, 0             	CLRF	_UCON
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UCFG=0;
0045da   6a6f     clrf	0x6f, 0             	CLRF	_UCFG
                                           ;	.line	21; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UEP0=0;UEP1=0;UEP2=0;UEP3=0;UEP4=0;UEP5=0;
0045dc   6a70     clrf	0x70, 0             	CLRF	_UEP0
0045de   6a71     clrf	0x71, 0             	CLRF	_UEP1
0045e0   6a72     clrf	0x72, 0             	CLRF	_UEP2
0045e2   6a73     clrf	0x73, 0             	CLRF	_UEP3
0045e4   6a74     clrf	0x74, 0             	CLRF	_UEP4
0045e6   6a75     clrf	0x75, 0             	CLRF	_UEP5
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UEP6=0;UEP7=0;UEP8=0;UEP9=0;UEP10=0;UEP11=0;
0045e8   6a76     clrf	0x76, 0             	CLRF	_UEP6
0045ea   6a77     clrf	0x77, 0             	CLRF	_UEP7
0045ec   6a78     clrf	0x78, 0             	CLRF	_UEP8
0045ee   6a79     clrf	0x79, 0             	CLRF	_UEP9
0045f0   6a7a     clrf	0x7a, 0             	CLRF	_UEP10
0045f2   6a7b     clrf	0x7b, 0             	CLRF	_UEP11
                                           ;	.line	23; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UEP12=0;UEP13=0;UEP14=0;UEP15=0;
0045f4   6a7c     clrf	0x7c, 0             	CLRF	_UEP12
0045f6   6a7d     clrf	0x7d, 0             	CLRF	_UEP13
0045f8   6a7e     clrf	0x7e, 0             	CLRF	_UEP14
0045fa   6a7f     clrf	0x7f, 0             	CLRF	_UEP15
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	Delayms(2000);
0045fc   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0045fe   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
004600   0e07     movlw	0x7                	MOVLW	0x07
004602   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004604   0ed0     movlw	0xd0               	MOVLW	0xd0
004606   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
004608   ec19     call	0x4232, 0           	CALL	_Delayms
00460a   f021
00460c   0e04     movlw	0x4                	MOVLW	0x04
00460e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	UCFG = 0x14; 				// Enable pullup resistors; full speed mode
004610   0e14     movlw	0x14               	MOVLW	0x14
004612   6e6f     movwf	0x6f, 0            	MOVWF	_UCFG
004614   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	deviceState = DETACHED;
004616   6b19     clrf	0x19, 0x1           	CLRF	_deviceState, B
004618   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	remoteWakeup = 0x00;
00461a   6b18     clrf	0x18, 0x1           	CLRF	_remoteWakeup, B
00461c   0103     movlb	0x3                	BANKSEL	_currentConfiguration
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	currentConfiguration = 0x00;
00461e   6b1a     clrf	0x1a, 0x1           	CLRF	_currentConfiguration, B
                                           _00663_DS_:
004620   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	while(deviceState != CONFIGURED)
004622   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
004624   0a05     xorlw	0x5                	XORLW	0x05
004626   e005     bz	0x4632                	BZ	_00666_DS_
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	EnableUSBModule();
004628   ec1c     call	0x4838, 0           	CALL	_EnableUSBModule
00462a   f024
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/__cdc.c	ProcessUSBTransactions();
00462c   ec7f     call	0x44fe, 0           	CALL	_ProcessUSBTransactions
00462e   f022
004630   d7f7     bra	0x4620               	BRA	_00663_DS_
                                           _00666_DS_:
004632   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayus(int microsecondes)
003faa   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003fac   ffe5
003fae   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003fb0   ffd9
003fb2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003fb4   ffe5
003fb6   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003fb8   ffe5
003fba   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003fbc   ffe5
003fbe   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003fc0   ffe5
003fc2   0e02     movlw	0x2                	MOVLW	0x02
003fc4   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003fc6   f000
003fc8   0e03     movlw	0x3                	MOVLW	0x03
003fca   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003fcc   f001
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<microsecondes;i++);
003fce   6a02     clrf	0x2, 0              	CLRF	r0x02
003fd0   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00649_DS_:
003fd2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003fd4   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003fd6   e102     bnz	0x3fdc               	BNZ	_00658_DS_
003fd8   5000     movf	0, 0, 0             	MOVF	r0x00, W
003fda   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00658_DS_:
003fdc   e204     bc	0x3fe6                	BC	_00653_DS_
003fde   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
003fe0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003fe2   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
003fe4   d7f6     bra	0x3fd2               	BRA	_00649_DS_
                                           _00653_DS_:
003fe6   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003fe8   f003
003fea   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003fec   f002
003fee   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003ff0   f001
003ff2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003ff4   f000
003ff6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003ff8   ffd9
003ffa   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayms(unsigned long milliseconde)
004232   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004234   ffe5
004236   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
004238   ffd9
00423a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00423c   ffe5
00423e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
004240   ffe5
004242   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
004244   ffe5
004246   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
004248   ffe5
00424a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00424c   ffe5
00424e   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
004250   ffe5
004252   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
004254   ffe5
004256   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
004258   ffe5
00425a   0e02     movlw	0x2                	MOVLW	0x02
00425c   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00425e   f000
004260   0e03     movlw	0x3                	MOVLW	0x03
004262   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
004264   f001
004266   0e04     movlw	0x4                	MOVLW	0x04
004268   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00426a   f002
00426c   0e05     movlw	0x5                	MOVLW	0x05
00426e   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
004270   f003
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
004272   6a04     clrf	0x4, 0              	CLRF	r0x04
004274   6a05     clrf	0x5, 0              	CLRF	r0x05
004276   6a06     clrf	0x6, 0              	CLRF	r0x06
004278   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           _00635_DS_:
00427a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00427c   5c07     subwf	0x7, 0, 0          	SUBWF	r0x07, W
00427e   e108     bnz	0x4290               	BNZ	_00644_DS_
004280   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
004282   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
004284   e105     bnz	0x4290               	BNZ	_00644_DS_
004286   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
004288   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00428a   e102     bnz	0x4290               	BNZ	_00644_DS_
00428c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00428e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _00644_DS_:
004290   e20b     bc	0x42a8                	BC	_00639_DS_
004292   0e01     movlw	0x1                	MOVLW	0x01
004294   ec37     call	0x6e, 0             	CALL	_delay10ktcy
004296   f000
004298   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
00429a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00429c   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
00429e   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0042a0   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
0042a2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0042a4   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
0042a6   d7e9     bra	0x427a               	BRA	_00635_DS_
                                           _00639_DS_:
0042a8   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0042aa   f007
0042ac   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0042ae   f006
0042b0   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0042b2   f005
0042b4   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0042b6   f004
0042b8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0042ba   f003
0042bc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0042be   f002
0042c0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0042c2   f001
0042c4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0042c6   f000
0042c8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0042ca   ffd9
0042cc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCInitEndpoint	code
                                           _CDCInitEndpoint:
004634   0103     movlb	0x3                	BANKSEL	_line_config
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.dwDTERate = USB_CDC_BAUD_RATE;
004636   6b00     clrf	0, 0x1              	CLRF	_line_config, B
004638   0ec2     movlw	0xc2               	MOVLW	0xc2
                                           ; removed redundant BANKSEL
00463a   6f01     movwf	0x1, 0x1           	MOVWF	(_line_config + 1), B
00463c   0e01     movlw	0x1                	MOVLW	0x01
                                           ; removed redundant BANKSEL
00463e   6f02     movwf	0x2, 0x1           	MOVWF	(_line_config + 2), B
                                           ; removed redundant BANKSEL
004640   6b03     clrf	0x3, 0x1            	CLRF	(_line_config + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.bCharFormat = USB_CDC_STOP_BITS;
004642   6b04     clrf	0x4, 0x1            	CLRF	(_line_config + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.bParityType = USB_CDC_PARITY;
004644   6b05     clrf	0x5, 0x1            	CLRF	(_line_config + 5), B
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	line_config.bDataBits = USB_CDC_DATA_BITS;
004646   0e08     movlw	0x8                	MOVLW	0x08
                                           ; removed redundant BANKSEL
004648   6f06     movwf	0x6, 0x1           	MOVWF	(_line_config + 6), B
00464a   0102     movlb	0x2                	BANKSEL	_zlp
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue0=0;
00464c   6bf6     clrf	0xf6, 0x1           	CLRF	_zlp, B
                                           ; removed redundant BANKSEL
                                           ;	.line	172; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue1=0;
00464e   6bf7     clrf	0xf7, 0x1           	CLRF	(_zlp + 1), B
                                           ; removed redundant BANKSEL
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue2=0;
004650   6bf8     clrf	0xf8, 0x1           	CLRF	(_zlp + 2), B
                                           ; removed redundant BANKSEL
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue3=0;
004652   6bf9     clrf	0xf9, 0x1           	CLRF	(_zlp + 3), B
                                           ; removed redundant BANKSEL
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue4=0;
004654   6bfa     clrf	0xfa, 0x1           	CLRF	(_zlp + 4), B
                                           ; removed redundant BANKSEL
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue5=0;
004656   6bfb     clrf	0xfb, 0x1           	CLRF	(_zlp + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	177; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue6=0;
004658   6bfc     clrf	0xfc, 0x1           	CLRF	(_zlp + 6), B
                                           ; removed redundant BANKSEL
                                           ;	.line	178; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	zlp.wValue7=0;
00465a   6bfd     clrf	0xfd, 0x1           	CLRF	(_zlp + 7), B
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	USB_COMM_EP_UEP = EP_IN | HSHK_EN;
00465c   0e1a     movlw	0x1a               	MOVLW	0x1a
00465e   6e72     movwf	0x72, 0            	MOVWF	_UEP2
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	CDC_DATA_EP_UEP = EP_OUT_IN | HSHK_EN;
004660   0e1e     movlw	0x1e               	MOVLW	0x1e
004662   6e73     movwf	0x73, 0            	MOVWF	_UEP3
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).ADDR = PTR16(&CDCControlBuffer);
004664   0ee6     movlw	0xe6               	MOVLW	LOW(_CDCControlBuffer)
004666   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 22)
004668   6f16     movwf	0x16, 0x1          	MOVWF	(_ep_bdt + 22), B
00466a   0e02     movlw	0x2                	MOVLW	HIGH(_CDCControlBuffer)
                                           ; removed redundant BANKSEL
00466c   6f17     movwf	0x17, 0x1          	MOVWF	(_ep_bdt + 23), B
                                           ; #	MOVLW	0x40
                                           ; #	MOVWF	(_ep_bdt + 20), B
                                           ; #	MOVLW	0x40
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(USB_COMM_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN;
00466e   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
004670   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           ; removed redundant BANKSEL
004672   6f19     movwf	0x19, 0x1          	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCRxBuffer);
004674   0e80     movlw	0x80               	MOVLW	LOW(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
004676   6f1a     movwf	0x1a, 0x1          	MOVWF	(_ep_bdt + 26), B
004678   0e05     movlw	0x5                	MOVLW	HIGH(_CDCRxBuffer)
                                           ; removed redundant BANKSEL
00467a   6f1b     movwf	0x1b, 0x1          	MOVWF	(_ep_bdt + 27), B
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_UOWN | BDS_DAT0 | BDS_DTSEN;
00467c   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
00467e   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).ADDR = PTR16(&CDCTxBuffer); // +1 
004680   0ec0     movlw	0xc0               	MOVLW	LOW(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004682   6f1e     movwf	0x1e, 0x1          	MOVWF	(_ep_bdt + 30), B
004684   0e05     movlw	0x5                	MOVLW	HIGH(_CDCTxBuffer)
                                           ; removed redundant BANKSEL
004686   6f1f     movwf	0x1f, 0x1          	MOVWF	(_ep_bdt + 31), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc = BDS_DAT1 | BDS_COWN; 
004688   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
00468a   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	deviceState=CONFIGURED; 
00468c   0e05     movlw	0x5                	MOVLW	0x05
00468e   0103     movlb	0x3                	BANKSEL	_deviceState
004690   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
004692   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCputs	code
                                           _CDCputs:
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte CDCputs(char *buffer, byte length) {
003416   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003418   ffe5
00341a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00341c   ffd9
00341e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003420   ffe5
003422   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003424   ffe5
003426   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003428   ffe5
00342a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00342c   ffe5
00342e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003430   ffe5
003432   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003434   ffe5
003436   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003438   ffe5
00343a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00343c   ffe5
00343e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
003440   ffe5
003442   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
003444   ffe5
003446   0e02     movlw	0x2                	MOVLW	0x02
003448   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00344a   f000
00344c   0e03     movlw	0x3                	MOVLW	0x03
00344e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003450   f001
003452   0e04     movlw	0x4                	MOVLW	0x04
003454   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003456   f002
003458   0e05     movlw	0x5                	MOVLW	0x05
00345a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
00345c   f003
                                           ;	.line	132; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte i=0;
00345e   6a04     clrf	0x4, 0              	CLRF	r0x04
003460   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
003462   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
003464   0a05     xorlw	0x5                	XORLW	0x05
003466   e002     bz	0x346c                	BZ	_00602_DS_
003468   6ae8     clrf	0xe8, 0             	CLRF	WREG
00346a   d04c     bra	0x3504               	BRA	_00613_DS_
                                           _00602_DS_:
00346c   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
00346e   5101     movf	0x1, 0, 0x1         	MOVF	_CONTROL_LINE, W, B
003470   e102     bnz	0x3476               	BNZ	_00604_DS_
003472   6ae8     clrf	0xe8, 0             	CLRF	WREG
003474   d047     bra	0x3504               	BRA	_00613_DS_
                                           _00604_DS_:
003476   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 28)
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!EP_IN_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
003478   bf1c     btfsc	0x1c, 0x7, 0x1     	BTFSC	(_ep_bdt + 28), 7, B
00347a   d043     bra	0x3502               	BRA	_00608_DS_
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (length > CDC_BULK_IN_SIZE) length = CDC_BULK_IN_SIZE;
00347c   0e41     movlw	0x41               	MOVLW	0x41
00347e   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003480   e302     bnc	0x3486               	BNC	_00620_DS_
003482   0e40     movlw	0x40               	MOVLW	0x40
003484   6e03     movwf	0x3, 0             	MOVWF	r0x03
                                           _00620_DS_:
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < length; i++) {
003486   6a05     clrf	0x5, 0              	CLRF	r0x05
                                           _00609_DS_:
003488   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00348a   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00348c   e21d     bc	0x34c8                	BC	_00621_DS_
                                           ;	.line	139; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	CDCTxBuffer[i] = buffer[i];
00348e   0ec0     movlw	0xc0               	MOVLW	LOW(_CDCTxBuffer)
003490   2405     addwf	0x5, 0, 0          	ADDWF	r0x05, W
003492   6e06     movwf	0x6, 0             	MOVWF	r0x06
003494   6a07     clrf	0x7, 0              	CLRF	r0x07
003496   0e05     movlw	0x5                	MOVLW	HIGH(_CDCTxBuffer)
003498   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00349a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00349c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00349e   6e08     movwf	0x8, 0             	MOVWF	r0x08
0034a0   6ae8     clrf	0xe8, 0             	CLRF	WREG
0034a2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0034a4   6e09     movwf	0x9, 0             	MOVWF	r0x09
0034a6   6ae8     clrf	0xe8, 0             	CLRF	WREG
0034a8   2002     addwfc	0x2, 0, 0         	ADDWFC	r0x02, W
0034aa   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0034ac   ffe9
0034ae   c009     movff	0x9, 0xff3         	MOVFF	r0x09, PRODL
0034b0   fff3
0034b2   ec29     call	0x52, 0             	CALL	__gptrget1
0034b4   f000
0034b6   6e08     movwf	0x8, 0             	MOVWF	r0x08
0034b8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0034ba   ffe9
0034bc   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0034be   ffea
0034c0   c008     movff	0x8, 0xfef         	MOVFF	r0x08, INDF0
0034c2   ffef
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < length; i++) {
0034c4   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
0034c6   d7e0     bra	0x3488               	BRA	_00609_DS_
                                           _00621_DS_:
0034c8   c005     movff	0x5, 0x4           	MOVFF	r0x05, r0x04
0034ca   f004
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Cnt = i;
0034cc   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0034ce   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 29)
0034d0   6f1d     movwf	0x1d, 0x1          	MOVWF	(_ep_bdt + 29), B
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0034d2   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
0034d4   151c     andwf	0x1c, 0, 0x1       	ANDWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0034d6   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_IN_BD(CDC_DATA_EP_NUM).Stat.DTS;
0034d8   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
0034da   bd1c     btfsc	0x1c, 0x6, 0x1     	BTFSC	(_ep_bdt + 28), 6, B
0034dc   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0034de   5000     movf	0, 0, 0             	MOVF	r0x00, W
0034e0   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
0034e2   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
0034e4   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
0034e6   6a00     clrf	0, 0                	CLRF	r0x00
0034e8   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
0034ea   5000     movf	0, 0, 0             	MOVF	r0x00, W
0034ec   0b01     andlw	0x1                	ANDLW	0x01
0034ee   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0034f0   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0034f2   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0034f4   511c     movf	0x1c, 0, 0x1        	MOVF	(_ep_bdt + 28), W, B
0034f6   0bbf     andlw	0xbf               	ANDLW	0xbf
0034f8   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0034fa   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_IN_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
0034fc   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
0034fe   111c     iorwf	0x1c, 0, 0x1       	IORWF	(_ep_bdt + 28), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003500   6f1c     movwf	0x1c, 0x1          	MOVWF	(_ep_bdt + 28), B
                                           _00608_DS_:
                                           ;	.line	156; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	return i;
003502   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
                                           _00613_DS_:
003504   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
003506   f009
003508   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
00350a   f008
00350c   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
00350e   f007
003510   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003512   f006
003514   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003516   f005
003518   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00351a   f004
00351c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00351e   f003
003520   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003522   f002
003524   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003526   f001
003528   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00352a   f000
00352c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00352e   ffd9
003530   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__CDCgets	code
                                           _CDCgets:
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte CDCgets(char *buffer) {
0032f8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0032fa   ffe5
0032fc   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0032fe   ffd9
003300   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003302   ffe5
003304   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003306   ffe5
003308   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00330a   ffe5
00330c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00330e   ffe5
003310   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003312   ffe5
003314   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003316   ffe5
003318   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00331a   ffe5
00331c   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00331e   ffe5
003320   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
003322   ffe5
003324   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
003326   ffe5
003328   0e02     movlw	0x2                	MOVLW	0x02
00332a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00332c   f000
00332e   0e03     movlw	0x3                	MOVLW	0x03
003330   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003332   f001
003334   0e04     movlw	0x4                	MOVLW	0x04
003336   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003338   f002
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	byte i=0;
00333a   6a03     clrf	0x3, 0              	CLRF	r0x03
00333c   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (deviceState != CONFIGURED) return 0;
00333e   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
003340   0a05     xorlw	0x5                	XORLW	0x05
003342   e002     bz	0x3348                	BZ	_00573_DS_
003344   6ae8     clrf	0xe8, 0             	CLRF	WREG
003346   d050     bra	0x33e8               	BRA	_00584_DS_
                                           _00573_DS_:
003348   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!CONTROL_LINE) return 0;
00334a   5101     movf	0x1, 0, 0x1         	MOVF	_CONTROL_LINE, W, B
00334c   e102     bnz	0x3352               	BNZ	_00575_DS_
00334e   6ae8     clrf	0xe8, 0             	CLRF	WREG
003350   d04b     bra	0x33e8               	BRA	_00584_DS_
                                           _00575_DS_:
003352   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 24)
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (!EP_OUT_BD(CDC_DATA_EP_NUM).Stat.UOWN) {
003354   bf18     btfsc	0x18, 0x7, 0x1     	BTFSC	(_ep_bdt + 24), 7, B
003356   d047     bra	0x33e6               	BRA	_00579_DS_
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (length > EP_OUT_BD(CDC_DATA_EP_NUM).Cnt) length = EP_OUT_BD(CDC_DATA_EP_NUM).Cnt;
003358   0e40     movlw	0x40               	MOVLW	0x40
                                           ; #	SUBWF	(_ep_bdt + 25), W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00591_DS_
                                           ; #;;;!!! pic16_aopOp:1071 called for a spillLocation -- assigning WREG instead --- CHECK
                                           ; #	MOVFF	(_ep_bdt + 25), WREG
                                           ; #	CLRF	r0x04
                                           ; removed redundant BANKSEL
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
00335a   5d19     subwf	0x19, 0, 0x1       	SUBWF	(_ep_bdt + 25), W, B
00335c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00335e   c419     movff	0x419, 0xfe8       	MOVFF	(_ep_bdt + 25), WREG
003360   ffe8
003362   6a04     clrf	0x4, 0              	CLRF	r0x04
                                           _00580_DS_:
003364   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 25)
003366   5119     movf	0x19, 0, 0x1        	MOVF	(_ep_bdt + 25), W, B
003368   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
00336a   e220     bc	0x33ac                	BC	_00592_DS_
                                           ;	.line	112; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	buffer[i] = CDCRxBuffer[i];
00336c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00336e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003370   6e05     movwf	0x5, 0             	MOVWF	r0x05
003372   6ae8     clrf	0xe8, 0             	CLRF	WREG
003374   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003376   6e06     movwf	0x6, 0             	MOVWF	r0x06
003378   6ae8     clrf	0xe8, 0             	CLRF	WREG
00337a   2002     addwfc	0x2, 0, 0         	ADDWFC	r0x02, W
00337c   6e07     movwf	0x7, 0             	MOVWF	r0x07
00337e   0e80     movlw	0x80               	MOVLW	LOW(_CDCRxBuffer)
003380   2404     addwf	0x4, 0, 0          	ADDWF	r0x04, W
003382   6e08     movwf	0x8, 0             	MOVWF	r0x08
003384   6a09     clrf	0x9, 0              	CLRF	r0x09
003386   0e05     movlw	0x5                	MOVLW	HIGH(_CDCRxBuffer)
003388   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
00338a   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
00338c   ffe9
00338e   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
003390   ffea
003392   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
003394   f008
003396   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
003398   ffe5
00339a   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00339c   ffe9
00339e   c006     movff	0x6, 0xff3         	MOVFF	r0x06, PRODL
0033a0   fff3
0033a2   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0033a4   ec31     call	0x62, 0             	CALL	__gptrput1
0033a6   f000
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	for (i=0; i < EP_OUT_BD(CDC_DATA_EP_NUM).Cnt; i++) {
0033a8   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0033aa   d7dc     bra	0x3364               	BRA	_00580_DS_
                                           _00592_DS_:
0033ac   c004     movff	0x4, 0x3           	MOVFF	r0x04, r0x03
0033ae   f003
                                           ;	.line	121; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc &= 0x40;
0033b0   0e40     movlw	0x40               	MOVLW	0x40
0033b2   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 24)
0033b4   1518     andwf	0x18, 0, 0x1       	ANDWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0033b6   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	122; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS = !EP_OUT_BD(CDC_DATA_EP_NUM).Stat.DTS;
0033b8   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
0033ba   bd18     btfsc	0x18, 0x6, 0x1     	BTFSC	(_ep_bdt + 24), 6, B
0033bc   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0033be   5000     movf	0, 0, 0             	MOVF	r0x00, W
0033c0   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
0033c2   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
0033c4   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
0033c6   6a00     clrf	0, 0                	CLRF	r0x00
0033c8   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
0033ca   5000     movf	0, 0, 0             	MOVF	r0x00, W
0033cc   0b01     andlw	0x1                	ANDLW	0x01
0033ce   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0033d0   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0033d2   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0033d4   5118     movf	0x18, 0, 0x1        	MOVF	(_ep_bdt + 24), W, B
0033d6   0bbf     andlw	0xbf               	ANDLW	0xbf
0033d8   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0033da   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Cnt = sizeof(CDCRxBuffer);
0033dc   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
0033de   6f19     movwf	0x19, 0x1          	MOVWF	(_ep_bdt + 25), B
                                           ;	.line	125; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	EP_OUT_BD(CDC_DATA_EP_NUM).Stat.uc |= BDS_UOWN | BDS_DTSEN;
0033e0   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
0033e2   1118     iorwf	0x18, 0, 0x1       	IORWF	(_ep_bdt + 24), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0033e4   6f18     movwf	0x18, 0x1          	MOVWF	(_ep_bdt + 24), B
                                           _00579_DS_:
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	return i;
0033e6   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           _00584_DS_:
0033e8   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0033ea   f009
0033ec   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0033ee   f008
0033f0   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0033f2   f007
0033f4   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0033f6   f006
0033f8   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0033fa   f005
0033fc   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0033fe   f004
003400   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003402   f003
003404   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003406   f002
003408   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00340a   f001
00340c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00340e   f000
003410   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003412   ffd9
003414   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessCDCRequest	code
                                           _ProcessCDCRequest:
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	void ProcessCDCRequest(void)
003f02   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003f04   ffe5
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if ((SetupPacket.bmRequestType & USB_TYPE_MASK) != USB_TYPE_CLASS) return;
003f06   0e60     movlw	0x60               	MOVLW	0x60
003f08   0105     movlb	0x5                	BANKSEL	_SetupPacket
003f0a   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003f0c   0a20     xorlw	0x20               	XORLW	0x20
003f0e   e001     bz	0x3f12                	BZ	_00534_DS_
003f10   d049     bra	0x3fa4               	BRA	_00544_DS_
                                           _00534_DS_:
                                           ;	.line	42; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	switch(SetupPacket.bRequest)
003f12   c501     movff	0x501, 0           	MOVFF	(_SetupPacket + 1), r0x00
003f14   f000
003f16   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f18   e101     bnz	0x3f1c               	BNZ	_00557_DS_
003f1a   d044     bra	0x3fa4               	BRA	_00544_DS_
                                           _00557_DS_:
003f1c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f1e   0a01     xorlw	0x1                	XORLW	0x01
003f20   e101     bnz	0x3f24               	BNZ	_00559_DS_
003f22   d040     bra	0x3fa4               	BRA	_00544_DS_
                                           _00559_DS_:
003f24   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f26   0a20     xorlw	0x20               	XORLW	0x20
003f28   e007     bz	0x3f38                	BZ	_00537_DS_
003f2a   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f2c   0a21     xorlw	0x21               	XORLW	0x21
003f2e   e013     bz	0x3f56                	BZ	_00538_DS_
003f30   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f32   0a22     xorlw	0x22               	XORLW	0x22
003f34   e01f     bz	0x3f74                	BZ	_00539_DS_
003f36   d036     bra	0x3fa4               	BRA	_00544_DS_
                                           _00537_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	outPtr = (data byte *)&line_config;
003f38   0e03     movlw	0x3                	MOVLW	HIGH(_line_config)
003f3a   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003f3c   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003f3e   0e00     movlw	0                  	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
003f40   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003f42   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003f44   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	63; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
003f46   0e07     movlw	0x7                	MOVLW	0x07
003f48   0102     movlb	0x2                	BANKSEL	_wCount
003f4a   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003f4c   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
                                           ;	.line	64; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	requestHandled = 1;				
003f4e   0e01     movlw	0x1                	MOVLW	0x01
003f50   0103     movlb	0x3                	BANKSEL	_requestHandled
003f52   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	65; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	break;
003f54   d027     bra	0x3fa4               	BRA	_00544_DS_
                                           _00538_DS_:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	outPtr = (data byte *)&line_config;
003f56   0e03     movlw	0x3                	MOVLW	HIGH(_line_config)
003f58   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003f5a   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003f5c   0e00     movlw	0                  	MOVLW	LOW(_line_config)
                                           ; removed redundant BANKSEL
003f5e   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003f60   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003f62   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	72; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	wCount = sizeof(USB_CDC_Line_Coding) ;
003f64   0e07     movlw	0x7                	MOVLW	0x07
003f66   0102     movlb	0x2                	BANKSEL	_wCount
003f68   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003f6a   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	requestHandled = 1;
003f6c   0e01     movlw	0x1                	MOVLW	0x01
003f6e   0103     movlb	0x3                	BANKSEL	_requestHandled
003f70   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	break;
003f72   d018     bra	0x3fa4               	BRA	_00544_DS_
                                           _00539_DS_:
003f74   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 2)
                                           ;	.line	82; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	if (SetupPacket.wValue0==3) CONTROL_LINE=1;
003f76   5102     movf	0x2, 0, 0x1         	MOVF	(_SetupPacket + 2), W, B
003f78   0a03     xorlw	0x3                	XORLW	0x03
003f7a   e104     bnz	0x3f84               	BNZ	_00541_DS_
003f7c   0e01     movlw	0x1                	MOVLW	0x01
003f7e   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
003f80   6f01     movwf	0x1, 0x1           	MOVWF	_CONTROL_LINE, B
003f82   d002     bra	0x3f88               	BRA	_00542_DS_
                                           _00541_DS_:
003f84   0102     movlb	0x2                	BANKSEL	_CONTROL_LINE
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	else CONTROL_LINE=0;		
003f86   6b01     clrf	0x1, 0x1            	CLRF	_CONTROL_LINE, B
                                           _00542_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	outPtr = (data byte *)&zlp;
003f88   0e02     movlw	0x2                	MOVLW	HIGH(_zlp)
003f8a   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003f8c   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003f8e   0ef6     movlw	0xf6               	MOVLW	LOW(_zlp)
                                           ; removed redundant BANKSEL
003f90   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003f92   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003f94   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	wCount = sizeof(Zero_Packet_Length) ;
003f96   0e08     movlw	0x8                	MOVLW	0x08
003f98   0102     movlb	0x2                	BANKSEL	_wCount
003f9a   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003f9c   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	requestHandled = 1;						
003f9e   0e01     movlw	0x1                	MOVLW	0x01
003fa0   0103     movlb	0x3                	BANKSEL	_requestHandled
003fa2   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           _00544_DS_:
                                           ;	.line	88; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/usb_cdc.c	}
003fa4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003fa6   f000
003fa8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessUSBTransactions	code
                                           _ProcessUSBTransactions:
                                           ;	.line	740; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void ProcessUSBTransactions(void) {
0044fe   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004500   ffe5
                                           ; #	MOVF	_deviceState, W, B
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00481_DS_
                                           ; #	GOTO	_00507_DS_
                                           ; #	BTFSS	_UIRbits, 2
004502   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	742; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(deviceState == DETACHED)
004504   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
                                           ;	.line	743; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
004506   e02e     bz	0x4564                	BZ	_00507_DS_
                                           ;	.line	746; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UIRbits.ACTVIF && UIEbits.ACTVIE)
004508   a468     btfss	0x68, 0x2, 0       	BTFSS	_UIRbits, 2
                                           ; #	GOTO	_00483_DS_
                                           ; #	BTFSS	_UIEbits, 2
                                           ; #	GOTO	_00483_DS_
                                           ; #	CALL	_UnSuspend
                                           ; #	CLRF	r0x00
                                           ;	.line	747; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UnSuspend();
00450a   d003     bra	0x4512               	BRA	_00483_DS_
                                           ;	.line	751; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UCONbits.SUSPND == 1)
00450c   b469     btfsc	0x69, 0x2, 0       	BTFSC	_UIEbits, 2
00450e   ec98     call	0x4930, 0           	CALL	_UnSuspend
004510   f024
                                           _00483_DS_:
004512   6a00     clrf	0, 0                	CLRF	r0x00
004514   b26d     btfsc	0x6d, 0x1, 0       	BTFSC	_UCONbits, 1
004516   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
004518   5000     movf	0, 0, 0             	MOVF	r0x00, W
00451a   0a01     xorlw	0x1                	XORLW	0x01
                                           ;	.line	752; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
00451c   e023     bz	0x4564                	BZ	_00507_DS_
                                           ;	.line	755; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.URSTIF && UIEbits.URSTIE) {
00451e   a068     btfss	0x68, 0, 0         	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_00488_DS_
                                           ; #	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_00488_DS_
                                           ; #	CALL	_BusReset
                                           ; #	BTFSS	_UIRbits, 4
                                           ;	.line	756; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	BusReset();
004520   d003     bra	0x4528               	BRA	_00488_DS_
                                           ;	.line	759; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.IDLEIF && UIEbits.IDLEIE) {
004522   b069     btfsc	0x69, 0, 0         	BTFSC	_UIEbits, 0
004524   ecfa     call	0x47f4, 0           	CALL	_BusReset
004526   f023
                                           _00488_DS_:
004528   a868     btfss	0x68, 0x4, 0       	BTFSS	_UIRbits, 4
                                           ; #	GOTO	_00491_DS_
                                           ; #	BTFSS	_UIEbits, 4
                                           ; #	GOTO	_00491_DS_
                                           ; #	CALL	_Suspend
                                           ; #	BTFSS	_UIRbits, 6
                                           ;	.line	761; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	Suspend();
00452a   d003     bra	0x4532               	BRA	_00491_DS_
                                           ;	.line	763; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.SOFIF && UIEbits.SOFIE) {
00452c   b869     btfsc	0x69, 0x4, 0       	BTFSC	_UIEbits, 4
00452e   ec47     call	0x488e, 0           	CALL	_Suspend
004530   f024
                                           _00491_DS_:
004532   ac68     btfss	0x68, 0x6, 0       	BTFSS	_UIRbits, 6
                                           ; #	GOTO	_00494_DS_
                                           ; #	BTFSS	_UIEbits, 6
                                           ; #	GOTO	_00494_DS_
                                           ; #	CALL	_StartOfFrame
                                           ; #	BTFSS	_UIRbits, 5
                                           ;	.line	764; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	StartOfFrame();
004534   d003     bra	0x453c               	BRA	_00494_DS_
                                           ;	.line	766; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.STALLIF && UIEbits.STALLIE) {
004536   bc69     btfsc	0x69, 0x6, 0       	BTFSC	_UIEbits, 6
004538   ec0d     call	0x201a, 0           	CALL	_StartOfFrame
00453a   f010
                                           _00494_DS_:
00453c   aa68     btfss	0x68, 0x5, 0       	BTFSS	_UIRbits, 5
                                           ; #	GOTO	_00497_DS_
                                           ; #	BTFSS	_UIEbits, 5
                                           ; #	GOTO	_00497_DS_
                                           ; #	CALL	_Stall
                                           ; #	BTFSS	_UIRbits, 1
                                           ;	.line	767; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	Stall();
00453e   d003     bra	0x4546               	BRA	_00497_DS_
                                           ;	.line	770; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (UIRbits.UERRIF && UIEbits.UERRIE) {
004540   ba69     btfsc	0x69, 0x5, 0       	BTFSC	_UIEbits, 5
004542   ec5c     call	0x48b8, 0           	CALL	_Stall
004544   f024
                                           _00497_DS_:
004546   a268     btfss	0x68, 0x1, 0       	BTFSS	_UIRbits, 1
                                           ; #	GOTO	_00500_DS_
                                           ; #	BTFSS	_UIEbits, 1
                                           ; #	GOTO	_00500_DS_
                                           ; #	BCF	_UIRbits, 1
                                           ; #	MOVLW	0x03
                                           ;	.line	774; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.UERRIF = 0;
004548   d002     bra	0x454e               	BRA	_00500_DS_
                                           ;	.line	778; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (deviceState < DEFAULT)
00454a   b269     btfsc	0x69, 0x1, 0       	BTFSC	_UIEbits, 1
00454c   9268     bcf	0x68, 0x1, 0         	BCF	_UIRbits, 1
                                           _00500_DS_:
00454e   0e03     movlw	0x3                	MOVLW	0x03
                                           ; #	SUBWF	_deviceState, W, B
                                           ; #	BTFSC	STATUS, 0
                                           ; #	GOTO	_00503_DS_
                                           ; #	GOTO	_00507_DS_
                                           ; #	BTFSS	_UIRbits, 3
004550   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	779; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
004552   5d19     subwf	0x19, 0, 0x1       	SUBWF	_deviceState, W, B
                                           ;	.line	782; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UIRbits.TRNIF && UIEbits.TRNIE) {
004554   e307     bnc	0x4564               	BNC	_00507_DS_
004556   a668     btfss	0x68, 0x3, 0       	BTFSS	_UIRbits, 3
004558   d005     bra	0x4564               	BRA	_00507_DS_
00455a   a669     btfss	0x69, 0x3, 0       	BTFSS	_UIEbits, 3
00455c   d003     bra	0x4564               	BRA	_00507_DS_
                                           ;	.line	783; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ProcessControlTransfer();
00455e   ecc8     call	0x4190, 0           	CALL	_ProcessControlTransfer
004560   f020
                                           ;	.line	786; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.TRNIF = 0;
004562   9668     bcf	0x68, 0x3, 0         	BCF	_UIRbits, 3
                                           _00507_DS_:
004564   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004566   f000
004568   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__BusReset	code
                                           _BusReset:
                                           ;	.line	712; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void BusReset() {
0047f4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0047f6   ffe5
                                           ;	.line	713; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEIR  = 0x00;
0047f8   6a6a     clrf	0x6a, 0             	CLRF	_UEIR
                                           ;	.line	714; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIR   = 0x00;
0047fa   6a68     clrf	0x68, 0             	CLRF	_UIR
                                           ;	.line	715; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEIE  = 0x9f;
0047fc   0e9f     movlw	0x9f               	MOVLW	0x9f
0047fe   6e6b     movwf	0x6b, 0            	MOVWF	_UEIE
                                           ;	.line	716; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIE   = 0x7b;
004800   0e7b     movlw	0x7b               	MOVLW	0x7b
004802   6e69     movwf	0x69, 0            	MOVWF	_UIE
                                           ;	.line	717; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UADDR = 0x00;
004804   6a6e     clrf	0x6e, 0             	CLRF	_UADDR
                                           ;	.line	720; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEP0 = EP_CTRL | HSHK_EN;
004806   0e16     movlw	0x16               	MOVLW	0x16
004808   6e70     movwf	0x70, 0            	MOVWF	_UEP0
                                           _00467_DS_:
                                           ;	.line	723; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	while (UIRbits.TRNIF == 1)
00480a   6a00     clrf	0, 0                	CLRF	r0x00
00480c   b668     btfsc	0x68, 0x3, 0       	BTFSC	_UIRbits, 3
00480e   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
004810   5000     movf	0, 0, 0             	MOVF	r0x00, W
004812   0a01     xorlw	0x1                	XORLW	0x01
004814   e102     bnz	0x481a               	BNZ	_00469_DS_
                                           ;	.line	724; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.TRNIF = 0;
004816   9668     bcf	0x68, 0x3, 0         	BCF	_UIRbits, 3
004818   d7f8     bra	0x480a               	BRA	_00467_DS_
                                           _00469_DS_:
                                           ;	.line	727; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.PKTDIS = 0;
00481a   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
                                           ;	.line	730; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
00481c   ec6b     call	0x48d6, 0           	CALL	_WaitForSetupStage
00481e   f024
004820   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	732; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	remoteWakeup = 0;                     // Remote wakeup is off by default
004822   6b18     clrf	0x18, 0x1           	CLRF	_remoteWakeup, B
004824   0103     movlb	0x3                	BANKSEL	_selfPowered
                                           ;	.line	733; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	selfPowered = 0;                      // Self powered is off by default
004826   6b17     clrf	0x17, 0x1           	CLRF	_selfPowered, B
004828   0103     movlb	0x3                	BANKSEL	_currentConfiguration
                                           ;	.line	734; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	currentConfiguration = 0;             // Clear active configuration
00482a   6b1a     clrf	0x1a, 0x1           	CLRF	_currentConfiguration, B
                                           ;	.line	735; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = DEFAULT;
00482c   0e03     movlw	0x3                	MOVLW	0x03
00482e   0103     movlb	0x3                	BANKSEL	_deviceState
004830   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
004832   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
004834   f000
004836   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Suspend	code
                                           _Suspend:
                                           ;	.line	682; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void Suspend(void) {
00488e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
004890   ffe5
004892   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
004894   ffd9
                                           ;	.line	687; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.ACTVIE = 1;
004896   8469     bsf	0x69, 0x2, 0         	BSF	_UIEbits, 2
                                           ;	.line	688; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.IDLEIF = 0;
004898   9868     bcf	0x68, 0x4, 0         	BCF	_UIRbits, 4
                                           ;	.line	689; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.SUSPND = 1;
00489a   826d     bsf	0x6d, 0x1, 0         	BSF	_UCONbits, 1
                                           ;	.line	691; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	PIR2bits.USBIF = 0;
00489c   9aa1     bcf	0xa1, 0x5, 0         	BCF	_PIR2bits, 5
                                           ;	.line	692; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	INTCONbits.RBIF = 0;
00489e   90f2     bcf	0xf2, 0, 0           	BCF	_INTCONbits, 0
                                           ;	.line	693; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	PIE2bits.USBIE = 1;
0048a0   8aa0     bsf	0xa0, 0x5, 0         	BSF	_PIE2bits, 5
                                           ;	.line	694; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	INTCONbits.RBIE = 1;
0048a2   86f2     bsf	0xf2, 0x3, 0         	BSF	_INTCONbits, 3
                                           ;	.line	697; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	RCSTAbits.CREN = 0;
0048a4   98ab     bcf	0xab, 0x4, 0         	BCF	_RCSTAbits, 4
                                           ;	.line	698; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	TXSTAbits.TXEN = 0;
0048a6   9aac     bcf	0xac, 0x5, 0         	BCF	_TXSTAbits, 5
0048a8   0003     sleep                    	sleep 
                                           ;	.line	703; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	RCSTAbits.CREN = 1;
0048aa   88ab     bsf	0xab, 0x4, 0         	BSF	_RCSTAbits, 4
                                           ;	.line	704; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	TXSTAbits.TXEN = 1;
0048ac   8aac     bsf	0xac, 0x5, 0         	BSF	_TXSTAbits, 5
                                           ;	.line	706; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	PIE2bits.USBIE = 0;
0048ae   9aa0     bcf	0xa0, 0x5, 0         	BCF	_PIE2bits, 5
                                           ;	.line	707; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	INTCONbits.RBIE = 0;
0048b0   96f2     bcf	0xf2, 0x3, 0         	BCF	_INTCONbits, 3
0048b2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0048b4   ffd9
0048b6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Stall	code
                                           _Stall:
                                           ;	.line	668; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void Stall(void) {
0048b8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0048ba   ffe5
                                           ;	.line	672; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UEP0bits.EPSTALL == 1) {
0048bc   6a00     clrf	0, 0                	CLRF	r0x00
0048be   b070     btfsc	0x70, 0, 0         	BTFSC	_UEP0bits, 0
0048c0   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0048c2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0048c4   0a01     xorlw	0x1                	XORLW	0x01
0048c6   e103     bnz	0x48ce               	BNZ	_00449_DS_
                                           ;	.line	674; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
0048c8   ec6b     call	0x48d6, 0           	CALL	_WaitForSetupStage
0048ca   f024
                                           ;	.line	675; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UEP0bits.EPSTALL = 0;
0048cc   9070     bcf	0x70, 0, 0           	BCF	_UEP0bits, 0
                                           _00449_DS_:
                                           ;	.line	677; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.STALLIF = 0;
0048ce   9a68     bcf	0x68, 0x5, 0         	BCF	_UIRbits, 5
0048d0   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0048d2   f000
0048d4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__StartOfFrame	code
                                           _StartOfFrame:
                                           ;	.line	663; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.SOFIF = 0;
00201a   9c68     bcf	0x68, 0x6, 0         	BCF	_UIRbits, 6
00201c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__UnSuspend	code
                                           _UnSuspend:
                                           ;	.line	653; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.SUSPND = 0;
004930   926d     bcf	0x6d, 0x1, 0         	BCF	_UCONbits, 1
                                           ;	.line	654; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.ACTVIE = 0;
004932   9469     bcf	0x69, 0x2, 0         	BCF	_UIEbits, 2
                                           ;	.line	655; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIRbits.ACTVIF = 0;
004934   9468     bcf	0x68, 0x2, 0         	BCF	_UIRbits, 2
004936   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__EnableUSBModule	code
                                           _EnableUSBModule:
                                           ;	.line	623; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UCONbits.USBEN == 0) {
004838   b66d     btfsc	0x6d, 0x3, 0       	BTFSC	_UCONbits, 3
00483a   d006     bra	0x4848               	BRA	_00423_DS_
                                           ;	.line	627; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCON = 0;
00483c   6a6d     clrf	0x6d, 0             	CLRF	_UCON
                                           ;	.line	628; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIE = 0;
00483e   6a69     clrf	0x69, 0             	CLRF	_UIE
                                           ;	.line	629; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.USBEN = 1;
004840   866d     bsf	0x6d, 0x3, 0         	BSF	_UCONbits, 3
                                           ;	.line	630; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = ATTACHED;
004842   0e01     movlw	0x1                	MOVLW	0x01
004844   0103     movlb	0x3                	BANKSEL	_deviceState
004846   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           _00423_DS_:
004848   0103     movlb	0x3                	BANKSEL	_deviceState
                                           ;	.line	634; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((deviceState == ATTACHED) && !UCONbits.SE0) {
00484a   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
00484c   0a01     xorlw	0x1                	XORLW	0x01
00484e   e109     bnz	0x4862               	BNZ	_00427_DS_
004850   ba6d     btfsc	0x6d, 0x5, 0       	BTFSC	_UCONbits, 5
004852   d007     bra	0x4862               	BRA	_00427_DS_
                                           ;	.line	635; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIR = 0;
004854   6a68     clrf	0x68, 0             	CLRF	_UIR
                                           ;	.line	636; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIE = 0;
004856   6a69     clrf	0x69, 0             	CLRF	_UIE
                                           ;	.line	637; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.URSTIE = 1;
004858   8069     bsf	0x69, 0, 0           	BSF	_UIEbits, 0
                                           ;	.line	638; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UIEbits.IDLEIE = 1;
00485a   8869     bsf	0x69, 0x4, 0         	BSF	_UIEbits, 4
                                           ;	.line	639; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = POWERED;
00485c   0e02     movlw	0x2                	MOVLW	0x02
00485e   0103     movlb	0x3                	BANKSEL	_deviceState
004860   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           _00427_DS_:
004862   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessControlTransfer	code
                                           _ProcessControlTransfer:
                                           ;	.line	533; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void ProcessControlTransfer(void) {
004190   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
004192   ffe5
                                           ;	.line	537; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (USTATbits.DIR == OUT) {
004194   b46c     btfsc	0x6c, 0x2, 0       	BTFSC	_USTATbits, 2
004196   d022     bra	0x41dc               	BRA	_00393_DS_
                                           ;	.line	540; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte PID = (EP_OUT_BD(0).Stat.uc & 0x3C) >> 2;
004198   0e3c     movlw	0x3c               	MOVLW	0x3c
00419a   0104     movlb	0x4                	BANKSEL	_ep_bdt
00419c   1500     andwf	0, 0, 0x1          	ANDWF	_ep_bdt, W, B
00419e   6e00     movwf	0, 0               	MOVWF	r0x00
0041a0   4000     rrncf	0, 0, 0            	RRNCF	r0x00, W
0041a2   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0041a4   0b3f     andlw	0x3f               	ANDLW	0x3f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ;	.line	541; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (PID == 0x0D)
0041a6   0a0d     xorlw	0xd                	XORLW	0x0d
0041a8   e103     bnz	0x41b0               	BNZ	_00377_DS_
                                           ;	.line	543; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	SetupStage();
0041aa   ecc4     call	0x3d88, 0           	CALL	_SetupStage
0041ac   f01e
0041ae   d03e     bra	0x422c               	BRA	_00395_DS_
                                           _00377_DS_:
0041b0   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	544; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (ctrlTransferStage == DATA_OUT_STAGE) {
0041b2   511b     movf	0x1b, 0, 0x1        	MOVF	_ctrlTransferStage, W, B
0041b4   0a01     xorlw	0x1                	XORLW	0x01
0041b6   e10f     bnz	0x41d6               	BNZ	_00374_DS_
                                           ;	.line	547; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	OutDataStage(0);
0041b8   0e00     movlw	0                  	MOVLW	0x00
0041ba   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0041bc   ecde     call	0x31bc, 0           	CALL	_OutDataStage
0041be   f018
0041c0   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
0041c2   0104     movlb	0x4                	BANKSEL	_ep_bdt
                                           ;	.line	571; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(EP_OUT_BD(0).Stat.DTS)
0041c4   ad00     btfss	0, 0x6, 0x1        	BTFSS	_ep_bdt, 6, B
0041c6   d003     bra	0x41ce               	BRA	_00371_DS_
                                           ;	.line	572; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0041c8   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
0041ca   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
0041cc   d02f     bra	0x422c               	BRA	_00395_DS_
                                           _00371_DS_:
                                           ;	.line	574; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
0041ce   0ec8     movlw	0xc8               	MOVLW	0xc8
0041d0   0104     movlb	0x4                	BANKSEL	_ep_bdt
0041d2   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
0041d4   d02b     bra	0x422c               	BRA	_00395_DS_
                                           _00374_DS_:
                                           ;	.line	578; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
0041d6   ec6b     call	0x48d6, 0           	CALL	_WaitForSetupStage
0041d8   f024
0041da   d028     bra	0x422c               	BRA	_00395_DS_
                                           _00393_DS_:
                                           ;	.line	581; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if(USTATbits.DIR == IN) {
0041dc   6a00     clrf	0, 0                	CLRF	r0x00
0041de   b46c     btfsc	0x6c, 0x2, 0       	BTFSC	_USTATbits, 2
0041e0   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0041e2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0041e4   0a01     xorlw	0x1                	XORLW	0x01
0041e6   e122     bnz	0x422c               	BNZ	_00395_DS_
                                           ;	.line	583; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((UADDR == 0) && (deviceState == ADDRESS)) {
0041e8   506e     movf	0x6e, 0, 0          	MOVF	_UADDR, W
0041ea   e10b     bnz	0x4202               	BNZ	_00382_DS_
0041ec   0103     movlb	0x3                	BANKSEL	_deviceState
0041ee   5119     movf	0x19, 0, 0x1        	MOVF	_deviceState, W, B
0041f0   0a04     xorlw	0x4                	XORLW	0x04
0041f2   e107     bnz	0x4202               	BNZ	_00382_DS_
                                           ;	.line	586; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UADDR = SetupPacket.wValue0;
0041f4   c502     movff	0x502, 0xf6e       	MOVFF	(_SetupPacket + 2), _UADDR
0041f6   ff6e
                                           ;	.line	590; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(UADDR == 0)
0041f8   506e     movf	0x6e, 0, 0          	MOVF	_UADDR, W
0041fa   e103     bnz	0x4202               	BNZ	_00382_DS_
                                           ;	.line	593; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = DEFAULT;
0041fc   0e03     movlw	0x3                	MOVLW	0x03
0041fe   0103     movlb	0x3                	BANKSEL	_deviceState
004200   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           _00382_DS_:
004202   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	596; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (ctrlTransferStage == DATA_IN_STAGE) {
004204   511b     movf	0x1b, 0, 0x1        	MOVF	_ctrlTransferStage, W, B
004206   0a02     xorlw	0x2                	XORLW	0x02
004208   e10f     bnz	0x4228               	BNZ	_00388_DS_
                                           ;	.line	598; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	InDataStage(0);
00420a   0e00     movlw	0                  	MOVLW	0x00
00420c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00420e   ecfc     call	0x2ff8, 0           	CALL	_InDataStage
004210   f017
004212   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
004214   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	601; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(EP_IN_BD(0).Stat.DTS)
004216   ad04     btfss	0x4, 0x6, 0x1      	BTFSS	(_ep_bdt + 4), 6, B
004218   d003     bra	0x4220               	BRA	_00385_DS_
                                           ;	.line	602; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
00421a   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
00421c   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
00421e   d006     bra	0x422c               	BRA	_00395_DS_
                                           _00385_DS_:
                                           ;	.line	604; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
004220   0ec8     movlw	0xc8               	MOVLW	0xc8
004222   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
004224   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
004226   d002     bra	0x422c               	BRA	_00395_DS_
                                           _00388_DS_:
                                           ;	.line	608; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	WaitForSetupStage();
004228   ec6b     call	0x48d6, 0           	CALL	_WaitForSetupStage
00422a   f024
                                           _00395_DS_:
00422c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00422e   f000
004230   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__WaitForSetupStage	code
                                           _WaitForSetupStage:
0048d6   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	520; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
0048d8   6b1b     clrf	0x1b, 0x1           	CLRF	_ctrlTransferStage, B
                                           ;	.line	521; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0048da   0e40     movlw	0x40               	MOVLW	0x40
0048dc   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
0048de   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	522; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
0048e0   0e00     movlw	0                  	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
0048e2   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
0048e4   0e05     movlw	0x5                	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
0048e6   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	524; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTSEN;
0048e8   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
0048ea   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	525; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = 0x00;           // Give control to CPU
0048ec   6b04     clrf	0x4, 0x1            	CLRF	(_ep_bdt + 4), B
0048ee   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetupStage	code
                                           _SetupStage:
                                           ;	.line	450; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc &= ~BDS_UOWN;
003d88   0e7f     movlw	0x7f               	MOVLW	0x7f
003d8a   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
003d8c   1504     andwf	0x4, 0, 0x1        	ANDWF	(_ep_bdt + 4), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d8e   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	451; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc &= ~BDS_UOWN;
003d90   0e7f     movlw	0x7f               	MOVLW	0x7f
                                           ; removed redundant BANKSEL
003d92   1500     andwf	0, 0, 0x1          	ANDWF	_ep_bdt, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003d94   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
003d96   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
                                           ;	.line	454; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = SETUP_STAGE;
003d98   6b1b     clrf	0x1b, 0x1           	CLRF	_ctrlTransferStage, B
003d9a   0103     movlb	0x3                	BANKSEL	_requestHandled
                                           ;	.line	455; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 0;                   // Default is that request hasn't been handled
003d9c   6b16     clrf	0x16, 0x1           	CLRF	_requestHandled, B
003d9e   0103     movlb	0x3                	BANKSEL	_HIDPostProcess
                                           ;	.line	456; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	HIDPostProcess = 0;                   // Assume standard request until know otherwise
003da0   6b11     clrf	0x11, 0x1           	CLRF	_HIDPostProcess, B
003da2   0102     movlb	0x2                	BANKSEL	_wCount
                                           ;	.line	457; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 0;                           // No bytes transferred
003da4   6bfe     clrf	0xfe, 0x1           	CLRF	_wCount, B
                                           ; removed redundant BANKSEL
003da6   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
                                           ;	.line	460; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ProcessStandardRequest();
003da8   ec8c     call	0x3b18, 0           	CALL	_ProcessStandardRequest
003daa   f01d
                                           ;	.line	470; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((SetupPacket.bmRequestType & USB_RECIP_MASK) == USB_RECIP_INTERFACE)  
003dac   0e1f     movlw	0x1f               	MOVLW	0x1f
003dae   0105     movlb	0x5                	BANKSEL	_SetupPacket
003db0   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003db2   0a01     xorlw	0x1                	XORLW	0x01
003db4   e102     bnz	0x3dba               	BNZ	_00338_DS_
                                           ;	.line	471; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ProcessCDCRequest();
003db6   ec81     call	0x3f02, 0           	CALL	_ProcessCDCRequest
003db8   f01f
                                           _00338_DS_:
003dba   0103     movlb	0x3                	BANKSEL	_requestHandled
                                           ;	.line	474; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (!requestHandled) {
003dbc   5116     movf	0x16, 0, 0x1        	MOVF	_requestHandled, W, B
003dbe   e10b     bnz	0x3dd6               	BNZ	_00345_DS_
                                           ;	.line	476; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003dc0   0e40     movlw	0x40               	MOVLW	0x40
003dc2   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
003dc4   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	477; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
003dc6   0e00     movlw	0                  	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
003dc8   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
003dca   0e05     movlw	0x5                	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
003dcc   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ;	.line	478; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
003dce   0e84     movlw	0x84               	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	479; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_BSTALL;
003dd0   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
003dd2   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
003dd4   d038     bra	0x3e46               	BRA	_00346_DS_
                                           _00345_DS_:
003dd6   0105     movlb	0x5                	BANKSEL	_SetupPacket
                                           ;	.line	481; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (SetupPacket.bmRequestType & 0x80) {
003dd8   af00     btfss	0, 0x7, 0x1        	BTFSS	_SetupPacket, 7, B
003dda   d026     bra	0x3e28               	BRA	_00342_DS_
003ddc   0102     movlb	0x2                	BANKSEL	(_wCount + 1)
                                           ;	.line	483; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(SetupPacket.wLength < wCount)
003dde   51ff     movf	0xff, 0, 0x1        	MOVF	(_wCount + 1), W, B
003de0   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 7)
003de2   5d07     subwf	0x7, 0, 0x1        	SUBWF	(_SetupPacket + 7), W, B
003de4   e104     bnz	0x3dee               	BNZ	_00360_DS_
003de6   0102     movlb	0x2                	BANKSEL	_wCount
003de8   51fe     movf	0xfe, 0, 0x1        	MOVF	_wCount, W, B
003dea   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 6)
003dec   5d06     subwf	0x6, 0, 0x1        	SUBWF	(_SetupPacket + 6), W, B
                                           _00360_DS_:
003dee   e204     bc	0x3df8                	BC	_00340_DS_
                                           ;	.line	484; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = SetupPacket.wLength;
003df0   c506     movff	0x506, 0x2fe       	MOVFF	(_SetupPacket + 6), _wCount
003df2   f2fe
003df4   c507     movff	0x507, 0x2ff       	MOVFF	(_SetupPacket + 7), (_wCount + 1)
003df6   f2ff
                                           _00340_DS_:
                                           ;	.line	485; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	InDataStage(0);
003df8   0e00     movlw	0                  	MOVLW	0x00
003dfa   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003dfc   ecfc     call	0x2ff8, 0           	CALL	_InDataStage
003dfe   f017
003e00   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	486; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = DATA_IN_STAGE;
003e02   0e02     movlw	0x2                	MOVLW	0x02
003e04   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
003e06   6f1b     movwf	0x1b, 0x1          	MOVWF	_ctrlTransferStage, B
                                           ;	.line	488; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003e08   0e40     movlw	0x40               	MOVLW	0x40
003e0a   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
003e0c   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	489; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&SetupPacket);
003e0e   0e00     movlw	0                  	MOVLW	LOW(_SetupPacket)
                                           ; removed redundant BANKSEL
003e10   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
003e12   0e05     movlw	0x5                	MOVLW	HIGH(_SetupPacket)
                                           ; removed redundant BANKSEL
003e14   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	490; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN;
003e16   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003e18   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ;	.line	493; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).ADDR = PTR16(&controlTransferBuffer);
003e1a   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003e1c   6f06     movwf	0x6, 0x1           	MOVWF	(_ep_bdt + 6), B
003e1e   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003e20   6f07     movwf	0x7, 0x1           	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	495; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003e22   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003e24   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
003e26   d00f     bra	0x3e46               	BRA	_00346_DS_
                                           _00342_DS_:
                                           ;	.line	499; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	ctrlTransferStage = DATA_OUT_STAGE;
003e28   0e01     movlw	0x1                	MOVLW	0x01
003e2a   0103     movlb	0x3                	BANKSEL	_ctrlTransferStage
003e2c   6f1b     movwf	0x1b, 0x1          	MOVWF	_ctrlTransferStage, B
003e2e   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 5)
                                           ;	.line	502; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Cnt = 0;
003e30   6b05     clrf	0x5, 0x1            	CLRF	(_ep_bdt + 5), B
                                           ;	.line	503; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003e32   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003e34   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
                                           ;	.line	506; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
003e36   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
003e38   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	507; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).ADDR = PTR16(&controlTransferBuffer);
003e3a   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003e3c   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
003e3e   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003e40   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	509; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_OUT_BD(0).Stat.uc = BDS_UOWN | BDS_DTS | BDS_DTSEN;
003e42   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
003e44   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           _00346_DS_:
                                           ;	.line	513; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	UCONbits.PKTDIS = 0;
003e46   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
003e48   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__OutDataStage	code
                                           _OutDataStage:
                                           ;	.line	411; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void OutDataStage(unsigned char ep) {
0031bc   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0031be   ffe5
0031c0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0031c2   ffd9
0031c4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0031c6   ffe5
0031c8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0031ca   ffe5
0031cc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0031ce   ffe5
0031d0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0031d2   ffe5
0031d4   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0031d6   ffe5
0031d8   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0031da   ffe5
0031dc   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0031de   ffe5
0031e0   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0031e2   ffe5
0031e4   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0031e6   ffe5
0031e8   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
0031ea   ffe5
0031ec   0e02     movlw	0x2                	MOVLW	0x02
0031ee   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0031f0   f000
                                           ;	.line	414; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	bufferSize = ((0x03 & EP_OUT_BD(ep).Stat.uc) << 8) | EP_OUT_BD(ep).Cnt;
0031f2   4400     rlncf	0, 0, 0            	RLNCF	r0x00, W
0031f4   0bfe     andlw	0xfe               	ANDLW	0xfe
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x01, W
0031f6   0d04     mullw	0x4                	MULLW	0x04
0031f8   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0031fa   f000
0031fc   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0031fe   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003200   6e01     movwf	0x1, 0             	MOVWF	r0x01
003202   6a02     clrf	0x2, 0              	CLRF	r0x02
003204   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003206   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003208   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
00320a   ffe9
00320c   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
00320e   ffea
003210   cfef     movff	0xfef, 0x1         	MOVFF	INDF0, r0x01
003212   f001
003214   0e03     movlw	0x3                	MOVLW	0x03
003216   1601     andwf	0x1, 0x1, 0        	ANDWF	r0x01, F
003218   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00321a   6e04     movwf	0x4, 0             	MOVWF	r0x04
00321c   6a03     clrf	0x3, 0              	CLRF	r0x03
00321e   6a01     clrf	0x1, 0              	CLRF	r0x01
003220   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003222   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003224   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003226   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003228   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
00322a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00322c   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
00322e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003230   ffe9
003232   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003234   ffea
003236   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003238   f000
00323a   6a01     clrf	0x1, 0              	CLRF	r0x01
00323c   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00323e   1200     iorwf	0, 0x1, 0          	IORWF	r0x00, F
003240   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003242   1201     iorwf	0x1, 0x1, 0        	IORWF	r0x01, F
                                           ;	.line	421; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = wCount + bufferSize;
003244   5000     movf	0, 0, 0             	MOVF	r0x00, W
003246   0102     movlb	0x2                	BANKSEL	_wCount
003248   27fe     addwf	0xfe, 0x1, 0x1     	ADDWF	_wCount, F, B
00324a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00324c   23ff     addwfc	0xff, 0x1, 0x1    	ADDWFC	(_wCount + 1), F, B
                                           ;	.line	423; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte*)&controlTransferBuffer;
00324e   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
003250   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003252   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003254   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003256   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003258   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
00325a   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	427; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
00325c   6a02     clrf	0x2, 0              	CLRF	r0x02
00325e   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00321_DS_:
003260   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003262   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003264   e102     bnz	0x326a               	BNZ	_00332_DS_
003266   5000     movf	0, 0, 0             	MOVF	r0x00, W
003268   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00332_DS_:
00326a   e22f     bc	0x32ca                	BC	_00325_DS_
                                           ;	.line	431; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr++ = *outPtr++;
00326c   c30a     movff	0x30a, 0x4         	MOVFF	_inPtr, r0x04
00326e   f004
003270   c30b     movff	0x30b, 0x5         	MOVFF	(_inPtr + 1), r0x05
003272   f005
003274   c30c     movff	0x30c, 0x6         	MOVFF	(_inPtr + 2), r0x06
003276   f006
003278   c307     movff	0x307, 0x7         	MOVFF	_outPtr, r0x07
00327a   f007
00327c   c308     movff	0x308, 0x8         	MOVFF	(_outPtr + 1), r0x08
00327e   f008
003280   c309     movff	0x309, 0x9         	MOVFF	(_outPtr + 2), r0x09
003282   f009
003284   c007     movff	0x7, 0xfe9         	MOVFF	r0x07, FSR0L
003286   ffe9
003288   c008     movff	0x8, 0xff3         	MOVFF	r0x08, PRODL
00328a   fff3
00328c   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
00328e   ec29     call	0x52, 0             	CALL	__gptrget1
003290   f000
003292   6e07     movwf	0x7, 0             	MOVWF	r0x07
003294   0103     movlb	0x3                	BANKSEL	_outPtr
003296   2b07     incf	0x7, 0x1, 0x1       	INCF	_outPtr, F, B
003298   e301     bnc	0x329c               	BNC	_11269_DS_
                                           ; removed redundant BANKSEL
00329a   2b08     incf	0x8, 0x1, 0x1       	INCF	(_outPtr + 1), F, B
                                           _11269_DS_:
00329c   e302     bnc	0x32a2               	BNC	_21270_DS_
00329e   0103     movlb	0x3                	BANKSEL	(_outPtr + 2)
0032a0   2b09     incf	0x9, 0x1, 0x1       	INCF	(_outPtr + 2), F, B
                                           _21270_DS_:
0032a2   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0032a4   ffe5
0032a6   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
0032a8   ffe9
0032aa   c005     movff	0x5, 0xff3         	MOVFF	r0x05, PRODL
0032ac   fff3
0032ae   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
0032b0   ec31     call	0x62, 0             	CALL	__gptrput1
0032b2   f000
0032b4   0103     movlb	0x3                	BANKSEL	_inPtr
0032b6   2b0a     incf	0xa, 0x1, 0x1       	INCF	_inPtr, F, B
0032b8   e301     bnc	0x32bc               	BNC	_31271_DS_
                                           ; removed redundant BANKSEL
0032ba   2b0b     incf	0xb, 0x1, 0x1       	INCF	(_inPtr + 1), F, B
                                           _31271_DS_:
0032bc   e302     bnc	0x32c2               	BNC	_41272_DS_
0032be   0103     movlb	0x3                	BANKSEL	(_inPtr + 2)
0032c0   2b0c     incf	0xc, 0x1, 0x1       	INCF	(_inPtr + 2), F, B
                                           _41272_DS_:
                                           ;	.line	427; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
0032c2   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
0032c4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032c6   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0032c8   d7cb     bra	0x3260               	BRA	_00321_DS_
                                           _00325_DS_:
0032ca   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0032cc   f009
0032ce   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0032d0   f008
0032d2   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0032d4   f007
0032d6   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0032d8   f006
0032da   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0032dc   f005
0032de   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0032e0   f004
0032e2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0032e4   f003
0032e6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0032e8   f002
0032ea   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0032ec   f001
0032ee   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0032f0   f000
0032f2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0032f4   ffd9
0032f6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__InDataStage	code
                                           _InDataStage:
                                           ;	.line	364; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void InDataStage(unsigned char ep) {
002ff8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002ffa   ffe5
002ffc   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002ffe   ffd9
003000   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003002   ffe5
003004   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003006   ffe5
003008   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00300a   ffe5
00300c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00300e   ffe5
003010   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003012   ffe5
003014   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003016   ffe5
003018   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00301a   ffe5
00301c   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00301e   ffe5
003020   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
003022   ffe5
003024   0e02     movlw	0x2                	MOVLW	0x02
003026   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003028   f000
                                           ;	.line	371; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(wCount < EP0_BUFFER_SIZE)
00302a   0e00     movlw	0                  	MOVLW	0x00
00302c   0102     movlb	0x2                	BANKSEL	(_wCount + 1)
00302e   5dff     subwf	0xff, 0, 0x1       	SUBWF	(_wCount + 1), W, B
003030   e102     bnz	0x3036               	BNZ	_00310_DS_
003032   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
003034   5dfe     subwf	0xfe, 0, 0x1       	SUBWF	_wCount, W, B
                                           _00310_DS_:
003036   e205     bc	0x3042                	BC	_00298_DS_
                                           ;	.line	372; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	bufferSize = wCount;
003038   c2fe     movff	0x2fe, 0x1         	MOVFF	_wCount, r0x01
00303a   f001
00303c   c2ff     movff	0x2ff, 0x2         	MOVFF	(_wCount + 1), r0x02
00303e   f002
003040   d003     bra	0x3048               	BRA	_00299_DS_
                                           _00298_DS_:
                                           ;	.line	374; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	bufferSize = EP0_BUFFER_SIZE;
003042   0e40     movlw	0x40               	MOVLW	0x40
003044   6e01     movwf	0x1, 0             	MOVWF	r0x01
003046   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           _00299_DS_:
                                           ;	.line	382; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).Stat.uc &= ~(BDS_BC8 | BDS_BC9);
003048   4400     rlncf	0, 0, 0            	RLNCF	r0x00, W
00304a   0bfe     andlw	0xfe               	ANDLW	0xfe
00304c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00304e   2803     incf	0x3, 0, 0           	INCF	r0x03, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x00, W
003050   0d04     mullw	0x4                	MULLW	0x04
003052   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
003054   f000
003056   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003058   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00305a   6e03     movwf	0x3, 0             	MOVWF	r0x03
00305c   6a04     clrf	0x4, 0              	CLRF	r0x04
00305e   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003060   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003062   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003064   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003066   6e05     movwf	0x5, 0             	MOVWF	r0x05
003068   6a06     clrf	0x6, 0              	CLRF	r0x06
00306a   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
00306c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00306e   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
003070   ffe9
003072   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
003074   ffea
003076   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
003078   f005
00307a   0efc     movlw	0xfc               	MOVLW	0xfc
00307c   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
00307e   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
003080   ffe9
003082   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
003084   ffea
003086   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
003088   ffef
                                           ;	.line	383; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).Stat.uc |= (byte)((bufferSize & 0x0300) >> 8);
00308a   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
00308c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00308e   6e03     movwf	0x3, 0             	MOVWF	r0x03
003090   6a04     clrf	0x4, 0              	CLRF	r0x04
003092   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
003094   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003096   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
003098   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00309a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00309c   6a06     clrf	0x6, 0              	CLRF	r0x06
00309e   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0030a0   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0030a2   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0030a4   ffe9
0030a6   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0030a8   ffea
0030aa   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
0030ac   f005
0030ae   0e03     movlw	0x3                	MOVLW	0x03
0030b0   1402     andwf	0x2, 0, 0          	ANDWF	r0x02, W
                                           ; #	MOVWF	r0x07
                                           ; #	MOVF	r0x07, W
0030b2   1205     iorwf	0x5, 0x1, 0        	IORWF	r0x05, F
0030b4   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0030b6   ffe9
0030b8   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
0030ba   ffea
0030bc   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0030be   ffef
                                           ;	.line	384; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).Cnt = (byte)(bufferSize & 0xFF);
0030c0   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0030c2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030c4   6e03     movwf	0x3, 0             	MOVWF	r0x03
0030c6   6a04     clrf	0x4, 0              	CLRF	r0x04
0030c8   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0030ca   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0030cc   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0030ce   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0030d0   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0030d2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0030d4   6e05     movwf	0x5, 0             	MOVWF	r0x05
0030d6   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0030d8   ffe9
0030da   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
0030dc   ffea
0030de   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0030e0   ffef
                                           ;	.line	385; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	EP_IN_BD(ep).ADDR = PTR16(&controlTransferBuffer);
0030e2   6a03     clrf	0x3, 0              	CLRF	r0x03
0030e4   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0030e6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0030e8   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0030ea   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
0030ec   0e02     movlw	0x2                	MOVLW	0x02
0030ee   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0030f0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0030f2   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0030f4   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
0030f6   6e04     movwf	0x4, 0             	MOVWF	r0x04
0030f8   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
0030fa   6e05     movwf	0x5, 0             	MOVWF	r0x05
0030fc   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0030fe   ffe9
003100   c003     movff	0x3, 0xfea         	MOVFF	r0x03, FSR0H
003102   ffea
003104   c004     movff	0x4, 0xfee         	MOVFF	r0x04, POSTINC0
003106   ffee
003108   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
00310a   ffef
                                           ;	.line	390; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = wCount - bufferSize;
00310c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00310e   0102     movlb	0x2                	BANKSEL	_wCount
003110   5ffe     subwf	0xfe, 0x1, 0x1     	SUBWF	_wCount, F, B
003112   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
003114   5bff     subwfb	0xff, 0x1, 0x1    	SUBWFB	(_wCount + 1), F, B
                                           ;	.line	393; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr = (byte *)&controlTransferBuffer;
003116   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
003118   0103     movlb	0x3                	BANKSEL	(_inPtr + 1)
00311a   6f0b     movwf	0xb, 0x1           	MOVWF	(_inPtr + 1), B
00311c   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
00311e   6f0a     movwf	0xa, 0x1           	MOVWF	_inPtr, B
003120   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003122   6f0c     movwf	0xc, 0x1           	MOVWF	(_inPtr + 2), B
                                           ;	.line	398; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
003124   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00300_DS_:
003126   c000     movff	0, 0x3             	MOVFF	r0x00, r0x03
003128   f003
00312a   6a04     clrf	0x4, 0              	CLRF	r0x04
00312c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00312e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
003130   e102     bnz	0x3136               	BNZ	_00316_DS_
003132   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003134   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
                                           _00316_DS_:
003136   e22d     bc	0x3192                	BC	_00304_DS_
                                           ;	.line	402; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr++ = *outPtr++;
003138   c30a     movff	0x30a, 0x3         	MOVFF	_inPtr, r0x03
00313a   f003
00313c   c30b     movff	0x30b, 0x4         	MOVFF	(_inPtr + 1), r0x04
00313e   f004
003140   c30c     movff	0x30c, 0x5         	MOVFF	(_inPtr + 2), r0x05
003142   f005
003144   c307     movff	0x307, 0x6         	MOVFF	_outPtr, r0x06
003146   f006
003148   c308     movff	0x308, 0x7         	MOVFF	(_outPtr + 1), r0x07
00314a   f007
00314c   c309     movff	0x309, 0x8         	MOVFF	(_outPtr + 2), r0x08
00314e   f008
003150   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
003152   ffe9
003154   c007     movff	0x7, 0xff3         	MOVFF	r0x07, PRODL
003156   fff3
003158   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00315a   ec29     call	0x52, 0             	CALL	__gptrget1
00315c   f000
00315e   6e06     movwf	0x6, 0             	MOVWF	r0x06
003160   0103     movlb	0x3                	BANKSEL	_outPtr
003162   2b07     incf	0x7, 0x1, 0x1       	INCF	_outPtr, F, B
003164   e301     bnc	0x3168               	BNC	_51273_DS_
                                           ; removed redundant BANKSEL
003166   2b08     incf	0x8, 0x1, 0x1       	INCF	(_outPtr + 1), F, B
                                           _51273_DS_:
003168   e302     bnc	0x316e               	BNC	_61274_DS_
00316a   0103     movlb	0x3                	BANKSEL	(_outPtr + 2)
00316c   2b09     incf	0x9, 0x1, 0x1       	INCF	(_outPtr + 2), F, B
                                           _61274_DS_:
00316e   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003170   ffe5
003172   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
003174   ffe9
003176   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
003178   fff3
00317a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00317c   ec31     call	0x62, 0             	CALL	__gptrput1
00317e   f000
003180   0103     movlb	0x3                	BANKSEL	_inPtr
003182   2b0a     incf	0xa, 0x1, 0x1       	INCF	_inPtr, F, B
003184   e301     bnc	0x3188               	BNC	_71275_DS_
                                           ; removed redundant BANKSEL
003186   2b0b     incf	0xb, 0x1, 0x1       	INCF	(_inPtr + 1), F, B
                                           _71275_DS_:
003188   e302     bnc	0x318e               	BNC	_81276_DS_
00318a   0103     movlb	0x3                	BANKSEL	(_inPtr + 2)
00318c   2b0c     incf	0xc, 0x1, 0x1       	INCF	(_inPtr + 2), F, B
                                           _81276_DS_:
                                           ;	.line	398; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	for (i=0;i<bufferSize;i++) {
00318e   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003190   d7ca     bra	0x3126               	BRA	_00300_DS_
                                           _00304_DS_:
003192   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
003194   f008
003196   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003198   f007
00319a   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00319c   f006
00319e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0031a0   f005
0031a2   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0031a4   f004
0031a6   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0031a8   f003
0031aa   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0031ac   f002
0031ae   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0031b0   f001
0031b2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0031b4   f000
0031b6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0031b8   ffd9
0031ba   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ProcessStandardRequest	code
                                           _ProcessStandardRequest:
                                           ;	.line	253; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	void ProcessStandardRequest(void) {
003b18   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003b1a   ffe5
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte request = SetupPacket.bRequest;
003b1c   c501     movff	0x501, 0           	MOVFF	(_SetupPacket + 1), r0x00
003b1e   f000
003b20   0105     movlb	0x5                	BANKSEL	_SetupPacket
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if((SetupPacket.bmRequestType & 0x60) != 0x00)
003b22   5100     movf	0, 0, 0x1           	MOVF	_SetupPacket, W, B
                                           ; #	ANDLW	0x60
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00231_DS_
                                           ; #	GOTO	_00263_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	259; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	return;
003b24   0b60     andlw	0x60               	ANDLW	0x60
                                           ;	.line	261; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (request == SET_ADDRESS) {
003b26   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
003b28   d061     bra	0x3bec               	BRA	_00263_DS_
003b2a   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b2c   0a05     xorlw	0x5                	XORLW	0x05
003b2e   e109     bnz	0x3b42               	BNZ	_00261_DS_
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003b30   0e01     movlw	0x1                	MOVLW	0x01
003b32   0103     movlb	0x3                	BANKSEL	_requestHandled
003b34   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	270; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = ADDRESS;
003b36   0e04     movlw	0x4                	MOVLW	0x04
003b38   0103     movlb	0x3                	BANKSEL	_deviceState
003b3a   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           ;	.line	271; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceAddress = SetupPacket.wValue0;
003b3c   c502     movff	0x502, 0x310       	MOVFF	(_SetupPacket + 2), _deviceAddress
003b3e   f310
003b40   d055     bra	0x3bec               	BRA	_00263_DS_
                                           _00261_DS_:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_DESCRIPTOR) {
003b42   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b44   0a06     xorlw	0x6                	XORLW	0x06
003b46   e103     bnz	0x3b4e               	BNZ	_00258_DS_
                                           ;	.line	274; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	GetDescriptor();
003b48   eca9     call	0x3952, 0           	CALL	_GetDescriptor
003b4a   f01c
003b4c   d04f     bra	0x3bec               	BRA	_00263_DS_
                                           _00258_DS_:
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == SET_CONFIGURATION) {
003b4e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b50   0a09     xorlw	0x9                	XORLW	0x09
003b52   e112     bnz	0x3b78               	BNZ	_00255_DS_
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003b54   0e01     movlw	0x1                	MOVLW	0x01
003b56   0103     movlb	0x3                	BANKSEL	_requestHandled
003b58   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	281; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	currentConfiguration = SetupPacket.wValue0;
003b5a   c502     movff	0x502, 0x31a       	MOVFF	(_SetupPacket + 2), _currentConfiguration
003b5c   f31a
003b5e   0103     movlb	0x3                	BANKSEL	_currentConfiguration
                                           ;	.line	284; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (currentConfiguration == 0)
003b60   511a     movf	0x1a, 0, 0x1        	MOVF	_currentConfiguration, W, B
003b62   e104     bnz	0x3b6c               	BNZ	_00233_DS_
                                           ;	.line	287; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = ADDRESS;
003b64   0e04     movlw	0x4                	MOVLW	0x04
003b66   0103     movlb	0x3                	BANKSEL	_deviceState
003b68   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
003b6a   d040     bra	0x3bec               	BRA	_00263_DS_
                                           _00233_DS_:
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	deviceState = CONFIGURED;
003b6c   0e05     movlw	0x5                	MOVLW	0x05
003b6e   0103     movlb	0x3                	BANKSEL	_deviceState
003b70   6f19     movwf	0x19, 0x1          	MOVWF	_deviceState, B
                                           ;	.line	300; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	CDCInitEndpoint();
003b72   ec1a     call	0x4634, 0           	CALL	_CDCInitEndpoint
003b74   f023
003b76   d03a     bra	0x3bec               	BRA	_00263_DS_
                                           _00255_DS_:
                                           ;	.line	310; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_CONFIGURATION) {
003b78   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b7a   0a08     xorlw	0x8                	XORLW	0x08
003b7c   e10f     bnz	0x3b9c               	BNZ	_00252_DS_
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003b7e   0e01     movlw	0x1                	MOVLW	0x01
003b80   0103     movlb	0x3                	BANKSEL	_requestHandled
003b82   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	315; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte*)&currentConfiguration;
003b84   0e03     movlw	0x3                	MOVLW	HIGH(_currentConfiguration)
003b86   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003b88   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003b8a   0e1a     movlw	0x1a               	MOVLW	LOW(_currentConfiguration)
                                           ; removed redundant BANKSEL
003b8c   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003b8e   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003b90   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	316; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 1;
003b92   0e01     movlw	0x1                	MOVLW	0x01
003b94   0102     movlb	0x2                	BANKSEL	_wCount
003b96   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003b98   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
003b9a   d028     bra	0x3bec               	BRA	_00263_DS_
                                           _00252_DS_:
                                           ;	.line	318; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_STATUS) {
003b9c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b9e   e103     bnz	0x3ba6               	BNZ	_00249_DS_
                                           ;	.line	319; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	GetStatus();
003ba0   ec33     call	0x3866, 0           	CALL	_GetStatus
003ba2   f01c
003ba4   d023     bra	0x3bec               	BRA	_00263_DS_
                                           _00249_DS_:
                                           ;	.line	321; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if ((request == CLEAR_FEATURE) ||
003ba6   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ba8   0a01     xorlw	0x1                	XORLW	0x01
003baa   e003     bz	0x3bb2                	BZ	_00244_DS_
                                           ;	.line	322; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	(request == SET_FEATURE)) {
003bac   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bae   0a03     xorlw	0x3                	XORLW	0x03
003bb0   e103     bnz	0x3bb8               	BNZ	_00245_DS_
                                           _00244_DS_:
                                           ;	.line	323; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	SetFeature();
003bb2   ec25     call	0x364a, 0           	CALL	_SetFeature
003bb4   f01b
003bb6   d01a     bra	0x3bec               	BRA	_00263_DS_
                                           _00245_DS_:
                                           ;	.line	325; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == GET_INTERFACE) {
003bb8   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bba   0a0a     xorlw	0xa                	XORLW	0x0a
003bbc   e111     bnz	0x3be0               	BNZ	_00242_DS_
                                           ;	.line	331; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003bbe   0e01     movlw	0x1                	MOVLW	0x01
003bc0   0103     movlb	0x3                	BANKSEL	_requestHandled
003bc2   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
003bc4   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
                                           ;	.line	332; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] = 0;
003bc6   6b40     clrf	0x40, 0x1           	CLRF	_controlTransferBuffer, B
                                           ;	.line	333; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&controlTransferBuffer;
003bc8   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
003bca   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003bcc   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003bce   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003bd0   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003bd2   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
003bd4   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	334; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 1;
003bd6   0e01     movlw	0x1                	MOVLW	0x01
003bd8   0102     movlb	0x2                	BANKSEL	_wCount
003bda   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003bdc   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
003bde   d006     bra	0x3bec               	BRA	_00263_DS_
                                           _00242_DS_:
                                           ;	.line	336; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == SET_INTERFACE) {
003be0   5000     movf	0, 0, 0             	MOVF	r0x00, W
003be2   0a0b     xorlw	0xb                	XORLW	0x0b
003be4   e103     bnz	0x3bec               	BNZ	_00263_DS_
                                           ;	.line	341; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003be6   0e01     movlw	0x1                	MOVLW	0x01
003be8   0103     movlb	0x3                	BANKSEL	_requestHandled
003bea   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           _00263_DS_:
                                           ;	.line	348; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (request == SYNCH_FRAME) {
003bec   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003bee   f000
003bf0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SetFeature	code
                                           _SetFeature:
                                           ;	.line	209; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	static void SetFeature(void) {
00364a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00364c   ffe5
00364e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003650   ffe5
003652   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003654   ffe5
003656   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003658   ffe5
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte recipient = SetupPacket.bmRequestType & 0x1F;
00365a   0e1f     movlw	0x1f               	MOVLW	0x1f
00365c   0105     movlb	0x5                	BANKSEL	_SetupPacket
00365e   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
003660   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	211; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte feature = SetupPacket.wValue0;
003662   c502     movff	0x502, 0x1         	MOVFF	(_SetupPacket + 2), r0x01
003664   f001
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (recipient == 0x00) {
003666   5000     movf	0, 0, 0             	MOVF	r0x00, W
003668   e112     bnz	0x368e               	BNZ	_00200_DS_
                                           ;	.line	218; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (feature == DEVICE_REMOTE_WAKEUP) {
00366a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00366c   0a01     xorlw	0x1                	XORLW	0x01
00366e   e001     bz	0x3672                	BZ	_00215_DS_
003670   d06f     bra	0x3750               	BRA	_00202_DS_
                                           _00215_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003672   0e01     movlw	0x1                	MOVLW	0x01
003674   0103     movlb	0x3                	BANKSEL	_requestHandled
003676   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
003678   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (SetupPacket.bRequest == SET_FEATURE)
00367a   5101     movf	0x1, 0, 0x1         	MOVF	(_SetupPacket + 1), W, B
00367c   0a03     xorlw	0x3                	XORLW	0x03
00367e   e104     bnz	0x3688               	BNZ	_00182_DS_
                                           ;	.line	221; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	remoteWakeup = 1;
003680   0e01     movlw	0x1                	MOVLW	0x01
003682   0103     movlb	0x3                	BANKSEL	_remoteWakeup
003684   6f18     movwf	0x18, 0x1          	MOVWF	_remoteWakeup, B
003686   d064     bra	0x3750               	BRA	_00202_DS_
                                           _00182_DS_:
003688   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	223; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	remoteWakeup = 0;
00368a   6b18     clrf	0x18, 0x1           	CLRF	_remoteWakeup, B
00368c   d061     bra	0x3750               	BRA	_00202_DS_
                                           _00200_DS_:
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (recipient == 0x02) {
00368e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003690   0a02     xorlw	0x2                	XORLW	0x02
003692   e001     bz	0x3696                	BZ	_00219_DS_
003694   d05d     bra	0x3750               	BRA	_00202_DS_
                                           _00219_DS_:
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointNum = SetupPacket.wIndex0 & 0x0F;
003696   0e0f     movlw	0xf                	MOVLW	0x0f
003698   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 4)
00369a   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
00369c   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointDir = SetupPacket.wIndex0 & 0x80;
00369e   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0036a0   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
0036a2   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if ((feature == ENDPOINT_HALT) && (endpointNum != 0)) {
0036a4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0036a6   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
0036a8   d053     bra	0x3750               	BRA	_00202_DS_
0036aa   5000     movf	0, 0, 0             	MOVF	r0x00, W
0036ac   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
0036ae   d050     bra	0x3750               	BRA	_00202_DS_
                                           ;	.line	233; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
0036b0   0e01     movlw	0x1                	MOVLW	0x01
0036b2   0103     movlb	0x3                	BANKSEL	_requestHandled
0036b4   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	236; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr = (byte *)&EP_OUT_BD(0) + (endpointNum * 8);
0036b6   5000     movf	0, 0, 0             	MOVF	r0x00, W
0036b8   0d08     mullw	0x8                	MULLW	0x08
0036ba   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0036bc   f000
0036be   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
0036c0   f001
0036c2   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0036c4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0036c6   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0036c8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0036ca   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0036cc   0103     movlb	0x3                	BANKSEL	(_inPtr + 1)
0036ce   6f0b     movwf	0xb, 0x1           	MOVWF	(_inPtr + 1), B
0036d0   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0036d2   6f0a     movwf	0xa, 0x1           	MOVWF	_inPtr, B
0036d4   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0036d6   6f0c     movwf	0xc, 0x1           	MOVWF	(_inPtr + 2), B
                                           ;	.line	237; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (endpointDir)
0036d8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0036da   e005     bz	0x36e6                	BZ	_00187_DS_
                                           ;	.line	238; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr += 4;
0036dc   0e04     movlw	0x4                	MOVLW	0x04
                                           ; removed redundant BANKSEL
0036de   270a     addwf	0xa, 0x1, 0x1      	ADDWF	_inPtr, F, B
0036e0   0e00     movlw	0                  	MOVLW	0x00
                                           ; removed redundant BANKSEL
0036e2   230b     addwfc	0xb, 0x1, 0x1     	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
0036e4   230c     addwfc	0xc, 0x1, 0x1     	ADDWFC	(_inPtr + 2), F, B
                                           _00187_DS_:
0036e6   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 1)
                                           ;	.line	240; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(SetupPacket.bRequest == SET_FEATURE)
0036e8   5101     movf	0x1, 0, 0x1         	MOVF	(_SetupPacket + 1), W, B
0036ea   0a03     xorlw	0x3                	XORLW	0x03
0036ec   e110     bnz	0x370e               	BNZ	_00192_DS_
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr = 0x84;
0036ee   c30a     movff	0x30a, 0           	MOVFF	_inPtr, r0x00
0036f0   f000
0036f2   c30b     movff	0x30b, 0x1         	MOVFF	(_inPtr + 1), r0x01
0036f4   f001
0036f6   c30c     movff	0x30c, 0x3         	MOVFF	(_inPtr + 2), r0x03
0036f8   f003
0036fa   0e84     movlw	0x84               	MOVLW	0x84
0036fc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036fe   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003700   ffe9
003702   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003704   fff3
003706   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003708   ec31     call	0x62, 0             	CALL	__gptrput1
00370a   f000
00370c   d021     bra	0x3750               	BRA	_00202_DS_
                                           _00192_DS_:
                                           ;	.line	243; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(endpointDir == 1)
00370e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003710   0a01     xorlw	0x1                	XORLW	0x01
003712   e10f     bnz	0x3732               	BNZ	_00189_DS_
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr = 0x00;
003714   c30a     movff	0x30a, 0           	MOVFF	_inPtr, r0x00
003716   f000
003718   c30b     movff	0x30b, 0x1         	MOVFF	(_inPtr + 1), r0x01
00371a   f001
00371c   c30c     movff	0x30c, 0x2         	MOVFF	(_inPtr + 2), r0x02
00371e   f002
003720   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003722   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003724   ffe9
003726   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003728   fff3
00372a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00372c   ec31     call	0x62, 0             	CALL	__gptrput1
00372e   f000
003730   d00f     bra	0x3750               	BRA	_00202_DS_
                                           _00189_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	*inPtr = 0x88;
003732   c30a     movff	0x30a, 0           	MOVFF	_inPtr, r0x00
003734   f000
003736   c30b     movff	0x30b, 0x1         	MOVFF	(_inPtr + 1), r0x01
003738   f001
00373a   c30c     movff	0x30c, 0x2         	MOVFF	(_inPtr + 2), r0x02
00373c   f002
00373e   0e88     movlw	0x88               	MOVLW	0x88
003740   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003742   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003744   ffe9
003746   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003748   fff3
00374a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00374c   ec31     call	0x62, 0             	CALL	__gptrput1
00374e   f000
                                           _00202_DS_:
003750   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003752   f003
003754   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003756   f002
003758   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00375a   f001
00375c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00375e   f000
003760   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetStatus	code
                                           _GetStatus:
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	static void GetStatus(void) {
003866   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003868   ffe5
00386a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00386c   ffe5
00386e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003870   ffe5
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte recipient = SetupPacket.bmRequestType & 0x1F;
003872   0e1f     movlw	0x1f               	MOVLW	0x1f
003874   0105     movlb	0x5                	BANKSEL	_SetupPacket
003876   1500     andwf	0, 0, 0x1          	ANDWF	_SetupPacket, W, B
003878   6e00     movwf	0, 0               	MOVWF	r0x00
00387a   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] = 0;
00387c   6b40     clrf	0x40, 0x1           	CLRF	_controlTransferBuffer, B
                                           ; removed redundant BANKSEL
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[1] = 0;
00387e   6b41     clrf	0x41, 0x1           	CLRF	(_controlTransferBuffer + 1), B
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (recipient == 0x00) {
003880   5000     movf	0, 0, 0             	MOVF	r0x00, W
003882   e113     bnz	0x38aa               	BNZ	_00153_DS_
                                           ;	.line	176; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003884   0e01     movlw	0x1                	MOVLW	0x01
003886   0103     movlb	0x3                	BANKSEL	_requestHandled
003888   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
00388a   0103     movlb	0x3                	BANKSEL	_selfPowered
                                           ;	.line	178; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (selfPowered)
00388c   5117     movf	0x17, 0, 0x1        	MOVF	_selfPowered, W, B
00388e   e004     bz	0x3898                	BZ	_00140_DS_
                                           ;	.line	179; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] |= 0x01;
003890   0e01     movlw	0x1                	MOVLW	0x01
003892   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
003894   1140     iorwf	0x40, 0, 0x1       	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003896   6f40     movwf	0x40, 0x1          	MOVWF	_controlTransferBuffer, B
                                           _00140_DS_:
003898   0103     movlb	0x3                	BANKSEL	_remoteWakeup
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (remoteWakeup)
00389a   5118     movf	0x18, 0, 0x1        	MOVF	_remoteWakeup, W, B
00389c   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
00389e   d044     bra	0x3928               	BRA	_00154_DS_
                                           ;	.line	181; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] |= 0x02;
0038a0   0e02     movlw	0x2                	MOVLW	0x02
0038a2   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
0038a4   1140     iorwf	0x40, 0, 0x1       	IORWF	_controlTransferBuffer, W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0038a6   6f40     movwf	0x40, 0x1          	MOVWF	_controlTransferBuffer, B
0038a8   d03f     bra	0x3928               	BRA	_00154_DS_
                                           _00153_DS_:
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (recipient == 0x01) {
0038aa   5000     movf	0, 0, 0             	MOVF	r0x00, W
0038ac   0a01     xorlw	0x1                	XORLW	0x01
0038ae   e104     bnz	0x38b8               	BNZ	_00150_DS_
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
0038b0   0e01     movlw	0x1                	MOVLW	0x01
0038b2   0103     movlb	0x3                	BANKSEL	_requestHandled
0038b4   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
0038b6   d038     bra	0x3928               	BRA	_00154_DS_
                                           _00150_DS_:
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (recipient == 0x02) {
0038b8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0038ba   0a02     xorlw	0x2                	XORLW	0x02
0038bc   e135     bnz	0x3928               	BNZ	_00154_DS_
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointNum = SetupPacket.wIndex0 & 0x0F;
0038be   0e0f     movlw	0xf                	MOVLW	0x0f
0038c0   0105     movlb	0x5                	BANKSEL	(_SetupPacket + 4)
0038c2   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
0038c4   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte endpointDir = SetupPacket.wIndex0 & 0x80;
0038c6   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0038c8   1504     andwf	0x4, 0, 0x1        	ANDWF	(_SetupPacket + 4), W, B
0038ca   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
0038cc   0e01     movlw	0x1                	MOVLW	0x01
0038ce   0103     movlb	0x3                	BANKSEL	_requestHandled
0038d0   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x08 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	194; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr = (byte *)&EP_OUT_BD(0) + (endpointNum * 8);
0038d2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0038d4   0d08     mullw	0x8                	MULLW	0x08
0038d6   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0038d8   f000
0038da   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
0038dc   f002
0038de   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
0038e0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0038e2   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
0038e4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0038e6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0038e8   0103     movlb	0x3                	BANKSEL	(_inPtr + 1)
0038ea   6f0b     movwf	0xb, 0x1           	MOVWF	(_inPtr + 1), B
0038ec   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0038ee   6f0a     movwf	0xa, 0x1           	MOVWF	_inPtr, B
0038f0   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0038f2   6f0c     movwf	0xc, 0x1           	MOVWF	(_inPtr + 2), B
                                           ;	.line	195; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (endpointDir)
0038f4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0038f6   e005     bz	0x3902                	BZ	_00144_DS_
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	inPtr += 4;
0038f8   0e04     movlw	0x4                	MOVLW	0x04
                                           ; removed redundant BANKSEL
0038fa   270a     addwf	0xa, 0x1, 0x1      	ADDWF	_inPtr, F, B
0038fc   0e00     movlw	0                  	MOVLW	0x00
                                           ; removed redundant BANKSEL
0038fe   230b     addwfc	0xb, 0x1, 0x1     	ADDWFC	(_inPtr + 1), F, B
                                           ; removed redundant BANKSEL
003900   230c     addwfc	0xc, 0x1, 0x1     	ADDWFC	(_inPtr + 2), F, B
                                           _00144_DS_:
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(*inPtr & BDS_BSTALL)
003902   c30a     movff	0x30a, 0           	MOVFF	_inPtr, r0x00
003904   f000
003906   c30b     movff	0x30b, 0x1         	MOVFF	(_inPtr + 1), r0x01
003908   f001
00390a   c30c     movff	0x30c, 0x2         	MOVFF	(_inPtr + 2), r0x02
00390c   f002
00390e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003910   ffe9
003912   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003914   fff3
003916   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003918   ec29     call	0x52, 0             	CALL	__gptrget1
00391a   f000
00391c   6e00     movwf	0, 0               	MOVWF	r0x00
00391e   a400     btfss	0, 0x2, 0          	BTFSS	r0x00, 2
003920   d003     bra	0x3928               	BRA	_00154_DS_
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	controlTransferBuffer[0] = 0x01;
003922   0e01     movlw	0x1                	MOVLW	0x01
003924   0105     movlb	0x5                	BANKSEL	_controlTransferBuffer
003926   6f40     movwf	0x40, 0x1          	MOVWF	_controlTransferBuffer, B
                                           _00154_DS_:
003928   0103     movlb	0x3                	BANKSEL	_requestHandled
                                           ;	.line	201; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (requestHandled) {
00392a   5116     movf	0x16, 0, 0x1        	MOVF	_requestHandled, W, B
00392c   e00b     bz	0x3944                	BZ	_00157_DS_
                                           ;	.line	202; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&controlTransferBuffer;
00392e   0e05     movlw	0x5                	MOVLW	HIGH(_controlTransferBuffer)
003930   0103     movlb	0x3                	BANKSEL	(_outPtr + 1)
003932   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
003934   0e40     movlw	0x40               	MOVLW	LOW(_controlTransferBuffer)
                                           ; removed redundant BANKSEL
003936   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003938   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
00393a   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = 2;
00393c   0e02     movlw	0x2                	MOVLW	0x02
00393e   0102     movlb	0x2                	BANKSEL	_wCount
003940   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003942   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
                                           _00157_DS_:
003944   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003946   f002
003948   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00394a   f001
00394c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00394e   f000
003950   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__GetDescriptor	code
                                           _GetDescriptor:
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	static void GetDescriptor(void) {
003952   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003954   ffe5
003956   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003958   ffe5
00395a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00395c   ffe5
00395e   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003960   ffe5
003962   0105     movlb	0x5                	BANKSEL	_SetupPacket
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if(SetupPacket.bmRequestType == 0x80) {
003964   5100     movf	0, 0, 0x1           	MOVF	_SetupPacket, W, B
003966   0a80     xorlw	0x80               	XORLW	0x80
003968   e001     bz	0x396c                	BZ	_00126_DS_
00396a   d05d     bra	0x3a26               	BRA	_00118_DS_
                                           _00126_DS_:
                                           ;	.line	102; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte descriptorType  = SetupPacket.wValue1;
00396c   c503     movff	0x503, 0           	MOVFF	(_SetupPacket + 3), r0x00
00396e   f000
                                           ;	.line	103; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	byte descriptorIndex = SetupPacket.wValue0;
003970   c502     movff	0x502, 0x1         	MOVFF	(_SetupPacket + 2), r0x01
003972   f001
                                           ;	.line	105; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	if (descriptorType == DEVICE_DESCRIPTOR) {
003974   5000     movf	0, 0, 0             	MOVF	r0x00, W
003976   0a01     xorlw	0x1                	XORLW	0x01
003978   e10f     bnz	0x3998               	BNZ	_00114_DS_
                                           ;	.line	109; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
00397a   0e01     movlw	0x1                	MOVLW	0x01
00397c   0103     movlb	0x3                	BANKSEL	_requestHandled
00397e   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	110; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&libdevice_descriptor;
003980   0e9a     movlw	0x9a               	MOVLW	LOW(_libdevice_descriptor)
003982   0103     movlb	0x3                	BANKSEL	_outPtr
003984   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
003986   0e23     movlw	0x23               	MOVLW	HIGH(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
003988   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
00398a   0e00     movlw	0                  	MOVLW	UPPER(_libdevice_descriptor)
                                           ; removed redundant BANKSEL
00398c   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	111; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = sizeof(USB_Device_Descriptor);
00398e   0e12     movlw	0x12               	MOVLW	0x12
003990   0102     movlb	0x2                	BANKSEL	_wCount
003992   6ffe     movwf	0xfe, 0x1          	MOVWF	_wCount, B
                                           ; removed redundant BANKSEL
003994   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
003996   d047     bra	0x3a26               	BRA	_00118_DS_
                                           _00114_DS_:
                                           ;	.line	113; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (descriptorType == CONFIGURATION_DESCRIPTOR) {
003998   5000     movf	0, 0, 0             	MOVF	r0x00, W
00399a   0a02     xorlw	0x2                	XORLW	0x02
00399c   e117     bnz	0x39cc               	BNZ	_00111_DS_
                                           ;	.line	117; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
00399e   0e01     movlw	0x1                	MOVLW	0x01
0039a0   0103     movlb	0x3                	BANKSEL	_requestHandled
0039a2   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ;	.line	128; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&libconfiguration_descriptor;
0039a4   0eac     movlw	0xac               	MOVLW	LOW(_libconfiguration_descriptor)
0039a6   0103     movlb	0x3                	BANKSEL	_outPtr
0039a8   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
0039aa   0e23     movlw	0x23               	MOVLW	HIGH(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0039ac   6f08     movwf	0x8, 0x1           	MOVWF	(_outPtr + 1), B
0039ae   0e00     movlw	0                  	MOVLW	UPPER(_libconfiguration_descriptor)
                                           ; removed redundant BANKSEL
0039b0   6f09     movwf	0x9, 0x1           	MOVWF	(_outPtr + 2), B
                                           ;	.line	130; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = libconfiguration_descriptor.Header.wTotalLength;
0039b2   0eae     movlw	0xae               	MOVLW	LOW(_libconfiguration_descriptor + 2)
0039b4   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
0039b6   0e23     movlw	0x23               	MOVLW	HIGH(_libconfiguration_descriptor + 2)
0039b8   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
0039ba   0e00     movlw	0                  	MOVLW	UPPER(_libconfiguration_descriptor + 2)
0039bc   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
0039be   0009     tblrd	*+                 	TBLRD*+	
0039c0   cff5     movff	0xff5, 0x2fe       	MOVFF	TABLAT, _wCount
0039c2   f2fe
0039c4   0009     tblrd	*+                 	TBLRD*+	
0039c6   cff5     movff	0xff5, 0x2ff       	MOVFF	TABLAT, (_wCount + 1)
0039c8   f2ff
0039ca   d02d     bra	0x3a26               	BRA	_00118_DS_
                                           _00111_DS_:
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (descriptorType == STRING_DESCRIPTOR) {
0039cc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0039ce   0a03     xorlw	0x3                	XORLW	0x03
0039d0   e124     bnz	0x3a1a               	BNZ	_00108_DS_
                                           ;	.line	140; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
0039d2   0e01     movlw	0x1                	MOVLW	0x01
0039d4   0103     movlb	0x3                	BANKSEL	_requestHandled
0039d6   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           ; ;multiply lit val:0x03 by variable r0x01 and store in r0x01
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	outPtr = (byte *)&libstring_descriptor[descriptorIndex];
0039d8   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0039da   0d03     mullw	0x3                	MULLW	0x03
0039dc   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0039de   f001
0039e0   0ef0     movlw	0xf0               	MOVLW	LOW(_libstring_descriptor)
0039e2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0039e4   0103     movlb	0x3                	BANKSEL	_outPtr
0039e6   6f07     movwf	0x7, 0x1           	MOVWF	_outPtr, B
                                           ; removed redundant BANKSEL
0039e8   6b08     clrf	0x8, 0x1            	CLRF	(_outPtr + 1), B
0039ea   0e23     movlw	0x23               	MOVLW	HIGH(_libstring_descriptor)
                                           ; removed redundant BANKSEL
0039ec   2308     addwfc	0x8, 0x1, 0x1     	ADDWFC	(_outPtr + 1), F, B
                                           ; removed redundant BANKSEL
0039ee   6b09     clrf	0x9, 0x1            	CLRF	(_outPtr + 2), B
0039f0   0e00     movlw	0                  	MOVLW	UPPER(_libstring_descriptor)
                                           ; removed redundant BANKSEL
0039f2   2309     addwfc	0x9, 0x1, 0x1     	ADDWFC	(_outPtr + 2), F, B
                                           ;	.line	142; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	wCount = *outPtr;
0039f4   c307     movff	0x307, 0x1         	MOVFF	_outPtr, r0x01
0039f6   f001
0039f8   c308     movff	0x308, 0x2         	MOVFF	(_outPtr + 1), r0x02
0039fa   f002
0039fc   c309     movff	0x309, 0x3         	MOVFF	(_outPtr + 2), r0x03
0039fe   f003
003a00   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
003a02   ffe9
003a04   c002     movff	0x2, 0xff3         	MOVFF	r0x02, PRODL
003a06   fff3
003a08   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003a0a   ec29     call	0x52, 0             	CALL	__gptrget1
003a0c   f000
003a0e   6e01     movwf	0x1, 0             	MOVWF	r0x01
003a10   c001     movff	0x1, 0x2fe         	MOVFF	r0x01, _wCount
003a12   f2fe
003a14   0102     movlb	0x2                	BANKSEL	(_wCount + 1)
003a16   6bff     clrf	0xff, 0x1           	CLRF	(_wCount + 1), B
003a18   d006     bra	0x3a26               	BRA	_00118_DS_
                                           _00108_DS_:
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	else if (descriptorType == DEVICE_QUALIFIER_DESCRIPTOR) {
003a1a   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a1c   0a06     xorlw	0x6                	XORLW	0x06
003a1e   e103     bnz	0x3a26               	BNZ	_00118_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/usb/picUSB.c	requestHandled = 1;
003a20   0e01     movlw	0x1                	MOVLW	0x01
003a22   0103     movlb	0x3                	BANKSEL	_requestHandled
003a24   6f16     movwf	0x16, 0x1          	MOVWF	_requestHandled, B
                                           _00118_DS_:
003a26   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003a28   f003
003a2a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003a2c   f002
003a2e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003a30   f001
003a32   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003a34   f000
003a36   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _libdevice_descriptor:
00239a   0112     movlb	0x12               	DB	0x12, 0x01, 0x00, 0x02, 0x02, 0x00, 0x00, 0x40, 0xd8, 0x04, 0xab, 0xfe
00239c   0200     mulwf	0, 0               
00239e   0002     dw	0x2  ;unknown opcode  
0023a0   4000     rrncf	0, 0, 0            
0023a2   04d8     decf	0xd8, 0, 0          
0023a4   feab     dw	0xfeab  ;unknown opcode 
0023a6   0000     nop                      	DB	0x00, 0x00, 0x00, 0x01, 0x00, 0x01
0023a8   0100     movlb	0                  
0023aa   0100     movlb	0                  
                                           ; ; Starting pCode block for Ival
                                           _libconfiguration_descriptor:
0023ac   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x43, 0x00, 0x02, 0x01, 0x00, 0x03, 0x14, 0x09, 0x04, 0x00
0023ae   0043     dw	0x43  ;unknown opcode 
0023b0   0102     movlb	0x2                
0023b2   0300     mulwf	0, 0x1             
0023b4   0914     iorlw	0x14               
0023b6   0004     clrwdt                   
0023b8   0100     movlb	0                  	DB	0x00, 0x01, 0x02, 0x02, 0x01, 0x00, 0x05, 0x24, 0x00, 0x10, 0x01, 0x04
0023ba   0202     mulwf	0x2, 0             
0023bc   0001     dw	0x1  ;unknown opcode  
0023be   2405     addwf	0x5, 0, 0          
0023c0   1000     iorwf	0, 0, 0            
0023c2   0401     decf	0x1, 0, 0           
0023c4   0224     mulwf	0x24, 0            	DB	0x24, 0x02, 0x00, 0x05, 0x24, 0x06, 0x00, 0x01, 0x05, 0x24, 0x01, 0x00
0023c6   0500     decf	0, 0, 0x1           
0023c8   0624     decf	0x24, 0x1, 0        
0023ca   0100     movlb	0                  
0023cc   2405     addwf	0x5, 0, 0          
0023ce   0001     dw	0x1  ;unknown opcode  
0023d0   0701     decf	0x1, 0x1, 0x1       	DB	0x01, 0x07, 0x05, 0x82, 0x03, 0x10, 0x00, 0x02, 0x09, 0x04, 0x01, 0x00
0023d2   8205     bsf	0x5, 0x1, 0          
0023d4   1003     iorwf	0x3, 0, 0          
0023d6   0200     mulwf	0, 0               
0023d8   0409     decf	0x9, 0, 0           
0023da   0001     dw	0x1  ;unknown opcode  
0023dc   0a02     xorlw	0x2                	DB	0x02, 0x0a, 0x00, 0x00, 0x00, 0x07, 0x05, 0x03, 0x02, 0x40, 0x00, 0x00
0023de   0000     nop                      
0023e0   0700     decf	0, 0x1, 0x1         
0023e2   0305     mulwf	0x5, 0x1           
0023e4   4002     rrncf	0x2, 0, 0          
0023e6   0000     nop                      
0023e8   0507     decf	0x7, 0, 0x1         	DB	0x07, 0x05, 0x83, 0x02, 0x40, 0x00, 0x00
0023ea   0283     mulwf	0x83, 0            
0023ec   0040     dw	0x40  ;unknown opcode 
0023ee   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _libstring_descriptor:
0023f0   0328     mulwf	0x28, 0x1          	DB	0x28, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x0c, 0x03, 0x50, 0x00, 0x00, 0x00
0023f2   0c50     retlw	0x50               
0023f4   5003     movf	0x3, 0, 0           
0023f6   030c     mulwf	0xc, 0x1           
0023f8   0050     dw	0x50  ;unknown opcode 
0023fa   0000     nop                      
0023fc   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0023fe   0000     nop                      
002400   0000     nop                      
002402   0000     nop                      
002404   0000     nop                      
002406   0000     nop                      
002408   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00240a   0000     nop                      
00240c   0000     nop                      
00240e   0000     nop                      
002410   0000     nop                      
002412   0000     nop                      
002414   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002416   0000     nop                      
002418   0000     nop                      
00241a   0000     nop                      
00241c   0000     nop                      
00241e   0000     nop                      
002420   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002422   0000     nop                      
002424   0000     nop                      
002426   0000     nop                      
002428   0000     nop                      
00242a   0000     nop                      
00242c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00242e   0000     nop                      
002430   0000     nop                      
002432   0000     nop                      
002434   0000     nop                      
002436   0000     nop                      
002438   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00243a   0000     nop                      
00243c   0000     nop                      
00243e   0000     nop                      
002440   0000     nop                      
002442   0000     nop                      
002444   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002446   0000     nop                      
002448   0000     nop                      
00244a   0000     nop                      
00244c   0000     nop                      
00244e   0000     nop                      
002450   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002452   0000     nop                      
002454   0000     nop                      
002456   0000     nop                      
002458   0000     nop                      
00245a   0000     nop                      
00245c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00245e   0000     nop                      
002460   0000     nop                      
002462   0000     nop                      
002464   0000     nop                      
002466   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002468   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00246a   0804     sublw	0x4                
00246c   2010     addwfc	0x10, 0, 0        
00246e   8040     bsf	0x40, 0, 0           
002470   8040     bsf	0x40, 0, 0           
002472   0201     mulwf	0x1, 0             
002474   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002476   0402     decf	0x2, 0, 0           
002478   2008     addwfc	0x8, 0, 0         
                                           ; ; Starting pCode block for Ival
                                           _mask:
00247a   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00247c   0804     sublw	0x4                
00247e   2010     addwfc	0x10, 0, 0        
002480   8040     bsf	0x40, 0, 0           
002482   8040     bsf	0x40, 0, 0           
002484   0201     mulwf	0x1, 0             
002486   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002488   0402     decf	0x2, 0, 0           
00248a   2008     addwfc	0x8, 0, 0         
00248c   0201     mulwf	0x1, 0             
00248e   0104     movlb	0x4                
002490   0402     decf	0x2, 0, 0           
002492   1008     iorwf	0x8, 0, 0          	DB	0x08, 0x10, 0x20, 0x40, 0x80
002494   4020     rrncf	0x20, 0, 0         
002496   0080     dw	0x80  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _port:
002498   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
00249a   0000     nop                      
00249c   0000     nop                      
00249e   0000     nop                      
0024a0   0101     movlb	0x1                
0024a2   0101     movlb	0x1                
0024a4   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
0024a6   0202     mulwf	0x2, 0             
0024a8   0202     mulwf	0x2, 0             
0024aa   0404     decf	0x4, 0, 0           
0024ac   0304     mulwf	0x4, 0x1           
0024ae   0303     mulwf	0x3, 0x1           
0024b0   0303     mulwf	0x3, 0x1           	DB	0x03, 0x03, 0x03, 0x03, 0x03
0024b2   0303     mulwf	0x3, 0x1           
0024b4   0003     sleep                    
                                           ; ; Starting pCode block
                                           __str_0:
0024b6   6369     cpfseq	0x69, 0x1         	DB	0x69, 0x63, 0x61, 0x72, 0x6f, 0x20, 0x55, 0x53, 0x42, 0x20, 0x30, 0x32
0024b8   7261     btg	0x61, 0x1, 0         
0024ba   206f     addwfc	0x6f, 0, 0        
0024bc   5355     movf	0x55, 0x1, 0x1      
0024be   2042     addwfc	0x42, 0, 0        
0024c0   3230     rrcf	0x30, 0x1, 0        
0024c2   0a20     xorlw	0x20               	DB	0x20, 0x0a, 0x00
0024c4   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 9162 (0x23ca) bytes ( 6.99%)
                                           ;           	 4581 (0x11e5) words
                                           ; udata size:	  532 (0x0214) bytes (29.69%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
