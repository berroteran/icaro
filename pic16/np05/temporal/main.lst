gplink-1.2.0 #980 (Jun  5 2013)
Copyright (c) 1998-2013 gputils project
Listing File Generated: 1-12-2014  15:10:45
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 3.3.0 #8604 (Sep  2 2013) (Linux)
                                           ; This file was generated Sun Jan 12 15:10:38 2014
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	radix	dec
                                           
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global	_i
                                           	global	_tiempo2
                                           	global	_tiempo
                                           	global	_loopvar
                                           	global	_phase
                                           	global	_needreordering
                                           	global	_timingindex
                                           	global	_timedivision
                                           	global	_timings
                                           	global	_activatedservos
                                           	global	_servovalues
                                           	global	_digitalwrite
                                           	global	_digitalread
                                           	global	_pinmode
                                           	global	_servos_init
                                           	global	_ServoAttach
                                           	global	_ServoDetach
                                           	global	_ServoWrite
                                           	global	_ServoRead
                                           	global	_ServoMinimumPulse
                                           	global	_ServoMaximumPulse
                                           	global	_servos_interrupt
                                           	global	_analog_init
                                           	global	_analogReference
                                           	global	_analogread
                                           	global	_Delayms
                                           	global	_Delayus
                                           	global	_epap_in
                                           	global	_epap_out
                                           	global	_epapin_init
                                           	global	_epapout_init
                                           	global	_sensordigital
                                           	global	_setup
                                           	global	_sensor
                                           	global	_ServoLento
                                           	global	_loop
                                           	global	_pinguino_main
                                           	global	_high_priority_isr
                                           	global	_low_priority_isr
                                           	global	_mask
                                           	global	_port
                                           	global	_servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern	_SPPDATAbits
                                           	extern	_SPPCFGbits
                                           	extern	_SPPEPSbits
                                           	extern	_SPPCONbits
                                           	extern	_UFRMLbits
                                           	extern	_UFRMHbits
                                           	extern	_UIRbits
                                           	extern	_UIEbits
                                           	extern	_UEIRbits
                                           	extern	_UEIEbits
                                           	extern	_USTATbits
                                           	extern	_UCONbits
                                           	extern	_UADDRbits
                                           	extern	_UCFGbits
                                           	extern	_UEP0bits
                                           	extern	_UEP1bits
                                           	extern	_UEP2bits
                                           	extern	_UEP3bits
                                           	extern	_UEP4bits
                                           	extern	_UEP5bits
                                           	extern	_UEP6bits
                                           	extern	_UEP7bits
                                           	extern	_UEP8bits
                                           	extern	_UEP9bits
                                           	extern	_UEP10bits
                                           	extern	_UEP11bits
                                           	extern	_UEP12bits
                                           	extern	_UEP13bits
                                           	extern	_UEP14bits
                                           	extern	_UEP15bits
                                           	extern	_PORTAbits
                                           	extern	_PORTBbits
                                           	extern	_PORTCbits
                                           	extern	_PORTDbits
                                           	extern	_PORTEbits
                                           	extern	_LATAbits
                                           	extern	_LATBbits
                                           	extern	_LATCbits
                                           	extern	_LATDbits
                                           	extern	_LATEbits
                                           	extern	_TRISAbits
                                           	extern	_TRISBbits
                                           	extern	_TRISCbits
                                           	extern	_TRISDbits
                                           	extern	_TRISEbits
                                           	extern	_OSCTUNEbits
                                           	extern	_PIE1bits
                                           	extern	_PIR1bits
                                           	extern	_IPR1bits
                                           	extern	_PIE2bits
                                           	extern	_PIR2bits
                                           	extern	_IPR2bits
                                           	extern	_EECON1bits
                                           	extern	_RCSTAbits
                                           	extern	_TXSTAbits
                                           	extern	_T3CONbits
                                           	extern	_CMCONbits
                                           	extern	_CVRCONbits
                                           	extern	_ECCP1ASbits
                                           	extern	_ECCP1DELbits
                                           	extern	_BAUDCONbits
                                           	extern	_CCP2CONbits
                                           	extern	_CCP1CONbits
                                           	extern	_ADCON2bits
                                           	extern	_ADCON1bits
                                           	extern	_ADCON0bits
                                           	extern	_SSPCON2bits
                                           	extern	_SSPCON1bits
                                           	extern	_SSPSTATbits
                                           	extern	_T2CONbits
                                           	extern	_T1CONbits
                                           	extern	_RCONbits
                                           	extern	_WDTCONbits
                                           	extern	_HLVDCONbits
                                           	extern	_OSCCONbits
                                           	extern	_T0CONbits
                                           	extern	_STATUSbits
                                           	extern	_FSR2Hbits
                                           	extern	_BSRbits
                                           	extern	_FSR1Hbits
                                           	extern	_FSR0Hbits
                                           	extern	_INTCON3bits
                                           	extern	_INTCON2bits
                                           	extern	_INTCONbits
                                           	extern	_TBLPTRUbits
                                           	extern	_PCLATHbits
                                           	extern	_PCLATUbits
                                           	extern	_STKPTRbits
                                           	extern	_TOSUbits
                                           	extern	_usb_device_state
                                           	extern	_usb_active_cfg
                                           	extern	_usb_active_alt_setting
                                           	extern	_SPPDATA
                                           	extern	_SPPCFG
                                           	extern	_SPPEPS
                                           	extern	_SPPCON
                                           	extern	_UFRML
                                           	extern	_UFRMH
                                           	extern	_UIR
                                           	extern	_UIE
                                           	extern	_UEIR
                                           	extern	_UEIE
                                           	extern	_USTAT
                                           	extern	_UCON
                                           	extern	_UADDR
                                           	extern	_UCFG
                                           	extern	_UEP0
                                           	extern	_UEP1
                                           	extern	_UEP2
                                           	extern	_UEP3
                                           	extern	_UEP4
                                           	extern	_UEP5
                                           	extern	_UEP6
                                           	extern	_UEP7
                                           	extern	_UEP8
                                           	extern	_UEP9
                                           	extern	_UEP10
                                           	extern	_UEP11
                                           	extern	_UEP12
                                           	extern	_UEP13
                                           	extern	_UEP14
                                           	extern	_UEP15
                                           	extern	_PORTA
                                           	extern	_PORTB
                                           	extern	_PORTC
                                           	extern	_PORTD
                                           	extern	_PORTE
                                           	extern	_LATA
                                           	extern	_LATB
                                           	extern	_LATC
                                           	extern	_LATD
                                           	extern	_LATE
                                           	extern	_TRISA
                                           	extern	_TRISB
                                           	extern	_TRISC
                                           	extern	_TRISD
                                           	extern	_TRISE
                                           	extern	_OSCTUNE
                                           	extern	_PIE1
                                           	extern	_PIR1
                                           	extern	_IPR1
                                           	extern	_PIE2
                                           	extern	_PIR2
                                           	extern	_IPR2
                                           	extern	_EECON1
                                           	extern	_EECON2
                                           	extern	_EEDATA
                                           	extern	_EEADR
                                           	extern	_RCSTA
                                           	extern	_TXSTA
                                           	extern	_TXREG
                                           	extern	_RCREG
                                           	extern	_SPBRG
                                           	extern	_SPBRGH
                                           	extern	_T3CON
                                           	extern	_TMR3L
                                           	extern	_TMR3H
                                           	extern	_CMCON
                                           	extern	_CVRCON
                                           	extern	_ECCP1AS
                                           	extern	_ECCP1DEL
                                           	extern	_BAUDCON
                                           	extern	_CCP2CON
                                           	extern	_CCPR2L
                                           	extern	_CCPR2H
                                           	extern	_CCP1CON
                                           	extern	_CCPR1L
                                           	extern	_CCPR1H
                                           	extern	_ADCON2
                                           	extern	_ADCON1
                                           	extern	_ADCON0
                                           	extern	_ADRESL
                                           	extern	_ADRESH
                                           	extern	_SSPCON2
                                           	extern	_SSPCON1
                                           	extern	_SSPSTAT
                                           	extern	_SSPADD
                                           	extern	_SSPBUF
                                           	extern	_T2CON
                                           	extern	_PR2
                                           	extern	_TMR2
                                           	extern	_T1CON
                                           	extern	_TMR1L
                                           	extern	_TMR1H
                                           	extern	_RCON
                                           	extern	_WDTCON
                                           	extern	_HLVDCON
                                           	extern	_OSCCON
                                           	extern	_T0CON
                                           	extern	_TMR0L
                                           	extern	_TMR0H
                                           	extern	_STATUS
                                           	extern	_FSR2L
                                           	extern	_FSR2H
                                           	extern	_PLUSW2
                                           	extern	_PREINC2
                                           	extern	_POSTDEC2
                                           	extern	_POSTINC2
                                           	extern	_INDF2
                                           	extern	_BSR
                                           	extern	_FSR1L
                                           	extern	_FSR1H
                                           	extern	_PLUSW1
                                           	extern	_PREINC1
                                           	extern	_POSTDEC1
                                           	extern	_POSTINC1
                                           	extern	_INDF1
                                           	extern	_WREG
                                           	extern	_FSR0L
                                           	extern	_FSR0H
                                           	extern	_PLUSW0
                                           	extern	_PREINC0
                                           	extern	_POSTDEC0
                                           	extern	_POSTINC0
                                           	extern	_INDF0
                                           	extern	_INTCON3
                                           	extern	_INTCON2
                                           	extern	_INTCON
                                           	extern	_PRODL
                                           	extern	_PRODH
                                           	extern	_TABLAT
                                           	extern	_TBLPTRL
                                           	extern	_TBLPTRH
                                           	extern	_TBLPTRU
                                           	extern	_PCL
                                           	extern	_PCLATH
                                           	extern	_PCLATU
                                           	extern	_STKPTR
                                           	extern	_TOSL
                                           	extern	_TOSH
                                           	extern	_TOSU
                                           	extern	_delay10ktcy
                                           
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC1	equ	0xfe6
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _tiempo	db	0x00, 0x00, 0x00, 0x00
                                           _tiempo2	db	0x00, 0x00, 0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           r0x0c	res	1
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _i	res	1
                                           
                                           udata_main_2	udata
                                           _servovalues	res	18
                                           
                                           udata_main_3	udata
                                           _timingindex	res	1
                                           
                                           udata_main_4	udata
                                           _timings	res	72
                                           
                                           udata_main_5	udata
                                           _SortServoTimings_mascaratotal_1_27	res	3
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	104; /home/valentin/.icaro/firmware/source/main.c	void high_priority_isr(void) __interrupt
002020   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
002022   ffe5
002024   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
002026   ffe5
002028   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00202a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00202c   ffe5
00202e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
002030   ffe5
002032   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
002034   ffe5
002036   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
002038   ffe5
00203a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00203c   ffe5
00203e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
002040   ffe5
                                           ;	.line	140; /home/valentin/.icaro/firmware/source/main.c	servos_interrupt();
002042   ec7c     call    0x36f8, 0        	CALL	_servos_interrupt
002044   f01b
002046   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
002048   fffb
00204a   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
00204c   fffa
00204e   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
002050   ffea
002052   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
002054   ffe9
002056   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
002058   fff4
00205a   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
00205c   fff3
00205e   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002060   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
002062   ffe0
002064   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
002066   ffd8
002068   0010     retfie  0                	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	148; /home/valentin/.icaro/firmware/source/main.c	void low_priority_isr(void) __interrupt
004000   cfd8     movff   0xfd8, 0xfe5     	MOVFF	STATUS, POSTDEC1
004002   ffe5
004004   cfe0     movff   0xfe0, 0xfe5     	MOVFF	BSR, POSTDEC1
004006   ffe5
004008   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00400a   cff3     movff   0xff3, 0xfe5     	MOVFF	PRODL, POSTDEC1
00400c   ffe5
00400e   cff4     movff   0xff4, 0xfe5     	MOVFF	PRODH, POSTDEC1
004010   ffe5
004012   cfe9     movff   0xfe9, 0xfe5     	MOVFF	FSR0L, POSTDEC1
004014   ffe5
004016   cfea     movff   0xfea, 0xfe5     	MOVFF	FSR0H, POSTDEC1
004018   ffe5
00401a   cffa     movff   0xffa, 0xfe5     	MOVFF	PCLATH, POSTDEC1
00401c   ffe5
00401e   cffb     movff   0xffb, 0xfe5     	MOVFF	PCLATU, POSTDEC1
004020   ffe5
                                           ;	.line	150; /home/valentin/.icaro/firmware/source/main.c	}
004022   cfe4     movff   0xfe4, 0xffb     	MOVFF	PREINC1, PCLATU
004024   fffb
004026   cfe4     movff   0xfe4, 0xffa     	MOVFF	PREINC1, PCLATH
004028   fffa
00402a   cfe4     movff   0xfe4, 0xfea     	MOVFF	PREINC1, FSR0H
00402c   ffea
00402e   cfe4     movff   0xfe4, 0xfe9     	MOVFF	PREINC1, FSR0L
004030   ffe9
004032   cfe4     movff   0xfe4, 0xff4     	MOVFF	PREINC1, PRODH
004034   fff4
004036   cfe4     movff   0xfe4, 0xff3     	MOVFF	PREINC1, PRODL
004038   fff3
00403a   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
00403c   cfe4     movff   0xfe4, 0xfe0     	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff   0xfe4, 0xfd8     	MOVFF	PREINC1, STATUS
004042   ffd8
004044   0010     retfie  0                	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	60; /home/valentin/.icaro/firmware/source/main.c	PIE1=0;
00389e   6a9d     clrf    0x9d, 0          	CLRF	_PIE1
                                           ;	.line	61; /home/valentin/.icaro/firmware/source/main.c	PIE2=0;
0038a0   6aa0     clrf    0xa0, 0          	CLRF	_PIE2
                                           ;	.line	62; /home/valentin/.icaro/firmware/source/main.c	ADCON1=0x0F;
0038a2   0e0f     movlw   0xf              	MOVLW	0x0f
0038a4   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	67; /home/valentin/.icaro/firmware/source/main.c	setup();
0038a6   eccd     call    0x319a, 0        	CALL	_setup
0038a8   f018
                                           ;	.line	69; /home/valentin/.icaro/firmware/source/main.c	analog_init();
0038aa   ec73     call    0x38e6, 0        	CALL	_analog_init
0038ac   f01c
                                           ;	.line	75; /home/valentin/.icaro/firmware/source/main.c	servos_init();
0038ae   ec58     call    0x36b0, 0        	CALL	_servos_init
0038b0   f01b
                                           ;	.line	91; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.PEIE=1;
0038b2   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	92; /home/valentin/.icaro/firmware/source/main.c	INTCONbits.GIE=1;
0038b4   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
                                           _00694_DS_:
                                           ;	.line	97; /home/valentin/.icaro/firmware/source/main.c	loop();
0038b6   ec25     call    0x384a, 0        	CALL	_loop
0038b8   f01c
0038ba   d7fd     bra     0x38b6           	BRA	_00694_DS_
0038bc   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	97; /home/valentin/.icaro/firmware/source/user.c	PORTB=2;
00384a   0e02     movlw   0x2              	MOVLW	0x02
00384c   6e81     movwf   0x81, 0          	MOVWF	_PORTB
                                           ;	.line	98; /home/valentin/.icaro/firmware/source/user.c	Delayms(50);
00384e   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003850   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003852   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003854   0e32     movlw   0x32             	MOVLW	0x32
003856   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003858   ecf8     call    0x33f0, 0        	CALL	_Delayms
00385a   f019
00385c   0e04     movlw   0x4              	MOVLW	0x04
00385e   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	99; /home/valentin/.icaro/firmware/source/user.c	PORTB=0;
003860   6a81     clrf    0x81, 0          	CLRF	_PORTB
                                           ;	.line	100; /home/valentin/.icaro/firmware/source/user.c	Delayms(50);
003862   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003864   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003866   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003868   0e32     movlw   0x32             	MOVLW	0x32
00386a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00386c   ecf8     call    0x33f0, 0        	CALL	_Delayms
00386e   f019
003870   0e04     movlw   0x4              	MOVLW	0x04
003872   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
003874   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoLento	code
                                           _ServoLento:
                                           ;	.line	73; /home/valentin/.icaro/firmware/source/user.c	void ServoLento(int servo,int inicial,int final,int tiempo)
002ef6   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002ef8   ffe5
002efa   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002efc   ffd9
002efe   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002f00   ffe5
002f02   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002f04   ffe5
002f06   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002f08   ffe5
002f0a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002f0c   ffe5
002f0e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002f10   ffe5
002f12   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002f14   ffe5
002f16   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002f18   ffe5
002f1a   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002f1c   ffe5
002f1e   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
002f20   ffe5
002f22   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
002f24   ffe5
002f26   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
002f28   ffe5
002f2a   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
002f2c   ffe5
002f2e   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
002f30   ffe5
002f32   0e02     movlw   0x2              	MOVLW	0x02
002f34   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002f36   f000
002f38   0e03     movlw   0x3              	MOVLW	0x03
002f3a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002f3c   f001
002f3e   0e04     movlw   0x4              	MOVLW	0x04
002f40   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002f42   f002
002f44   0e05     movlw   0x5              	MOVLW	0x05
002f46   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002f48   f003
002f4a   0e06     movlw   0x6              	MOVLW	0x06
002f4c   cfdb     movff   0xfdb, 0x4       	MOVFF	PLUSW2, r0x04
002f4e   f004
002f50   0e07     movlw   0x7              	MOVLW	0x07
002f52   cfdb     movff   0xfdb, 0x5       	MOVFF	PLUSW2, r0x05
002f54   f005
002f56   0e08     movlw   0x8              	MOVLW	0x08
002f58   cfdb     movff   0xfdb, 0x6       	MOVFF	PLUSW2, r0x06
002f5a   f006
002f5c   0e09     movlw   0x9              	MOVLW	0x09
002f5e   cfdb     movff   0xfdb, 0x7       	MOVFF	PLUSW2, r0x07
002f60   f007
                                           ;	.line	76; /home/valentin/.icaro/firmware/source/user.c	if (inicial<final)
002f62   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002f64   0f80     addlw   0x80             	ADDLW	0x80
002f66   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
002f68   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002f6a   0f80     addlw   0x80             	ADDLW	0x80
002f6c   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
002f6e   e102     bnz     0x2f74           	BNZ	_00680_DS_
002f70   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002f72   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00680_DS_:
002f74   e22e     bc      0x2fd2           	BC	_00648_DS_
                                           ;	.line	78; /home/valentin/.icaro/firmware/source/user.c	for (grado=inicial;grado<final;grado++)
002f76   c002     movff   0x2, 0x8         	MOVFF	r0x02, r0x08
002f78   f008
002f7a   c003     movff   0x3, 0x9         	MOVFF	r0x03, r0x09
002f7c   f009
                                           _00653_DS_:
002f7e   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
002f80   0f80     addlw   0x80             	ADDLW	0x80
002f82   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
002f84   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002f86   0f80     addlw   0x80             	ADDLW	0x80
002f88   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
002f8a   e102     bnz     0x2f90           	BNZ	_00681_DS_
002f8c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002f8e   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
                                           _00681_DS_:
002f90   e220     bc      0x2fd2           	BC	_00648_DS_
                                           ;	.line	80; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(servo,grado);
002f92   5000     movf    0, 0, 0          	MOVF	r0x00, W
002f94   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
                                           ; #	MOVF	r0x08, W
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
002f96   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
002f98   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002f9a   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
002f9c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002f9e   ecd0     call    0x35a0, 0        	CALL	_ServoWrite
002fa0   f01a
002fa2   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
002fa4   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	81; /home/valentin/.icaro/firmware/source/user.c	Delayms(tiempo);
002fa6   c006     movff   0x6, 0xa         	MOVFF	r0x06, r0x0a
002fa8   f00a
002faa   c007     movff   0x7, 0xb         	MOVFF	r0x07, r0x0b
002fac   f00b
002fae   6ae8     clrf    0xe8, 0          	CLRF	WREG
002fb0   be07     btfsc   0x7, 0x7, 0      	BTFSC	r0x07, 7
002fb2   0eff     movlw   0xff             	MOVLW	0xff
002fb4   6e0c     movwf   0xc, 0           	MOVWF	r0x0c
                                           ; #	MOVWF	r0x0d
                                           ; #	MOVF	r0x0d, W
002fb6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002fb8   500c     movf    0xc, 0, 0        	MOVF	r0x0c, W
002fba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002fbc   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002fbe   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002fc0   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
002fc2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002fc4   ecf8     call    0x33f0, 0        	CALL	_Delayms
002fc6   f019
002fc8   0e04     movlw   0x4              	MOVLW	0x04
002fca   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	78; /home/valentin/.icaro/firmware/source/user.c	for (grado=inicial;grado<final;grado++)
002fcc   4a08     infsnz  0x8, 0x1, 0      	INFSNZ	r0x08, F
002fce   2a09     incf    0x9, 0x1, 0      	INCF	r0x09, F
002fd0   d7d6     bra     0x2f7e           	BRA	_00653_DS_
                                           _00648_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/source/user.c	if (inicial>final)
002fd2   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002fd4   0f80     addlw   0x80             	ADDLW	0x80
002fd6   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
002fd8   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002fda   0f80     addlw   0x80             	ADDLW	0x80
002fdc   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
002fde   e102     bnz     0x2fe4           	BNZ	_00682_DS_
002fe0   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002fe2   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00682_DS_:
002fe4   e22b     bc      0x303c           	BC	_00658_DS_
                                           _00656_DS_:
                                           ;	.line	86; /home/valentin/.icaro/firmware/source/user.c	for (grado=inicial;grado>final;grado--)
002fe6   5005     movf    0x5, 0, 0        	MOVF	r0x05, W
002fe8   0f80     addlw   0x80             	ADDLW	0x80
002fea   6ef3     movwf   0xf3, 0          	MOVWF	PRODL
002fec   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
002fee   0f80     addlw   0x80             	ADDLW	0x80
002ff0   5cf3     subwf   0xf3, 0, 0       	SUBWF	PRODL, W
002ff2   e102     bnz     0x2ff8           	BNZ	_00683_DS_
002ff4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ff6   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00683_DS_:
002ff8   e221     bc      0x303c           	BC	_00658_DS_
                                           ;	.line	88; /home/valentin/.icaro/firmware/source/user.c	ServoWrite(servo,grado);
002ffa   5000     movf    0, 0, 0          	MOVF	r0x00, W
002ffc   6e08     movwf   0x8, 0           	MOVWF	r0x08
                                           ; #	MOVF	r0x02, W
                                           ; #	MOVWF	r0x09
                                           ; #	MOVF	r0x09, W
002ffe   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003000   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003002   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
003004   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003006   ecd0     call    0x35a0, 0        	CALL	_ServoWrite
003008   f01a
00300a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00300c   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	89; /home/valentin/.icaro/firmware/source/user.c	Delayms(tiempo);
00300e   c006     movff   0x6, 0x8         	MOVFF	r0x06, r0x08
003010   f008
003012   c007     movff   0x7, 0x9         	MOVFF	r0x07, r0x09
003014   f009
003016   6ae8     clrf    0xe8, 0          	CLRF	WREG
003018   be07     btfsc   0x7, 0x7, 0      	BTFSC	r0x07, 7
00301a   0eff     movlw   0xff             	MOVLW	0xff
00301c   6e0a     movwf   0xa, 0           	MOVWF	r0x0a
                                           ; #	MOVWF	r0x0b
                                           ; #	MOVF	r0x0b, W
00301e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003020   500a     movf    0xa, 0, 0        	MOVF	r0x0a, W
003022   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003024   5009     movf    0x9, 0, 0        	MOVF	r0x09, W
003026   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003028   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00302a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00302c   ecf8     call    0x33f0, 0        	CALL	_Delayms
00302e   f019
003030   0e04     movlw   0x4              	MOVLW	0x04
003032   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	86; /home/valentin/.icaro/firmware/source/user.c	for (grado=inicial;grado>final;grado--)
003034   0eff     movlw   0xff             	MOVLW	0xff
003036   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
003038   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
00303a   d7d5     bra     0x2fe6           	BRA	_00656_DS_
                                           _00658_DS_:
00303c   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
00303e   f00c
003040   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
003042   f00b
003044   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
003046   f00a
003048   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
00304a   f009
00304c   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00304e   f008
003050   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003052   f007
003054   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
003056   f006
003058   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00305a   f005
00305c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00305e   f004
003060   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003062   f003
003064   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003066   f002
003068   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00306a   f001
00306c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00306e   f000
003070   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003072   ffd9
003074   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	66; /home/valentin/.icaro/firmware/source/user.c	unsigned int sensor(int valor)
00380e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003810   ffe5
003812   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003814   ffd9
003816   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003818   ffe5
00381a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00381c   ffe5
00381e   0e02     movlw   0x2              	MOVLW	0x02
003820   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003822   f000
003824   0e03     movlw   0x3              	MOVLW	0x03
003826   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003828   f001
                                           ;	.line	69; /home/valentin/.icaro/firmware/source/user.c	an=analogread(valor);
00382a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00382c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00382e   ec91     call    0x3522, 0        	CALL	_analogread
003830   f01a
003832   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
003834   f001
003836   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	70; /home/valentin/.icaro/firmware/source/user.c	return an;
003838   c001     movff   0x1, 0xff3       	MOVFF	r0x01, PRODL
00383a   fff3
00383c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00383e   f001
003840   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003842   f000
003844   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003846   ffd9
003848   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	49; /home/valentin/.icaro/firmware/source/user.c	TRISB=0;
00319a   6a93     clrf    0x93, 0          	CLRF	_TRISB
                                           ;	.line	50; /home/valentin/.icaro/firmware/source/user.c	pinmode(15,INPUT);
00319c   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00319e   0e01     movlw   0x1              	MOVLW	0x01
0031a0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031a2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031a4   0e0f     movlw   0xf              	MOVLW	0x0f
0031a6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031a8   ece5     call    0x27ca, 0        	CALL	_pinmode
0031aa   f013
0031ac   0e04     movlw   0x4              	MOVLW	0x04
0031ae   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	51; /home/valentin/.icaro/firmware/source/user.c	pinmode(21,INPUT);
0031b0   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031b2   0e01     movlw   0x1              	MOVLW	0x01
0031b4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031b6   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031b8   0e15     movlw   0x15             	MOVLW	0x15
0031ba   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031bc   ece5     call    0x27ca, 0        	CALL	_pinmode
0031be   f013
0031c0   0e04     movlw   0x4              	MOVLW	0x04
0031c2   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	52; /home/valentin/.icaro/firmware/source/user.c	pinmode(22,INPUT);
0031c4   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031c6   0e01     movlw   0x1              	MOVLW	0x01
0031c8   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031ca   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031cc   0e16     movlw   0x16             	MOVLW	0x16
0031ce   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031d0   ece5     call    0x27ca, 0        	CALL	_pinmode
0031d2   f013
0031d4   0e04     movlw   0x4              	MOVLW	0x04
0031d6   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	53; /home/valentin/.icaro/firmware/source/user.c	pinmode(23,INPUT);
0031d8   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031da   0e01     movlw   0x1              	MOVLW	0x01
0031dc   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031de   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031e0   0e17     movlw   0x17             	MOVLW	0x17
0031e2   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031e4   ece5     call    0x27ca, 0        	CALL	_pinmode
0031e6   f013
0031e8   0e04     movlw   0x4              	MOVLW	0x04
0031ea   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	54; /home/valentin/.icaro/firmware/source/user.c	pinmode(24,INPUT);
0031ec   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031ee   0e01     movlw   0x1              	MOVLW	0x01
0031f0   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031f2   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
0031f4   0e18     movlw   0x18             	MOVLW	0x18
0031f6   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
0031f8   ece5     call    0x27ca, 0        	CALL	_pinmode
0031fa   f013
0031fc   0e04     movlw   0x4              	MOVLW	0x04
0031fe   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	55; /home/valentin/.icaro/firmware/source/user.c	pinmode(25,OUTPUT);
003200   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003202   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003204   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003206   0e19     movlw   0x19             	MOVLW	0x19
003208   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00320a   ece5     call    0x27ca, 0        	CALL	_pinmode
00320c   f013
00320e   0e04     movlw   0x4              	MOVLW	0x04
003210   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	56; /home/valentin/.icaro/firmware/source/user.c	pinmode(26,OUTPUT);
003212   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003214   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003216   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003218   0e1a     movlw   0x1a             	MOVLW	0x1a
00321a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00321c   ece5     call    0x27ca, 0        	CALL	_pinmode
00321e   f013
003220   0e04     movlw   0x4              	MOVLW	0x04
003222   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	57; /home/valentin/.icaro/firmware/source/user.c	pinmode(27,OUTPUT);
003224   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003226   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003228   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00322a   0e1b     movlw   0x1b             	MOVLW	0x1b
00322c   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00322e   ece5     call    0x27ca, 0        	CALL	_pinmode
003230   f013
003232   0e04     movlw   0x4              	MOVLW	0x04
003234   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	58; /home/valentin/.icaro/firmware/source/user.c	pinmode(28,OUTPUT);
003236   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
003238   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00323a   6ae5     clrf    0xe5, 0          	CLRF	POSTDEC1
00323c   0e1c     movlw   0x1c             	MOVLW	0x1c
00323e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003240   ece5     call    0x27ca, 0        	CALL	_pinmode
003242   f013
003244   0e04     movlw   0x4              	MOVLW	0x04
003246   26e1     addwf   0xe1, 0x1, 0     	ADDWF	FSR1L, F
                                           ;	.line	59; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(10);
003248   0e0a     movlw   0xa              	MOVLW	0x0a
00324a   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00324c   ec3b     call    0x3076, 0        	CALL	_ServoAttach
00324e   f018
003250   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	60; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(11);
003252   0e0b     movlw   0xb              	MOVLW	0x0b
003254   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003256   ec3b     call    0x3076, 0        	CALL	_ServoAttach
003258   f018
00325a   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	61; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(12);
00325c   0e0c     movlw   0xc              	MOVLW	0x0c
00325e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003260   ec3b     call    0x3076, 0        	CALL	_ServoAttach
003262   f018
003264   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	62; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(8);
003266   0e08     movlw   0x8              	MOVLW	0x08
003268   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
00326a   ec3b     call    0x3076, 0        	CALL	_ServoAttach
00326c   f018
00326e   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	63; /home/valentin/.icaro/firmware/source/user.c	ServoAttach(9);
003270   0e09     movlw   0x9              	MOVLW	0x09
003272   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003274   ec3b     call    0x3076, 0        	CALL	_ServoAttach
003276   f018
003278   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
00327a   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensordigital	code
                                           _sensordigital:
                                           ;	.line	33; /home/valentin/.icaro/firmware/source/user.c	int sensordigital(int valor)
003664   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003666   ffe5
003668   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00366a   ffd9
00366c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00366e   ffe5
003670   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003672   ffe5
003674   0e02     movlw   0x2              	MOVLW	0x02
003676   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003678   f000
00367a   0e03     movlw   0x3              	MOVLW	0x03
00367c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00367e   f001
                                           ;	.line	37; /home/valentin/.icaro/firmware/source/user.c	temp=digitalread(valor);
003680   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003682   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003684   5000     movf    0, 0, 0          	MOVF	r0x00, W
003686   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
003688   ec93     call    0x2d26, 0        	CALL	_digitalread
00368a   f016
00368c   cff3     movff   0xff3, 0x1       	MOVFF	PRODL, r0x01
00368e   f001
003690   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
003692   52e6     movf    0xe6, 0x1, 0     	MOVF	POSTINC1, F
                                           ;	.line	38; /home/valentin/.icaro/firmware/source/user.c	if (temp==0)
003694   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
003696   e103     bnz     0x369e           	BNZ	_00629_DS_
                                           ;	.line	40; /home/valentin/.icaro/firmware/source/user.c	return 1;
003698   6af3     clrf    0xf3, 0          	CLRF	PRODL
00369a   0e01     movlw   0x1              	MOVLW	0x01
00369c   d002     bra     0x36a2           	BRA	_00631_DS_
                                           _00629_DS_:
                                           ;	.line	44; /home/valentin/.icaro/firmware/source/user.c	return 0;
00369e   6af3     clrf    0xf3, 0          	CLRF	PRODL
0036a0   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00631_DS_:
0036a2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0036a4   f001
0036a6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0036a8   f000
0036aa   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0036ac   ffd9
0036ae   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	11; /home/valentin/.icaro/firmware/source/user.c	void epapout_init() { return; }
00390e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	10; /home/valentin/.icaro/firmware/source/user.c	void epapin_init() { return; }
003910   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	9; /home/valentin/.icaro/firmware/source/user.c	void epap_out() { return; }
003912   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	8; /home/valentin/.icaro/firmware/source/user.c	void epap_in() { return; }
003914   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayus(int microsecondes)
003608   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00360a   ffe5
00360c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00360e   ffd9
003610   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003612   ffe5
003614   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003616   ffe5
003618   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00361a   ffe5
00361c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00361e   ffe5
003620   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003622   ffe5
003624   0e02     movlw   0x2              	MOVLW	0x02
003626   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003628   f000
00362a   0e03     movlw   0x3              	MOVLW	0x03
00362c   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
00362e   f001
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<microsecondes;i++);
003630   6a02     clrf    0x2, 0           	CLRF	r0x02
003632   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00592_DS_:
003634   5000     movf    0, 0, 0          	MOVF	r0x00, W
003636   6e04     movwf   0x4, 0           	MOVWF	r0x04
                                           ; #	MOVF	r0x01, W
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
003638   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
00363a   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
00363c   e102     bnz     0x3642           	BNZ	_00603_DS_
00363e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
003640   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
                                           _00603_DS_:
003642   e203     bc      0x364a           	BC	_00594_DS_
003644   4a02     infsnz  0x2, 0x1, 0      	INFSNZ	r0x02, F
003646   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
003648   d7f5     bra     0x3634           	BRA	_00592_DS_
                                           _00594_DS_:
00364a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00364c   f004
00364e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003650   f003
003652   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003654   f002
003656   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003658   f001
00365a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00365c   f000
00365e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003660   ffd9
003662   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	void Delayms(unsigned long milliseconde)
0033f0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0033f2   ffe5
0033f4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0033f6   ffd9
0033f8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0033fa   ffe5
0033fc   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0033fe   ffe5
003400   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003402   ffe5
003404   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003406   ffe5
003408   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00340a   ffe5
00340c   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
00340e   ffe5
003410   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
003412   ffe5
003414   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
003416   ffe5
003418   0e02     movlw   0x2              	MOVLW	0x02
00341a   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00341c   f000
00341e   0e03     movlw   0x3              	MOVLW	0x03
003420   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
003422   f001
003424   0e04     movlw   0x4              	MOVLW	0x04
003426   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
003428   f002
00342a   0e05     movlw   0x5              	MOVLW	0x05
00342c   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
00342e   f003
                                           ;	.line	13; /home/valentin/.icaro/firmware/tmp/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
003430   6a04     clrf    0x4, 0           	CLRF	r0x04
003432   6a05     clrf    0x5, 0           	CLRF	r0x05
003434   6a06     clrf    0x6, 0           	CLRF	r0x06
003436   6a07     clrf    0x7, 0           	CLRF	r0x07
                                           _00573_DS_:
003438   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
00343a   5c07     subwf   0x7, 0, 0        	SUBWF	r0x07, W
00343c   e108     bnz     0x344e           	BNZ	_00584_DS_
00343e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
003440   5c06     subwf   0x6, 0, 0        	SUBWF	r0x06, W
003442   e105     bnz     0x344e           	BNZ	_00584_DS_
003444   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003446   5c05     subwf   0x5, 0, 0        	SUBWF	r0x05, W
003448   e102     bnz     0x344e           	BNZ	_00584_DS_
00344a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00344c   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
                                           _00584_DS_:
00344e   e20a     bc      0x3464           	BC	_00575_DS_
003450   0e01     movlw   0x1              	MOVLW	0x01
003452   ec37     call    0x6e, 0          	CALL	_delay10ktcy
003454   f000
003456   2a04     incf    0x4, 0x1, 0      	INCF	r0x04, F
003458   e3ef     bnc     0x3438           	BNC	_00573_DS_
00345a   2a05     incf    0x5, 0x1, 0      	INCF	r0x05, F
00345c   e3ed     bnc     0x3438           	BNC	_00573_DS_
00345e   4a06     infsnz  0x6, 0x1, 0      	INFSNZ	r0x06, F
003460   2a07     incf    0x7, 0x1, 0      	INCF	r0x07, F
                                           _00585_DS_:
003462   d7ea     bra     0x3438           	BRA	_00573_DS_
                                           _00575_DS_:
003464   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
003466   f007
003468   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
00346a   f006
00346c   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
00346e   f005
003470   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003472   f004
003474   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003476   f003
003478   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00347a   f002
00347c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00347e   f001
003480   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003482   f000
003484   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003486   ffd9
003488   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	40; /home/valentin/.icaro/firmware/tmp/analog.c	unsigned int analogread(unsigned char channel)
003522   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003524   ffe5
003526   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003528   ffd9
00352a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00352c   ffe5
00352e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003530   ffe5
003532   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003534   ffe5
003536   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003538   ffe5
00353a   0e02     movlw   0x2              	MOVLW	0x02
00353c   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
00353e   f000
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0=(channel-13)*4;
003540   0ef3     movlw   0xf3             	MOVLW	0xf3
003542   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
003544   5000     movf    0, 0, 0          	MOVF	r0x00, W
003546   0d04     mullw   0x4              	MULLW	0x04
003548   cff3     movff   0xff3, 0xfc2     	MOVFF	PRODL, _ADCON0
00354a   ffc2
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.ADON=1;
00354c   80c2     bsf     0xc2, 0, 0       	BSF	_ADCON0bits, 0
                                           ;	.line	60; /home/valentin/.icaro/firmware/tmp/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
00354e   0e09     movlw   0x9              	MOVLW	0x09
003550   6e00     movwf   0, 0             	MOVWF	r0x00
003552   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00565_DS_:
003554   0000     nop                      	NOP 
003556   0eff     movlw   0xff             	MOVLW	0xff
003558   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
00355a   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00355c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00355e   1001     iorwf   0x1, 0, 0        	IORWF	r0x01, W
003560   e1f9     bnz     0x3554           	BNZ	_00565_DS_
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.GO=1;
003562   82c2     bsf     0xc2, 0x1, 0     	BSF	_ADCON0bits, 1
                                           _00560_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/analog.c	while (ADCON0bits.GO);
003564   b2c2     btfsc   0xc2, 0x1, 0     	BTFSC	_ADCON0bits, 1
003566   d7fe     bra     0x3564           	BRA	_00560_DS_
                                           ;	.line	63; /home/valentin/.icaro/firmware/tmp/analog.c	result=ADRESH<<8;
003568   cfc4     movff   0xfc4, 0         	MOVFF	_ADRESH, r0x00
00356a   f000
00356c   6a01     clrf    0x1, 0           	CLRF	r0x01
00356e   5000     movf    0, 0, 0          	MOVF	r0x00, W
003570   6e03     movwf   0x3, 0           	MOVWF	r0x03
003572   6a02     clrf    0x2, 0           	CLRF	r0x02
                                           ;	.line	64; /home/valentin/.icaro/firmware/tmp/analog.c	result+=ADRESL;
003574   cfc3     movff   0xfc3, 0         	MOVFF	_ADRESL, r0x00
003576   f000
003578   6a01     clrf    0x1, 0           	CLRF	r0x01
00357a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00357c   2602     addwf   0x2, 0x1, 0      	ADDWF	r0x02, F
00357e   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003580   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
                                           ;	.line	65; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON0bits.ADON=0;
003582   90c2     bcf     0xc2, 0, 0       	BCF	_ADCON0bits, 0
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/analog.c	return(result);
003584   c003     movff   0x3, 0xff3       	MOVFF	r0x03, PRODL
003586   fff3
003588   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00358a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00358c   f003
00358e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003590   f002
003592   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003594   f001
003596   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003598   f000
00359a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00359c   ffd9
00359e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogReference	code
                                           _analogReference:
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/analog.c	void analogReference(unsigned char Type)
003876   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003878   ffe5
00387a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00387c   ffd9
00387e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003880   ffe5
003882   0e02     movlw   0x2              	MOVLW	0x02
003884   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003886   f000
                                           ; #	MOVF	r0x00, W
                                           ; #	BTFSS	STATUS, 2
                                           ; #	GOTO	_00543_DS_
                                           ; #	GOTO	_00545_DS_
                                           ; #	MOVF	r0x00, W
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/analog.c	if(Type == DEFAULTAN)			//the default analog reference of 5 volts (on 5V Arduino boards) or 3.3 volts (on 3.3V Arduino boards)
003888   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1|=0x00;			//Vref+ = VDD
00388a   e004     bz      0x3894           	BZ	_00545_DS_
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/analog.c	else if(Type == EXTERNAL)	//the voltage applied to the AREF pin (0 to 5V only) is used as the reference.
00388c   5000     movf    0, 0, 0          	MOVF	r0x00, W
00388e   0a01     xorlw   0x1              	XORLW	0x01
003890   e101     bnz     0x3894           	BNZ	_00545_DS_
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1|=0x10;			//Vref+ = External source
003892   88c1     bsf     0xc1, 0x4, 0     	BSF	_ADCON1, 4
                                           _00545_DS_:
003894   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003896   f000
003898   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00389a   ffd9
00389c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	15; /home/valentin/.icaro/firmware/tmp/analog.c	TRISA=TRISA | 0x2F;
0038e6   0e2f     movlw   0x2f             	MOVLW	0x2f
0038e8   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
                                           ;	.line	16; /home/valentin/.icaro/firmware/tmp/analog.c	TRISE=TRISE | 0x07;	
0038ea   0e07     movlw   0x7              	MOVLW	0x07
0038ec   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
                                           ;	.line	17; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON1=0x07;
0038ee   6ec1     movwf   0xc1, 0          	MOVWF	_ADCON1
                                           ;	.line	18; /home/valentin/.icaro/firmware/tmp/analog.c	ADCON2=0xBD;
0038f0   0ebd     movlw   0xbd             	MOVLW	0xbd
0038f2   6ec0     movwf   0xc0, 0          	MOVWF	_ADCON2
0038f4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	289; /home/valentin/.icaro/firmware/tmp/servos.c	if (PIR1bits.TMR1IF) {
0036f8   a09e     btfss   0x9e, 0, 0       	BTFSS	_PIR1bits, 0
0036fa   d020     bra     0x373c           	BRA	_00530_DS_
                                           ;	.line	290; /home/valentin/.icaro/firmware/tmp/servos.c	PIR1bits.TMR1IF=0;
0036fc   909e     bcf     0x9e, 0, 0       	BCF	_PIR1bits, 0
                                           ;	.line	291; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x00;
0036fe   6acd     clrf    0xcd, 0          	CLRF	_T1CON
003700   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	292; /home/valentin/.icaro/firmware/tmp/servos.c	if (phase) {
003702   515b     movf    0x5b, 0, 0x1     	MOVF	_phase, W, B
003704   e00b     bz      0x371c           	BZ	_00526_DS_
                                           ;	.line	294; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseUp();
003706   ec82     call    0x3904, 0        	CALL	_ServosPulseUp
003708   f01c
                                           ;	.line	296; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0xd3;
00370a   0ed3     movlw   0xd3             	MOVLW	0xd3
00370c   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	297; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x8f;
00370e   0e8f     movlw   0x8f             	MOVLW	0x8f
003710   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ;	.line	299; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=1;
003712   0e01     movlw   0x1              	MOVLW	0x01
003714   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
003716   0102     movlb   0x2              	BANKSEL	_phase
                                           ;	.line	300; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 0;
003718   6b5b     clrf    0x5b, 0x1        	CLRF	_phase, B
00371a   d010     bra     0x373c           	BRA	_00530_DS_
                                           _00526_DS_:
                                           ;	.line	305; /home/valentin/.icaro/firmware/tmp/servos.c	ServosPulseDown();
00371c   eca8     call    0x3350, 0        	CALL	_ServosPulseDown
00371e   f019
                                           ;	.line	309; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H= 0x2d;
003720   0e2d     movlw   0x2d             	MOVLW	0x2d
003722   6ecf     movwf   0xcf, 0          	MOVWF	_TMR1H
                                           ;	.line	310; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L= 0x0f;
003724   0e0f     movlw   0xf              	MOVLW	0x0f
003726   6ece     movwf   0xce, 0          	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00524_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
003728   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	312; /home/valentin/.icaro/firmware/tmp/servos.c	if (needreordering)	
00372a   515c     movf    0x5c, 0, 0x1     	MOVF	_needreordering, W, B
                                           ;	.line	313; /home/valentin/.icaro/firmware/tmp/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
00372c   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
                                           ;	.line	314; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
00372e   ec35     call    0x206a, 0        	CALL	_SortServoTimings
003730   f010
003732   0e21     movlw   0x21             	MOVLW	0x21
003734   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	315; /home/valentin/.icaro/firmware/tmp/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
003736   0e01     movlw   0x1              	MOVLW	0x01
003738   0102     movlb   0x2              	BANKSEL	_phase
00373a   6f5b     movwf   0x5b, 0x1        	MOVWF	_phase, B
                                           _00530_DS_:
                                           ;	.line	318; /home/valentin/.icaro/firmware/tmp/servos.c	return;
00373c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	274; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMaximumPulse(uchar servo)
00373e   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003740   ffe5
003742   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003744   ffd9
003746   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003748   ffe5
00374a   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00374c   ffe5
00374e   0e02     movlw   0x2              	MOVLW	0x02
003750   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003752   f000
                                           ;	.line	276; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
003754   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00512_DS_
                                           ; #	GOTO	_00513_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	277; /home/valentin/.icaro/firmware/tmp/servos.c	return;
003756   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	279; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
003758   e20e     bc      0x3776           	BC	_00513_DS_
00375a   6a01     clrf    0x1, 0           	CLRF	r0x01
00375c   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
00375e   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003760   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
003762   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003764   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003766   ffe9
003768   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00376a   ffea
00376c   0efa     movlw   0xfa             	MOVLW	0xfa
00376e   6eef     movwf   0xef, 0          	MOVWF	INDF0
                                           ;	.line	281; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003770   0e01     movlw   0x1              	MOVLW	0x01
003772   0102     movlb   0x2              	BANKSEL	_needreordering
003774   6f5c     movwf   0x5c, 0x1        	MOVWF	_needreordering, B
                                           _00513_DS_:
003776   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003778   f001
00377a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00377c   f000
00377e   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003780   ffd9
003782   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	263; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoMinimumPulse(uchar servo)
0037ca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0037cc   ffe5
0037ce   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0037d0   ffd9
0037d2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0037d4   ffe5
0037d6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0037d8   ffe5
0037da   0e02     movlw   0x2              	MOVLW	0x02
0037dc   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0037de   f000
                                           ;	.line	265; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
0037e0   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00500_DS_
                                           ; #	GOTO	_00501_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	266; /home/valentin/.icaro/firmware/tmp/servos.c	return;
0037e2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	268; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
0037e4   e20d     bc      0x3800           	BC	_00501_DS_
0037e6   6a01     clrf    0x1, 0           	CLRF	r0x01
0037e8   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
0037ea   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0037ec   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0037ee   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0037f0   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0037f2   ffe9
0037f4   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0037f6   ffea
0037f8   0e01     movlw   0x1              	MOVLW	0x01
0037fa   6eef     movwf   0xef, 0          	MOVWF	INDF0
0037fc   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	270; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0037fe   6f5c     movwf   0x5c, 0x1        	MOVWF	_needreordering, B
                                           _00501_DS_:
003800   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003802   f001
003804   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003806   f000
003808   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00380a   ffd9
00380c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	255; /home/valentin/.icaro/firmware/tmp/servos.c	unsigned char ServoRead(uchar servo)
003784   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003786   ffe5
003788   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00378a   ffd9
00378c   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00378e   ffe5
003790   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003792   ffe5
003794   0e02     movlw   0x2              	MOVLW	0x02
003796   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003798   f000
                                           ;	.line	257; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
00379a   0e12     movlw   0x12             	MOVLW	0x12
00379c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00379e   e302     bnc     0x37a4           	BNC	_00488_DS_
                                           ;	.line	258; /home/valentin/.icaro/firmware/tmp/servos.c	return 0;
0037a0   6ae8     clrf    0xe8, 0          	CLRF	WREG
0037a2   d00c     bra     0x37bc           	BRA	_00489_DS_
                                           _00488_DS_:
                                           ;	.line	259; /home/valentin/.icaro/firmware/tmp/servos.c	return servovalues[servo];
0037a4   6a01     clrf    0x1, 0           	CLRF	r0x01
0037a6   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
0037a8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0037aa   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0037ac   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0037ae   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0037b0   ffe9
0037b2   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0037b4   ffea
0037b6   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
0037b8   f000
0037ba   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           _00489_DS_:
0037bc   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0037be   f001
0037c0   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0037c2   f000
0037c4   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0037c6   ffd9
0037c8   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	240; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoWrite(uchar servo, uchar value)
0035a0   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0035a2   ffe5
0035a4   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0035a6   ffd9
0035a8   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0035aa   ffe5
0035ac   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0035ae   ffe5
0035b0   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0035b2   ffe5
0035b4   0e02     movlw   0x2              	MOVLW	0x02
0035b6   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0035b8   f000
0035ba   0e03     movlw   0x3              	MOVLW	0x03
0035bc   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0035be   f001
                                           ;	.line	242; /home/valentin/.icaro/firmware/tmp/servos.c	if(servo>=18)        // test if numservo is valid
0035c0   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00464_DS_
                                           ; #	GOTO	_00469_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	243; /home/valentin/.icaro/firmware/tmp/servos.c	return;
0035c2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
                                           ;	.line	245; /home/valentin/.icaro/firmware/tmp/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
0035c4   e218     bc      0x35f6           	BC	_00469_DS_
0035c6   0e01     movlw   0x1              	MOVLW	0x01
0035c8   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0035ca   e202     bc      0x35d0           	BC	_00466_DS_
                                           ;	.line	246; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMIN;
0035cc   0e01     movlw   0x1              	MOVLW	0x01
0035ce   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00466_DS_:
                                           ;	.line	247; /home/valentin/.icaro/firmware/tmp/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
0035d0   0efb     movlw   0xfb             	MOVLW	0xfb
0035d2   5c01     subwf   0x1, 0, 0        	SUBWF	r0x01, W
0035d4   e302     bnc     0x35da           	BNC	_00468_DS_
                                           ;	.line	248; /home/valentin/.icaro/firmware/tmp/servos.c	value=SERVOMAX;
0035d6   0efa     movlw   0xfa             	MOVLW	0xfa
0035d8   6e01     movwf   0x1, 0           	MOVWF	r0x01
                                           _00468_DS_:
                                           ;	.line	249; /home/valentin/.icaro/firmware/tmp/servos.c	servovalues[servo]=value;
0035da   6a02     clrf    0x2, 0           	CLRF	r0x02
0035dc   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
0035de   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0035e0   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0035e2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0035e4   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0035e6   ffe9
0035e8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0035ea   ffea
0035ec   c001     movff   0x1, 0xfef       	MOVFF	r0x01, INDF0
0035ee   ffef
                                           ;	.line	251; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0035f0   0e01     movlw   0x1              	MOVLW	0x01
0035f2   0102     movlb   0x2              	BANKSEL	_needreordering
0035f4   6f5c     movwf   0x5c, 0x1        	MOVWF	_needreordering, B
                                           _00469_DS_:
0035f6   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0035f8   f002
0035fa   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0035fc   f001
0035fe   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003600   f000
003602   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003604   ffd9
003606   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	226; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoDetach(uchar pin)
00327c   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
00327e   ffe5
003280   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003282   ffd9
003284   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003286   ffe5
003288   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00328a   ffe5
00328c   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
00328e   ffe5
003290   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
003292   ffe5
003294   0e02     movlw   0x2              	MOVLW	0x02
003296   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003298   f000
                                           ;	.line	228; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
00329a   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00437_DS_
                                           ; #	GOTO	_00444_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	230; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
00329c   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00329e   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0032a0   d04c     bra     0x333a           	BRA	_00444_DS_
0032a2   0e08     movlw   0x8              	MOVLW	0x08
0032a4   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0032a6   e218     bc      0x32d8           	BC	_00442_DS_
                                           ;	.line	231; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
0032a8   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
0032aa   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0032ac   6e01     movwf   0x1, 0           	MOVWF	r0x01
0032ae   6a02     clrf    0x2, 0           	CLRF	r0x02
0032b0   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
0032b2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0032b4   6a03     clrf    0x3, 0           	CLRF	r0x03
0032b6   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0032b8   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0032ba   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0032bc   fff6
0032be   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0032c0   fff7
0032c2   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0032c4   fff8
0032c6   0009     tblrd   *+               	TBLRD*+	
0032c8   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
0032ca   f001
0032cc   0102     movlb   0x2              	BANKSEL	_activatedservos
0032ce   515e     movf    0x5e, 0, 0x1     	MOVF	_activatedservos, W, B
0032d0   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
0032d2   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0032d4   6f5e     movwf   0x5e, 0x1        	MOVWF	_activatedservos, B
0032d6   d031     bra     0x333a           	BRA	_00444_DS_
                                           _00442_DS_:
                                           ;	.line	232; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
0032d8   0e0d     movlw   0xd              	MOVLW	0x0d
0032da   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0032dc   e318     bnc     0x330e           	BNC	_00439_DS_
                                           ;	.line	233; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
0032de   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
0032e0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0032e2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0032e4   6a02     clrf    0x2, 0           	CLRF	r0x02
0032e6   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
0032e8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0032ea   6a03     clrf    0x3, 0           	CLRF	r0x03
0032ec   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0032ee   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0032f0   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0032f2   fff6
0032f4   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0032f6   fff7
0032f8   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0032fa   fff8
0032fc   0009     tblrd   *+               	TBLRD*+	
0032fe   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003300   f001
003302   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
003304   5160     movf    0x60, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
003306   1a01     xorwf   0x1, 0x1, 0      	XORWF	r0x01, F
003308   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00330a   6f60     movwf   0x60, 0x1        	MOVWF	(_activatedservos + 2), B
00330c   d016     bra     0x333a           	BRA	_00444_DS_
                                           _00439_DS_:
                                           ;	.line	235; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
00330e   6a01     clrf    0x1, 0           	CLRF	r0x01
003310   6a02     clrf    0x2, 0           	CLRF	r0x02
003312   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
003314   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003316   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
003318   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
00331a   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00331c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00331e   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
003320   fff6
003322   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
003324   fff7
003326   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003328   fff8
00332a   0009     tblrd   *+               	TBLRD*+	
00332c   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
00332e   f000
003330   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
003332   515f     movf    0x5f, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
003334   1a00     xorwf   0, 0x1, 0        	XORWF	r0x00, F
003336   5000     movf    0, 0, 0          	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003338   6f5f     movwf   0x5f, 0x1        	MOVWF	(_activatedservos + 1), B
                                           _00444_DS_:
00333a   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
00333c   f003
00333e   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
003340   f002
003342   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
003344   f001
003346   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003348   f000
00334a   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
00334c   ffd9
00334e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	209; /home/valentin/.icaro/firmware/tmp/servos.c	void ServoAttach(uchar pin)
003076   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003078   ffe5
00307a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
00307c   ffd9
00307e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
003080   ffe5
003082   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
003084   ffe5
003086   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
003088   ffe5
00308a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
00308c   ffe5
00308e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
003090   ffe5
003092   0e02     movlw   0x2              	MOVLW	0x02
003094   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
003096   f000
                                           ;	.line	211; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin>=18) return;
003098   0e12     movlw   0x12             	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00409_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	213; /home/valentin/.icaro/firmware/tmp/servos.c	if(pin<8){
00309a   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
00309c   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00309e   d070     bra     0x3180           	BRA	_00416_DS_
0030a0   0e08     movlw   0x8              	MOVLW	0x08
0030a2   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0030a4   e224     bc      0x30ee           	BC	_00414_DS_
                                           ;	.line	214; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
0030a6   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
0030a8   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0030aa   6e01     movwf   0x1, 0           	MOVWF	r0x01
0030ac   6a02     clrf    0x2, 0           	CLRF	r0x02
0030ae   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
0030b0   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0030b2   6a03     clrf    0x3, 0           	CLRF	r0x03
0030b4   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0030b6   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
0030b8   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0030ba   fff6
0030bc   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0030be   fff7
0030c0   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0030c2   fff8
0030c4   0009     tblrd   *+               	TBLRD*+	
0030c6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0030c8   f004
0030ca   0102     movlb   0x2              	BANKSEL	_activatedservos
0030cc   515e     movf    0x5e, 0, 0x1     	MOVF	_activatedservos, W, B
0030ce   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
0030d0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
0030d2   6f5e     movwf   0x5e, 0x1        	MOVWF	_activatedservos, B
                                           ;	.line	215; /home/valentin/.icaro/firmware/tmp/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
0030d4   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
0030d6   fff6
0030d8   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
0030da   fff7
0030dc   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
0030de   fff8
0030e0   0009     tblrd   *+               	TBLRD*+	
0030e2   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
0030e4   f001
0030e6   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
0030e8   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0030ea   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
0030ec   d049     bra     0x3180           	BRA	_00416_DS_
                                           _00414_DS_:
                                           ;	.line	216; /home/valentin/.icaro/firmware/tmp/servos.c	} else if (pin>12) {
0030ee   0e0d     movlw   0xd              	MOVLW	0x0d
0030f0   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0030f2   e324     bnc     0x313c           	BNC	_00411_DS_
                                           ;	.line	217; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
0030f4   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
0030f6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0030f8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0030fa   6a02     clrf    0x2, 0           	CLRF	r0x02
0030fc   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
0030fe   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
003100   6a03     clrf    0x3, 0           	CLRF	r0x03
003102   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
003104   2203     addwfc  0x3, 0x1, 0      	ADDWFC	r0x03, F
003106   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003108   fff6
00310a   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
00310c   fff7
00310e   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
003110   fff8
003112   0009     tblrd   *+               	TBLRD*+	
003114   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
003116   f004
003118   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
00311a   5160     movf    0x60, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
00311c   1204     iorwf   0x4, 0x1, 0      	IORWF	r0x04, F
00311e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
                                           ; removed redundant BANKSEL
003120   6f60     movwf   0x60, 0x1        	MOVWF	(_activatedservos + 2), B
                                           ;	.line	218; /home/valentin/.icaro/firmware/tmp/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
003122   c001     movff   0x1, 0xff6       	MOVFF	r0x01, TBLPTRL
003124   fff6
003126   c002     movff   0x2, 0xff7       	MOVFF	r0x02, TBLPTRH
003128   fff7
00312a   c003     movff   0x3, 0xff8       	MOVFF	r0x03, TBLPTRU
00312c   fff8
00312e   0009     tblrd   *+               	TBLRD*+	
003130   cff5     movff   0xff5, 0x1       	MOVFF	TABLAT, r0x01
003132   f001
003134   5001     movf    0x1, 0, 0        	MOVF	r0x01, W
003136   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003138   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
00313a   d022     bra     0x3180           	BRA	_00416_DS_
                                           _00411_DS_:
                                           ;	.line	220; /home/valentin/.icaro/firmware/tmp/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
00313c   6a01     clrf    0x1, 0           	CLRF	r0x01
00313e   6a02     clrf    0x2, 0           	CLRF	r0x02
003140   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
003142   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003144   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
003146   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003148   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00314a   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
00314c   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
00314e   fff6
003150   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
003152   fff7
003154   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003156   fff8
003158   0009     tblrd   *+               	TBLRD*+	
00315a   cff5     movff   0xff5, 0x3       	MOVFF	TABLAT, r0x03
00315c   f003
00315e   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
003160   515f     movf    0x5f, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
003162   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
003164   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
003166   6f5f     movwf   0x5f, 0x1        	MOVWF	(_activatedservos + 1), B
                                           ;	.line	221; /home/valentin/.icaro/firmware/tmp/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003168   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
00316a   fff6
00316c   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
00316e   fff7
003170   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
003172   fff8
003174   0009     tblrd   *+               	TBLRD*+	
003176   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
003178   f000
00317a   5000     movf    0, 0, 0          	MOVF	r0x00, W
00317c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00317e   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           _00416_DS_:
003180   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
003182   f004
003184   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
003186   f003
003188   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
00318a   f002
00318c   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
00318e   f001
003190   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
003192   f000
003194   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
003196   ffd9
003198   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	125; /home/valentin/.icaro/firmware/tmp/servos.c	static void SortServoTimings()
00206a   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00206c   ffe5
00206e   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002070   ffe5
002072   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002074   ffe5
002076   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002078   ffe5
00207a   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
00207c   ffe5
00207e   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002080   ffe5
002082   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002084   ffe5
002086   c007     movff   0x7, 0xfe5       	MOVFF	r0x07, POSTDEC1
002088   ffe5
00208a   c008     movff   0x8, 0xfe5       	MOVFF	r0x08, POSTDEC1
00208c   ffe5
00208e   c009     movff   0x9, 0xfe5       	MOVFF	r0x09, POSTDEC1
002090   ffe5
002092   c00a     movff   0xa, 0xfe5       	MOVFF	r0x0a, POSTDEC1
002094   ffe5
002096   c00b     movff   0xb, 0xfe5       	MOVFF	r0x0b, POSTDEC1
002098   ffe5
00209a   c00c     movff   0xc, 0xfe5       	MOVFF	r0x0c, POSTDEC1
00209c   ffe5
00209e   0102     movlb   0x2              	BANKSEL	_SortServoTimings_mascaratotal_1_27
                                           ;	.line	132; /home/valentin/.icaro/firmware/tmp/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
0020a0   6b69     clrf    0x69, 0x1        	CLRF	_SortServoTimings_mascaratotal_1_27, B
                                           ; removed redundant BANKSEL
0020a2   6b6a     clrf    0x6a, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ; removed redundant BANKSEL
0020a4   6b6b     clrf    0x6b, 0x1        	CLRF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
0020a6   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00325_DS_:
                                           ;	.line	136; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=255;
0020a8   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
0020aa   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0020ac   6e01     movwf   0x1, 0           	MOVWF	r0x01
0020ae   6a02     clrf    0x2, 0           	CLRF	r0x02
0020b0   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
0020b2   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0020b4   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0020b6   ffe9
0020b8   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0020ba   ffea
0020bc   68ef     setf    0xef, 0          	SETF	INDF0
                                           ;	.line	138; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
0020be   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0020c0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0020c2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0020c4   6a02     clrf    0x2, 0           	CLRF	r0x02
0020c6   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0020c8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0020ca   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0020cc   ffe9
0020ce   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0020d0   ffea
0020d2   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	139; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
0020d4   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0020d6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0020d8   6e01     movwf   0x1, 0           	MOVWF	r0x01
0020da   6a02     clrf    0x2, 0           	CLRF	r0x02
0020dc   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0020de   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0020e0   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0020e2   ffe9
0020e4   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0020e6   ffea
0020e8   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	135; /home/valentin/.icaro/firmware/tmp/servos.c	for(t=0;t<18;t++){
0020ea   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0020ec   0e12     movlw   0x12             	MOVLW	0x12
0020ee   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0020f0   e3db     bnc     0x20a8           	BNC	_00325_DS_
                                           ;	.line	142; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos=0;
0020f2   6a00     clrf    0, 0             	CLRF	r0x00
                                           ;	.line	144; /home/valentin/.icaro/firmware/tmp/servos.c	while(totalservos<18) {
0020f4   6a01     clrf    0x1, 0           	CLRF	r0x01
                                           _00322_DS_:
0020f6   0e12     movlw   0x12             	MOVLW	0x12
0020f8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0020fa   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
0020fc   d194     bra     0x2426           	BRA	_00324_DS_
                                           ;	.line	145; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0020fe   0e01     movlw   0x1              	MOVLW	0x01
002100   6e02     movwf   0x2, 0           	MOVWF	r0x02
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
002102   6a03     clrf    0x3, 0           	CLRF	r0x03
                                           _00327_DS_:
                                           ;	.line	148; /home/valentin/.icaro/firmware/tmp/servos.c	if (s<8){
002104   0e08     movlw   0x8              	MOVLW	0x08
002106   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
002108   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
00210a   d061     bra     0x21ce           	BRA	_00319_DS_
                                           ;	.line	149; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
00210c   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
00210e   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002110   6e04     movwf   0x4, 0           	MOVWF	r0x04
002112   6a05     clrf    0x5, 0           	CLRF	r0x05
002114   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
002116   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002118   6a06     clrf    0x6, 0           	CLRF	r0x06
00211a   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
00211c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00211e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002120   fff6
002122   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002124   fff7
002126   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002128   fff8
00212a   0009     tblrd   *+               	TBLRD*+	
00212c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00212e   f004
002130   0102     movlb   0x2              	BANKSEL	_SortServoTimings_mascaratotal_1_27
002132   5169     movf    0x69, 0, 0x1     	MOVF	_SortServoTimings_mascaratotal_1_27, W, B
002134   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
002136   0102     movlb   0x2              	BANKSEL	_activatedservos
002138   515e     movf    0x5e, 0, 0x1     	MOVF	_activatedservos, W, B
00213a   1604     andwf   0x4, 0x1, 0      	ANDWF	r0x04, F
00213c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00213e   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
002140   d148     bra     0x23d2           	BRA	_00328_DS_
                                           ;	.line	151; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002142   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
002144   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002146   6e04     movwf   0x4, 0           	MOVWF	r0x04
002148   6a05     clrf    0x5, 0           	CLRF	r0x05
00214a   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
00214c   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
00214e   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002150   ffe9
002152   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
002154   ffea
002156   cfef     movff   0xfef, 0x4       	MOVFF	INDF0, r0x04
002158   f004
00215a   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
00215c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00215e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002160   6a06     clrf    0x6, 0           	CLRF	r0x06
002162   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002164   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002166   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
002168   ffe9
00216a   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00216c   ffea
00216e   cfef     movff   0xfef, 0x7       	MOVFF	INDF0, r0x07
002170   f007
002172   5007     movf    0x7, 0, 0        	MOVF	r0x07, W
002174   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002176   e21f     bc      0x21b6           	BC	_00294_DS_
                                           ;	.line	152; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002178   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
00217a   ffe9
00217c   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
00217e   ffea
002180   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002182   ffef
                                           ;	.line	154; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002184   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002186   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002188   6e07     movwf   0x7, 0           	MOVWF	r0x07
00218a   6a08     clrf    0x8, 0           	CLRF	r0x08
00218c   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
00218e   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
002190   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
002192   ffe9
002194   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
002196   ffea
002198   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	155; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
00219a   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
00219c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00219e   6e07     movwf   0x7, 0           	MOVWF	r0x07
0021a0   6a08     clrf    0x8, 0           	CLRF	r0x08
0021a2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0021a4   2208     addwfc  0x8, 0x1, 0      	ADDWFC	r0x08, F
0021a6   c007     movff   0x7, 0xfe9       	MOVFF	r0x07, FSR0L
0021a8   ffe9
0021aa   c008     movff   0x8, 0xfea       	MOVFF	r0x08, FSR0H
0021ac   ffea
0021ae   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	156; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
0021b0   0e01     movlw   0x1              	MOVLW	0x01
0021b2   6e02     movwf   0x2, 0           	MOVWF	r0x02
0021b4   d10e     bra     0x23d2           	BRA	_00328_DS_
                                           _00294_DS_:
                                           ;	.line	158; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0021b6   c005     movff   0x5, 0xfe9       	MOVFF	r0x05, FSR0L
0021b8   ffe9
0021ba   c006     movff   0x6, 0xfea       	MOVFF	r0x06, FSR0H
0021bc   ffea
0021be   cfef     movff   0xfef, 0x5       	MOVFF	INDF0, r0x05
0021c0   f005
0021c2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0021c4   1805     xorwf   0x5, 0, 0        	XORWF	r0x05, W
0021c6   e001     bz      0x21ca           	BZ	_00391_DS_
0021c8   d104     bra     0x23d2           	BRA	_00328_DS_
                                           _00391_DS_:
                                           ;	.line	160; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
0021ca   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0021cc   d102     bra     0x23d2           	BRA	_00328_DS_
                                           _00319_DS_:
                                           ;	.line	164; /home/valentin/.icaro/firmware/tmp/servos.c	else if (s>12){
0021ce   0e0d     movlw   0xd              	MOVLW	0x0d
0021d0   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0021d2   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0021d4   d080     bra     0x22d6           	BRA	_00316_DS_
                                           ;	.line	165; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
0021d6   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
0021d8   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0021da   6e04     movwf   0x4, 0           	MOVWF	r0x04
0021dc   6a05     clrf    0x5, 0           	CLRF	r0x05
0021de   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
0021e0   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0021e2   6a06     clrf    0x6, 0           	CLRF	r0x06
0021e4   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0021e6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0021e8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0021ea   fff6
0021ec   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0021ee   fff7
0021f0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0021f2   fff8
0021f4   0009     tblrd   *+               	TBLRD*+	
0021f6   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
0021f8   f007
0021fa   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 2)
0021fc   516b     movf    0x6b, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
0021fe   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
002200   6e08     movwf   0x8, 0           	MOVWF	r0x08
002202   0102     movlb   0x2              	BANKSEL	(_activatedservos + 2)
002204   5160     movf    0x60, 0, 0x1     	MOVF	(_activatedservos + 2), W, B
002206   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002208   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00220a   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
00220c   d0e2     bra     0x23d2           	BRA	_00328_DS_
                                           ;	.line	167; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00220e   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
002210   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002212   6e08     movwf   0x8, 0           	MOVWF	r0x08
002214   6a09     clrf    0x9, 0           	CLRF	r0x09
002216   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002218   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
00221a   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
00221c   ffe9
00221e   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
002220   ffea
002222   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002224   f008
002226   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
002228   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00222a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00222c   6a0a     clrf    0xa, 0           	CLRF	r0x0a
00222e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002230   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
002232   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002234   ffe9
002236   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002238   ffea
00223a   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
00223c   f00b
00223e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002240   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
002242   e229     bc      0x2296           	BC	_00302_DS_
                                           ;	.line	168; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002244   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002246   ffe9
002248   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
00224a   ffea
00224c   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
00224e   ffef
                                           ;	.line	170; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=0x00;
002250   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002252   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002254   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002256   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002258   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
00225a   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
00225c   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
00225e   ffe9
002260   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
002262   ffea
002264   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	171; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=servomasks[s];
002266   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
002268   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00226a   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
00226c   6a0c     clrf    0xc, 0           	CLRF	r0x0c
00226e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002270   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
002272   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002274   fff6
002276   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002278   fff7
00227a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00227c   fff8
00227e   0009     tblrd   *+               	TBLRD*+	
002280   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002282   f004
002284   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
002286   ffe9
002288   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
00228a   ffea
00228c   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
00228e   ffef
                                           ;	.line	172; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002290   0e01     movlw   0x1              	MOVLW	0x01
002292   6e02     movwf   0x2, 0           	MOVWF	r0x02
002294   d09e     bra     0x23d2           	BRA	_00328_DS_
                                           _00302_DS_:
                                           ;	.line	174; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002296   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002298   ffe9
00229a   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
00229c   ffea
00229e   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
0022a0   f009
0022a2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0022a4   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
0022a6   e001     bz      0x22aa           	BZ	_00396_DS_
0022a8   d094     bra     0x23d2           	BRA	_00328_DS_
                                           _00396_DS_:
                                           ;	.line	175; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t] |= servomasks[s];
0022aa   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0022ac   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0022ae   6e04     movwf   0x4, 0           	MOVWF	r0x04
0022b0   6a05     clrf    0x5, 0           	CLRF	r0x05
0022b2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0022b4   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0022b6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0022b8   ffe9
0022ba   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0022bc   ffea
0022be   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0022c0   f006
0022c2   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0022c4   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
0022c6   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0022c8   ffe9
0022ca   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0022cc   ffea
0022ce   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
0022d0   ffef
                                           ;	.line	176; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
0022d2   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
0022d4   d07e     bra     0x23d2           	BRA	_00328_DS_
                                           _00316_DS_:
                                           ;	.line	181; /home/valentin/.icaro/firmware/tmp/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
0022d6   0eb8     movlw   0xb8             	MOVLW	LOW(_servomasks)
0022d8   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
0022da   6e04     movwf   0x4, 0           	MOVWF	r0x04
0022dc   6a05     clrf    0x5, 0           	CLRF	r0x05
0022de   0e27     movlw   0x27             	MOVLW	HIGH(_servomasks)
0022e0   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0022e2   6a06     clrf    0x6, 0           	CLRF	r0x06
0022e4   0e00     movlw   0                	MOVLW	UPPER(_servomasks)
0022e6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0022e8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0022ea   fff6
0022ec   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0022ee   fff7
0022f0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0022f2   fff8
0022f4   0009     tblrd   *+               	TBLRD*+	
0022f6   cff5     movff   0xff5, 0x7       	MOVFF	TABLAT, r0x07
0022f8   f007
0022fa   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
0022fc   516a     movf    0x6a, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
0022fe   1407     andwf   0x7, 0, 0        	ANDWF	r0x07, W
002300   6e08     movwf   0x8, 0           	MOVWF	r0x08
002302   0102     movlb   0x2              	BANKSEL	(_activatedservos + 1)
002304   515f     movf    0x5f, 0, 0x1     	MOVF	(_activatedservos + 1), W, B
002306   1608     andwf   0x8, 0x1, 0      	ANDWF	r0x08, F
002308   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
00230a   a4d8     btfss   0xd8, 0x2, 0     	BTFSS	STATUS, 2
00230c   d062     bra     0x23d2           	BRA	_00328_DS_
                                           ;	.line	183; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00230e   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
002310   2403     addwf   0x3, 0, 0        	ADDWF	r0x03, W
002312   6e08     movwf   0x8, 0           	MOVWF	r0x08
002314   6a09     clrf    0x9, 0           	CLRF	r0x09
002316   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
002318   2209     addwfc  0x9, 0x1, 0      	ADDWFC	r0x09, F
00231a   c008     movff   0x8, 0xfe9       	MOVFF	r0x08, FSR0L
00231c   ffe9
00231e   c009     movff   0x9, 0xfea       	MOVFF	r0x09, FSR0H
002320   ffea
002322   cfef     movff   0xfef, 0x8       	MOVFF	INDF0, r0x08
002324   f008
002326   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
002328   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00232a   6e09     movwf   0x9, 0           	MOVWF	r0x09
00232c   6a0a     clrf    0xa, 0           	CLRF	r0x0a
00232e   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
002330   220a     addwfc  0xa, 0x1, 0      	ADDWFC	r0x0a, F
002332   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002334   ffe9
002336   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
002338   ffea
00233a   cfef     movff   0xfef, 0xb       	MOVFF	INDF0, r0x0b
00233c   f00b
00233e   500b     movf    0xb, 0, 0        	MOVF	r0x0b, W
002340   5c08     subwf   0x8, 0, 0        	SUBWF	r0x08, W
002342   e229     bc      0x2396           	BC	_00310_DS_
                                           ;	.line	184; /home/valentin/.icaro/firmware/tmp/servos.c	timings[timevalue][t]=servovalues[s];
002344   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002346   ffe9
002348   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
00234a   ffea
00234c   c008     movff   0x8, 0xfef       	MOVFF	r0x08, INDF0
00234e   ffef
                                           ;	.line	186; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t]=servomasks[s];
002350   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
002352   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002354   6e0b     movwf   0xb, 0           	MOVWF	r0x0b
002356   6a0c     clrf    0xc, 0           	CLRF	r0x0c
002358   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
00235a   220c     addwfc  0xc, 0x1, 0      	ADDWFC	r0x0c, F
00235c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00235e   fff6
002360   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002362   fff7
002364   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002366   fff8
002368   0009     tblrd   *+               	TBLRD*+	
00236a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00236c   f004
00236e   c00b     movff   0xb, 0xfe9       	MOVFF	r0x0b, FSR0L
002370   ffe9
002372   c00c     movff   0xc, 0xfea       	MOVFF	r0x0c, FSR0H
002374   ffea
002376   c004     movff   0x4, 0xfef       	MOVFF	r0x04, INDF0
002378   ffef
                                           ;	.line	187; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_A][t]=0x00;
00237a   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
00237c   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
00237e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002380   6a05     clrf    0x5, 0           	CLRF	r0x05
002382   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002384   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
002386   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
002388   ffe9
00238a   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
00238c   ffea
00238e   6aef     clrf    0xef, 0          	CLRF	INDF0
                                           ;	.line	188; /home/valentin/.icaro/firmware/tmp/servos.c	numservos=1;
002390   0e01     movlw   0x1              	MOVLW	0x01
002392   6e02     movwf   0x2, 0           	MOVWF	r0x02
002394   d01e     bra     0x23d2           	BRA	_00328_DS_
                                           _00310_DS_:
                                           ;	.line	190; /home/valentin/.icaro/firmware/tmp/servos.c	else if (servovalues[s] == timings [timevalue][t]){
002396   c009     movff   0x9, 0xfe9       	MOVFF	r0x09, FSR0L
002398   ffe9
00239a   c00a     movff   0xa, 0xfea       	MOVFF	r0x0a, FSR0H
00239c   ffea
00239e   cfef     movff   0xfef, 0x9       	MOVFF	INDF0, r0x09
0023a0   f009
0023a2   5008     movf    0x8, 0, 0        	MOVF	r0x08, W
0023a4   1809     xorwf   0x9, 0, 0        	XORWF	r0x09, W
0023a6   e115     bnz     0x23d2           	BNZ	_00328_DS_
                                           ;	.line	191; /home/valentin/.icaro/firmware/tmp/servos.c	timings[MaskPort_C][t] |= servomasks[s];
0023a8   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0023aa   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0023ac   6e04     movwf   0x4, 0           	MOVWF	r0x04
0023ae   6a05     clrf    0x5, 0           	CLRF	r0x05
0023b0   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0023b2   2205     addwfc  0x5, 0x1, 0      	ADDWFC	r0x05, F
0023b4   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0023b6   ffe9
0023b8   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0023ba   ffea
0023bc   cfef     movff   0xfef, 0x6       	MOVFF	INDF0, r0x06
0023be   f006
0023c0   5006     movf    0x6, 0, 0        	MOVF	r0x06, W
0023c2   1207     iorwf   0x7, 0x1, 0      	IORWF	r0x07, F
0023c4   c004     movff   0x4, 0xfe9       	MOVFF	r0x04, FSR0L
0023c6   ffe9
0023c8   c005     movff   0x5, 0xfea       	MOVFF	r0x05, FSR0H
0023ca   ffea
0023cc   c007     movff   0x7, 0xfef       	MOVFF	r0x07, INDF0
0023ce   ffef
                                           ;	.line	192; /home/valentin/.icaro/firmware/tmp/servos.c	numservos++;
0023d0   2a02     incf    0x2, 0x1, 0      	INCF	r0x02, F
                                           _00328_DS_:
                                           ;	.line	146; /home/valentin/.icaro/firmware/tmp/servos.c	for(s=0;s<18;s++) { 
0023d2   2a03     incf    0x3, 0x1, 0      	INCF	r0x03, F
0023d4   0e12     movlw   0x12             	MOVLW	0x12
0023d6   5c03     subwf   0x3, 0, 0        	SUBWF	r0x03, W
0023d8   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0023da   d694     bra     0x2104           	BRA	_00327_DS_
                                           ;	.line	198; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
0023dc   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
0023de   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
0023e0   6e03     movwf   0x3, 0           	MOVWF	r0x03
0023e2   6a04     clrf    0x4, 0           	CLRF	r0x04
0023e4   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
0023e6   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
0023e8   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
0023ea   ffe9
0023ec   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
0023ee   ffea
0023f0   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
0023f2   f003
0023f4   0102     movlb   0x2              	BANKSEL	(_SortServoTimings_mascaratotal_1_27 + 1)
0023f6   516a     movf    0x6a, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 1), W, B
0023f8   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
0023fa   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0023fc   6f6a     movwf   0x6a, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 1), B
                                           ;	.line	199; /home/valentin/.icaro/firmware/tmp/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
0023fe   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
002400   2401     addwf   0x1, 0, 0        	ADDWF	r0x01, W
002402   6e03     movwf   0x3, 0           	MOVWF	r0x03
002404   6a04     clrf    0x4, 0           	CLRF	r0x04
002406   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
002408   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
00240a   c003     movff   0x3, 0xfe9       	MOVFF	r0x03, FSR0L
00240c   ffe9
00240e   c004     movff   0x4, 0xfea       	MOVFF	r0x04, FSR0H
002410   ffea
002412   cfef     movff   0xfef, 0x3       	MOVFF	INDF0, r0x03
002414   f003
                                           ; removed redundant BANKSEL
002416   516b     movf    0x6b, 0, 0x1     	MOVF	(_SortServoTimings_mascaratotal_1_27 + 2), W, B
002418   1203     iorwf   0x3, 0x1, 0      	IORWF	r0x03, F
00241a   5003     movf    0x3, 0, 0        	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
00241c   6f6b     movwf   0x6b, 0x1        	MOVWF	(_SortServoTimings_mascaratotal_1_27 + 2), B
                                           ;	.line	200; /home/valentin/.icaro/firmware/tmp/servos.c	totalservos += numservos;
00241e   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002420   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
                                           ;	.line	201; /home/valentin/.icaro/firmware/tmp/servos.c	t++;
002422   2a01     incf    0x1, 0x1, 0      	INCF	r0x01, F
002424   d668     bra     0x20f6           	BRA	_00322_DS_
                                           _00324_DS_:
002426   0102     movlb   0x2              	BANKSEL	_needreordering
                                           ;	.line	204; /home/valentin/.icaro/firmware/tmp/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002428   6b5c     clrf    0x5c, 0x1        	CLRF	_needreordering, B
00242a   cfe4     movff   0xfe4, 0xc       	MOVFF	PREINC1, r0x0c
00242c   f00c
00242e   cfe4     movff   0xfe4, 0xb       	MOVFF	PREINC1, r0x0b
002430   f00b
002432   cfe4     movff   0xfe4, 0xa       	MOVFF	PREINC1, r0x0a
002434   f00a
002436   cfe4     movff   0xfe4, 0x9       	MOVFF	PREINC1, r0x09
002438   f009
00243a   cfe4     movff   0xfe4, 0x8       	MOVFF	PREINC1, r0x08
00243c   f008
00243e   cfe4     movff   0xfe4, 0x7       	MOVFF	PREINC1, r0x07
002440   f007
002442   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002444   f006
002446   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002448   f005
00244a   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
00244c   f004
00244e   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002450   f003
002452   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002454   f002
002456   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002458   f001
00245a   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
00245c   f000
00245e   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	120; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
003904   c25f     movff   0x25f, 0xf82     	MOVFF	(_activatedservos + 1), _PORTC
003906   ff82
                                           ;	.line	121; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
003908   c260     movff   0x260, 0xf80     	MOVFF	(_activatedservos + 2), _PORTA
00390a   ff80
00390c   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/.icaro/firmware/tmp/servos.c	static void ServosPulseDown()
003350   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
003352   ffe5
003354   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
003356   ffd9
003358   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
00335a   ffe5
00335c   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
00335e   ffe5
003360   0102     movlb   0x2              	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex = 0;
003362   6b6e     clrf    0x6e, 0x1        	CLRF	_timingindex, B
003364   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003366   6b5d     clrf    0x5d, 0x1        	CLRF	_timedivision, B
                                           _00266_DS_:
                                           ;	.line	97; /home/valentin/.icaro/firmware/tmp/servos.c	if (timings[timevalue][timingindex] == timedivision){
003368   c26e     movff   0x26e, 0         	MOVFF	_timingindex, r0x00
00336a   f000
00336c   6a01     clrf    0x1, 0           	CLRF	r0x01
00336e   0e36     movlw   0x36             	MOVLW	LOW(_timings + 54)
003370   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003372   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 54)
003374   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003376   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
003378   ffe9
00337a   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00337c   ffea
00337e   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
003380   f000
003382   5000     movf    0, 0, 0          	MOVF	r0x00, W
003384   0102     movlb   0x2              	BANKSEL	_timedivision
003386   195d     xorwf   0x5d, 0, 0x1     	XORWF	_timedivision, W, B
003388   e120     bnz     0x33ca           	BNZ	_00264_DS_
                                           ;	.line	99; /home/valentin/.icaro/firmware/tmp/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
00338a   c26e     movff   0x26e, 0         	MOVFF	_timingindex, r0x00
00338c   f000
00338e   6a01     clrf    0x1, 0           	CLRF	r0x01
003390   0e12     movlw   0x12             	MOVLW	LOW(_timings + 18)
003392   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
003394   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 18)
003396   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
003398   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
00339a   ffe9
00339c   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
00339e   ffea
0033a0   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
0033a2   f000
0033a4   5000     movf    0, 0, 0          	MOVF	r0x00, W
0033a6   1a82     xorwf   0x82, 0x1, 0     	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/.icaro/firmware/tmp/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
0033a8   c26e     movff   0x26e, 0         	MOVFF	_timingindex, r0x00
0033aa   f000
0033ac   6a01     clrf    0x1, 0           	CLRF	r0x01
0033ae   0e24     movlw   0x24             	MOVLW	LOW(_timings + 36)
0033b0   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
0033b2   0e02     movlw   0x2              	MOVLW	HIGH(_timings + 36)
0033b4   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
0033b6   c000     movff   0, 0xfe9         	MOVFF	r0x00, FSR0L
0033b8   ffe9
0033ba   c001     movff   0x1, 0xfea       	MOVFF	r0x01, FSR0H
0033bc   ffea
0033be   cfef     movff   0xfef, 0         	MOVFF	INDF0, r0x00
0033c0   f000
0033c2   5000     movf    0, 0, 0          	MOVF	r0x00, W
0033c4   1a80     xorwf   0x80, 0x1, 0     	XORWF	_PORTA, F
0033c6   0102     movlb   0x2              	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/.icaro/firmware/tmp/servos.c	timingindex++;
0033c8   2b6e     incf    0x6e, 0x1, 0x1   	INCF	_timingindex, F, B
                                           _00264_DS_:
0033ca   0e0c     movlw   0xc              	movlw 12
0033cc   6f6c     movwf   0x6c, 0x1        	movwf _loopvar
                                           bucle:
0033ce   0000     nop                      	NOP
0033d0   2f6c     decfsz  0x6c, 0x1, 0x1   	decfsz _loopvar,1
0033d2   efe7     goto    0x33ce           	goto bucle
0033d4   f019
                                           	
0033d6   0102     movlb   0x2              	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/.icaro/firmware/tmp/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
0033d8   2b5d     incf    0x5d, 0x1, 0x1   	INCF	_timedivision, F, B
0033da   0efb     movlw   0xfb             	MOVLW	0xfb
                                           ; removed redundant BANKSEL
0033dc   5d5d     subwf   0x5d, 0, 0x1     	SUBWF	_timedivision, W, B
0033de   a0d8     btfss   0xd8, 0, 0       	BTFSS	STATUS, 0
0033e0   d7c3     bra     0x3368           	BRA	_00266_DS_
0033e2   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0033e4   f001
0033e6   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0033e8   f000
0033ea   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
0033ec   ffd9
0033ee   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/servos.c	void servos_init()
0036b0   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0036b2   ffe5
0036b4   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0036b6   ffe5
0036b8   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0036ba   ffe5
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
0036bc   6a00     clrf    0, 0             	CLRF	r0x00
                                           _00247_DS_:
0036be   0e48     movlw   0x48             	MOVLW	LOW(_servovalues)
0036c0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0036c2   6e01     movwf   0x1, 0           	MOVWF	r0x01
0036c4   6a02     clrf    0x2, 0           	CLRF	r0x02
0036c6   0e02     movlw   0x2              	MOVLW	HIGH(_servovalues)
0036c8   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
0036ca   c001     movff   0x1, 0xfe9       	MOVFF	r0x01, FSR0L
0036cc   ffe9
0036ce   c002     movff   0x2, 0xfea       	MOVFF	r0x02, FSR0H
0036d0   ffea
0036d2   68ef     setf    0xef, 0          	SETF	INDF0
0036d4   2a00     incf    0, 0x1, 0        	INCF	r0x00, F
0036d6   0e12     movlw   0x12             	MOVLW	0x12
0036d8   5c00     subwf   0, 0, 0          	SUBWF	r0x00, W
0036da   e3f1     bnc     0x36be           	BNC	_00247_DS_
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1H=0xFF;
0036dc   68cf     setf    0xcf, 0          	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/servos.c	TMR1L=0x00;
0036de   6ace     clrf    0xce, 0          	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/servos.c	T1CON=0x01;
0036e0   0e01     movlw   0x1              	MOVLW	0x01
0036e2   6ecd     movwf   0xcd, 0          	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/servos.c	PIE1bits.TMR1IE=1;
0036e4   809d     bsf     0x9d, 0, 0       	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.PEIE=1;
0036e6   8cf2     bsf     0xf2, 0x6, 0     	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/servos.c	INTCONbits.GIE=1;
0036e8   8ef2     bsf     0xf2, 0x7, 0     	BSF	_INTCONbits, 7
0036ea   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
0036ec   f002
0036ee   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
0036f0   f001
0036f2   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
0036f4   f000
0036f6   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/.icaro/firmware/tmp/digitalw.c	void pinmode(int input, int state)
0027ca   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
0027cc   ffe5
0027ce   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
0027d0   ffd9
0027d2   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
0027d4   ffe5
0027d6   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
0027d8   ffe5
0027da   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
0027dc   ffe5
0027de   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
0027e0   ffe5
0027e2   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
0027e4   ffe5
0027e6   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
0027e8   ffe5
0027ea   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
0027ec   ffe5
0027ee   0e02     movlw   0x2              	MOVLW	0x02
0027f0   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
0027f2   f000
0027f4   0e03     movlw   0x3              	MOVLW	0x03
0027f6   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
0027f8   f001
0027fa   0e04     movlw   0x4              	MOVLW	0x04
0027fc   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
0027fe   f002
002800   0e05     movlw   0x5              	MOVLW	0x05
002802   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002804   f003
                                           ;	.line	71; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
002806   0e9a     movlw   0x9a             	MOVLW	LOW(_port)
002808   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00280a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00280c   0e27     movlw   0x27             	MOVLW	HIGH(_port)
00280e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002810   6e05     movwf   0x5, 0           	MOVWF	r0x05
002812   6a06     clrf    0x6, 0           	CLRF	r0x06
002814   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002816   6806     setf    0x6, 0           	SETF	r0x06
002818   0e00     movlw   0                	MOVLW	UPPER(_port)
00281a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00281c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00281e   fff6
002820   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002822   fff7
002824   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002826   fff8
002828   0009     tblrd   *+               	TBLRD*+	
00282a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00282c   f004
00282e   0e05     movlw   0x5              	MOVLW	0x05
002830   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002832   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002834   d110     bra     0x2a56           	BRA	_00220_DS_
002836   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002838   6afb     clrf    0xfb, 0          	CLRF	PCLATU
00283a   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
00283c   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
00283e   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002840   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002842   0bfc     andlw   0xfc             	ANDLW	0xfc
002844   0f54     addlw   0x54             	ADDLW	LOW(_00241_DS_)
002846   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002848   0e28     movlw   0x28             	MOVLW	HIGH(_00241_DS_)
00284a   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
00284c   0e00     movlw   0                	MOVLW	UPPER(_00241_DS_)
00284e   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002850   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002852   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00241_DS_:
002854   ef34     goto    0x2868           	GOTO	_00199_DS_
002856   f014
002858   ef66     goto    0x28cc           	GOTO	_00203_DS_
00285a   f014
00285c   ef98     goto    0x2930           	GOTO	_00207_DS_
00285e   f014
002860   efca     goto    0x2994           	GOTO	_00211_DS_
002862   f014
002864   effc     goto    0x29f8           	GOTO	_00215_DS_
002866   f014
                                           _00199_DS_:
                                           ;	.line	73; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
002868   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
00286a   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
00286c   e017     bz      0x289c           	BZ	_00201_DS_
00286e   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002870   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002872   6e04     movwf   0x4, 0           	MOVWF	r0x04
002874   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002876   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002878   6e05     movwf   0x5, 0           	MOVWF	r0x05
00287a   6a06     clrf    0x6, 0           	CLRF	r0x06
00287c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
00287e   6806     setf    0x6, 0           	SETF	r0x06
002880   0e00     movlw   0                	MOVLW	UPPER(_mask)
002882   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002884   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002886   fff6
002888   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00288a   fff7
00288c   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
00288e   fff8
002890   0009     tblrd   *+               	TBLRD*+	
002892   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002894   f004
002896   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002898   1293     iorwf   0x93, 0x1, 0     	IORWF	_TRISB, F
00289a   d0dd     bra     0x2a56           	BRA	_00220_DS_
                                           _00201_DS_:
                                           ;	.line	74; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISB=TRISB & (255-mask[input]);
00289c   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
00289e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028a0   6e04     movwf   0x4, 0           	MOVWF	r0x04
0028a2   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
0028a4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0028a6   6e05     movwf   0x5, 0           	MOVWF	r0x05
0028a8   6a06     clrf    0x6, 0           	CLRF	r0x06
0028aa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0028ac   6806     setf    0x6, 0           	SETF	r0x06
0028ae   0e00     movlw   0                	MOVLW	UPPER(_mask)
0028b0   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0028b2   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0028b4   fff6
0028b6   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0028b8   fff7
0028ba   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0028bc   fff8
0028be   0009     tblrd   *+               	TBLRD*+	
0028c0   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0028c2   f004
0028c4   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0028c6   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0028c8   1693     andwf   0x93, 0x1, 0     	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0028ca   d0c5     bra     0x2a56           	BRA	_00220_DS_
                                           _00203_DS_:
                                           ;	.line	76; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
0028cc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0028ce   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0028d0   e017     bz      0x2900           	BZ	_00205_DS_
0028d2   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
0028d4   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0028d6   6e04     movwf   0x4, 0           	MOVWF	r0x04
0028d8   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
0028da   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0028dc   6e05     movwf   0x5, 0           	MOVWF	r0x05
0028de   6a06     clrf    0x6, 0           	CLRF	r0x06
0028e0   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0028e2   6806     setf    0x6, 0           	SETF	r0x06
0028e4   0e00     movlw   0                	MOVLW	UPPER(_mask)
0028e6   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0028e8   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0028ea   fff6
0028ec   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0028ee   fff7
0028f0   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0028f2   fff8
0028f4   0009     tblrd   *+               	TBLRD*+	
0028f6   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0028f8   f004
0028fa   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0028fc   1294     iorwf   0x94, 0x1, 0     	IORWF	_TRISC, F
0028fe   d0ab     bra     0x2a56           	BRA	_00220_DS_
                                           _00205_DS_:
                                           ;	.line	77; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISC=TRISC & (255-mask[input]);
002900   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002902   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002904   6e04     movwf   0x4, 0           	MOVWF	r0x04
002906   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002908   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00290a   6e05     movwf   0x5, 0           	MOVWF	r0x05
00290c   6a06     clrf    0x6, 0           	CLRF	r0x06
00290e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002910   6806     setf    0x6, 0           	SETF	r0x06
002912   0e00     movlw   0                	MOVLW	UPPER(_mask)
002914   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002916   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002918   fff6
00291a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
00291c   fff7
00291e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002920   fff8
002922   0009     tblrd   *+               	TBLRD*+	
002924   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002926   f004
002928   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00292a   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00292c   1694     andwf   0x94, 0x1, 0     	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
00292e   d093     bra     0x2a56           	BRA	_00220_DS_
                                           _00207_DS_:
                                           ;	.line	79; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002930   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002932   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002934   e017     bz      0x2964           	BZ	_00209_DS_
002936   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002938   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00293a   6e04     movwf   0x4, 0           	MOVWF	r0x04
00293c   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
00293e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002940   6e05     movwf   0x5, 0           	MOVWF	r0x05
002942   6a06     clrf    0x6, 0           	CLRF	r0x06
002944   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002946   6806     setf    0x6, 0           	SETF	r0x06
002948   0e00     movlw   0                	MOVLW	UPPER(_mask)
00294a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00294c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00294e   fff6
002950   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002952   fff7
002954   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002956   fff8
002958   0009     tblrd   *+               	TBLRD*+	
00295a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00295c   f004
00295e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002960   1292     iorwf   0x92, 0x1, 0     	IORWF	_TRISA, F
002962   d079     bra     0x2a56           	BRA	_00220_DS_
                                           _00209_DS_:
                                           ;	.line	80; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002964   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002966   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002968   6e04     movwf   0x4, 0           	MOVWF	r0x04
00296a   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
00296c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
00296e   6e05     movwf   0x5, 0           	MOVWF	r0x05
002970   6a06     clrf    0x6, 0           	CLRF	r0x06
002972   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002974   6806     setf    0x6, 0           	SETF	r0x06
002976   0e00     movlw   0                	MOVLW	UPPER(_mask)
002978   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
00297a   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
00297c   fff6
00297e   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002980   fff7
002982   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002984   fff8
002986   0009     tblrd   *+               	TBLRD*+	
002988   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
00298a   f004
00298c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
00298e   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002990   1692     andwf   0x92, 0x1, 0     	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002992   d061     bra     0x2a56           	BRA	_00220_DS_
                                           _00211_DS_:
                                           ;	.line	83; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002994   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002996   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002998   e017     bz      0x29c8           	BZ	_00213_DS_
00299a   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
00299c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
00299e   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029a0   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
0029a2   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0029a4   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029a6   6a06     clrf    0x6, 0           	CLRF	r0x06
0029a8   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0029aa   6806     setf    0x6, 0           	SETF	r0x06
0029ac   0e00     movlw   0                	MOVLW	UPPER(_mask)
0029ae   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0029b0   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029b2   fff6
0029b4   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029b6   fff7
0029b8   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0029ba   fff8
0029bc   0009     tblrd   *+               	TBLRD*+	
0029be   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029c0   f004
0029c2   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029c4   1295     iorwf   0x95, 0x1, 0     	IORWF	_TRISD, F
0029c6   d047     bra     0x2a56           	BRA	_00220_DS_
                                           _00213_DS_:
                                           ;	.line	84; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISD=TRISD & (255-mask[input]);
0029c8   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
0029ca   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
0029cc   6e04     movwf   0x4, 0           	MOVWF	r0x04
0029ce   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
0029d0   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
0029d2   6e05     movwf   0x5, 0           	MOVWF	r0x05
0029d4   6a06     clrf    0x6, 0           	CLRF	r0x06
0029d6   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
0029d8   6806     setf    0x6, 0           	SETF	r0x06
0029da   0e00     movlw   0                	MOVLW	UPPER(_mask)
0029dc   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
0029de   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
0029e0   fff6
0029e2   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
0029e4   fff7
0029e6   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
0029e8   fff8
0029ea   0009     tblrd   *+               	TBLRD*+	
0029ec   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
0029ee   f004
0029f0   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
0029f2   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0029f4   1695     andwf   0x95, 0x1, 0     	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
0029f6   d02f     bra     0x2a56           	BRA	_00220_DS_
                                           _00215_DS_:
                                           ;	.line	86; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
0029f8   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
0029fa   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
0029fc   e017     bz      0x2a2c           	BZ	_00217_DS_
0029fe   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002a00   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002a02   6e02     movwf   0x2, 0           	MOVWF	r0x02
002a04   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002a06   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002a08   6e03     movwf   0x3, 0           	MOVWF	r0x03
002a0a   6a04     clrf    0x4, 0           	CLRF	r0x04
002a0c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a0e   6804     setf    0x4, 0           	SETF	r0x04
002a10   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a12   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002a14   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002a16   fff6
002a18   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002a1a   fff7
002a1c   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002a1e   fff8
002a20   0009     tblrd   *+               	TBLRD*+	
002a22   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002a24   f002
002a26   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002a28   1296     iorwf   0x96, 0x1, 0     	IORWF	_TRISE, F
002a2a   d015     bra     0x2a56           	BRA	_00220_DS_
                                           _00217_DS_:
                                           ;	.line	87; /home/valentin/.icaro/firmware/tmp/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002a2c   6a02     clrf    0x2, 0           	CLRF	r0x02
002a2e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002a30   6802     setf    0x2, 0           	SETF	r0x02
002a32   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002a34   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002a36   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002a38   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002a3a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002a3c   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002a3e   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002a40   fff6
002a42   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002a44   fff7
002a46   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002a48   fff8
002a4a   0009     tblrd   *+               	TBLRD*+	
002a4c   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002a4e   f000
002a50   5000     movf    0, 0, 0          	MOVF	r0x00, W
002a52   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002a54   1696     andwf   0x96, 0x1, 0     	ANDWF	_TRISE, F
                                           _00220_DS_:
                                           ;	.line	90; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
002a56   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002a58   f006
002a5a   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002a5c   f005
002a5e   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002a60   f004
002a62   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002a64   f003
002a66   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002a68   f002
002a6a   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002a6c   f001
002a6e   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002a70   f000
002a72   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002a74   ffd9
002a76   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/.icaro/firmware/tmp/digitalw.c	int digitalread(int input)
002d26   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002d28   ffe5
002d2a   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002d2c   ffd9
002d2e   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002d30   ffe5
002d32   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002d34   ffe5
002d36   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002d38   ffe5
002d3a   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002d3c   ffe5
002d3e   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002d40   ffe5
002d42   0e02     movlw   0x2              	MOVLW	0x02
002d44   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002d46   f000
002d48   0e03     movlw   0x3              	MOVLW	0x03
002d4a   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002d4c   f001
                                           ;	.line	46; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[input])
002d4e   0e9a     movlw   0x9a             	MOVLW	LOW(_port)
002d50   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002d52   6e02     movwf   0x2, 0           	MOVWF	r0x02
002d54   0e27     movlw   0x27             	MOVLW	HIGH(_port)
002d56   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002d58   6e03     movwf   0x3, 0           	MOVWF	r0x03
002d5a   6a04     clrf    0x4, 0           	CLRF	r0x04
002d5c   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002d5e   6804     setf    0x4, 0           	SETF	r0x04
002d60   0e00     movlw   0                	MOVLW	UPPER(_port)
002d62   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002d64   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002d66   fff6
002d68   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002d6a   fff7
002d6c   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002d6e   fff8
002d70   0009     tblrd   *+               	TBLRD*+	
002d72   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002d74   f002
002d76   0e05     movlw   0x5              	MOVLW	0x05
002d78   5c02     subwf   0x2, 0, 0        	SUBWF	r0x02, W
002d7a   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002d7c   d0ad     bra     0x2ed8           	BRA	_00172_DS_
002d7e   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002d80   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002d82   3402     rlcf    0x2, 0, 0        	RLCF	r0x02, W
002d84   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002d86   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002d88   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002d8a   0bfc     andlw   0xfc             	ANDLW	0xfc
002d8c   0f9c     addlw   0x9c             	ADDLW	LOW(_00194_DS_)
002d8e   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002d90   0e2d     movlw   0x2d             	MOVLW	HIGH(_00194_DS_)
002d92   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002d94   0e00     movlw   0                	MOVLW	UPPER(_00194_DS_)
002d96   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002d98   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002d9a   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00194_DS_:
002d9c   efd8     goto    0x2db0           	GOTO	_00152_DS_
002d9e   f016
002da0   eff6     goto    0x2dec           	GOTO	_00156_DS_
002da2   f016
002da4   ef14     goto    0x2e28           	GOTO	_00160_DS_
002da6   f017
002da8   ef32     goto    0x2e64           	GOTO	_00164_DS_
002daa   f017
002dac   ef50     goto    0x2ea0           	GOTO	_00168_DS_
002dae   f017
                                           _00152_DS_:
                                           ;	.line	48; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002db0   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002db2   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002db4   6e02     movwf   0x2, 0           	MOVWF	r0x02
002db6   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002db8   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002dba   6e03     movwf   0x3, 0           	MOVWF	r0x03
002dbc   6a04     clrf    0x4, 0           	CLRF	r0x04
002dbe   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002dc0   6804     setf    0x4, 0           	SETF	r0x04
002dc2   0e00     movlw   0                	MOVLW	UPPER(_mask)
002dc4   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002dc6   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002dc8   fff6
002dca   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002dcc   fff7
002dce   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002dd0   fff8
002dd2   0009     tblrd   *+               	TBLRD*+	
002dd4   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002dd6   f002
002dd8   5081     movf    0x81, 0, 0       	MOVF	_PORTB, W
002dda   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002ddc   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002dde   e003     bz      0x2de6           	BZ	_00154_DS_
002de0   6af3     clrf    0xf3, 0          	CLRF	PRODL
002de2   0e01     movlw   0x1              	MOVLW	0x01
002de4   d07b     bra     0x2edc           	BRA	_00173_DS_
                                           _00154_DS_:
                                           ;	.line	49; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002de6   6af3     clrf    0xf3, 0          	CLRF	PRODL
002de8   6ae8     clrf    0xe8, 0          	CLRF	WREG
002dea   d078     bra     0x2edc           	BRA	_00173_DS_
                                           _00156_DS_:
                                           ;	.line	51; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002dec   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002dee   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002df0   6e02     movwf   0x2, 0           	MOVWF	r0x02
002df2   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002df4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002df6   6e03     movwf   0x3, 0           	MOVWF	r0x03
002df8   6a04     clrf    0x4, 0           	CLRF	r0x04
002dfa   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002dfc   6804     setf    0x4, 0           	SETF	r0x04
002dfe   0e00     movlw   0                	MOVLW	UPPER(_mask)
002e00   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002e02   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002e04   fff6
002e06   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002e08   fff7
002e0a   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002e0c   fff8
002e0e   0009     tblrd   *+               	TBLRD*+	
002e10   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002e12   f002
002e14   5082     movf    0x82, 0, 0       	MOVF	_PORTC, W
002e16   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002e18   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002e1a   e003     bz      0x2e22           	BZ	_00158_DS_
002e1c   6af3     clrf    0xf3, 0          	CLRF	PRODL
002e1e   0e01     movlw   0x1              	MOVLW	0x01
002e20   d05d     bra     0x2edc           	BRA	_00173_DS_
                                           _00158_DS_:
                                           ;	.line	52; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002e22   6af3     clrf    0xf3, 0          	CLRF	PRODL
002e24   6ae8     clrf    0xe8, 0          	CLRF	WREG
002e26   d05a     bra     0x2edc           	BRA	_00173_DS_
                                           _00160_DS_:
                                           ;	.line	54; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002e28   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002e2a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002e2c   6e02     movwf   0x2, 0           	MOVWF	r0x02
002e2e   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002e30   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002e32   6e03     movwf   0x3, 0           	MOVWF	r0x03
002e34   6a04     clrf    0x4, 0           	CLRF	r0x04
002e36   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002e38   6804     setf    0x4, 0           	SETF	r0x04
002e3a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002e3c   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002e3e   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002e40   fff6
002e42   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002e44   fff7
002e46   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002e48   fff8
002e4a   0009     tblrd   *+               	TBLRD*+	
002e4c   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002e4e   f002
002e50   5080     movf    0x80, 0, 0       	MOVF	_PORTA, W
002e52   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002e54   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002e56   e003     bz      0x2e5e           	BZ	_00162_DS_
002e58   6af3     clrf    0xf3, 0          	CLRF	PRODL
002e5a   0e01     movlw   0x1              	MOVLW	0x01
002e5c   d03f     bra     0x2edc           	BRA	_00173_DS_
                                           _00162_DS_:
                                           ;	.line	55; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002e5e   6af3     clrf    0xf3, 0          	CLRF	PRODL
002e60   6ae8     clrf    0xe8, 0          	CLRF	WREG
002e62   d03c     bra     0x2edc           	BRA	_00173_DS_
                                           _00164_DS_:
                                           ;	.line	58; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
002e64   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002e66   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002e68   6e02     movwf   0x2, 0           	MOVWF	r0x02
002e6a   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002e6c   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002e6e   6e03     movwf   0x3, 0           	MOVWF	r0x03
002e70   6a04     clrf    0x4, 0           	CLRF	r0x04
002e72   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002e74   6804     setf    0x4, 0           	SETF	r0x04
002e76   0e00     movlw   0                	MOVLW	UPPER(_mask)
002e78   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002e7a   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002e7c   fff6
002e7e   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002e80   fff7
002e82   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002e84   fff8
002e86   0009     tblrd   *+               	TBLRD*+	
002e88   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002e8a   f002
002e8c   5083     movf    0x83, 0, 0       	MOVF	_PORTD, W
002e8e   1602     andwf   0x2, 0x1, 0      	ANDWF	r0x02, F
002e90   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002e92   e003     bz      0x2e9a           	BZ	_00166_DS_
002e94   6af3     clrf    0xf3, 0          	CLRF	PRODL
002e96   0e01     movlw   0x1              	MOVLW	0x01
002e98   d021     bra     0x2edc           	BRA	_00173_DS_
                                           _00166_DS_:
                                           ;	.line	59; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002e9a   6af3     clrf    0xf3, 0          	CLRF	PRODL
002e9c   6ae8     clrf    0xe8, 0          	CLRF	WREG
002e9e   d01e     bra     0x2edc           	BRA	_00173_DS_
                                           _00168_DS_:
                                           ;	.line	61; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
002ea0   6a02     clrf    0x2, 0           	CLRF	r0x02
002ea2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ea4   6802     setf    0x2, 0           	SETF	r0x02
002ea6   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002ea8   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002eaa   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002eac   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002eae   0e00     movlw   0                	MOVLW	UPPER(_mask)
002eb0   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002eb2   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002eb4   fff6
002eb6   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002eb8   fff7
002eba   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002ebc   fff8
002ebe   0009     tblrd   *+               	TBLRD*+	
002ec0   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002ec2   f000
002ec4   5084     movf    0x84, 0, 0       	MOVF	_PORTE, W
002ec6   1600     andwf   0, 0x1, 0        	ANDWF	r0x00, F
002ec8   5000     movf    0, 0, 0          	MOVF	r0x00, W
002eca   e003     bz      0x2ed2           	BZ	_00170_DS_
002ecc   6af3     clrf    0xf3, 0          	CLRF	PRODL
002ece   0e01     movlw   0x1              	MOVLW	0x01
002ed0   d005     bra     0x2edc           	BRA	_00173_DS_
                                           _00170_DS_:
                                           ;	.line	62; /home/valentin/.icaro/firmware/tmp/digitalw.c	else return (0);
002ed2   6af3     clrf    0xf3, 0          	CLRF	PRODL
002ed4   6ae8     clrf    0xe8, 0          	CLRF	WREG
002ed6   d002     bra     0x2edc           	BRA	_00173_DS_
                                           _00172_DS_:
                                           ;	.line	66; /home/valentin/.icaro/firmware/tmp/digitalw.c	return (0);
002ed8   6af3     clrf    0xf3, 0          	CLRF	PRODL
002eda   6ae8     clrf    0xe8, 0          	CLRF	WREG
                                           _00173_DS_:
002edc   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002ede   f004
002ee0   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002ee2   f003
002ee4   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002ee6   f002
002ee8   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002eea   f001
002eec   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002eee   f000
002ef0   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002ef2   ffd9
002ef4   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/.icaro/firmware/tmp/digitalw.c	void digitalwrite(int output,int state)
002a78   cfd9     movff   0xfd9, 0xfe5     	MOVFF	FSR2L, POSTDEC1
002a7a   ffe5
002a7c   cfe1     movff   0xfe1, 0xfd9     	MOVFF	FSR1L, FSR2L
002a7e   ffd9
002a80   c000     movff   0, 0xfe5         	MOVFF	r0x00, POSTDEC1
002a82   ffe5
002a84   c001     movff   0x1, 0xfe5       	MOVFF	r0x01, POSTDEC1
002a86   ffe5
002a88   c002     movff   0x2, 0xfe5       	MOVFF	r0x02, POSTDEC1
002a8a   ffe5
002a8c   c003     movff   0x3, 0xfe5       	MOVFF	r0x03, POSTDEC1
002a8e   ffe5
002a90   c004     movff   0x4, 0xfe5       	MOVFF	r0x04, POSTDEC1
002a92   ffe5
002a94   c005     movff   0x5, 0xfe5       	MOVFF	r0x05, POSTDEC1
002a96   ffe5
002a98   c006     movff   0x6, 0xfe5       	MOVFF	r0x06, POSTDEC1
002a9a   ffe5
002a9c   0e02     movlw   0x2              	MOVLW	0x02
002a9e   cfdb     movff   0xfdb, 0         	MOVFF	PLUSW2, r0x00
002aa0   f000
002aa2   0e03     movlw   0x3              	MOVLW	0x03
002aa4   cfdb     movff   0xfdb, 0x1       	MOVFF	PLUSW2, r0x01
002aa6   f001
002aa8   0e04     movlw   0x4              	MOVLW	0x04
002aaa   cfdb     movff   0xfdb, 0x2       	MOVFF	PLUSW2, r0x02
002aac   f002
002aae   0e05     movlw   0x5              	MOVLW	0x05
002ab0   cfdb     movff   0xfdb, 0x3       	MOVFF	PLUSW2, r0x03
002ab2   f003
                                           ;	.line	22; /home/valentin/.icaro/firmware/tmp/digitalw.c	switch (port[output])
002ab4   0e9a     movlw   0x9a             	MOVLW	LOW(_port)
002ab6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002ab8   6e04     movwf   0x4, 0           	MOVWF	r0x04
002aba   0e27     movlw   0x27             	MOVLW	HIGH(_port)
002abc   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002abe   6e05     movwf   0x5, 0           	MOVWF	r0x05
002ac0   6a06     clrf    0x6, 0           	CLRF	r0x06
002ac2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002ac4   6806     setf    0x6, 0           	SETF	r0x06
002ac6   0e00     movlw   0                	MOVLW	UPPER(_port)
002ac8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002aca   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002acc   fff6
002ace   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002ad0   fff7
002ad2   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002ad4   fff8
002ad6   0009     tblrd   *+               	TBLRD*+	
002ad8   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002ada   f004
002adc   0e05     movlw   0x5              	MOVLW	0x05
002ade   5c04     subwf   0x4, 0, 0        	SUBWF	r0x04, W
002ae0   b0d8     btfsc   0xd8, 0, 0       	BTFSC	STATUS, 0
002ae2   d110     bra     0x2d04           	BRA	_00126_DS_
002ae4   6afa     clrf    0xfa, 0          	CLRF	PCLATH
002ae6   6afb     clrf    0xfb, 0          	CLRF	PCLATU
002ae8   3404     rlcf    0x4, 0, 0        	RLCF	r0x04, W
002aea   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002aec   34e8     rlcf    0xe8, 0, 0       	RLCF	WREG, W
002aee   36fa     rlcf    0xfa, 0x1, 0     	RLCF	PCLATH, F
002af0   0bfc     andlw   0xfc             	ANDLW	0xfc
002af2   0f02     addlw   0x2              	ADDLW	LOW(_00147_DS_)
002af4   6ee5     movwf   0xe5, 0          	MOVWF	POSTDEC1
002af6   0e2b     movlw   0x2b             	MOVLW	HIGH(_00147_DS_)
002af8   22fa     addwfc  0xfa, 0x1, 0     	ADDWFC	PCLATH, F
002afa   0e00     movlw   0                	MOVLW	UPPER(_00147_DS_)
002afc   22fb     addwfc  0xfb, 0x1, 0     	ADDWFC	PCLATU, F
002afe   50e4     movf    0xe4, 0, 0       	MOVF	PREINC1, W
002b00   6ef9     movwf   0xf9, 0          	MOVWF	PCL
                                           _00147_DS_:
002b02   ef8b     goto    0x2b16           	GOTO	_00105_DS_
002b04   f015
002b06   efbd     goto    0x2b7a           	GOTO	_00109_DS_
002b08   f015
002b0a   efef     goto    0x2bde           	GOTO	_00113_DS_
002b0c   f015
002b0e   ef21     goto    0x2c42           	GOTO	_00117_DS_
002b10   f016
002b12   ef53     goto    0x2ca6           	GOTO	_00121_DS_
002b14   f016
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002b16   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002b18   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002b1a   e017     bz      0x2b4a           	BZ	_00107_DS_
002b1c   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002b1e   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b20   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b22   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002b24   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002b26   6e05     movwf   0x5, 0           	MOVWF	r0x05
002b28   6a06     clrf    0x6, 0           	CLRF	r0x06
002b2a   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002b2c   6806     setf    0x6, 0           	SETF	r0x06
002b2e   0e00     movlw   0                	MOVLW	UPPER(_mask)
002b30   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002b32   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002b34   fff6
002b36   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002b38   fff7
002b3a   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002b3c   fff8
002b3e   0009     tblrd   *+               	TBLRD*+	
002b40   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002b42   f004
002b44   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002b46   1281     iorwf   0x81, 0x1, 0     	IORWF	_PORTB, F
002b48   d0dd     bra     0x2d04           	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002b4a   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002b4c   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b4e   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b50   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002b52   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002b54   6e05     movwf   0x5, 0           	MOVWF	r0x05
002b56   6a06     clrf    0x6, 0           	CLRF	r0x06
002b58   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002b5a   6806     setf    0x6, 0           	SETF	r0x06
002b5c   0e00     movlw   0                	MOVLW	UPPER(_mask)
002b5e   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002b60   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002b62   fff6
002b64   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002b66   fff7
002b68   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002b6a   fff8
002b6c   0009     tblrd   *+               	TBLRD*+	
002b6e   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002b70   f004
002b72   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002b74   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002b76   1681     andwf   0x81, 0x1, 0     	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002b78   d0c5     bra     0x2d04           	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002b7a   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002b7c   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002b7e   e017     bz      0x2bae           	BZ	_00111_DS_
002b80   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002b82   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002b84   6e04     movwf   0x4, 0           	MOVWF	r0x04
002b86   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002b88   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002b8a   6e05     movwf   0x5, 0           	MOVWF	r0x05
002b8c   6a06     clrf    0x6, 0           	CLRF	r0x06
002b8e   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002b90   6806     setf    0x6, 0           	SETF	r0x06
002b92   0e00     movlw   0                	MOVLW	UPPER(_mask)
002b94   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002b96   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002b98   fff6
002b9a   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002b9c   fff7
002b9e   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002ba0   fff8
002ba2   0009     tblrd   *+               	TBLRD*+	
002ba4   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002ba6   f004
002ba8   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002baa   1282     iorwf   0x82, 0x1, 0     	IORWF	_PORTC, F
002bac   d0ab     bra     0x2d04           	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002bae   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002bb0   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002bb2   6e04     movwf   0x4, 0           	MOVWF	r0x04
002bb4   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002bb6   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002bb8   6e05     movwf   0x5, 0           	MOVWF	r0x05
002bba   6a06     clrf    0x6, 0           	CLRF	r0x06
002bbc   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002bbe   6806     setf    0x6, 0           	SETF	r0x06
002bc0   0e00     movlw   0                	MOVLW	UPPER(_mask)
002bc2   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002bc4   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002bc6   fff6
002bc8   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002bca   fff7
002bcc   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002bce   fff8
002bd0   0009     tblrd   *+               	TBLRD*+	
002bd2   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002bd4   f004
002bd6   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002bd8   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002bda   1682     andwf   0x82, 0x1, 0     	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002bdc   d093     bra     0x2d04           	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002bde   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002be0   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002be2   e017     bz      0x2c12           	BZ	_00115_DS_
002be4   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002be6   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002be8   6e04     movwf   0x4, 0           	MOVWF	r0x04
002bea   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002bec   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002bee   6e05     movwf   0x5, 0           	MOVWF	r0x05
002bf0   6a06     clrf    0x6, 0           	CLRF	r0x06
002bf2   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002bf4   6806     setf    0x6, 0           	SETF	r0x06
002bf6   0e00     movlw   0                	MOVLW	UPPER(_mask)
002bf8   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002bfa   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002bfc   fff6
002bfe   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c00   fff7
002c02   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c04   fff8
002c06   0009     tblrd   *+               	TBLRD*+	
002c08   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c0a   f004
002c0c   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c0e   1280     iorwf   0x80, 0x1, 0     	IORWF	_PORTA, F
002c10   d079     bra     0x2d04           	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002c12   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002c14   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c16   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c18   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002c1a   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c1c   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c1e   6a06     clrf    0x6, 0           	CLRF	r0x06
002c20   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c22   6806     setf    0x6, 0           	SETF	r0x06
002c24   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c26   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c28   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c2a   fff6
002c2c   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c2e   fff7
002c30   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c32   fff8
002c34   0009     tblrd   *+               	TBLRD*+	
002c36   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c38   f004
002c3a   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c3c   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c3e   1680     andwf   0x80, 0x1, 0     	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002c40   d061     bra     0x2d04           	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002c42   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002c44   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002c46   e017     bz      0x2c76           	BZ	_00119_DS_
002c48   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002c4a   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c4c   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c4e   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002c50   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c52   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c54   6a06     clrf    0x6, 0           	CLRF	r0x06
002c56   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c58   6806     setf    0x6, 0           	SETF	r0x06
002c5a   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c5c   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c5e   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c60   fff6
002c62   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c64   fff7
002c66   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c68   fff8
002c6a   0009     tblrd   *+               	TBLRD*+	
002c6c   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c6e   f004
002c70   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002c72   1283     iorwf   0x83, 0x1, 0     	IORWF	_PORTD, F
002c74   d047     bra     0x2d04           	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002c76   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002c78   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002c7a   6e04     movwf   0x4, 0           	MOVWF	r0x04
002c7c   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002c7e   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002c80   6e05     movwf   0x5, 0           	MOVWF	r0x05
002c82   6a06     clrf    0x6, 0           	CLRF	r0x06
002c84   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002c86   6806     setf    0x6, 0           	SETF	r0x06
002c88   0e00     movlw   0                	MOVLW	UPPER(_mask)
002c8a   2206     addwfc  0x6, 0x1, 0      	ADDWFC	r0x06, F
002c8c   c004     movff   0x4, 0xff6       	MOVFF	r0x04, TBLPTRL
002c8e   fff6
002c90   c005     movff   0x5, 0xff7       	MOVFF	r0x05, TBLPTRH
002c92   fff7
002c94   c006     movff   0x6, 0xff8       	MOVFF	r0x06, TBLPTRU
002c96   fff8
002c98   0009     tblrd   *+               	TBLRD*+	
002c9a   cff5     movff   0xff5, 0x4       	MOVFF	TABLAT, r0x04
002c9c   f004
002c9e   5004     movf    0x4, 0, 0        	MOVF	r0x04, W
002ca0   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002ca2   1683     andwf   0x83, 0x1, 0     	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/.icaro/firmware/tmp/digitalw.c	break;
002ca4   d02f     bra     0x2d04           	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/.icaro/firmware/tmp/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002ca6   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002ca8   1003     iorwf   0x3, 0, 0        	IORWF	r0x03, W
002caa   e017     bz      0x2cda           	BZ	_00123_DS_
002cac   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002cae   2400     addwf   0, 0, 0          	ADDWF	r0x00, W
002cb0   6e02     movwf   0x2, 0           	MOVWF	r0x02
002cb2   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002cb4   2001     addwfc  0x1, 0, 0        	ADDWFC	r0x01, W
002cb6   6e03     movwf   0x3, 0           	MOVWF	r0x03
002cb8   6a04     clrf    0x4, 0           	CLRF	r0x04
002cba   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002cbc   6804     setf    0x4, 0           	SETF	r0x04
002cbe   0e00     movlw   0                	MOVLW	UPPER(_mask)
002cc0   2204     addwfc  0x4, 0x1, 0      	ADDWFC	r0x04, F
002cc2   c002     movff   0x2, 0xff6       	MOVFF	r0x02, TBLPTRL
002cc4   fff6
002cc6   c003     movff   0x3, 0xff7       	MOVFF	r0x03, TBLPTRH
002cc8   fff7
002cca   c004     movff   0x4, 0xff8       	MOVFF	r0x04, TBLPTRU
002ccc   fff8
002cce   0009     tblrd   *+               	TBLRD*+	
002cd0   cff5     movff   0xff5, 0x2       	MOVFF	TABLAT, r0x02
002cd2   f002
002cd4   5002     movf    0x2, 0, 0        	MOVF	r0x02, W
002cd6   1284     iorwf   0x84, 0x1, 0     	IORWF	_PORTE, F
002cd8   d015     bra     0x2d04           	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/.icaro/firmware/tmp/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002cda   6a02     clrf    0x2, 0           	CLRF	r0x02
002cdc   be01     btfsc   0x1, 0x7, 0      	BTFSC	r0x01, 7
002cde   6802     setf    0x2, 0           	SETF	r0x02
002ce0   0e7c     movlw   0x7c             	MOVLW	LOW(_mask)
002ce2   2600     addwf   0, 0x1, 0        	ADDWF	r0x00, F
002ce4   0e27     movlw   0x27             	MOVLW	HIGH(_mask)
002ce6   2201     addwfc  0x1, 0x1, 0      	ADDWFC	r0x01, F
002ce8   0e00     movlw   0                	MOVLW	UPPER(_mask)
002cea   2202     addwfc  0x2, 0x1, 0      	ADDWFC	r0x02, F
002cec   c000     movff   0, 0xff6         	MOVFF	r0x00, TBLPTRL
002cee   fff6
002cf0   c001     movff   0x1, 0xff7       	MOVFF	r0x01, TBLPTRH
002cf2   fff7
002cf4   c002     movff   0x2, 0xff8       	MOVFF	r0x02, TBLPTRU
002cf6   fff8
002cf8   0009     tblrd   *+               	TBLRD*+	
002cfa   cff5     movff   0xff5, 0         	MOVFF	TABLAT, r0x00
002cfc   f000
002cfe   5000     movf    0, 0, 0          	MOVF	r0x00, W
002d00   08ff     sublw   0xff             	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002d02   1684     andwf   0x84, 0x1, 0     	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/.icaro/firmware/tmp/digitalw.c	}
002d04   cfe4     movff   0xfe4, 0x6       	MOVFF	PREINC1, r0x06
002d06   f006
002d08   cfe4     movff   0xfe4, 0x5       	MOVFF	PREINC1, r0x05
002d0a   f005
002d0c   cfe4     movff   0xfe4, 0x4       	MOVFF	PREINC1, r0x04
002d0e   f004
002d10   cfe4     movff   0xfe4, 0x3       	MOVFF	PREINC1, r0x03
002d12   f003
002d14   cfe4     movff   0xfe4, 0x2       	MOVFF	PREINC1, r0x02
002d16   f002
002d18   cfe4     movff   0xfe4, 0x1       	MOVFF	PREINC1, r0x01
002d1a   f001
002d1c   cfe4     movff   0xfe4, 0         	MOVFF	PREINC1, r0x00
002d1e   f000
002d20   cfe4     movff   0xfe4, 0xfd9     	MOVFF	PREINC1, FSR2L
002d22   ffd9
002d24   0012     return  0                	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
00277c   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00277e   0804     sublw   0x4              
002780   2010     addwfc  0x10, 0, 0       
002782   8040     bsf     0x40, 0, 0       
002784   8040     bsf     0x40, 0, 0       
002786   0201     mulwf   0x1, 0           
002788   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
00278a   0402     decf    0x2, 0, 0        
00278c   2008     addwfc  0x8, 0, 0        
00278e   0201     mulwf   0x1, 0           
002790   0104     movlb   0x4              
002792   0402     decf    0x2, 0, 0        
002794   1008     iorwf   0x8, 0, 0        	DB	0x08, 0x10, 0x20, 0x40, 0x80
002796   4020     rrncf   0x20, 0, 0       
002798   0080     dw      0x80             
                                           ; ; Starting pCode block for Ival
                                           _port:
00279a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
00279c   0000     nop                      
00279e   0000     nop                      
0027a0   0000     nop                      
0027a2   0101     movlb   0x1              
0027a4   0101     movlb   0x1              
0027a6   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
0027a8   0202     mulwf   0x2, 0           
0027aa   0202     mulwf   0x2, 0           
0027ac   0404     decf    0x4, 0, 0        
0027ae   0304     mulwf   0x4, 0x1         
0027b0   0303     mulwf   0x3, 0x1         
0027b2   0303     mulwf   0x3, 0x1         	DB	0x03, 0x03, 0x03, 0x03, 0x03
0027b4   0303     mulwf   0x3, 0x1         
0027b6   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
0027b8   0201     mulwf   0x1, 0           	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0027ba   0804     sublw   0x4              
0027bc   2010     addwfc  0x10, 0, 0       
0027be   8040     bsf     0x40, 0, 0       
0027c0   8040     bsf     0x40, 0, 0       
0027c2   0201     mulwf   0x1, 0           
0027c4   0104     movlb   0x4              	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
0027c6   0402     decf    0x2, 0, 0        
0027c8   2008     addwfc  0x8, 0, 0        
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 5400 (0x1518) bytes ( 4.12%)
                                           ;           	 2700 (0x0a8c) words
                                           ; udata size:	   96 (0x0060) bytes ( 5.36%)
                                           ; access size:	   13 (0x000d) bytes
                                           
                                           
                                           	end
