gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 1-3-2012  20:31:47
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Tue Jan  3 20:31:42 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _loopvar
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _tiempo
                                           	global _tiempo2
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _analog_init
                                           	global _analogread
                                           	global _Delayms
                                           	global _Delayus
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _setup
                                           	global _sensor
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _mask
                                           	global _port
                                           	global _servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           	extern ___fslt
                                           	extern ___fsadd
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _tiempo	db	0x00, 0x00, 0x00, 0x00
                                           _tiempo2	db	0x00, 0x00, 0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _servovalues	res	18
                                           
                                           udata_main_2	udata
                                           _timingindex	res	1
                                           
                                           udata_main_3	udata
                                           _timings	res	72
                                           
                                           udata_main_4	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	132; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	servos_interrupt();
002044   ecf9     call	0x3df2, 0           	CALL	_servos_interrupt
002046   f01e
002048   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00204a   fffb
00204c   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00204e   fffa
002050   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002052   ffea
002054   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002056   ffe9
002058   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00205a   fff4
00205c   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00205e   fff3
002060   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002062   ffe0
002064   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002066   ffd8
002068   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00206a   ffe8
00206c   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	PIE1=0;
003f44   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	PIE2=0;
003f46   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	ADCON1=0x0F;
003f48   0e0f     movlw	0xf                	MOVLW	0x0f
003f4a   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	setup();
003f4c   ecda     call	0x37b4, 0           	CALL	_setup
003f4e   f01b
                                           ;	.line	61; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	analog_init();
003f50   ecc6     call	0x3f8c, 0           	CALL	_analog_init
003f52   f01f
                                           ;	.line	67; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	servos_init();
003f54   ecd4     call	0x3da8, 0           	CALL	_servos_init
003f56   f01e
                                           ;	.line	83; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	INTCONbits.PEIE=1;
003f58   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	INTCONbits.GIE=1;
003f5a   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _00570_DS_:
                                           ;	.line	89; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	loop();
003f5c   ec17     call	0x2c2e, 0           	CALL	_loop
003f5e   f016
003f60   d7fd     bra	0x3f5c               	BRA	_00570_DS_
003f62   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	63; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	void loop()
002c2e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002c30   ffe5
002c32   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002c34   ffe5
                                           ;	.line	69; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	if (digitalread(21)==0){
002c36   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002c38   0e15     movlw	0x15               	MOVLW	0x15
002c3a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002c3c   ec57     call	0x34ae, 0           	CALL	_digitalread
002c3e   f01a
002c40   6e00     movwf	0, 0               	MOVWF	r0x00
002c42   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
002c44   f001
002c46   0e02     movlw	0x2                	MOVLW	0x02
002c48   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002c4a   5000     movf	0, 0, 0             	MOVF	r0x00, W
002c4c   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
002c4e   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002c50   d071     bra	0x2d34               	BRA	_00520_DS_
002c52   0102     movlb	0x2                	BANKSEL	_tiempo
                                           ;	.line	70; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	for(tiempo=0;tiempo<100;tiempo++){for(tiempo2=0;tiempo2<10;tiempo2++){PORTD=96;}}
002c54   6b61     clrf	0x61, 0x1           	CLRF	_tiempo, B
                                           ; removed redundant BANKSEL
002c56   6b62     clrf	0x62, 0x1           	CLRF	(_tiempo + 1), B
                                           ; removed redundant BANKSEL
002c58   6b63     clrf	0x63, 0x1           	CLRF	(_tiempo + 2), B
                                           ; removed redundant BANKSEL
002c5a   6b64     clrf	0x64, 0x1           	CLRF	(_tiempo + 3), B
                                           _00527_DS_:
002c5c   0e42     movlw	0x42               	MOVLW	0x42
002c5e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002c60   0ec8     movlw	0xc8               	MOVLW	0xc8
002c62   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002c64   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002c66   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002c68   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
002c6a   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
002c6c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002c6e   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
002c70   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002c72   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
002c74   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002c76   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
002c78   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002c7a   ec4b     call	0x3696, 0           	CALL	___fslt
002c7c   f01b
002c7e   6e00     movwf	0, 0               	MOVWF	r0x00
002c80   0e08     movlw	0x8                	MOVLW	0x08
002c82   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002c84   5000     movf	0, 0, 0             	MOVF	r0x00, W
002c86   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
002c88   d055     bra	0x2d34               	BRA	_00520_DS_
002c8a   0102     movlb	0x2                	BANKSEL	_tiempo2
002c8c   6b65     clrf	0x65, 0x1           	CLRF	_tiempo2, B
                                           ; removed redundant BANKSEL
002c8e   6b66     clrf	0x66, 0x1           	CLRF	(_tiempo2 + 1), B
                                           ; removed redundant BANKSEL
002c90   6b67     clrf	0x67, 0x1           	CLRF	(_tiempo2 + 2), B
                                           ; removed redundant BANKSEL
002c92   6b68     clrf	0x68, 0x1           	CLRF	(_tiempo2 + 3), B
                                           _00523_DS_:
002c94   0e41     movlw	0x41               	MOVLW	0x41
002c96   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002c98   0e20     movlw	0x20               	MOVLW	0x20
002c9a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002c9c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002c9e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002ca0   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
002ca2   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
002ca4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002ca6   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
002ca8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002caa   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
002cac   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002cae   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
002cb0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002cb2   ec4b     call	0x3696, 0           	CALL	___fslt
002cb4   f01b
002cb6   6e00     movwf	0, 0               	MOVWF	r0x00
002cb8   0e08     movlw	0x8                	MOVLW	0x08
002cba   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002cbc   5000     movf	0, 0, 0             	MOVF	r0x00, W
002cbe   e01e     bz	0x2cfc                	BZ	_00529_DS_
002cc0   0e60     movlw	0x60               	MOVLW	0x60
002cc2   6e83     movwf	0x83, 0            	MOVWF	_PORTD
002cc4   0e3f     movlw	0x3f               	MOVLW	0x3f
002cc6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002cc8   0e80     movlw	0x80               	MOVLW	0x80
002cca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ccc   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002cce   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002cd0   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
002cd2   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
002cd4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002cd6   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
002cd8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002cda   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
002cdc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002cde   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
002ce0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ce2   ec68     call	0x24d0, 0           	CALL	___fsadd
002ce4   f012
002ce6   0102     movlb	0x2                	BANKSEL	_tiempo2
002ce8   6f65     movwf	0x65, 0x1          	MOVWF	_tiempo2, B
002cea   cff3     movff	0xff3, 0x266       	MOVFF	PRODL, (_tiempo2 + 1)
002cec   f266
002cee   cff4     movff	0xff4, 0x267       	MOVFF	PRODH, (_tiempo2 + 2)
002cf0   f267
002cf2   cfe9     movff	0xfe9, 0x268       	MOVFF	FSR0L, (_tiempo2 + 3)
002cf4   f268
002cf6   0e08     movlw	0x8                	MOVLW	0x08
002cf8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002cfa   d7cc     bra	0x2c94               	BRA	_00523_DS_
                                           _00529_DS_:
002cfc   0e3f     movlw	0x3f               	MOVLW	0x3f
002cfe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d00   0e80     movlw	0x80               	MOVLW	0x80
002d02   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d04   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002d06   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002d08   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
002d0a   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
002d0c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002d0e   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
002d10   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002d12   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
002d14   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002d16   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
002d18   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d1a   ec68     call	0x24d0, 0           	CALL	___fsadd
002d1c   f012
002d1e   0102     movlb	0x2                	BANKSEL	_tiempo
002d20   6f61     movwf	0x61, 0x1          	MOVWF	_tiempo, B
002d22   cff3     movff	0xff3, 0x262       	MOVFF	PRODL, (_tiempo + 1)
002d24   f262
002d26   cff4     movff	0xff4, 0x263       	MOVFF	PRODH, (_tiempo + 2)
002d28   f263
002d2a   cfe9     movff	0xfe9, 0x264       	MOVFF	FSR0L, (_tiempo + 3)
002d2c   f264
002d2e   0e08     movlw	0x8                	MOVLW	0x08
002d30   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002d32   d794     bra	0x2c5c               	BRA	_00527_DS_
                                           _00520_DS_:
                                           ;	.line	72; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	if (digitalread(21)==1){
002d34   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002d36   0e15     movlw	0x15               	MOVLW	0x15
002d38   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d3a   ec57     call	0x34ae, 0           	CALL	_digitalread
002d3c   f01a
002d3e   6e00     movwf	0, 0               	MOVWF	r0x00
002d40   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
002d42   f001
002d44   0e02     movlw	0x2                	MOVLW	0x02
002d46   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002d48   5000     movf	0, 0, 0             	MOVF	r0x00, W
002d4a   0a01     xorlw	0x1                	XORLW	0x01
002d4c   e102     bnz	0x2d52               	BNZ	_00563_DS_
002d4e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002d50   e001     bz	0x2d54                	BZ	_00564_DS_
                                           _00563_DS_:
002d52   d0e2     bra	0x2f18               	BRA	_00547_DS_
                                           _00564_DS_:
002d54   0102     movlb	0x2                	BANKSEL	_tiempo
                                           ;	.line	73; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	for(tiempo=0;tiempo<100;tiempo++){for(tiempo2=0;tiempo2<600;tiempo2++){PORTD=144;}}
002d56   6b61     clrf	0x61, 0x1           	CLRF	_tiempo, B
                                           ; removed redundant BANKSEL
002d58   6b62     clrf	0x62, 0x1           	CLRF	(_tiempo + 1), B
                                           ; removed redundant BANKSEL
002d5a   6b63     clrf	0x63, 0x1           	CLRF	(_tiempo + 2), B
                                           ; removed redundant BANKSEL
002d5c   6b64     clrf	0x64, 0x1           	CLRF	(_tiempo + 3), B
                                           _00535_DS_:
002d5e   0e42     movlw	0x42               	MOVLW	0x42
002d60   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d62   0ec8     movlw	0xc8               	MOVLW	0xc8
002d64   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d66   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002d68   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002d6a   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
002d6c   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
002d6e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002d70   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
002d72   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002d74   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
002d76   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002d78   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
002d7a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d7c   ec4b     call	0x3696, 0           	CALL	___fslt
002d7e   f01b
002d80   6e00     movwf	0, 0               	MOVWF	r0x00
002d82   0e08     movlw	0x8                	MOVLW	0x08
002d84   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002d86   5000     movf	0, 0, 0             	MOVF	r0x00, W
002d88   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
002d8a   d055     bra	0x2e36               	BRA	_00538_DS_
002d8c   0102     movlb	0x2                	BANKSEL	_tiempo2
002d8e   6b65     clrf	0x65, 0x1           	CLRF	_tiempo2, B
                                           ; removed redundant BANKSEL
002d90   6b66     clrf	0x66, 0x1           	CLRF	(_tiempo2 + 1), B
                                           ; removed redundant BANKSEL
002d92   6b67     clrf	0x67, 0x1           	CLRF	(_tiempo2 + 2), B
                                           ; removed redundant BANKSEL
002d94   6b68     clrf	0x68, 0x1           	CLRF	(_tiempo2 + 3), B
                                           _00531_DS_:
002d96   0e44     movlw	0x44               	MOVLW	0x44
002d98   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d9a   0e16     movlw	0x16               	MOVLW	0x16
002d9c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002d9e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002da0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002da2   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
002da4   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
002da6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002da8   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
002daa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002dac   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
002dae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002db0   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
002db2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002db4   ec4b     call	0x3696, 0           	CALL	___fslt
002db6   f01b
002db8   6e00     movwf	0, 0               	MOVWF	r0x00
002dba   0e08     movlw	0x8                	MOVLW	0x08
002dbc   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002dbe   5000     movf	0, 0, 0             	MOVF	r0x00, W
002dc0   e01e     bz	0x2dfe                	BZ	_00537_DS_
002dc2   0e90     movlw	0x90               	MOVLW	0x90
002dc4   6e83     movwf	0x83, 0            	MOVWF	_PORTD
002dc6   0e3f     movlw	0x3f               	MOVLW	0x3f
002dc8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002dca   0e80     movlw	0x80               	MOVLW	0x80
002dcc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002dce   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002dd0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002dd2   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
002dd4   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
002dd6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002dd8   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
002dda   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002ddc   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
002dde   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002de0   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
002de2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002de4   ec68     call	0x24d0, 0           	CALL	___fsadd
002de6   f012
002de8   0102     movlb	0x2                	BANKSEL	_tiempo2
002dea   6f65     movwf	0x65, 0x1          	MOVWF	_tiempo2, B
002dec   cff3     movff	0xff3, 0x266       	MOVFF	PRODL, (_tiempo2 + 1)
002dee   f266
002df0   cff4     movff	0xff4, 0x267       	MOVFF	PRODH, (_tiempo2 + 2)
002df2   f267
002df4   cfe9     movff	0xfe9, 0x268       	MOVFF	FSR0L, (_tiempo2 + 3)
002df6   f268
002df8   0e08     movlw	0x8                	MOVLW	0x08
002dfa   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002dfc   d7cc     bra	0x2d96               	BRA	_00531_DS_
                                           _00537_DS_:
002dfe   0e3f     movlw	0x3f               	MOVLW	0x3f
002e00   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e02   0e80     movlw	0x80               	MOVLW	0x80
002e04   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e06   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002e08   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002e0a   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
002e0c   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
002e0e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e10   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
002e12   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e14   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
002e16   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e18   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
002e1a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e1c   ec68     call	0x24d0, 0           	CALL	___fsadd
002e1e   f012
002e20   0102     movlb	0x2                	BANKSEL	_tiempo
002e22   6f61     movwf	0x61, 0x1          	MOVWF	_tiempo, B
002e24   cff3     movff	0xff3, 0x262       	MOVFF	PRODL, (_tiempo + 1)
002e26   f262
002e28   cff4     movff	0xff4, 0x263       	MOVFF	PRODH, (_tiempo + 2)
002e2a   f263
002e2c   cfe9     movff	0xfe9, 0x264       	MOVFF	FSR0L, (_tiempo + 3)
002e2e   f264
002e30   0e08     movlw	0x8                	MOVLW	0x08
002e32   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002e34   d794     bra	0x2d5e               	BRA	_00535_DS_
                                           _00538_DS_:
002e36   0102     movlb	0x2                	BANKSEL	_tiempo
                                           ;	.line	74; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	for(tiempo=0;tiempo<100;tiempo++){for(tiempo2=0;tiempo2<300;tiempo2++){PORTD=64;}}
002e38   6b61     clrf	0x61, 0x1           	CLRF	_tiempo, B
                                           ; removed redundant BANKSEL
002e3a   6b62     clrf	0x62, 0x1           	CLRF	(_tiempo + 1), B
                                           ; removed redundant BANKSEL
002e3c   6b63     clrf	0x63, 0x1           	CLRF	(_tiempo + 2), B
                                           ; removed redundant BANKSEL
002e3e   6b64     clrf	0x64, 0x1           	CLRF	(_tiempo + 3), B
                                           _00543_DS_:
002e40   0e42     movlw	0x42               	MOVLW	0x42
002e42   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e44   0ec8     movlw	0xc8               	MOVLW	0xc8
002e46   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e48   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002e4a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002e4c   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
002e4e   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
002e50   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e52   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
002e54   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e56   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
002e58   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e5a   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
002e5c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e5e   ec4b     call	0x3696, 0           	CALL	___fslt
002e60   f01b
002e62   6e00     movwf	0, 0               	MOVWF	r0x00
002e64   0e08     movlw	0x8                	MOVLW	0x08
002e66   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002e68   5000     movf	0, 0, 0             	MOVF	r0x00, W
002e6a   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
002e6c   d055     bra	0x2f18               	BRA	_00547_DS_
002e6e   0102     movlb	0x2                	BANKSEL	_tiempo2
002e70   6b65     clrf	0x65, 0x1           	CLRF	_tiempo2, B
                                           ; removed redundant BANKSEL
002e72   6b66     clrf	0x66, 0x1           	CLRF	(_tiempo2 + 1), B
                                           ; removed redundant BANKSEL
002e74   6b67     clrf	0x67, 0x1           	CLRF	(_tiempo2 + 2), B
                                           ; removed redundant BANKSEL
002e76   6b68     clrf	0x68, 0x1           	CLRF	(_tiempo2 + 3), B
                                           _00539_DS_:
002e78   0e43     movlw	0x43               	MOVLW	0x43
002e7a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e7c   0e96     movlw	0x96               	MOVLW	0x96
002e7e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e80   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002e82   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002e84   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
002e86   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
002e88   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e8a   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
002e8c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e8e   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
002e90   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002e92   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
002e94   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002e96   ec4b     call	0x3696, 0           	CALL	___fslt
002e98   f01b
002e9a   6e00     movwf	0, 0               	MOVWF	r0x00
002e9c   0e08     movlw	0x8                	MOVLW	0x08
002e9e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002ea0   5000     movf	0, 0, 0             	MOVF	r0x00, W
002ea2   e01e     bz	0x2ee0                	BZ	_00545_DS_
002ea4   0e40     movlw	0x40               	MOVLW	0x40
002ea6   6e83     movwf	0x83, 0            	MOVWF	_PORTD
002ea8   0e3f     movlw	0x3f               	MOVLW	0x3f
002eaa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002eac   0e80     movlw	0x80               	MOVLW	0x80
002eae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002eb0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002eb2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002eb4   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
002eb6   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
002eb8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002eba   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
002ebc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002ebe   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
002ec0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002ec2   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
002ec4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ec6   ec68     call	0x24d0, 0           	CALL	___fsadd
002ec8   f012
002eca   0102     movlb	0x2                	BANKSEL	_tiempo2
002ecc   6f65     movwf	0x65, 0x1          	MOVWF	_tiempo2, B
002ece   cff3     movff	0xff3, 0x266       	MOVFF	PRODL, (_tiempo2 + 1)
002ed0   f266
002ed2   cff4     movff	0xff4, 0x267       	MOVFF	PRODH, (_tiempo2 + 2)
002ed4   f267
002ed6   cfe9     movff	0xfe9, 0x268       	MOVFF	FSR0L, (_tiempo2 + 3)
002ed8   f268
002eda   0e08     movlw	0x8                	MOVLW	0x08
002edc   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002ede   d7cc     bra	0x2e78               	BRA	_00539_DS_
                                           _00545_DS_:
002ee0   0e3f     movlw	0x3f               	MOVLW	0x3f
002ee2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ee4   0e80     movlw	0x80               	MOVLW	0x80
002ee6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ee8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002eea   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002eec   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
002eee   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
002ef0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002ef2   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
002ef4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002ef6   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
002ef8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
002efa   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
002efc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002efe   ec68     call	0x24d0, 0           	CALL	___fsadd
002f00   f012
002f02   0102     movlb	0x2                	BANKSEL	_tiempo
002f04   6f61     movwf	0x61, 0x1          	MOVWF	_tiempo, B
002f06   cff3     movff	0xff3, 0x262       	MOVFF	PRODL, (_tiempo + 1)
002f08   f262
002f0a   cff4     movff	0xff4, 0x263       	MOVFF	PRODH, (_tiempo + 2)
002f0c   f263
002f0e   cfe9     movff	0xfe9, 0x264       	MOVFF	FSR0L, (_tiempo + 3)
002f10   f264
002f12   0e08     movlw	0x8                	MOVLW	0x08
002f14   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002f16   d794     bra	0x2e40               	BRA	_00543_DS_
                                           _00547_DS_:
002f18   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002f1a   f001
002f1c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002f1e   f000
002f20   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	51; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	unsigned int sensor(int valor)
003f08   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003f0a   ffe5
003f0c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003f0e   ffd9
003f10   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003f12   ffe5
003f14   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003f16   ffe5
003f18   0e02     movlw	0x2                	MOVLW	0x02
003f1a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003f1c   f000
003f1e   0e03     movlw	0x3                	MOVLW	0x03
003f20   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003f22   f001
                                           ;	.line	57; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	an=analogread(valor);
003f24   5000     movf	0, 0, 0             	MOVF	r0x00, W
003f26   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003f28   ec33     call	0x3c66, 0           	CALL	_analogread
003f2a   f01e
003f2c   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003f2e   f001
003f30   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	59; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	return an;
003f32   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003f34   fff3
003f36   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003f38   f001
003f3a   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003f3c   f000
003f3e   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003f40   ffd9
003f42   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	5; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	void setup()
0037b4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0037b6   ffe5
0037b8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0037ba   ffe5
                                           ;	.line	11; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	for(i=0;i<8;i++)
0037bc   6a00     clrf	0, 0                	CLRF	r0x00
0037be   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00500_DS_:
0037c0   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0037c2   0f80     addlw	0x80               	ADDLW	0x80
0037c4   0f80     addlw	0x80               	ADDLW	0x80
0037c6   e102     bnz	0x37cc               	BNZ	_00509_DS_
0037c8   0e08     movlw	0x8                	MOVLW	0x08
0037ca   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           _00509_DS_:
0037cc   e20e     bc	0x37ea                	BC	_00503_DS_
                                           ;	.line	13; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(i,OUTPUT);
0037ce   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0037d0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0037d2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0037d4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037d6   5000     movf	0, 0, 0             	MOVF	r0x00, W
0037d8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037da   ec91     call	0x2f22, 0           	CALL	_pinmode
0037dc   f017
0037de   0e04     movlw	0x4                	MOVLW	0x04
0037e0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	11; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	for(i=0;i<8;i++)
0037e2   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0037e4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0037e6   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0037e8   d7eb     bra	0x37c0               	BRA	_00500_DS_
                                           _00503_DS_:
                                           ;	.line	17; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(21,INPUT);
0037ea   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0037ec   0e01     movlw	0x1                	MOVLW	0x01
0037ee   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037f0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0037f2   0e15     movlw	0x15               	MOVLW	0x15
0037f4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0037f6   ec91     call	0x2f22, 0           	CALL	_pinmode
0037f8   f017
0037fa   0e04     movlw	0x4                	MOVLW	0x04
0037fc   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	19; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(22,INPUT);
0037fe   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003800   0e01     movlw	0x1                	MOVLW	0x01
003802   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003804   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003806   0e16     movlw	0x16               	MOVLW	0x16
003808   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00380a   ec91     call	0x2f22, 0           	CALL	_pinmode
00380c   f017
00380e   0e04     movlw	0x4                	MOVLW	0x04
003810   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	21; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(23,INPUT);
003812   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003814   0e01     movlw	0x1                	MOVLW	0x01
003816   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003818   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00381a   0e17     movlw	0x17               	MOVLW	0x17
00381c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00381e   ec91     call	0x2f22, 0           	CALL	_pinmode
003820   f017
003822   0e04     movlw	0x4                	MOVLW	0x04
003824   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	23; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(24,INPUT);
003826   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003828   0e01     movlw	0x1                	MOVLW	0x01
00382a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00382c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00382e   0e18     movlw	0x18               	MOVLW	0x18
003830   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003832   ec91     call	0x2f22, 0           	CALL	_pinmode
003834   f017
003836   0e04     movlw	0x4                	MOVLW	0x04
003838   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(25,OUTPUT);
00383a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00383c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00383e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003840   0e19     movlw	0x19               	MOVLW	0x19
003842   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003844   ec91     call	0x2f22, 0           	CALL	_pinmode
003846   f017
003848   0e04     movlw	0x4                	MOVLW	0x04
00384a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	29; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(26,OUTPUT);
00384c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00384e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003850   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003852   0e1a     movlw	0x1a               	MOVLW	0x1a
003854   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003856   ec91     call	0x2f22, 0           	CALL	_pinmode
003858   f017
00385a   0e04     movlw	0x4                	MOVLW	0x04
00385c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	31; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(27,OUTPUT);
00385e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003860   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003862   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003864   0e1b     movlw	0x1b               	MOVLW	0x1b
003866   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003868   ec91     call	0x2f22, 0           	CALL	_pinmode
00386a   f017
00386c   0e04     movlw	0x4                	MOVLW	0x04
00386e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	33; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	pinmode(28,OUTPUT);
003870   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003872   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003874   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003876   0e1c     movlw	0x1c               	MOVLW	0x1c
003878   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00387a   ec91     call	0x2f22, 0           	CALL	_pinmode
00387c   f017
00387e   0e04     movlw	0x4                	MOVLW	0x04
003880   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	37; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	ServoAttach(10);
003882   0e0a     movlw	0xa                	MOVLW	0x0a
003884   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003886   ec5f     call	0x38be, 0           	CALL	_ServoAttach
003888   f01c
00388a   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	39; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	ServoAttach(11);
00388c   0e0b     movlw	0xb                	MOVLW	0x0b
00388e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003890   ec5f     call	0x38be, 0           	CALL	_ServoAttach
003892   f01c
003894   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	41; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	ServoAttach(12);
003896   0e0c     movlw	0xc                	MOVLW	0x0c
003898   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00389a   ec5f     call	0x38be, 0           	CALL	_ServoAttach
00389c   f01c
00389e   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	43; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	ServoAttach(8);
0038a0   0e08     movlw	0x8                	MOVLW	0x08
0038a2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0038a4   ec5f     call	0x38be, 0           	CALL	_ServoAttach
0038a6   f01c
0038a8   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	45; /home/valentin/icaro/repositorio/icaro-pygtk/source/user.c	ServoAttach(9);
0038aa   0e09     movlw	0x9                	MOVLW	0x09
0038ac   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0038ae   ec5f     call	0x38be, 0           	CALL	_ServoAttach
0038b0   f01c
0038b2   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
0038b4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0038b6   f001
0038b8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0038ba   f000
0038bc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	void epapout_init() { return; }
003fb8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	void epapin_init() { return; }
003fba   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	void epap_out() { return; }
003fbc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/icaro/repositorio/icaro-pygtk/source/main.c	void epap_in() { return; }
003fbe   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayus(int microsecondes)
003d56   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003d58   ffe5
003d5a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003d5c   ffd9
003d5e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003d60   ffe5
003d62   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003d64   ffe5
003d66   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003d68   ffe5
003d6a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003d6c   ffe5
003d6e   0e02     movlw	0x2                	MOVLW	0x02
003d70   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003d72   f000
003d74   0e03     movlw	0x3                	MOVLW	0x03
003d76   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003d78   f001
                                           ;	.line	20; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<microsecondes;i++);
003d7a   6a02     clrf	0x2, 0              	CLRF	r0x02
003d7c   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00466_DS_:
003d7e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003d80   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003d82   e102     bnz	0x3d88               	BNZ	_00475_DS_
003d84   5000     movf	0, 0, 0             	MOVF	r0x00, W
003d86   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00475_DS_:
003d88   e204     bc	0x3d92                	BC	_00470_DS_
003d8a   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
003d8c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003d8e   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
003d90   d7f6     bra	0x3d7e               	BRA	_00466_DS_
                                           _00470_DS_:
003d92   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003d94   f003
003d96   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003d98   f002
003d9a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003d9c   f001
003d9e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003da0   f000
003da2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003da4   ffd9
003da6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayms(unsigned long milliseconde)
003b32   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003b34   ffe5
003b36   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003b38   ffd9
003b3a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003b3c   ffe5
003b3e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003b40   ffe5
003b42   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003b44   ffe5
003b46   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003b48   ffe5
003b4a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003b4c   ffe5
003b4e   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003b50   ffe5
003b52   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003b54   ffe5
003b56   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003b58   ffe5
003b5a   0e02     movlw	0x2                	MOVLW	0x02
003b5c   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003b5e   f000
003b60   0e03     movlw	0x3                	MOVLW	0x03
003b62   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003b64   f001
003b66   0e04     movlw	0x4                	MOVLW	0x04
003b68   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003b6a   f002
003b6c   0e05     movlw	0x5                	MOVLW	0x05
003b6e   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003b70   f003
                                           ;	.line	13; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
003b72   6a04     clrf	0x4, 0              	CLRF	r0x04
003b74   6a05     clrf	0x5, 0              	CLRF	r0x05
003b76   6a06     clrf	0x6, 0              	CLRF	r0x06
003b78   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           _00452_DS_:
003b7a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003b7c   5c07     subwf	0x7, 0, 0          	SUBWF	r0x07, W
003b7e   e108     bnz	0x3b90               	BNZ	_00461_DS_
003b80   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003b82   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
003b84   e105     bnz	0x3b90               	BNZ	_00461_DS_
003b86   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003b88   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
003b8a   e102     bnz	0x3b90               	BNZ	_00461_DS_
003b8c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b8e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _00461_DS_:
003b90   e20b     bc	0x3ba8                	BC	_00456_DS_
003b92   0e01     movlw	0x1                	MOVLW	0x01
003b94   ec37     call	0x6e, 0             	CALL	_delay10ktcy
003b96   f000
003b98   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003b9a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003b9c   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
003b9e   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003ba0   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
003ba2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003ba4   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
003ba6   d7e9     bra	0x3b7a               	BRA	_00452_DS_
                                           _00456_DS_:
003ba8   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003baa   f007
003bac   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003bae   f006
003bb0   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003bb2   f005
003bb4   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003bb6   f004
003bb8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003bba   f003
003bbc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003bbe   f002
003bc0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003bc2   f001
003bc4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003bc6   f000
003bc8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003bca   ffd9
003bcc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	unsigned int analogread(unsigned char channel)
003c66   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003c68   ffe5
003c6a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003c6c   ffd9
003c6e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003c70   ffe5
003c72   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003c74   ffe5
003c76   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003c78   ffe5
003c7a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003c7c   ffe5
003c7e   0e02     movlw	0x2                	MOVLW	0x02
003c80   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003c82   f000
                                           ;	.line	28; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x0A;
003c84   0e0a     movlw	0xa                	MOVLW	0x0a
003c86   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0=(channel-13)*4;
003c88   0ef3     movlw	0xf3               	MOVLW	0xf3
003c8a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
003c8c   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c8e   0d04     mullw	0x4                	MULLW	0x04
003c90   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
003c92   ffc2
                                           ;	.line	30; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
003c94   0ebd     movlw	0xbd               	MOVLW	0xbd
003c96   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=1;
003c98   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
003c9a   0e09     movlw	0x9                	MOVLW	0x09
003c9c   6e00     movwf	0, 0               	MOVWF	r0x00
003c9e   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00446_DS_:
003ca0   0000     nop                      	NOP 
003ca2   0eff     movlw	0xff               	MOVLW	0xff
003ca4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003ca6   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
003ca8   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
003caa   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cac   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
003cae   e1f8     bnz	0x3ca0               	BNZ	_00446_DS_
                                           ;	.line	33; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.GO=1;
003cb0   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00441_DS_:
                                           ;	.line	34; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	while (ADCON0bits.GO);
003cb2   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
003cb4   d7fe     bra	0x3cb2               	BRA	_00441_DS_
                                           ;	.line	35; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	result=ADRESH<<8;
003cb6   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
003cb8   f000
003cba   6a01     clrf	0x1, 0              	CLRF	r0x01
003cbc   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cbe   6e03     movwf	0x3, 0             	MOVWF	r0x03
003cc0   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	36; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	result+=ADRESL;
003cc2   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
003cc4   f000
003cc6   6a01     clrf	0x1, 0              	CLRF	r0x01
003cc8   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cca   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
003ccc   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003cce   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	37; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=0;
003cd0   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	return(result);
003cd2   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
003cd4   fff3
003cd6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003cd8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003cda   f003
003cdc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003cde   f002
003ce0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003ce2   f001
003ce4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003ce6   f000
003ce8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003cea   ffd9
003cec   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	TRISA=TRISA | 0x2F;
003f8c   0e2f     movlw	0x2f               	MOVLW	0x2f
003f8e   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	TRISE=TRISE | 0x07;
003f90   0e07     movlw	0x7                	MOVLW	0x07
003f92   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x07;
003f94   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
003f96   0ebd     movlw	0xbd               	MOVLW	0xbd
003f98   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
003f9a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (PIR1bits.TMR1IF) {
003df2   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
003df4   d020     bra	0x3e36               	BRA	_00431_DS_
                                           ;	.line	289; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PIR1bits.TMR1IF=0;
003df6   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x00;
003df8   6acd     clrf	0xcd, 0             	CLRF	_T1CON
003dfa   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	291; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (phase) {
003dfc   515b     movf	0x5b, 0, 0x1        	MOVF	_phase, W, B
003dfe   e00b     bz	0x3e16                	BZ	_00427_DS_
                                           ;	.line	293; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseUp();
003e00   ecce     call	0x3f9c, 0           	CALL	_ServosPulseUp
003e02   f01f
                                           ;	.line	295; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0xd3;
003e04   0ed3     movlw	0xd3               	MOVLW	0xd3
003e06   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	296; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x8f;
003e08   0e8f     movlw	0x8f               	MOVLW	0x8f
003e0a   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ;	.line	298; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=1;
003e0c   0e01     movlw	0x1                	MOVLW	0x01
003e0e   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
003e10   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	299; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 0;
003e12   6b5b     clrf	0x5b, 0x1           	CLRF	_phase, B
003e14   d010     bra	0x3e36               	BRA	_00431_DS_
                                           _00427_DS_:
                                           ;	.line	304; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseDown();
003e16   ec39     call	0x3a72, 0           	CALL	_ServosPulseDown
003e18   f01d
                                           ;	.line	308; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0x2d;
003e1a   0e2d     movlw	0x2d               	MOVLW	0x2d
003e1c   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	309; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x0f;
003e1e   0e0f     movlw	0xf                	MOVLW	0x0f
003e20   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00425_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
003e22   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	311; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (needreordering)	
003e24   515c     movf	0x5c, 0, 0x1        	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
003e26   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
                                           ;	.line	313; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
003e28   ec37     call	0x206e, 0           	CALL	_SortServoTimings
003e2a   f010
003e2c   0e21     movlw	0x21               	MOVLW	0x21
003e2e   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	314; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
003e30   0e01     movlw	0x1                	MOVLW	0x01
003e32   0102     movlb	0x2                	BANKSEL	_phase
003e34   6f5b     movwf	0x5b, 0x1          	MOVWF	_phase, B
                                           _00431_DS_:
                                           ;	.line	317; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003e36   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMaximumPulse(uchar servo)
003e38   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003e3a   ffe5
003e3c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003e3e   ffd9
003e40   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003e42   ffe5
003e44   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003e46   ffe5
003e48   0e02     movlw	0x2                	MOVLW	0x02
003e4a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003e4c   f000
                                           ;	.line	275; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003e4e   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00415_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003e50   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	278; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
003e52   e20e     bc	0x3e70                	BC	_00416_DS_
003e54   6a01     clrf	0x1, 0              	CLRF	r0x01
003e56   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003e58   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003e5a   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003e5c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003e5e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003e60   ffe9
003e62   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003e64   ffea
003e66   0efa     movlw	0xfa               	MOVLW	0xfa
003e68   6eef     movwf	0xef, 0            	MOVWF	INDF0
                                           ;	.line	280; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003e6a   0e01     movlw	0x1                	MOVLW	0x01
003e6c   0102     movlb	0x2                	BANKSEL	_needreordering
003e6e   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00416_DS_:
003e70   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003e72   f001
003e74   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003e76   f000
003e78   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003e7a   ffd9
003e7c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMinimumPulse(uchar servo)
003ec4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003ec6   ffe5
003ec8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003eca   ffd9
003ecc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003ece   ffe5
003ed0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003ed2   ffe5
003ed4   0e02     movlw	0x2                	MOVLW	0x02
003ed6   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003ed8   f000
                                           ;	.line	264; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003eda   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00405_DS_
                                           ; #	GOTO	_00406_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003edc   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	267; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
003ede   e20d     bc	0x3efa                	BC	_00406_DS_
003ee0   6a01     clrf	0x1, 0              	CLRF	r0x01
003ee2   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003ee4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003ee6   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003ee8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003eea   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003eec   ffe9
003eee   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003ef0   ffea
003ef2   0e01     movlw	0x1                	MOVLW	0x01
003ef4   6eef     movwf	0xef, 0            	MOVWF	INDF0
003ef6   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	269; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003ef8   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00406_DS_:
003efa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003efc   f001
003efe   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003f00   f000
003f02   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003f04   ffd9
003f06   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	unsigned char ServoRead(uchar servo)
003e7e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003e80   ffe5
003e82   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003e84   ffd9
003e86   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003e88   ffe5
003e8a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003e8c   ffe5
003e8e   0e02     movlw	0x2                	MOVLW	0x02
003e90   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003e92   f000
                                           ;	.line	256; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003e94   0e12     movlw	0x12               	MOVLW	0x12
003e96   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003e98   e302     bnc	0x3e9e               	BNC	_00395_DS_
                                           ;	.line	257; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	return 0;
003e9a   6ae8     clrf	0xe8, 0             	CLRF	WREG
003e9c   d00c     bra	0x3eb6               	BRA	_00396_DS_
                                           _00395_DS_:
                                           ;	.line	258; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	return servovalues[servo];
003e9e   6a01     clrf	0x1, 0              	CLRF	r0x01
003ea0   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003ea2   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003ea4   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003ea6   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003ea8   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003eaa   ffe9
003eac   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003eae   ffea
003eb0   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003eb2   f000
003eb4   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00396_DS_:
003eb6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003eb8   f001
003eba   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003ebc   f000
003ebe   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003ec0   ffd9
003ec2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoWrite(uchar servo, uchar value)
003cee   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003cf0   ffe5
003cf2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003cf4   ffd9
003cf6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003cf8   ffe5
003cfa   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003cfc   ffe5
003cfe   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003d00   ffe5
003d02   0e02     movlw	0x2                	MOVLW	0x02
003d04   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003d06   f000
003d08   0e03     movlw	0x3                	MOVLW	0x03
003d0a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003d0c   f001
                                           ;	.line	241; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003d0e   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00377_DS_
                                           ; #	GOTO	_00382_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003d10   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	244; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
003d12   e218     bc	0x3d44                	BC	_00382_DS_
003d14   0e01     movlw	0x1                	MOVLW	0x01
003d16   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003d18   e202     bc	0x3d1e                	BC	_00379_DS_
                                           ;	.line	245; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMIN;
003d1a   0e01     movlw	0x1                	MOVLW	0x01
003d1c   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00379_DS_:
                                           ;	.line	246; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
003d1e   0efb     movlw	0xfb               	MOVLW	0xfb
003d20   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003d22   e302     bnc	0x3d28               	BNC	_00381_DS_
                                           ;	.line	247; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMAX;
003d24   0efa     movlw	0xfa               	MOVLW	0xfa
003d26   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00381_DS_:
                                           ;	.line	248; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=value;
003d28   6a02     clrf	0x2, 0              	CLRF	r0x02
003d2a   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003d2c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003d2e   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003d30   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003d32   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003d34   ffe9
003d36   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003d38   ffea
003d3a   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
003d3c   ffef
                                           ;	.line	250; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003d3e   0e01     movlw	0x1                	MOVLW	0x01
003d40   0102     movlb	0x2                	BANKSEL	_needreordering
003d42   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00382_DS_:
003d44   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003d46   f002
003d48   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003d4a   f001
003d4c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003d4e   f000
003d50   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003d52   ffd9
003d54   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoDetach(uchar pin)
00399e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0039a0   ffe5
0039a2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0039a4   ffd9
0039a6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0039a8   ffe5
0039aa   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0039ac   ffe5
0039ae   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0039b0   ffe5
0039b2   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0039b4   ffe5
0039b6   0e02     movlw	0x2                	MOVLW	0x02
0039b8   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0039ba   f000
                                           ;	.line	227; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0039bc   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00356_DS_
                                           ; #	GOTO	_00363_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0039be   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0039c0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0039c2   d04c     bra	0x3a5c               	BRA	_00363_DS_
0039c4   0e08     movlw	0x8                	MOVLW	0x08
0039c6   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0039c8   e218     bc	0x39fa                	BC	_00361_DS_
                                           ;	.line	230; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
0039ca   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
0039cc   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0039ce   6e01     movwf	0x1, 0             	MOVWF	r0x01
0039d0   6a02     clrf	0x2, 0              	CLRF	r0x02
0039d2   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
0039d4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0039d6   6a03     clrf	0x3, 0              	CLRF	r0x03
0039d8   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
0039da   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
0039dc   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
0039de   fff6
0039e0   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
0039e2   fff7
0039e4   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
0039e6   fff8
0039e8   0009     tblrd	*+                 	TBLRD*+	
0039ea   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
0039ec   f001
0039ee   0102     movlb	0x2                	BANKSEL	_activatedservos
0039f0   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
0039f2   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
0039f4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0039f6   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
0039f8   d031     bra	0x3a5c               	BRA	_00363_DS_
                                           _00361_DS_:
                                           ;	.line	231; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
0039fa   0e0d     movlw	0xd                	MOVLW	0x0d
0039fc   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0039fe   e318     bnc	0x3a30               	BNC	_00358_DS_
                                           ;	.line	232; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
003a00   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003a02   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003a04   6e01     movwf	0x1, 0             	MOVWF	r0x01
003a06   6a02     clrf	0x2, 0              	CLRF	r0x02
003a08   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
003a0a   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003a0c   6a03     clrf	0x3, 0              	CLRF	r0x03
003a0e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003a10   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003a12   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003a14   fff6
003a16   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003a18   fff7
003a1a   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003a1c   fff8
003a1e   0009     tblrd	*+                 	TBLRD*+	
003a20   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003a22   f001
003a24   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003a26   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
003a28   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003a2a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003a2c   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
003a2e   d016     bra	0x3a5c               	BRA	_00363_DS_
                                           _00358_DS_:
                                           ;	.line	234; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
003a30   6a01     clrf	0x1, 0              	CLRF	r0x01
003a32   6a02     clrf	0x2, 0              	CLRF	r0x02
003a34   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003a36   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003a38   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
003a3a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003a3c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003a3e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003a40   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003a42   fff6
003a44   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003a46   fff7
003a48   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003a4a   fff8
003a4c   0009     tblrd	*+                 	TBLRD*+	
003a4e   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003a50   f000
003a52   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003a54   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
003a56   1a00     xorwf	0, 0x1, 0          	XORWF	r0x00, F
003a58   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003a5a   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           _00363_DS_:
003a5c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003a5e   f003
003a60   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003a62   f002
003a64   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003a66   f001
003a68   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003a6a   f000
003a6c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003a6e   ffd9
003a70   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoAttach(uchar pin)
0038be   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0038c0   ffe5
0038c2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0038c4   ffd9
0038c6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0038c8   ffe5
0038ca   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0038cc   ffe5
0038ce   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0038d0   ffe5
0038d2   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0038d4   ffe5
0038d6   0e02     movlw	0x2                	MOVLW	0x02
0038d8   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0038da   f000
                                           ;	.line	210; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0038dc   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00334_DS_
                                           ; #	GOTO	_00341_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0038de   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0038e0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0038e2   d052     bra	0x3988               	BRA	_00341_DS_
0038e4   0e08     movlw	0x8                	MOVLW	0x08
0038e6   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0038e8   e21a     bc	0x391e                	BC	_00339_DS_
                                           ;	.line	213; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
0038ea   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
0038ec   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0038ee   6e01     movwf	0x1, 0             	MOVWF	r0x01
0038f0   6a02     clrf	0x2, 0              	CLRF	r0x02
0038f2   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
0038f4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0038f6   6a03     clrf	0x3, 0              	CLRF	r0x03
0038f8   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
0038fa   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
0038fc   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
0038fe   fff6
003900   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003902   fff7
003904   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003906   fff8
003908   0009     tblrd	*+                 	TBLRD*+	
00390a   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
00390c   f001
00390e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003910   0102     movlb	0x2                	BANKSEL	_activatedservos
003912   115e     iorwf	0x5e, 0, 0x1       	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003914   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003916   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003918   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00391a   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
00391c   d035     bra	0x3988               	BRA	_00341_DS_
                                           _00339_DS_:
                                           ;	.line	215; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
00391e   0e0d     movlw	0xd                	MOVLW	0x0d
003920   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003922   e31a     bnc	0x3958               	BNC	_00336_DS_
                                           ;	.line	216; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
003924   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003926   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003928   6e01     movwf	0x1, 0             	MOVWF	r0x01
00392a   6a02     clrf	0x2, 0              	CLRF	r0x02
00392c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00392e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003930   6a03     clrf	0x3, 0              	CLRF	r0x03
003932   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003934   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003936   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003938   fff6
00393a   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
00393c   fff7
00393e   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003940   fff8
003942   0009     tblrd	*+                 	TBLRD*+	
003944   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003946   f001
003948   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00394a   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00394c   1160     iorwf	0x60, 0, 0x1       	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00394e   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
003950   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003952   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003954   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
003956   d018     bra	0x3988               	BRA	_00341_DS_
                                           _00336_DS_:
                                           ;	.line	219; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003958   6a01     clrf	0x1, 0              	CLRF	r0x01
00395a   6a02     clrf	0x2, 0              	CLRF	r0x02
00395c   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
00395e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003960   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
003962   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003964   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003966   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003968   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
00396a   fff6
00396c   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
00396e   fff7
003970   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003972   fff8
003974   0009     tblrd	*+                 	TBLRD*+	
003976   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003978   f000
00397a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00397c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
00397e   115f     iorwf	0x5f, 0, 0x1       	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003980   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003982   5000     movf	0, 0, 0             	MOVF	r0x00, W
003984   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003986   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           _00341_DS_:
003988   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00398a   f003
00398c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00398e   f002
003990   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003992   f001
003994   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003996   f000
003998   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00399a   ffd9
00399c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	static void SortServoTimings()
00206e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002070   ffe5
002072   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002074   ffe5
002076   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002078   ffe5
00207a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00207c   ffe5
00207e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002080   ffe5
002082   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002084   ffe5
002086   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002088   ffe5
00208a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00208c   ffe5
00208e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002090   ffe5
002092   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
002094   ffe5
002096   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	131; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
002098   6b85     clrf	0x85, 0x1           	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
00209a   6b86     clrf	0x86, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
00209c   6b87     clrf	0x87, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	134; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
00209e   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00280_DS_:
0020a0   0e12     movlw	0x12               	MOVLW	0x12
0020a2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0020a4   e22e     bc	0x2102                	BC	_00283_DS_
                                           ;	.line	135; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=255;
0020a6   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0020a8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020aa   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ac   6a02     clrf	0x2, 0              	CLRF	r0x02
0020ae   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0020b0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020b2   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020b4   ffe9
0020b6   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020b8   ffea
0020ba   68ef     setf	0xef, 0             	SETF	INDF0
                                           ;	.line	136; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0020bc   0e00     movlw	0                  	MOVLW	LOW(_timings)
0020be   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020c0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020c2   6a02     clrf	0x2, 0              	CLRF	r0x02
0020c4   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0020c6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020c8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020ca   ffe9
0020cc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020ce   ffea
0020d0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	137; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0020d2   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0020d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020d6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020d8   6a02     clrf	0x2, 0              	CLRF	r0x02
0020da   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0020dc   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020de   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020e0   ffe9
0020e2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020e4   ffea
0020e6   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	138; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0020e8   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0020ea   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020ec   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ee   6a02     clrf	0x2, 0              	CLRF	r0x02
0020f0   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0020f2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020f4   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020f6   ffe9
0020f8   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020fa   ffea
0020fc   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	134; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
0020fe   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002100   d7cf     bra	0x20a0               	BRA	_00280_DS_
                                           _00283_DS_:
                                           ;	.line	141; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos=0;
002102   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	143; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	while(totalservos<18) {
002104   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00277_DS_:
002106   0e12     movlw	0x12               	MOVLW	0x12
002108   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00210a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00210c   d1ca     bra	0x24a2               	BRA	_00279_DS_
                                           ;	.line	144; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
00210e   0e01     movlw	0x1                	MOVLW	0x01
002110   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	145; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002112   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00284_DS_:
002114   0e12     movlw	0x12               	MOVLW	0x12
002116   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002118   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00211a   d18e     bra	0x2438               	BRA	_00287_DS_
                                           ;	.line	147; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (s<8){
00211c   0e08     movlw	0x8                	MOVLW	0x08
00211e   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002120   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002122   d082     bra	0x2228               	BRA	_00275_DS_
                                           ;	.line	148; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002124   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
002126   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002128   6e04     movwf	0x4, 0             	MOVWF	r0x04
00212a   6a05     clrf	0x5, 0              	CLRF	r0x05
00212c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00212e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002130   6a06     clrf	0x6, 0              	CLRF	r0x06
002132   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002134   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002136   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002138   fff6
00213a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00213c   fff7
00213e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002140   fff8
002142   0009     tblrd	*+                 	TBLRD*+	
002144   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002146   f004
002148   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
00214a   5185     movf	0x85, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
00214c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00214e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002150   0102     movlb	0x2                	BANKSEL	_activatedservos
002152   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
002154   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002156   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002158   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00215a   d16c     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	150; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00215c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00215e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002160   6e05     movwf	0x5, 0             	MOVWF	r0x05
002162   6a06     clrf	0x6, 0              	CLRF	r0x06
002164   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002166   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002168   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00216a   ffe9
00216c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00216e   ffea
002170   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002172   f005
002174   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002176   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002178   6e06     movwf	0x6, 0             	MOVWF	r0x06
00217a   6a07     clrf	0x7, 0              	CLRF	r0x07
00217c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00217e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002180   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002182   ffe9
002184   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002186   ffea
002188   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00218a   f008
00218c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00218e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
002190   e22b     bc	0x21e8                	BC	_00250_DS_
                                           ;	.line	151; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
002192   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002194   ffe9
002196   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002198   ffea
00219a   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
00219c   ffef
                                           ;	.line	152; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=servomasks[s];
00219e   0e00     movlw	0                  	MOVLW	LOW(_timings)
0021a0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021a2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021a4   6a09     clrf	0x9, 0              	CLRF	r0x09
0021a6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0021a8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021aa   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021ac   ffe9
0021ae   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021b0   ffea
0021b2   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0021b4   ffef
                                           ;	.line	153; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0021b6   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0021b8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021ba   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021bc   6a09     clrf	0x9, 0              	CLRF	r0x09
0021be   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0021c0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021c2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021c4   ffe9
0021c6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021c8   ffea
0021ca   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	154; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0021cc   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0021ce   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021d0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021d2   6a09     clrf	0x9, 0              	CLRF	r0x09
0021d4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0021d6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021d8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021da   ffe9
0021dc   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021de   ffea
0021e0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	155; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0021e2   0e01     movlw	0x1                	MOVLW	0x01
0021e4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0021e6   d126     bra	0x2434               	BRA	_00286_DS_
                                           _00250_DS_:
                                           ;	.line	157; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0021e8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0021ea   ffe9
0021ec   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0021ee   ffea
0021f0   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0021f2   f006
0021f4   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0021f6   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
0021f8   e001     bz	0x21fc                	BZ	_00317_DS_
0021fa   d11c     bra	0x2434               	BRA	_00286_DS_
                                           _00317_DS_:
                                           ;	.line	158; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t] |= servomasks[s];
0021fc   0e00     movlw	0                  	MOVLW	LOW(_timings)
0021fe   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002200   6e05     movwf	0x5, 0             	MOVWF	r0x05
002202   6a06     clrf	0x6, 0              	CLRF	r0x06
002204   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002206   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002208   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00220a   ffe9
00220c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00220e   ffea
002210   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002212   f007
002214   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002216   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002218   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00221a   ffe9
00221c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00221e   ffea
002220   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002222   ffef
                                           ;	.line	159; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002224   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002226   d106     bra	0x2434               	BRA	_00286_DS_
                                           _00275_DS_:
                                           ;	.line	163; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (s>12){
002228   0e0d     movlw	0xd                	MOVLW	0x0d
00222a   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00222c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00222e   d082     bra	0x2334               	BRA	_00272_DS_
                                           ;	.line	164; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002230   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
002232   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002234   6e04     movwf	0x4, 0             	MOVWF	r0x04
002236   6a05     clrf	0x5, 0              	CLRF	r0x05
002238   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00223a   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00223c   6a06     clrf	0x6, 0              	CLRF	r0x06
00223e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002240   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002242   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002244   fff6
002246   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002248   fff7
00224a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00224c   fff8
00224e   0009     tblrd	*+                 	TBLRD*+	
002250   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002252   f004
002254   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
002256   5187     movf	0x87, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002258   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00225a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00225c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00225e   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
002260   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002262   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002264   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002266   d0e6     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	166; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002268   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00226a   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00226c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00226e   6a06     clrf	0x6, 0              	CLRF	r0x06
002270   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002272   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002274   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002276   ffe9
002278   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00227a   ffea
00227c   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00227e   f005
002280   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002282   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002284   6e06     movwf	0x6, 0             	MOVWF	r0x06
002286   6a07     clrf	0x7, 0              	CLRF	r0x07
002288   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00228a   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00228c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00228e   ffe9
002290   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002292   ffea
002294   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
002296   f008
002298   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00229a   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00229c   e22b     bc	0x22f4                	BC	_00258_DS_
                                           ;	.line	167; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
00229e   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022a0   ffe9
0022a2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022a4   ffea
0022a6   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0022a8   ffef
                                           ;	.line	168; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0022aa   0e00     movlw	0                  	MOVLW	LOW(_timings)
0022ac   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022ae   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022b0   6a09     clrf	0x9, 0              	CLRF	r0x09
0022b2   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0022b4   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022b6   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022b8   ffe9
0022ba   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022bc   ffea
0022be   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	169; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0022c0   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0022c2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022c4   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022c6   6a09     clrf	0x9, 0              	CLRF	r0x09
0022c8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0022ca   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022cc   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022ce   ffe9
0022d0   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022d2   ffea
0022d4   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	170; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=servomasks[s];
0022d6   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0022d8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022da   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022dc   6a09     clrf	0x9, 0              	CLRF	r0x09
0022de   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0022e0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022e2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022e4   ffe9
0022e6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022e8   ffea
0022ea   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0022ec   ffef
                                           ;	.line	171; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0022ee   0e01     movlw	0x1                	MOVLW	0x01
0022f0   6e02     movwf	0x2, 0             	MOVWF	r0x02
0022f2   d0a0     bra	0x2434               	BRA	_00286_DS_
                                           _00258_DS_:
                                           ;	.line	173; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0022f4   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022f6   ffe9
0022f8   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022fa   ffea
0022fc   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0022fe   f006
002300   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002302   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002304   e001     bz	0x2308                	BZ	_00323_DS_
002306   d096     bra	0x2434               	BRA	_00286_DS_
                                           _00323_DS_:
                                           ;	.line	174; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t] |= servomasks[s];
002308   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00230a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00230c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00230e   6a06     clrf	0x6, 0              	CLRF	r0x06
002310   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002312   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002314   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002316   ffe9
002318   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00231a   ffea
00231c   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
00231e   f007
002320   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002322   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002324   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002326   ffe9
002328   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00232a   ffea
00232c   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
00232e   ffef
                                           ;	.line	175; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002330   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002332   d080     bra	0x2434               	BRA	_00286_DS_
                                           _00272_DS_:
                                           ;	.line	180; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002334   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
002336   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002338   6e04     movwf	0x4, 0             	MOVWF	r0x04
00233a   6a05     clrf	0x5, 0              	CLRF	r0x05
00233c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00233e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002340   6a06     clrf	0x6, 0              	CLRF	r0x06
002342   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002344   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002346   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002348   fff6
00234a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00234c   fff7
00234e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002350   fff8
002352   0009     tblrd	*+                 	TBLRD*+	
002354   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002356   f004
002358   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
00235a   5186     movf	0x86, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
00235c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00235e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002360   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
002362   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
002364   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002366   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002368   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00236a   d064     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	182; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00236c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00236e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002370   6e05     movwf	0x5, 0             	MOVWF	r0x05
002372   6a06     clrf	0x6, 0              	CLRF	r0x06
002374   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002376   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002378   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00237a   ffe9
00237c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00237e   ffea
002380   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002382   f005
002384   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002386   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002388   6e06     movwf	0x6, 0             	MOVWF	r0x06
00238a   6a07     clrf	0x7, 0              	CLRF	r0x07
00238c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00238e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002390   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002392   ffe9
002394   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002396   ffea
002398   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00239a   f008
00239c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00239e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0023a0   e22b     bc	0x23f8                	BC	_00266_DS_
                                           ;	.line	183; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0023a2   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023a4   ffe9
0023a6   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023a8   ffea
0023aa   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0023ac   ffef
                                           ;	.line	184; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0023ae   0e00     movlw	0                  	MOVLW	LOW(_timings)
0023b0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023b2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023b4   6a09     clrf	0x9, 0              	CLRF	r0x09
0023b6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0023b8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023ba   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023bc   ffe9
0023be   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023c0   ffea
0023c2   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	185; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=servomasks[s];
0023c4   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0023c6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023c8   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023ca   6a09     clrf	0x9, 0              	CLRF	r0x09
0023cc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0023ce   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023d0   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023d2   ffe9
0023d4   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023d6   ffea
0023d8   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0023da   ffef
                                           ;	.line	186; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0023dc   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0023de   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023e0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023e2   6a09     clrf	0x9, 0              	CLRF	r0x09
0023e4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0023e6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023e8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023ea   ffe9
0023ec   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023ee   ffea
0023f0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	187; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0023f2   0e01     movlw	0x1                	MOVLW	0x01
0023f4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0023f6   d01e     bra	0x2434               	BRA	_00286_DS_
                                           _00266_DS_:
                                           ;	.line	189; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings [timevalue][t]){
0023f8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023fa   ffe9
0023fc   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023fe   ffea
002400   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
002402   f006
002404   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002406   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002408   e115     bnz	0x2434               	BNZ	_00286_DS_
                                           ;	.line	190; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t] |= servomasks[s];
00240a   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
00240c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00240e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002410   6a06     clrf	0x6, 0              	CLRF	r0x06
002412   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002414   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002416   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002418   ffe9
00241a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00241c   ffea
00241e   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002420   f007
002422   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002424   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002426   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002428   ffe9
00242a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00242c   ffea
00242e   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002430   ffef
                                           ;	.line	191; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002432   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
                                           _00286_DS_:
                                           ;	.line	145; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002434   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002436   d66e     bra	0x2114               	BRA	_00284_DS_
                                           _00287_DS_:
                                           ;	.line	196; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_B] |= timings[MaskPort_B][t];
002438   0e00     movlw	0                  	MOVLW	LOW(_timings)
00243a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00243c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00243e   6a04     clrf	0x4, 0              	CLRF	r0x04
002440   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002442   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002444   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002446   ffe9
002448   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00244a   ffea
00244c   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
00244e   f003
002450   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
002452   5185     movf	0x85, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
002454   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002456   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002458   6f85     movwf	0x85, 0x1          	MOVWF	_SortServoTimings_mascaratotal_1_1, B
                                           ;	.line	197; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
00245a   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
00245c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00245e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002460   6a04     clrf	0x4, 0              	CLRF	r0x04
002462   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002464   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002466   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002468   ffe9
00246a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00246c   ffea
00246e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002470   f003
                                           ; removed redundant BANKSEL
002472   5186     movf	0x86, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002474   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002476   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002478   6f86     movwf	0x86, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	198; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
00247a   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00247c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00247e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002480   6a04     clrf	0x4, 0              	CLRF	r0x04
002482   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002484   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002486   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002488   ffe9
00248a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00248c   ffea
00248e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002490   f003
                                           ; removed redundant BANKSEL
002492   5187     movf	0x87, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002494   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002496   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002498   6f87     movwf	0x87, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	199; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos += numservos;
00249a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00249c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ;	.line	200; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	t++;
00249e   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0024a0   d632     bra	0x2106               	BRA	_00277_DS_
                                           _00279_DS_:
0024a2   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	203; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
0024a4   6b5c     clrf	0x5c, 0x1           	CLRF	_needreordering, B
0024a6   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0024a8   f009
0024aa   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0024ac   f008
0024ae   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0024b0   f007
0024b2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0024b4   f006
0024b6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0024b8   f005
0024ba   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0024bc   f004
0024be   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0024c0   f003
0024c2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0024c4   f002
0024c6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0024c8   f001
0024ca   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0024cc   f000
0024ce   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	118; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = activatedservos[MaskPort_B] & 0xFF;
003f9c   c25e     movff	0x25e, 0xf81       	MOVFF	_activatedservos, _PORTB
003f9e   ff81
                                           ;	.line	119; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
003fa0   c25f     movff	0x25f, 0xf82       	MOVFF	(_activatedservos + 1), _PORTC
003fa2   ff82
                                           ;	.line	120; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
003fa4   c260     movff	0x260, 0xf80       	MOVFF	(_activatedservos + 2), _PORTA
003fa6   ff80
003fa8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	static void ServosPulseDown()
003a72   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003a74   ffe5
003a76   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003a78   ffd9
003a7a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003a7c   ffe5
003a7e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003a80   ffe5
003a82   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex = 0;
003a84   6b8d     clrf	0x8d, 0x1           	CLRF	_timingindex, B
003a86   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003a88   6b5d     clrf	0x5d, 0x1           	CLRF	_timedivision, B
                                           _00226_DS_:
003a8a   0efb     movlw	0xfb               	MOVLW	0xfb
003a8c   0102     movlb	0x2                	BANKSEL	_timedivision
003a8e   5d5d     subwf	0x5d, 0, 0x1       	SUBWF	_timedivision, W, B
003a90   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003a92   d048     bra	0x3b24               	BRA	_00230_DS_
                                           ;	.line	97; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	if (timings[timevalue][timingindex] == timedivision){
003a94   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
003a96   f000
003a98   6a01     clrf	0x1, 0              	CLRF	r0x01
003a9a   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
003a9c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003a9e   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
003aa0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003aa2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003aa4   ffe9
003aa6   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003aa8   ffea
003aaa   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003aac   f000
003aae   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003ab0   195d     xorwf	0x5d, 0, 0x1       	XORWF	_timedivision, W, B
003ab2   e12f     bnz	0x3b12               	BNZ	_00225_DS_
                                           ;	.line	98; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = PORTB ^ timings[MaskPort_B][timingindex];
003ab4   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
003ab6   f000
003ab8   6a01     clrf	0x1, 0              	CLRF	r0x01
003aba   0e00     movlw	0                  	MOVLW	LOW(_timings)
003abc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003abe   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
003ac0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003ac2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003ac4   ffe9
003ac6   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003ac8   ffea
003aca   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003acc   f000
003ace   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ad0   1a81     xorwf	0x81, 0x1, 0       	XORWF	_PORTB, F
                                           ;	.line	99; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
003ad2   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
003ad4   f000
003ad6   6a01     clrf	0x1, 0              	CLRF	r0x01
003ad8   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
003ada   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003adc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
003ade   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003ae0   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003ae2   ffe9
003ae4   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003ae6   ffea
003ae8   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003aea   f000
003aec   5000     movf	0, 0, 0             	MOVF	r0x00, W
003aee   1a82     xorwf	0x82, 0x1, 0       	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
003af0   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
003af2   f000
003af4   6a01     clrf	0x1, 0              	CLRF	r0x01
003af6   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
003af8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003afa   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
003afc   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003afe   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003b00   ffe9
003b02   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003b04   ffea
003b06   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003b08   f000
003b0a   5000     movf	0, 0, 0             	MOVF	r0x00, W
003b0c   1a80     xorwf	0x80, 0x1, 0       	XORWF	_PORTA, F
003b0e   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex++;
003b10   2b8d     incf	0x8d, 0x1, 0x1      	INCF	_timingindex, F, B
                                           _00225_DS_:
003b12   0e06     movlw	0x6                	movlw 6
003b14   6f8c     movwf	0x8c, 0x1          	movwf _loopvar
                                           bucle:
003b16   0000     nop                      	NOP
003b18   2f8c     decfsz	0x8c, 0x1, 0x1    	decfsz _loopvar,1
003b1a   ef8b     goto	0x3b16              	goto bucle
003b1c   f01d
                                           	
003b1e   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003b20   2b5d     incf	0x5d, 0x1, 0x1      	INCF	_timedivision, F, B
003b22   d7b3     bra	0x3a8a               	BRA	_00226_DS_
                                           _00230_DS_:
003b24   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003b26   f001
003b28   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003b2a   f000
003b2c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003b2e   ffd9
003b30   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	void servos_init()
003da8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003daa   ffe5
003dac   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003dae   ffe5
003db0   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003db2   ffe5
                                           ;	.line	75; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
003db4   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00210_DS_:
003db6   0e12     movlw	0x12               	MOVLW	0x12
003db8   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003dba   e20d     bc	0x3dd6                	BC	_00213_DS_
003dbc   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003dbe   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003dc0   6e01     movwf	0x1, 0             	MOVWF	r0x01
003dc2   6a02     clrf	0x2, 0              	CLRF	r0x02
003dc4   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003dc6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003dc8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
003dca   ffe9
003dcc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003dce   ffea
003dd0   68ef     setf	0xef, 0             	SETF	INDF0
003dd2   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003dd4   d7f0     bra	0x3db6               	BRA	_00210_DS_
                                           _00213_DS_:
                                           ;	.line	78; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H=0xFF;
003dd6   68cf     setf	0xcf, 0             	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L=0x00;
003dd8   6ace     clrf	0xce, 0             	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x01;
003dda   0e01     movlw	0x1                	MOVLW	0x01
003ddc   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	PIE1bits.TMR1IE=1;
003dde   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.PEIE=1;
003de0   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.GIE=1;
003de2   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
003de4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003de6   f002
003de8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003dea   f001
003dec   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003dee   f000
003df0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	void pinmode(int input, int state)
002f22   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002f24   ffe5
002f26   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002f28   ffd9
002f2a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002f2c   ffe5
002f2e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002f30   ffe5
002f32   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002f34   ffe5
002f36   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002f38   ffe5
002f3a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002f3c   ffe5
002f3e   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002f40   ffe5
002f42   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002f44   ffe5
002f46   0e02     movlw	0x2                	MOVLW	0x02
002f48   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002f4a   f000
002f4c   0e03     movlw	0x3                	MOVLW	0x03
002f4e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002f50   f001
002f52   0e04     movlw	0x4                	MOVLW	0x04
002f54   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002f56   f002
002f58   0e05     movlw	0x5                	MOVLW	0x05
002f5a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002f5c   f003
                                           ;	.line	71; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002f5e   0efe     movlw	0xfe               	MOVLW	LOW(_port)
002f60   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f62   6e04     movwf	0x4, 0             	MOVWF	r0x04
002f64   0e2b     movlw	0x2b               	MOVLW	HIGH(_port)
002f66   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f68   6e05     movwf	0x5, 0             	MOVWF	r0x05
002f6a   6a06     clrf	0x6, 0              	CLRF	r0x06
002f6c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f6e   6806     setf	0x6, 0              	SETF	r0x06
002f70   0e00     movlw	0                  	MOVLW	UPPER(_port)
002f72   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002f74   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002f76   fff6
002f78   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002f7a   fff7
002f7c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002f7e   fff8
002f80   0009     tblrd	*+                 	TBLRD*+	
002f82   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002f84   f004
002f86   0e05     movlw	0x5                	MOVLW	0x05
002f88   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002f8a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002f8c   d11c     bra	0x31c6               	BRA	_00196_DS_
002f8e   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002f90   ffe5
002f92   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002f94   ffe5
002f96   6a08     clrf	0x8, 0              	CLRF	r0x08
002f98   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002f9a   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002f9c   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002f9e   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002fa0   0bfc     andlw	0xfc               	ANDLW	0xfc
002fa2   6e07     movwf	0x7, 0             	MOVWF	r0x07
002fa4   0e00     movlw	0                  	MOVLW	UPPER(_00205_DS_)
002fa6   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002fa8   0e2f     movlw	0x2f               	MOVLW	HIGH(_00205_DS_)
002faa   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002fac   0ec4     movlw	0xc4               	MOVLW	LOW(_00205_DS_)
002fae   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002fb0   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002fb2   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002fb4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002fb6   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002fb8   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002fba   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002fbc   f008
002fbe   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002fc0   f007
002fc2   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00205_DS_:
002fc4   efec     goto	0x2fd8              	GOTO	_00175_DS_
002fc6   f017
002fc8   ef1e     goto	0x303c              	GOTO	_00179_DS_
002fca   f018
002fcc   ef50     goto	0x30a0              	GOTO	_00183_DS_
002fce   f018
002fd0   ef82     goto	0x3104              	GOTO	_00187_DS_
002fd2   f018
002fd4   efb4     goto	0x3168              	GOTO	_00191_DS_
002fd6   f018
                                           _00175_DS_:
                                           ;	.line	73; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
002fd8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002fda   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002fdc   e017     bz	0x300c                	BZ	_00177_DS_
002fde   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002fe0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002fe2   6e04     movwf	0x4, 0             	MOVWF	r0x04
002fe4   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002fe6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002fe8   6e05     movwf	0x5, 0             	MOVWF	r0x05
002fea   6a06     clrf	0x6, 0              	CLRF	r0x06
002fec   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002fee   6806     setf	0x6, 0              	SETF	r0x06
002ff0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ff2   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002ff4   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002ff6   fff6
002ff8   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ffa   fff7
002ffc   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002ffe   fff8
003000   0009     tblrd	*+                 	TBLRD*+	
003002   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003004   f004
003006   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003008   1293     iorwf	0x93, 0x1, 0       	IORWF	_TRISB, F
00300a   d0dd     bra	0x31c6               	BRA	_00196_DS_
                                           _00177_DS_:
                                           ;	.line	74; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISB=TRISB & (255-mask[input]);
00300c   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00300e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003010   6e04     movwf	0x4, 0             	MOVWF	r0x04
003012   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003014   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003016   6e05     movwf	0x5, 0             	MOVWF	r0x05
003018   6a06     clrf	0x6, 0              	CLRF	r0x06
00301a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00301c   6806     setf	0x6, 0              	SETF	r0x06
00301e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003020   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003022   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003024   fff6
003026   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003028   fff7
00302a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00302c   fff8
00302e   0009     tblrd	*+                 	TBLRD*+	
003030   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003032   f004
003034   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003036   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003038   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
00303a   d0c5     bra	0x31c6               	BRA	_00196_DS_
                                           _00179_DS_:
                                           ;	.line	76; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
00303c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00303e   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
003040   e017     bz	0x3070                	BZ	_00181_DS_
003042   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003044   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003046   6e04     movwf	0x4, 0             	MOVWF	r0x04
003048   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00304a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00304c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00304e   6a06     clrf	0x6, 0              	CLRF	r0x06
003050   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003052   6806     setf	0x6, 0              	SETF	r0x06
003054   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003056   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003058   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00305a   fff6
00305c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00305e   fff7
003060   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003062   fff8
003064   0009     tblrd	*+                 	TBLRD*+	
003066   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003068   f004
00306a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00306c   1294     iorwf	0x94, 0x1, 0       	IORWF	_TRISC, F
00306e   d0ab     bra	0x31c6               	BRA	_00196_DS_
                                           _00181_DS_:
                                           ;	.line	77; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISC=TRISC & (255-mask[input]);
003070   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003072   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003074   6e04     movwf	0x4, 0             	MOVWF	r0x04
003076   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003078   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00307a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00307c   6a06     clrf	0x6, 0              	CLRF	r0x06
00307e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003080   6806     setf	0x6, 0              	SETF	r0x06
003082   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003084   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003086   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003088   fff6
00308a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00308c   fff7
00308e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003090   fff8
003092   0009     tblrd	*+                 	TBLRD*+	
003094   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003096   f004
003098   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00309a   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00309c   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
00309e   d093     bra	0x31c6               	BRA	_00196_DS_
                                           _00183_DS_:
                                           ;	.line	79; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
0030a0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0030a2   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0030a4   e017     bz	0x30d4                	BZ	_00185_DS_
0030a6   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0030a8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030aa   6e04     movwf	0x4, 0             	MOVWF	r0x04
0030ac   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0030ae   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0030b0   6e05     movwf	0x5, 0             	MOVWF	r0x05
0030b2   6a06     clrf	0x6, 0              	CLRF	r0x06
0030b4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0030b6   6806     setf	0x6, 0              	SETF	r0x06
0030b8   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0030ba   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0030bc   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0030be   fff6
0030c0   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0030c2   fff7
0030c4   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0030c6   fff8
0030c8   0009     tblrd	*+                 	TBLRD*+	
0030ca   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0030cc   f004
0030ce   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0030d0   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
0030d2   d079     bra	0x31c6               	BRA	_00196_DS_
                                           _00185_DS_:
                                           ;	.line	80; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISA=TRISA & (255-mask[input]);
0030d4   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0030d6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030d8   6e04     movwf	0x4, 0             	MOVWF	r0x04
0030da   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0030dc   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0030de   6e05     movwf	0x5, 0             	MOVWF	r0x05
0030e0   6a06     clrf	0x6, 0              	CLRF	r0x06
0030e2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0030e4   6806     setf	0x6, 0              	SETF	r0x06
0030e6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0030e8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0030ea   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0030ec   fff6
0030ee   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0030f0   fff7
0030f2   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0030f4   fff8
0030f6   0009     tblrd	*+                 	TBLRD*+	
0030f8   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0030fa   f004
0030fc   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0030fe   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003100   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
003102   d061     bra	0x31c6               	BRA	_00196_DS_
                                           _00187_DS_:
                                           ;	.line	83; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
003104   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003106   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
003108   e017     bz	0x3138                	BZ	_00189_DS_
00310a   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00310c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00310e   6e04     movwf	0x4, 0             	MOVWF	r0x04
003110   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003112   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003114   6e05     movwf	0x5, 0             	MOVWF	r0x05
003116   6a06     clrf	0x6, 0              	CLRF	r0x06
003118   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00311a   6806     setf	0x6, 0              	SETF	r0x06
00311c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00311e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003120   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003122   fff6
003124   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003126   fff7
003128   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00312a   fff8
00312c   0009     tblrd	*+                 	TBLRD*+	
00312e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003130   f004
003132   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003134   1295     iorwf	0x95, 0x1, 0       	IORWF	_TRISD, F
003136   d047     bra	0x31c6               	BRA	_00196_DS_
                                           _00189_DS_:
                                           ;	.line	84; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISD=TRISD & (255-mask[input]);
003138   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00313a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00313c   6e04     movwf	0x4, 0             	MOVWF	r0x04
00313e   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003140   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003142   6e05     movwf	0x5, 0             	MOVWF	r0x05
003144   6a06     clrf	0x6, 0              	CLRF	r0x06
003146   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003148   6806     setf	0x6, 0              	SETF	r0x06
00314a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00314c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00314e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003150   fff6
003152   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003154   fff7
003156   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003158   fff8
00315a   0009     tblrd	*+                 	TBLRD*+	
00315c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00315e   f004
003160   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003162   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003164   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
003166   d02f     bra	0x31c6               	BRA	_00196_DS_
                                           _00191_DS_:
                                           ;	.line	86; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
003168   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00316a   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
00316c   e017     bz	0x319c                	BZ	_00193_DS_
00316e   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003170   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003172   6e02     movwf	0x2, 0             	MOVWF	r0x02
003174   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003176   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003178   6e03     movwf	0x3, 0             	MOVWF	r0x03
00317a   6a04     clrf	0x4, 0              	CLRF	r0x04
00317c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00317e   6804     setf	0x4, 0              	SETF	r0x04
003180   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003182   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003184   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
003186   fff6
003188   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
00318a   fff7
00318c   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
00318e   fff8
003190   0009     tblrd	*+                 	TBLRD*+	
003192   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
003194   f002
003196   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003198   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
00319a   d015     bra	0x31c6               	BRA	_00196_DS_
                                           _00193_DS_:
                                           ;	.line	87; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISE=TRISE & (255-mask[input]);
00319c   6a02     clrf	0x2, 0              	CLRF	r0x02
00319e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0031a0   6802     setf	0x2, 0              	SETF	r0x02
0031a2   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0031a4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0031a6   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0031a8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0031aa   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0031ac   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0031ae   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
0031b0   fff6
0031b2   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
0031b4   fff7
0031b6   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
0031b8   fff8
0031ba   0009     tblrd	*+                 	TBLRD*+	
0031bc   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
0031be   f000
0031c0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0031c2   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0031c4   1696     andwf	0x96, 0x1, 0       	ANDWF	_TRISE, F
                                           _00196_DS_:
                                           ;	.line	90; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
0031c6   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0031c8   f006
0031ca   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0031cc   f005
0031ce   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0031d0   f004
0031d2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0031d4   f003
0031d6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0031d8   f002
0031da   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0031dc   f001
0031de   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0031e0   f000
0031e2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0031e4   ffd9
0031e6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	int digitalread(int input)
0034ae   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0034b0   ffe5
0034b2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0034b4   ffd9
0034b6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0034b8   ffe5
0034ba   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0034bc   ffe5
0034be   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0034c0   ffe5
0034c2   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0034c4   ffe5
0034c6   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0034c8   ffe5
0034ca   0e02     movlw	0x2                	MOVLW	0x02
0034cc   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0034ce   f000
0034d0   0e03     movlw	0x3                	MOVLW	0x03
0034d2   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0034d4   f001
                                           ;	.line	46; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
0034d6   0efe     movlw	0xfe               	MOVLW	LOW(_port)
0034d8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0034da   6e02     movwf	0x2, 0             	MOVWF	r0x02
0034dc   0e2b     movlw	0x2b               	MOVLW	HIGH(_port)
0034de   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0034e0   6e03     movwf	0x3, 0             	MOVWF	r0x03
0034e2   6a04     clrf	0x4, 0              	CLRF	r0x04
0034e4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0034e6   6804     setf	0x4, 0              	SETF	r0x04
0034e8   0e00     movlw	0                  	MOVLW	UPPER(_port)
0034ea   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0034ec   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
0034ee   fff6
0034f0   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
0034f2   fff7
0034f4   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
0034f6   fff8
0034f8   0009     tblrd	*+                 	TBLRD*+	
0034fa   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
0034fc   f002
0034fe   0e05     movlw	0x5                	MOVLW	0x05
003500   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
003502   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003504   d0b9     bra	0x3678               	BRA	_00160_DS_
003506   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003508   ffe5
00350a   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00350c   ffe5
00350e   6a06     clrf	0x6, 0              	CLRF	r0x06
003510   3402     rlcf	0x2, 0, 0           	RLCF	r0x02, W
003512   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
003514   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
003516   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
003518   0bfc     andlw	0xfc               	ANDLW	0xfc
00351a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00351c   0e00     movlw	0                  	MOVLW	UPPER(_00170_DS_)
00351e   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
003520   0e35     movlw	0x35               	MOVLW	HIGH(_00170_DS_)
003522   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
003524   0e3c     movlw	0x3c               	MOVLW	LOW(_00170_DS_)
003526   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
003528   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
00352a   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
00352c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00352e   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
003530   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003532   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003534   f006
003536   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003538   f005
00353a   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00170_DS_:
00353c   efa8     goto	0x3550              	GOTO	_00140_DS_
00353e   f01a
003540   efc6     goto	0x358c              	GOTO	_00144_DS_
003542   f01a
003544   efe4     goto	0x35c8              	GOTO	_00148_DS_
003546   f01a
003548   ef02     goto	0x3604              	GOTO	_00152_DS_
00354a   f01b
00354c   ef20     goto	0x3640              	GOTO	_00156_DS_
00354e   f01b
                                           _00140_DS_:
                                           ;	.line	48; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
003550   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003552   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003554   6e02     movwf	0x2, 0             	MOVWF	r0x02
003556   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003558   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00355a   6e03     movwf	0x3, 0             	MOVWF	r0x03
00355c   6a04     clrf	0x4, 0              	CLRF	r0x04
00355e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003560   6804     setf	0x4, 0              	SETF	r0x04
003562   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003564   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003566   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
003568   fff6
00356a   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
00356c   fff7
00356e   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003570   fff8
003572   0009     tblrd	*+                 	TBLRD*+	
003574   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
003576   f002
003578   5081     movf	0x81, 0, 0          	MOVF	_PORTB, W
00357a   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
00357c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00357e   e003     bz	0x3586                	BZ	_00142_DS_
003580   6af3     clrf	0xf3, 0             	CLRF	PRODL
003582   0e01     movlw	0x1                	MOVLW	0x01
003584   d07b     bra	0x367c               	BRA	_00161_DS_
                                           _00142_DS_:
                                           ;	.line	49; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003586   6af3     clrf	0xf3, 0             	CLRF	PRODL
003588   6ae8     clrf	0xe8, 0             	CLRF	WREG
00358a   d078     bra	0x367c               	BRA	_00161_DS_
                                           _00144_DS_:
                                           ;	.line	51; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
00358c   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00358e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003590   6e02     movwf	0x2, 0             	MOVWF	r0x02
003592   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003594   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003596   6e03     movwf	0x3, 0             	MOVWF	r0x03
003598   6a04     clrf	0x4, 0              	CLRF	r0x04
00359a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00359c   6804     setf	0x4, 0              	SETF	r0x04
00359e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0035a0   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0035a2   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
0035a4   fff6
0035a6   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
0035a8   fff7
0035aa   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
0035ac   fff8
0035ae   0009     tblrd	*+                 	TBLRD*+	
0035b0   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
0035b2   f002
0035b4   5082     movf	0x82, 0, 0          	MOVF	_PORTC, W
0035b6   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
0035b8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0035ba   e003     bz	0x35c2                	BZ	_00146_DS_
0035bc   6af3     clrf	0xf3, 0             	CLRF	PRODL
0035be   0e01     movlw	0x1                	MOVLW	0x01
0035c0   d05d     bra	0x367c               	BRA	_00161_DS_
                                           _00146_DS_:
                                           ;	.line	52; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
0035c2   6af3     clrf	0xf3, 0             	CLRF	PRODL
0035c4   6ae8     clrf	0xe8, 0             	CLRF	WREG
0035c6   d05a     bra	0x367c               	BRA	_00161_DS_
                                           _00148_DS_:
                                           ;	.line	54; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
0035c8   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0035ca   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0035cc   6e02     movwf	0x2, 0             	MOVWF	r0x02
0035ce   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0035d0   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0035d2   6e03     movwf	0x3, 0             	MOVWF	r0x03
0035d4   6a04     clrf	0x4, 0              	CLRF	r0x04
0035d6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0035d8   6804     setf	0x4, 0              	SETF	r0x04
0035da   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0035dc   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0035de   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
0035e0   fff6
0035e2   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
0035e4   fff7
0035e6   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
0035e8   fff8
0035ea   0009     tblrd	*+                 	TBLRD*+	
0035ec   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
0035ee   f002
0035f0   5080     movf	0x80, 0, 0          	MOVF	_PORTA, W
0035f2   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
0035f4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0035f6   e003     bz	0x35fe                	BZ	_00150_DS_
0035f8   6af3     clrf	0xf3, 0             	CLRF	PRODL
0035fa   0e01     movlw	0x1                	MOVLW	0x01
0035fc   d03f     bra	0x367c               	BRA	_00161_DS_
                                           _00150_DS_:
                                           ;	.line	55; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
0035fe   6af3     clrf	0xf3, 0             	CLRF	PRODL
003600   6ae8     clrf	0xe8, 0             	CLRF	WREG
003602   d03c     bra	0x367c               	BRA	_00161_DS_
                                           _00152_DS_:
                                           ;	.line	58; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
003604   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003606   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003608   6e02     movwf	0x2, 0             	MOVWF	r0x02
00360a   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00360c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00360e   6e03     movwf	0x3, 0             	MOVWF	r0x03
003610   6a04     clrf	0x4, 0              	CLRF	r0x04
003612   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003614   6804     setf	0x4, 0              	SETF	r0x04
003616   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003618   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
00361a   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
00361c   fff6
00361e   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
003620   fff7
003622   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003624   fff8
003626   0009     tblrd	*+                 	TBLRD*+	
003628   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
00362a   f002
00362c   5083     movf	0x83, 0, 0          	MOVF	_PORTD, W
00362e   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
003630   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003632   e003     bz	0x363a                	BZ	_00154_DS_
003634   6af3     clrf	0xf3, 0             	CLRF	PRODL
003636   0e01     movlw	0x1                	MOVLW	0x01
003638   d021     bra	0x367c               	BRA	_00161_DS_
                                           _00154_DS_:
                                           ;	.line	59; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
00363a   6af3     clrf	0xf3, 0             	CLRF	PRODL
00363c   6ae8     clrf	0xe8, 0             	CLRF	WREG
00363e   d01e     bra	0x367c               	BRA	_00161_DS_
                                           _00156_DS_:
                                           ;	.line	61; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
003640   6a02     clrf	0x2, 0              	CLRF	r0x02
003642   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003644   6802     setf	0x2, 0              	SETF	r0x02
003646   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003648   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00364a   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00364c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00364e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003650   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003652   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003654   fff6
003656   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003658   fff7
00365a   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
00365c   fff8
00365e   0009     tblrd	*+                 	TBLRD*+	
003660   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003662   f000
003664   5084     movf	0x84, 0, 0          	MOVF	_PORTE, W
003666   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
003668   5000     movf	0, 0, 0             	MOVF	r0x00, W
00366a   e003     bz	0x3672                	BZ	_00158_DS_
00366c   6af3     clrf	0xf3, 0             	CLRF	PRODL
00366e   0e01     movlw	0x1                	MOVLW	0x01
003670   d005     bra	0x367c               	BRA	_00161_DS_
                                           _00158_DS_:
                                           ;	.line	62; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003672   6af3     clrf	0xf3, 0             	CLRF	PRODL
003674   6ae8     clrf	0xe8, 0             	CLRF	WREG
003676   d002     bra	0x367c               	BRA	_00161_DS_
                                           _00160_DS_:
                                           ;	.line	66; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	return (0);
003678   6af3     clrf	0xf3, 0             	CLRF	PRODL
00367a   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00161_DS_:
00367c   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00367e   f004
003680   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003682   f003
003684   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003686   f002
003688   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00368a   f001
00368c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00368e   f000
003690   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003692   ffd9
003694   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	void digitalwrite(int output,int state)
0031e8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0031ea   ffe5
0031ec   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0031ee   ffd9
0031f0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0031f2   ffe5
0031f4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0031f6   ffe5
0031f8   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0031fa   ffe5
0031fc   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0031fe   ffe5
003200   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003202   ffe5
003204   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003206   ffe5
003208   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00320a   ffe5
00320c   0e02     movlw	0x2                	MOVLW	0x02
00320e   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003210   f000
003212   0e03     movlw	0x3                	MOVLW	0x03
003214   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003216   f001
003218   0e04     movlw	0x4                	MOVLW	0x04
00321a   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00321c   f002
00321e   0e05     movlw	0x5                	MOVLW	0x05
003220   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003222   f003
                                           ;	.line	22; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[output])
003224   0efe     movlw	0xfe               	MOVLW	LOW(_port)
003226   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003228   6e04     movwf	0x4, 0             	MOVWF	r0x04
00322a   0e2b     movlw	0x2b               	MOVLW	HIGH(_port)
00322c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00322e   6e05     movwf	0x5, 0             	MOVWF	r0x05
003230   6a06     clrf	0x6, 0              	CLRF	r0x06
003232   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003234   6806     setf	0x6, 0              	SETF	r0x06
003236   0e00     movlw	0                  	MOVLW	UPPER(_port)
003238   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00323a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00323c   fff6
00323e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003240   fff7
003242   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003244   fff8
003246   0009     tblrd	*+                 	TBLRD*+	
003248   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00324a   f004
00324c   0e05     movlw	0x5                	MOVLW	0x05
00324e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
003250   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003252   d11c     bra	0x348c               	BRA	_00126_DS_
003254   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003256   ffe5
003258   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
00325a   ffe5
00325c   6a08     clrf	0x8, 0              	CLRF	r0x08
00325e   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
003260   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
003262   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
003264   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
003266   0bfc     andlw	0xfc               	ANDLW	0xfc
003268   6e07     movwf	0x7, 0             	MOVWF	r0x07
00326a   0e00     movlw	0                  	MOVLW	UPPER(_00135_DS_)
00326c   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
00326e   0e32     movlw	0x32               	MOVLW	HIGH(_00135_DS_)
003270   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
003272   0e8a     movlw	0x8a               	MOVLW	LOW(_00135_DS_)
003274   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
003276   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
003278   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
00327a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00327c   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
00327e   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
003280   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
003282   f008
003284   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003286   f007
003288   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00135_DS_:
00328a   ef4f     goto	0x329e              	GOTO	_00105_DS_
00328c   f019
00328e   ef81     goto	0x3302              	GOTO	_00109_DS_
003290   f019
003292   efb3     goto	0x3366              	GOTO	_00113_DS_
003294   f019
003296   efe5     goto	0x33ca              	GOTO	_00117_DS_
003298   f019
00329a   ef17     goto	0x342e              	GOTO	_00121_DS_
00329c   f01a
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
00329e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0032a0   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0032a2   e017     bz	0x32d2                	BZ	_00107_DS_
0032a4   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0032a6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0032a8   6e04     movwf	0x4, 0             	MOVWF	r0x04
0032aa   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0032ac   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0032ae   6e05     movwf	0x5, 0             	MOVWF	r0x05
0032b0   6a06     clrf	0x6, 0              	CLRF	r0x06
0032b2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0032b4   6806     setf	0x6, 0              	SETF	r0x06
0032b6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0032b8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0032ba   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0032bc   fff6
0032be   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0032c0   fff7
0032c2   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0032c4   fff8
0032c6   0009     tblrd	*+                 	TBLRD*+	
0032c8   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0032ca   f004
0032cc   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0032ce   1281     iorwf	0x81, 0x1, 0       	IORWF	_PORTB, F
0032d0   d0dd     bra	0x348c               	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTB=PORTB & (255-mask[output]);
0032d2   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0032d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0032d6   6e04     movwf	0x4, 0             	MOVWF	r0x04
0032d8   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0032da   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0032dc   6e05     movwf	0x5, 0             	MOVWF	r0x05
0032de   6a06     clrf	0x6, 0              	CLRF	r0x06
0032e0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0032e2   6806     setf	0x6, 0              	SETF	r0x06
0032e4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0032e6   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0032e8   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0032ea   fff6
0032ec   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0032ee   fff7
0032f0   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0032f2   fff8
0032f4   0009     tblrd	*+                 	TBLRD*+	
0032f6   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0032f8   f004
0032fa   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0032fc   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0032fe   1681     andwf	0x81, 0x1, 0       	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
003300   d0c5     bra	0x348c               	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
003302   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003304   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
003306   e017     bz	0x3336                	BZ	_00111_DS_
003308   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00330a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00330c   6e04     movwf	0x4, 0             	MOVWF	r0x04
00330e   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003310   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003312   6e05     movwf	0x5, 0             	MOVWF	r0x05
003314   6a06     clrf	0x6, 0              	CLRF	r0x06
003316   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003318   6806     setf	0x6, 0              	SETF	r0x06
00331a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00331c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00331e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003320   fff6
003322   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003324   fff7
003326   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003328   fff8
00332a   0009     tblrd	*+                 	TBLRD*+	
00332c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00332e   f004
003330   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003332   1282     iorwf	0x82, 0x1, 0       	IORWF	_PORTC, F
003334   d0ab     bra	0x348c               	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTC=PORTC & (255-mask[output]);
003336   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003338   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00333a   6e04     movwf	0x4, 0             	MOVWF	r0x04
00333c   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00333e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003340   6e05     movwf	0x5, 0             	MOVWF	r0x05
003342   6a06     clrf	0x6, 0              	CLRF	r0x06
003344   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003346   6806     setf	0x6, 0              	SETF	r0x06
003348   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00334a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00334c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00334e   fff6
003350   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003352   fff7
003354   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003356   fff8
003358   0009     tblrd	*+                 	TBLRD*+	
00335a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00335c   f004
00335e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003360   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003362   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
003364   d093     bra	0x348c               	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
003366   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003368   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
00336a   e017     bz	0x339a                	BZ	_00115_DS_
00336c   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00336e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003370   6e04     movwf	0x4, 0             	MOVWF	r0x04
003372   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003374   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003376   6e05     movwf	0x5, 0             	MOVWF	r0x05
003378   6a06     clrf	0x6, 0              	CLRF	r0x06
00337a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00337c   6806     setf	0x6, 0              	SETF	r0x06
00337e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003380   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003382   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003384   fff6
003386   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003388   fff7
00338a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00338c   fff8
00338e   0009     tblrd	*+                 	TBLRD*+	
003390   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003392   f004
003394   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003396   1280     iorwf	0x80, 0x1, 0       	IORWF	_PORTA, F
003398   d079     bra	0x348c               	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTA=PORTA & (255-mask[output]);
00339a   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00339c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00339e   6e04     movwf	0x4, 0             	MOVWF	r0x04
0033a0   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0033a2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0033a4   6e05     movwf	0x5, 0             	MOVWF	r0x05
0033a6   6a06     clrf	0x6, 0              	CLRF	r0x06
0033a8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0033aa   6806     setf	0x6, 0              	SETF	r0x06
0033ac   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0033ae   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0033b0   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0033b2   fff6
0033b4   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0033b6   fff7
0033b8   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0033ba   fff8
0033bc   0009     tblrd	*+                 	TBLRD*+	
0033be   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0033c0   f004
0033c2   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0033c4   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0033c6   1680     andwf	0x80, 0x1, 0       	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
0033c8   d061     bra	0x348c               	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
0033ca   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0033cc   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0033ce   e017     bz	0x33fe                	BZ	_00119_DS_
0033d0   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0033d2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0033d4   6e04     movwf	0x4, 0             	MOVWF	r0x04
0033d6   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0033d8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0033da   6e05     movwf	0x5, 0             	MOVWF	r0x05
0033dc   6a06     clrf	0x6, 0              	CLRF	r0x06
0033de   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0033e0   6806     setf	0x6, 0              	SETF	r0x06
0033e2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0033e4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0033e6   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0033e8   fff6
0033ea   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0033ec   fff7
0033ee   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0033f0   fff8
0033f2   0009     tblrd	*+                 	TBLRD*+	
0033f4   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0033f6   f004
0033f8   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0033fa   1283     iorwf	0x83, 0x1, 0       	IORWF	_PORTD, F
0033fc   d047     bra	0x348c               	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTD=PORTD & (255-mask[output]);
0033fe   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003400   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003402   6e04     movwf	0x4, 0             	MOVWF	r0x04
003404   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003406   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003408   6e05     movwf	0x5, 0             	MOVWF	r0x05
00340a   6a06     clrf	0x6, 0              	CLRF	r0x06
00340c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00340e   6806     setf	0x6, 0              	SETF	r0x06
003410   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003412   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003414   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003416   fff6
003418   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00341a   fff7
00341c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00341e   fff8
003420   0009     tblrd	*+                 	TBLRD*+	
003422   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003424   f004
003426   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003428   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00342a   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
00342c   d02f     bra	0x348c               	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
00342e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003430   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
003432   e017     bz	0x3462                	BZ	_00123_DS_
003434   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003436   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003438   6e02     movwf	0x2, 0             	MOVWF	r0x02
00343a   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00343c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00343e   6e03     movwf	0x3, 0             	MOVWF	r0x03
003440   6a04     clrf	0x4, 0              	CLRF	r0x04
003442   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003444   6804     setf	0x4, 0              	SETF	r0x04
003446   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003448   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
00344a   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
00344c   fff6
00344e   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
003450   fff7
003452   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003454   fff8
003456   0009     tblrd	*+                 	TBLRD*+	
003458   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
00345a   f002
00345c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00345e   1284     iorwf	0x84, 0x1, 0       	IORWF	_PORTE, F
003460   d015     bra	0x348c               	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTE=PORTE & (255-mask[output]);
003462   6a02     clrf	0x2, 0              	CLRF	r0x02
003464   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003466   6802     setf	0x2, 0              	SETF	r0x02
003468   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00346a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00346c   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00346e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003470   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003472   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003474   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003476   fff6
003478   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
00347a   fff7
00347c   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
00347e   fff8
003480   0009     tblrd	*+                 	TBLRD*+	
003482   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003484   f000
003486   5000     movf	0, 0, 0             	MOVF	r0x00, W
003488   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00348a   1684     andwf	0x84, 0x1, 0       	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/icaro/repositorio/icaro-pygtk/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
00348c   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00348e   f006
003490   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003492   f005
003494   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003496   f004
003498   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00349a   f003
00349c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00349e   f002
0034a0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0034a2   f001
0034a4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0034a6   f000
0034a8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0034aa   ffd9
0034ac   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
002be0   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002be2   0804     sublw	0x4                
002be4   2010     addwfc	0x10, 0, 0        
002be6   8040     bsf	0x40, 0, 0           
002be8   8040     bsf	0x40, 0, 0           
002bea   0201     mulwf	0x1, 0             
002bec   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002bee   0402     decf	0x2, 0, 0           
002bf0   2008     addwfc	0x8, 0, 0         
002bf2   0201     mulwf	0x1, 0             
002bf4   0104     movlb	0x4                
002bf6   0402     decf	0x2, 0, 0           
002bf8   1008     iorwf	0x8, 0, 0          	DB	0x08, 0x10, 0x20, 0x40, 0x80
002bfa   4020     rrncf	0x20, 0, 0         
002bfc   0080     dw	0x80  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _port:
002bfe   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
002c00   0000     nop                      
002c02   0000     nop                      
002c04   0000     nop                      
002c06   0101     movlb	0x1                
002c08   0101     movlb	0x1                
002c0a   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002c0c   0202     mulwf	0x2, 0             
002c0e   0202     mulwf	0x2, 0             
002c10   0404     decf	0x4, 0, 0           
002c12   0304     mulwf	0x4, 0x1           
002c14   0303     mulwf	0x3, 0x1           
002c16   0303     mulwf	0x3, 0x1           	DB	0x03, 0x03, 0x03, 0x03, 0x03
002c18   0303     mulwf	0x3, 0x1           
002c1a   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002c1c   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002c1e   0804     sublw	0x4                
002c20   2010     addwfc	0x10, 0, 0        
002c22   8040     bsf	0x40, 0, 0           
002c24   8040     bsf	0x40, 0, 0           
002c26   0201     mulwf	0x1, 0             
002c28   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002c2a   0402     decf	0x2, 0, 0           
002c2c   2008     addwfc	0x8, 0, 0         
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 5812 (0x16b4) bytes ( 4.43%)
                                           ;           	 2906 (0x0b5a) words
                                           ; udata size:	   95 (0x005f) bytes ( 5.30%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
