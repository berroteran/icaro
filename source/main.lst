gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 5-20-2012  23:10:14
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Sun May 20 22:21:22 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _tiempo2
                                           	global _tiempo
                                           	global _loopvar
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _i
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _analog_init
                                           	global _analogread
                                           	global _Delayms
                                           	global _Delayus
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _setup
                                           	global _sensor
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _mask
                                           	global _port
                                           	global _servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _tiempo	db	0x00, 0x00, 0x00, 0x00
                                           _tiempo2	db	0x00, 0x00, 0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _servovalues	res	18
                                           
                                           udata_main_2	udata
                                           _timingindex	res	1
                                           
                                           udata_main_3	udata
                                           _timings	res	72
                                           
                                           udata_main_4	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           udata_main_5	udata
                                           _i	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/github/icaro-bloques/source/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	132; /home/valentin/github/icaro-bloques/source/main.c	servos_interrupt();
002044   ec28     call	0x3650, 0           	CALL	_servos_interrupt
002046   f01b
002048   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00204a   fffb
00204c   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00204e   fffa
002050   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002052   ffea
002054   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002056   ffe9
002058   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00205a   fff4
00205c   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00205e   fff3
002060   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002062   ffe0
002064   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002066   ffd8
002068   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00206a   ffe8
00206c   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/github/icaro-bloques/source/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/github/icaro-bloques/source/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/source/main.c	PIE1=0;
0037a2   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/github/icaro-bloques/source/main.c	PIE2=0;
0037a4   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/github/icaro-bloques/source/main.c	ADCON1=0x0F;
0037a6   0e0f     movlw	0xf                	MOVLW	0x0f
0037a8   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/github/icaro-bloques/source/main.c	setup();
0037aa   ecd7     call	0x2fae, 0           	CALL	_setup
0037ac   f017
                                           ;	.line	61; /home/valentin/github/icaro-bloques/source/main.c	analog_init();
0037ae   ecf5     call	0x37ea, 0           	CALL	_analog_init
0037b0   f01b
                                           ;	.line	67; /home/valentin/github/icaro-bloques/source/main.c	servos_init();
0037b2   ecdf     call	0x35be, 0           	CALL	_servos_init
0037b4   f01a
                                           ;	.line	83; /home/valentin/github/icaro-bloques/source/main.c	INTCONbits.PEIE=1;
0037b6   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/github/icaro-bloques/source/main.c	INTCONbits.GIE=1;
0037b8   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _00524_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/source/main.c	loop();
0037ba   ec04     call	0x3608, 0           	CALL	_loop
0037bc   f01b
0037be   d7fd     bra	0x37ba               	BRA	_00524_DS_
0037c0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/source/user.c	ServoWrite(10,10);
003608   0e0a     movlw	0xa                	MOVLW	0x0a
00360a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00360c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00360e   ec82     call	0x3504, 0           	CALL	_ServoWrite
003610   f01a
003612   0e02     movlw	0x2                	MOVLW	0x02
003614   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/source/user.c	Delayms(1000);
003616   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003618   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00361a   0e03     movlw	0x3                	MOVLW	0x03
00361c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00361e   0ee8     movlw	0xe8               	MOVLW	0xe8
003620   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003622   eca4     call	0x3348, 0           	CALL	_Delayms
003624   f019
003626   0e04     movlw	0x4                	MOVLW	0x04
003628   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	79; /home/valentin/github/icaro-bloques/source/user.c	ServoWrite(10,250);
00362a   0efa     movlw	0xfa               	MOVLW	0xfa
00362c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00362e   0e0a     movlw	0xa                	MOVLW	0x0a
003630   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003632   ec82     call	0x3504, 0           	CALL	_ServoWrite
003634   f01a
003636   0e02     movlw	0x2                	MOVLW	0x02
003638   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	80; /home/valentin/github/icaro-bloques/source/user.c	Delayms(1000);
00363a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00363c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00363e   0e03     movlw	0x3                	MOVLW	0x03
003640   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003642   0ee8     movlw	0xe8               	MOVLW	0xe8
003644   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003646   eca4     call	0x3348, 0           	CALL	_Delayms
003648   f019
00364a   0e04     movlw	0x4                	MOVLW	0x04
00364c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
00364e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/source/user.c	unsigned int sensor(int valor)
003766   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003768   ffe5
00376a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00376c   ffd9
00376e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003770   ffe5
003772   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003774   ffe5
003776   0e02     movlw	0x2                	MOVLW	0x02
003778   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00377a   f000
00377c   0e03     movlw	0x3                	MOVLW	0x03
00377e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003780   f001
                                           ;	.line	65; /home/valentin/github/icaro-bloques/source/user.c	an=analogread(valor);
003782   5000     movf	0, 0, 0             	MOVF	r0x00, W
003784   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003786   ec3e     call	0x347c, 0           	CALL	_analogread
003788   f01a
00378a   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
00378c   f001
00378e   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	67; /home/valentin/github/icaro-bloques/source/user.c	return an;
003790   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003792   fff3
003794   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003796   f001
003798   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00379a   f000
00379c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00379e   ffd9
0037a0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	7; /home/valentin/github/icaro-bloques/source/user.c	void setup()
002fae   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002fb0   ffe5
002fb2   0102     movlb	0x2                	BANKSEL	_i
                                           ;	.line	11; /home/valentin/github/icaro-bloques/source/user.c	for(i=0;i<8;i++)
002fb4   6b6e     clrf	0x6e, 0x1           	CLRF	_i, B
                                           _00500_DS_:
002fb6   0e08     movlw	0x8                	MOVLW	0x08
002fb8   0102     movlb	0x2                	BANKSEL	_i
002fba   5d6e     subwf	0x6e, 0, 0x1       	SUBWF	_i, W, B
002fbc   e219     bc	0x2ff0                	BC	_00503_DS_
                                           ;	.line	15; /home/valentin/github/icaro-bloques/source/user.c	pinmode(i,OUTPUT);
002fbe   c26e     movff	0x26e, 0           	MOVFF	_i, r0x00
002fc0   f000
002fc2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fc4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fc6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fc8   5000     movf	0, 0, 0             	MOVF	r0x00, W
002fca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fcc   ec1d     call	0x283a, 0           	CALL	_pinmode
002fce   f014
002fd0   0e04     movlw	0x4                	MOVLW	0x04
002fd2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	17; /home/valentin/github/icaro-bloques/source/user.c	digitalwrite(i,LOW);
002fd4   c26e     movff	0x26e, 0           	MOVFF	_i, r0x00
002fd6   f000
002fd8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fda   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fdc   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fde   5000     movf	0, 0, 0             	MOVF	r0x00, W
002fe0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fe2   ec80     call	0x2b00, 0           	CALL	_digitalwrite
002fe4   f015
002fe6   0e04     movlw	0x4                	MOVLW	0x04
002fe8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002fea   0102     movlb	0x2                	BANKSEL	_i
                                           ;	.line	11; /home/valentin/github/icaro-bloques/source/user.c	for(i=0;i<8;i++)
002fec   2b6e     incf	0x6e, 0x1, 0x1      	INCF	_i, F, B
002fee   d7e3     bra	0x2fb6               	BRA	_00500_DS_
                                           _00503_DS_:
                                           ;	.line	21; /home/valentin/github/icaro-bloques/source/user.c	pinmode(15,INPUT);
002ff0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002ff2   0e01     movlw	0x1                	MOVLW	0x01
002ff4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ff6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002ff8   0e0f     movlw	0xf                	MOVLW	0x0f
002ffa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002ffc   ec1d     call	0x283a, 0           	CALL	_pinmode
002ffe   f014
003000   0e04     movlw	0x4                	MOVLW	0x04
003002   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	25; /home/valentin/github/icaro-bloques/source/user.c	pinmode(21,INPUT);
003004   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003006   0e01     movlw	0x1                	MOVLW	0x01
003008   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00300a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00300c   0e15     movlw	0x15               	MOVLW	0x15
00300e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003010   ec1d     call	0x283a, 0           	CALL	_pinmode
003012   f014
003014   0e04     movlw	0x4                	MOVLW	0x04
003016   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/github/icaro-bloques/source/user.c	pinmode(22,INPUT);
003018   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00301a   0e01     movlw	0x1                	MOVLW	0x01
00301c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00301e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003020   0e16     movlw	0x16               	MOVLW	0x16
003022   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003024   ec1d     call	0x283a, 0           	CALL	_pinmode
003026   f014
003028   0e04     movlw	0x4                	MOVLW	0x04
00302a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/source/user.c	pinmode(23,INPUT);
00302c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00302e   0e01     movlw	0x1                	MOVLW	0x01
003030   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003032   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003034   0e17     movlw	0x17               	MOVLW	0x17
003036   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003038   ec1d     call	0x283a, 0           	CALL	_pinmode
00303a   f014
00303c   0e04     movlw	0x4                	MOVLW	0x04
00303e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	31; /home/valentin/github/icaro-bloques/source/user.c	pinmode(24,INPUT);
003040   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003042   0e01     movlw	0x1                	MOVLW	0x01
003044   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003046   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003048   0e18     movlw	0x18               	MOVLW	0x18
00304a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00304c   ec1d     call	0x283a, 0           	CALL	_pinmode
00304e   f014
003050   0e04     movlw	0x4                	MOVLW	0x04
003052   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	35; /home/valentin/github/icaro-bloques/source/user.c	pinmode(25,OUTPUT);
003054   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003056   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003058   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00305a   0e19     movlw	0x19               	MOVLW	0x19
00305c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00305e   ec1d     call	0x283a, 0           	CALL	_pinmode
003060   f014
003062   0e04     movlw	0x4                	MOVLW	0x04
003064   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/source/user.c	pinmode(26,OUTPUT);
003066   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003068   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00306a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00306c   0e1a     movlw	0x1a               	MOVLW	0x1a
00306e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003070   ec1d     call	0x283a, 0           	CALL	_pinmode
003072   f014
003074   0e04     movlw	0x4                	MOVLW	0x04
003076   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	39; /home/valentin/github/icaro-bloques/source/user.c	pinmode(27,OUTPUT);
003078   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00307a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00307c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00307e   0e1b     movlw	0x1b               	MOVLW	0x1b
003080   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003082   ec1d     call	0x283a, 0           	CALL	_pinmode
003084   f014
003086   0e04     movlw	0x4                	MOVLW	0x04
003088   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	41; /home/valentin/github/icaro-bloques/source/user.c	pinmode(28,OUTPUT);
00308a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00308c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00308e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003090   0e1c     movlw	0x1c               	MOVLW	0x1c
003092   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003094   ec1d     call	0x283a, 0           	CALL	_pinmode
003096   f014
003098   0e04     movlw	0x4                	MOVLW	0x04
00309a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	45; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(10);
00309c   0e0a     movlw	0xa                	MOVLW	0x0a
00309e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0030a0   ec6a     call	0x30d4, 0           	CALL	_ServoAttach
0030a2   f018
0030a4   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	47; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(11);
0030a6   0e0b     movlw	0xb                	MOVLW	0x0b
0030a8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0030aa   ec6a     call	0x30d4, 0           	CALL	_ServoAttach
0030ac   f018
0030ae   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	49; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(12);
0030b0   0e0c     movlw	0xc                	MOVLW	0x0c
0030b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0030b4   ec6a     call	0x30d4, 0           	CALL	_ServoAttach
0030b6   f018
0030b8   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	51; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(8);
0030ba   0e08     movlw	0x8                	MOVLW	0x08
0030bc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0030be   ec6a     call	0x30d4, 0           	CALL	_ServoAttach
0030c0   f018
0030c2   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	53; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(9);
0030c4   0e09     movlw	0x9                	MOVLW	0x09
0030c6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0030c8   ec6a     call	0x30d4, 0           	CALL	_ServoAttach
0030ca   f018
0030cc   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
0030ce   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0030d0   f000
0030d2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/github/icaro-bloques/source/main.c	void epapout_init() { return; }
003816   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/github/icaro-bloques/source/main.c	void epapin_init() { return; }
003818   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/source/main.c	void epap_out() { return; }
00381a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/source/main.c	void epap_in() { return; }
00381c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayus(int microsecondes)
00356c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00356e   ffe5
003570   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003572   ffd9
003574   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003576   ffe5
003578   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00357a   ffe5
00357c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00357e   ffe5
003580   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003582   ffe5
003584   0e02     movlw	0x2                	MOVLW	0x02
003586   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003588   f000
00358a   0e03     movlw	0x3                	MOVLW	0x03
00358c   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
00358e   f001
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<microsecondes;i++);
003590   6a02     clrf	0x2, 0              	CLRF	r0x02
003592   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00466_DS_:
003594   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003596   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003598   e102     bnz	0x359e               	BNZ	_00475_DS_
00359a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00359c   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00475_DS_:
00359e   e204     bc	0x35a8                	BC	_00470_DS_
0035a0   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
0035a2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0035a4   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0035a6   d7f6     bra	0x3594               	BRA	_00466_DS_
                                           _00470_DS_:
0035a8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0035aa   f003
0035ac   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0035ae   f002
0035b0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0035b2   f001
0035b4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0035b6   f000
0035b8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0035ba   ffd9
0035bc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayms(unsigned long milliseconde)
003348   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00334a   ffe5
00334c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00334e   ffd9
003350   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003352   ffe5
003354   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003356   ffe5
003358   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00335a   ffe5
00335c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00335e   ffe5
003360   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003362   ffe5
003364   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003366   ffe5
003368   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00336a   ffe5
00336c   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00336e   ffe5
003370   0e02     movlw	0x2                	MOVLW	0x02
003372   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003374   f000
003376   0e03     movlw	0x3                	MOVLW	0x03
003378   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
00337a   f001
00337c   0e04     movlw	0x4                	MOVLW	0x04
00337e   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003380   f002
003382   0e05     movlw	0x5                	MOVLW	0x05
003384   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003386   f003
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
003388   6a04     clrf	0x4, 0              	CLRF	r0x04
00338a   6a05     clrf	0x5, 0              	CLRF	r0x05
00338c   6a06     clrf	0x6, 0              	CLRF	r0x06
00338e   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           _00452_DS_:
003390   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003392   5c07     subwf	0x7, 0, 0          	SUBWF	r0x07, W
003394   e108     bnz	0x33a6               	BNZ	_00461_DS_
003396   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003398   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
00339a   e105     bnz	0x33a6               	BNZ	_00461_DS_
00339c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00339e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0033a0   e102     bnz	0x33a6               	BNZ	_00461_DS_
0033a2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0033a4   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _00461_DS_:
0033a6   e20b     bc	0x33be                	BC	_00456_DS_
0033a8   0e01     movlw	0x1                	MOVLW	0x01
0033aa   ec37     call	0x6e, 0             	CALL	_delay10ktcy
0033ac   f000
0033ae   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0033b0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0033b2   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
0033b4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0033b6   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
0033b8   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0033ba   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
0033bc   d7e9     bra	0x3390               	BRA	_00452_DS_
                                           _00456_DS_:
0033be   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0033c0   f007
0033c2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0033c4   f006
0033c6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0033c8   f005
0033ca   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0033cc   f004
0033ce   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0033d0   f003
0033d2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0033d4   f002
0033d6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0033d8   f001
0033da   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0033dc   f000
0033de   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0033e0   ffd9
0033e2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	unsigned int analogread(unsigned char channel)
00347c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00347e   ffe5
003480   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003482   ffd9
003484   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003486   ffe5
003488   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00348a   ffe5
00348c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00348e   ffe5
003490   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003492   ffe5
003494   0e02     movlw	0x2                	MOVLW	0x02
003496   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003498   f000
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x0A;
00349a   0e0a     movlw	0xa                	MOVLW	0x0a
00349c   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0=(channel-13)*4;
00349e   0ef3     movlw	0xf3               	MOVLW	0xf3
0034a0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
0034a2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0034a4   0d04     mullw	0x4                	MULLW	0x04
0034a6   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
0034a8   ffc2
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
0034aa   0ebd     movlw	0xbd               	MOVLW	0xbd
0034ac   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=1;
0034ae   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
0034b0   0e09     movlw	0x9                	MOVLW	0x09
0034b2   6e00     movwf	0, 0               	MOVWF	r0x00
0034b4   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00446_DS_:
0034b6   0000     nop                      	NOP 
0034b8   0eff     movlw	0xff               	MOVLW	0xff
0034ba   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0034bc   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0034be   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
0034c0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0034c2   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
0034c4   e1f8     bnz	0x34b6               	BNZ	_00446_DS_
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.GO=1;
0034c6   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00441_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	while (ADCON0bits.GO);
0034c8   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
0034ca   d7fe     bra	0x34c8               	BRA	_00441_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result=ADRESH<<8;
0034cc   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
0034ce   f000
0034d0   6a01     clrf	0x1, 0              	CLRF	r0x01
0034d2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0034d4   6e03     movwf	0x3, 0             	MOVWF	r0x03
0034d6   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result+=ADRESL;
0034d8   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
0034da   f000
0034dc   6a01     clrf	0x1, 0              	CLRF	r0x01
0034de   5000     movf	0, 0, 0             	MOVF	r0x00, W
0034e0   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
0034e2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0034e4   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=0;
0034e6   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	return(result);
0034e8   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
0034ea   fff3
0034ec   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0034ee   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0034f0   f003
0034f2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0034f4   f002
0034f6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0034f8   f001
0034fa   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0034fc   f000
0034fe   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003500   ffd9
003502   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISA=TRISA | 0x2F;
0037ea   0e2f     movlw	0x2f               	MOVLW	0x2f
0037ec   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISE=TRISE | 0x07;
0037ee   0e07     movlw	0x7                	MOVLW	0x07
0037f0   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x07;
0037f2   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
0037f4   0ebd     movlw	0xbd               	MOVLW	0xbd
0037f6   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
0037f8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (PIR1bits.TMR1IF) {
003650   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
003652   d020     bra	0x3694               	BRA	_00431_DS_
                                           ;	.line	289; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIR1bits.TMR1IF=0;
003654   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x00;
003656   6acd     clrf	0xcd, 0             	CLRF	_T1CON
003658   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	291; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (phase) {
00365a   515b     movf	0x5b, 0, 0x1        	MOVF	_phase, W, B
00365c   e00b     bz	0x3674                	BZ	_00427_DS_
                                           ;	.line	293; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseUp();
00365e   ecfd     call	0x37fa, 0           	CALL	_ServosPulseUp
003660   f01b
                                           ;	.line	295; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0xd3;
003662   0ed3     movlw	0xd3               	MOVLW	0xd3
003664   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	296; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x8f;
003666   0e8f     movlw	0x8f               	MOVLW	0x8f
003668   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ;	.line	298; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=1;
00366a   0e01     movlw	0x1                	MOVLW	0x01
00366c   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
00366e   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	299; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 0;
003670   6b5b     clrf	0x5b, 0x1           	CLRF	_phase, B
003672   d010     bra	0x3694               	BRA	_00431_DS_
                                           _00427_DS_:
                                           ;	.line	304; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseDown();
003674   ec44     call	0x3288, 0           	CALL	_ServosPulseDown
003676   f019
                                           ;	.line	308; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0x2d;
003678   0e2d     movlw	0x2d               	MOVLW	0x2d
00367a   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	309; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x0f;
00367c   0e0f     movlw	0xf                	MOVLW	0x0f
00367e   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00425_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
003680   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	311; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (needreordering)	
003682   515c     movf	0x5c, 0, 0x1        	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
003684   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
                                           ;	.line	313; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
003686   ec37     call	0x206e, 0           	CALL	_SortServoTimings
003688   f010
00368a   0e21     movlw	0x21               	MOVLW	0x21
00368c   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
00368e   0e01     movlw	0x1                	MOVLW	0x01
003690   0102     movlb	0x2                	BANKSEL	_phase
003692   6f5b     movwf	0x5b, 0x1          	MOVWF	_phase, B
                                           _00431_DS_:
                                           ;	.line	317; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003694   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMaximumPulse(uchar servo)
003696   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003698   ffe5
00369a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00369c   ffd9
00369e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0036a0   ffe5
0036a2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0036a4   ffe5
0036a6   0e02     movlw	0x2                	MOVLW	0x02
0036a8   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0036aa   f000
                                           ;	.line	275; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
0036ac   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00415_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
0036ae   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	278; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
0036b0   e20e     bc	0x36ce                	BC	_00416_DS_
0036b2   6a01     clrf	0x1, 0              	CLRF	r0x01
0036b4   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
0036b6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0036b8   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0036ba   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0036bc   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0036be   ffe9
0036c0   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0036c2   ffea
0036c4   0efa     movlw	0xfa               	MOVLW	0xfa
0036c6   6eef     movwf	0xef, 0            	MOVWF	INDF0
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
0036c8   0e01     movlw	0x1                	MOVLW	0x01
0036ca   0102     movlb	0x2                	BANKSEL	_needreordering
0036cc   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00416_DS_:
0036ce   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0036d0   f001
0036d2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0036d4   f000
0036d6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0036d8   ffd9
0036da   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMinimumPulse(uchar servo)
003722   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003724   ffe5
003726   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003728   ffd9
00372a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00372c   ffe5
00372e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003730   ffe5
003732   0e02     movlw	0x2                	MOVLW	0x02
003734   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003736   f000
                                           ;	.line	264; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003738   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00405_DS_
                                           ; #	GOTO	_00406_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
00373a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	267; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
00373c   e20d     bc	0x3758                	BC	_00406_DS_
00373e   6a01     clrf	0x1, 0              	CLRF	r0x01
003740   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003742   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003744   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003746   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003748   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00374a   ffe9
00374c   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
00374e   ffea
003750   0e01     movlw	0x1                	MOVLW	0x01
003752   6eef     movwf	0xef, 0            	MOVWF	INDF0
003754   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003756   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00406_DS_:
003758   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00375a   f001
00375c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00375e   f000
003760   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003762   ffd9
003764   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	unsigned char ServoRead(uchar servo)
0036dc   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0036de   ffe5
0036e0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0036e2   ffd9
0036e4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0036e6   ffe5
0036e8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0036ea   ffe5
0036ec   0e02     movlw	0x2                	MOVLW	0x02
0036ee   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0036f0   f000
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
0036f2   0e12     movlw	0x12               	MOVLW	0x12
0036f4   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0036f6   e302     bnc	0x36fc               	BNC	_00395_DS_
                                           ;	.line	257; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return 0;
0036f8   6ae8     clrf	0xe8, 0             	CLRF	WREG
0036fa   d00c     bra	0x3714               	BRA	_00396_DS_
                                           _00395_DS_:
                                           ;	.line	258; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return servovalues[servo];
0036fc   6a01     clrf	0x1, 0              	CLRF	r0x01
0036fe   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003700   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003702   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003704   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003706   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003708   ffe9
00370a   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
00370c   ffea
00370e   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003710   f000
003712   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00396_DS_:
003714   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003716   f001
003718   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00371a   f000
00371c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00371e   ffd9
003720   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoWrite(uchar servo, uchar value)
003504   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003506   ffe5
003508   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00350a   ffd9
00350c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00350e   ffe5
003510   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003512   ffe5
003514   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003516   ffe5
003518   0e02     movlw	0x2                	MOVLW	0x02
00351a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00351c   f000
00351e   0e03     movlw	0x3                	MOVLW	0x03
003520   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003522   f001
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003524   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00377_DS_
                                           ; #	GOTO	_00382_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003526   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
003528   e218     bc	0x355a                	BC	_00382_DS_
00352a   0e01     movlw	0x1                	MOVLW	0x01
00352c   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
00352e   e202     bc	0x3534                	BC	_00379_DS_
                                           ;	.line	245; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMIN;
003530   0e01     movlw	0x1                	MOVLW	0x01
003532   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00379_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
003534   0efb     movlw	0xfb               	MOVLW	0xfb
003536   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003538   e302     bnc	0x353e               	BNC	_00381_DS_
                                           ;	.line	247; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMAX;
00353a   0efa     movlw	0xfa               	MOVLW	0xfa
00353c   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00381_DS_:
                                           ;	.line	248; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=value;
00353e   6a02     clrf	0x2, 0              	CLRF	r0x02
003540   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003542   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003544   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003546   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003548   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00354a   ffe9
00354c   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
00354e   ffea
003550   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
003552   ffef
                                           ;	.line	250; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003554   0e01     movlw	0x1                	MOVLW	0x01
003556   0102     movlb	0x2                	BANKSEL	_needreordering
003558   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00382_DS_:
00355a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00355c   f002
00355e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003560   f001
003562   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003564   f000
003566   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003568   ffd9
00356a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoDetach(uchar pin)
0031b4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0031b6   ffe5
0031b8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0031ba   ffd9
0031bc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0031be   ffe5
0031c0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0031c2   ffe5
0031c4   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0031c6   ffe5
0031c8   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0031ca   ffe5
0031cc   0e02     movlw	0x2                	MOVLW	0x02
0031ce   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0031d0   f000
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0031d2   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00356_DS_
                                           ; #	GOTO	_00363_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0031d4   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0031d6   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0031d8   d04c     bra	0x3272               	BRA	_00363_DS_
0031da   0e08     movlw	0x8                	MOVLW	0x08
0031dc   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0031de   e218     bc	0x3210                	BC	_00361_DS_
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
0031e0   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
0031e2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0031e4   6e01     movwf	0x1, 0             	MOVWF	r0x01
0031e6   6a02     clrf	0x2, 0              	CLRF	r0x02
0031e8   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
0031ea   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0031ec   6a03     clrf	0x3, 0              	CLRF	r0x03
0031ee   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
0031f0   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
0031f2   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
0031f4   fff6
0031f6   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
0031f8   fff7
0031fa   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
0031fc   fff8
0031fe   0009     tblrd	*+                 	TBLRD*+	
003200   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003202   f001
003204   0102     movlb	0x2                	BANKSEL	_activatedservos
003206   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
003208   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
00320a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00320c   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
00320e   d031     bra	0x3272               	BRA	_00363_DS_
                                           _00361_DS_:
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003210   0e0d     movlw	0xd                	MOVLW	0x0d
003212   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003214   e318     bnc	0x3246               	BNC	_00358_DS_
                                           ;	.line	232; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
003216   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
003218   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00321a   6e01     movwf	0x1, 0             	MOVWF	r0x01
00321c   6a02     clrf	0x2, 0              	CLRF	r0x02
00321e   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003220   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003222   6a03     clrf	0x3, 0              	CLRF	r0x03
003224   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003226   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003228   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
00322a   fff6
00322c   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
00322e   fff7
003230   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003232   fff8
003234   0009     tblrd	*+                 	TBLRD*+	
003236   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003238   f001
00323a   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00323c   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
00323e   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003240   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003242   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
003244   d016     bra	0x3272               	BRA	_00363_DS_
                                           _00358_DS_:
                                           ;	.line	234; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
003246   6a01     clrf	0x1, 0              	CLRF	r0x01
003248   6a02     clrf	0x2, 0              	CLRF	r0x02
00324a   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
00324c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00324e   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003250   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003252   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003254   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003256   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003258   fff6
00325a   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
00325c   fff7
00325e   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003260   fff8
003262   0009     tblrd	*+                 	TBLRD*+	
003264   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003266   f000
003268   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
00326a   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
00326c   1a00     xorwf	0, 0x1, 0          	XORWF	r0x00, F
00326e   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003270   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           _00363_DS_:
003272   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003274   f003
003276   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003278   f002
00327a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00327c   f001
00327e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003280   f000
003282   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003284   ffd9
003286   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoAttach(uchar pin)
0030d4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0030d6   ffe5
0030d8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0030da   ffd9
0030dc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0030de   ffe5
0030e0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0030e2   ffe5
0030e4   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0030e6   ffe5
0030e8   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0030ea   ffe5
0030ec   0e02     movlw	0x2                	MOVLW	0x02
0030ee   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0030f0   f000
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0030f2   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00334_DS_
                                           ; #	GOTO	_00341_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0030f4   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0030f6   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0030f8   d052     bra	0x319e               	BRA	_00341_DS_
0030fa   0e08     movlw	0x8                	MOVLW	0x08
0030fc   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0030fe   e21a     bc	0x3134                	BC	_00339_DS_
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003100   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
003102   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003104   6e01     movwf	0x1, 0             	MOVWF	r0x01
003106   6a02     clrf	0x2, 0              	CLRF	r0x02
003108   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00310a   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00310c   6a03     clrf	0x3, 0              	CLRF	r0x03
00310e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003110   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003112   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003114   fff6
003116   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003118   fff7
00311a   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
00311c   fff8
00311e   0009     tblrd	*+                 	TBLRD*+	
003120   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003122   f001
003124   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003126   0102     movlb	0x2                	BANKSEL	_activatedservos
003128   115e     iorwf	0x5e, 0, 0x1       	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00312a   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
00312c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00312e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003130   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
003132   d035     bra	0x319e               	BRA	_00341_DS_
                                           _00339_DS_:
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003134   0e0d     movlw	0xd                	MOVLW	0x0d
003136   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003138   e31a     bnc	0x316e               	BNC	_00336_DS_
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
00313a   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
00313c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00313e   6e01     movwf	0x1, 0             	MOVWF	r0x01
003140   6a02     clrf	0x2, 0              	CLRF	r0x02
003142   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003144   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003146   6a03     clrf	0x3, 0              	CLRF	r0x03
003148   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00314a   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
00314c   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
00314e   fff6
003150   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003152   fff7
003154   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003156   fff8
003158   0009     tblrd	*+                 	TBLRD*+	
00315a   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
00315c   f001
00315e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003160   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003162   1160     iorwf	0x60, 0, 0x1       	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003164   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
003166   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003168   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00316a   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
00316c   d018     bra	0x319e               	BRA	_00341_DS_
                                           _00336_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
00316e   6a01     clrf	0x1, 0              	CLRF	r0x01
003170   6a02     clrf	0x2, 0              	CLRF	r0x02
003172   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
003174   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003176   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
003178   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00317a   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00317c   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00317e   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003180   fff6
003182   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003184   fff7
003186   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003188   fff8
00318a   0009     tblrd	*+                 	TBLRD*+	
00318c   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
00318e   f000
003190   5000     movf	0, 0, 0             	MOVF	r0x00, W
003192   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003194   115f     iorwf	0x5f, 0, 0x1       	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003196   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
003198   5000     movf	0, 0, 0             	MOVF	r0x00, W
00319a   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
00319c   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           _00341_DS_:
00319e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0031a0   f003
0031a2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0031a4   f002
0031a6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0031a8   f001
0031aa   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0031ac   f000
0031ae   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0031b0   ffd9
0031b2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void SortServoTimings()
00206e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002070   ffe5
002072   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002074   ffe5
002076   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002078   ffe5
00207a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00207c   ffe5
00207e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002080   ffe5
002082   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002084   ffe5
002086   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002088   ffe5
00208a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00208c   ffe5
00208e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002090   ffe5
002092   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
002094   ffe5
002096   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
002098   6b69     clrf	0x69, 0x1           	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
00209a   6b6a     clrf	0x6a, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
00209c   6b6b     clrf	0x6b, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
00209e   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00280_DS_:
0020a0   0e12     movlw	0x12               	MOVLW	0x12
0020a2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0020a4   e22e     bc	0x2102                	BC	_00283_DS_
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=255;
0020a6   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0020a8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020aa   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ac   6a02     clrf	0x2, 0              	CLRF	r0x02
0020ae   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0020b0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020b2   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020b4   ffe9
0020b6   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020b8   ffea
0020ba   68ef     setf	0xef, 0             	SETF	INDF0
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0020bc   0e00     movlw	0                  	MOVLW	LOW(_timings)
0020be   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020c0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020c2   6a02     clrf	0x2, 0              	CLRF	r0x02
0020c4   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0020c6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020c8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020ca   ffe9
0020cc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020ce   ffea
0020d0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0020d2   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0020d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020d6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020d8   6a02     clrf	0x2, 0              	CLRF	r0x02
0020da   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0020dc   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020de   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020e0   ffe9
0020e2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020e4   ffea
0020e6   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0020e8   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0020ea   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020ec   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ee   6a02     clrf	0x2, 0              	CLRF	r0x02
0020f0   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0020f2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020f4   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020f6   ffe9
0020f8   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020fa   ffea
0020fc   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
0020fe   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002100   d7cf     bra	0x20a0               	BRA	_00280_DS_
                                           _00283_DS_:
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos=0;
002102   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	while(totalservos<18) {
002104   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00277_DS_:
002106   0e12     movlw	0x12               	MOVLW	0x12
002108   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00210a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00210c   d1ca     bra	0x24a2               	BRA	_00279_DS_
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
00210e   0e01     movlw	0x1                	MOVLW	0x01
002110   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002112   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00284_DS_:
002114   0e12     movlw	0x12               	MOVLW	0x12
002116   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002118   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00211a   d18e     bra	0x2438               	BRA	_00287_DS_
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (s<8){
00211c   0e08     movlw	0x8                	MOVLW	0x08
00211e   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002120   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002122   d082     bra	0x2228               	BRA	_00275_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002124   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
002126   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002128   6e04     movwf	0x4, 0             	MOVWF	r0x04
00212a   6a05     clrf	0x5, 0              	CLRF	r0x05
00212c   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00212e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002130   6a06     clrf	0x6, 0              	CLRF	r0x06
002132   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002134   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002136   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002138   fff6
00213a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00213c   fff7
00213e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002140   fff8
002142   0009     tblrd	*+                 	TBLRD*+	
002144   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002146   f004
002148   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
00214a   5169     movf	0x69, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
00214c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00214e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002150   0102     movlb	0x2                	BANKSEL	_activatedservos
002152   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
002154   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002156   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002158   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00215a   d16c     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00215c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00215e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002160   6e05     movwf	0x5, 0             	MOVWF	r0x05
002162   6a06     clrf	0x6, 0              	CLRF	r0x06
002164   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002166   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002168   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00216a   ffe9
00216c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00216e   ffea
002170   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002172   f005
002174   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002176   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002178   6e06     movwf	0x6, 0             	MOVWF	r0x06
00217a   6a07     clrf	0x7, 0              	CLRF	r0x07
00217c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00217e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002180   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002182   ffe9
002184   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002186   ffea
002188   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00218a   f008
00218c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00218e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
002190   e22b     bc	0x21e8                	BC	_00250_DS_
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
002192   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002194   ffe9
002196   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002198   ffea
00219a   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
00219c   ffef
                                           ;	.line	152; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=servomasks[s];
00219e   0e00     movlw	0                  	MOVLW	LOW(_timings)
0021a0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021a2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021a4   6a09     clrf	0x9, 0              	CLRF	r0x09
0021a6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0021a8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021aa   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021ac   ffe9
0021ae   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021b0   ffea
0021b2   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0021b4   ffef
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0021b6   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0021b8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021ba   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021bc   6a09     clrf	0x9, 0              	CLRF	r0x09
0021be   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0021c0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021c2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021c4   ffe9
0021c6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021c8   ffea
0021ca   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0021cc   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0021ce   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021d0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021d2   6a09     clrf	0x9, 0              	CLRF	r0x09
0021d4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0021d6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021d8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021da   ffe9
0021dc   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021de   ffea
0021e0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0021e2   0e01     movlw	0x1                	MOVLW	0x01
0021e4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0021e6   d126     bra	0x2434               	BRA	_00286_DS_
                                           _00250_DS_:
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0021e8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0021ea   ffe9
0021ec   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0021ee   ffea
0021f0   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0021f2   f006
0021f4   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0021f6   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
0021f8   e001     bz	0x21fc                	BZ	_00317_DS_
0021fa   d11c     bra	0x2434               	BRA	_00286_DS_
                                           _00317_DS_:
                                           ;	.line	158; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t] |= servomasks[s];
0021fc   0e00     movlw	0                  	MOVLW	LOW(_timings)
0021fe   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002200   6e05     movwf	0x5, 0             	MOVWF	r0x05
002202   6a06     clrf	0x6, 0              	CLRF	r0x06
002204   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002206   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002208   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00220a   ffe9
00220c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00220e   ffea
002210   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002212   f007
002214   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002216   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002218   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00221a   ffe9
00221c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00221e   ffea
002220   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002222   ffef
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002224   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002226   d106     bra	0x2434               	BRA	_00286_DS_
                                           _00275_DS_:
                                           ;	.line	163; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (s>12){
002228   0e0d     movlw	0xd                	MOVLW	0x0d
00222a   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00222c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00222e   d082     bra	0x2334               	BRA	_00272_DS_
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002230   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
002232   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002234   6e04     movwf	0x4, 0             	MOVWF	r0x04
002236   6a05     clrf	0x5, 0              	CLRF	r0x05
002238   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00223a   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00223c   6a06     clrf	0x6, 0              	CLRF	r0x06
00223e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002240   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002242   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002244   fff6
002246   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002248   fff7
00224a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00224c   fff8
00224e   0009     tblrd	*+                 	TBLRD*+	
002250   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002252   f004
002254   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
002256   516b     movf	0x6b, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002258   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00225a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00225c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00225e   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
002260   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002262   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002264   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002266   d0e6     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002268   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00226a   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00226c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00226e   6a06     clrf	0x6, 0              	CLRF	r0x06
002270   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002272   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002274   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002276   ffe9
002278   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00227a   ffea
00227c   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00227e   f005
002280   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002282   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002284   6e06     movwf	0x6, 0             	MOVWF	r0x06
002286   6a07     clrf	0x7, 0              	CLRF	r0x07
002288   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00228a   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00228c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00228e   ffe9
002290   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002292   ffea
002294   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
002296   f008
002298   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00229a   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00229c   e22b     bc	0x22f4                	BC	_00258_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
00229e   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022a0   ffe9
0022a2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022a4   ffea
0022a6   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0022a8   ffef
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0022aa   0e00     movlw	0                  	MOVLW	LOW(_timings)
0022ac   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022ae   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022b0   6a09     clrf	0x9, 0              	CLRF	r0x09
0022b2   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0022b4   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022b6   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022b8   ffe9
0022ba   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022bc   ffea
0022be   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0022c0   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0022c2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022c4   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022c6   6a09     clrf	0x9, 0              	CLRF	r0x09
0022c8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0022ca   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022cc   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022ce   ffe9
0022d0   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022d2   ffea
0022d4   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=servomasks[s];
0022d6   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0022d8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022da   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022dc   6a09     clrf	0x9, 0              	CLRF	r0x09
0022de   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0022e0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022e2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022e4   ffe9
0022e6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022e8   ffea
0022ea   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0022ec   ffef
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0022ee   0e01     movlw	0x1                	MOVLW	0x01
0022f0   6e02     movwf	0x2, 0             	MOVWF	r0x02
0022f2   d0a0     bra	0x2434               	BRA	_00286_DS_
                                           _00258_DS_:
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0022f4   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022f6   ffe9
0022f8   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022fa   ffea
0022fc   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0022fe   f006
002300   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002302   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002304   e001     bz	0x2308                	BZ	_00323_DS_
002306   d096     bra	0x2434               	BRA	_00286_DS_
                                           _00323_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t] |= servomasks[s];
002308   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00230a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00230c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00230e   6a06     clrf	0x6, 0              	CLRF	r0x06
002310   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002312   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002314   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002316   ffe9
002318   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00231a   ffea
00231c   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
00231e   f007
002320   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002322   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002324   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002326   ffe9
002328   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00232a   ffea
00232c   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
00232e   ffef
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002330   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002332   d080     bra	0x2434               	BRA	_00286_DS_
                                           _00272_DS_:
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002334   0e28     movlw	0x28               	MOVLW	LOW(_servomasks)
002336   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002338   6e04     movwf	0x4, 0             	MOVWF	r0x04
00233a   6a05     clrf	0x5, 0              	CLRF	r0x05
00233c   0e28     movlw	0x28               	MOVLW	HIGH(_servomasks)
00233e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002340   6a06     clrf	0x6, 0              	CLRF	r0x06
002342   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002344   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002346   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002348   fff6
00234a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00234c   fff7
00234e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002350   fff8
002352   0009     tblrd	*+                 	TBLRD*+	
002354   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002356   f004
002358   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
00235a   516a     movf	0x6a, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
00235c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00235e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002360   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
002362   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
002364   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002366   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002368   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00236a   d064     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00236c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00236e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002370   6e05     movwf	0x5, 0             	MOVWF	r0x05
002372   6a06     clrf	0x6, 0              	CLRF	r0x06
002374   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002376   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002378   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00237a   ffe9
00237c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00237e   ffea
002380   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002382   f005
002384   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002386   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002388   6e06     movwf	0x6, 0             	MOVWF	r0x06
00238a   6a07     clrf	0x7, 0              	CLRF	r0x07
00238c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00238e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002390   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002392   ffe9
002394   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002396   ffea
002398   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00239a   f008
00239c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00239e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0023a0   e22b     bc	0x23f8                	BC	_00266_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0023a2   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023a4   ffe9
0023a6   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023a8   ffea
0023aa   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0023ac   ffef
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0023ae   0e00     movlw	0                  	MOVLW	LOW(_timings)
0023b0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023b2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023b4   6a09     clrf	0x9, 0              	CLRF	r0x09
0023b6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0023b8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023ba   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023bc   ffe9
0023be   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023c0   ffea
0023c2   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=servomasks[s];
0023c4   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0023c6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023c8   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023ca   6a09     clrf	0x9, 0              	CLRF	r0x09
0023cc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0023ce   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023d0   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023d2   ffe9
0023d4   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023d6   ffea
0023d8   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0023da   ffef
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0023dc   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0023de   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023e0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023e2   6a09     clrf	0x9, 0              	CLRF	r0x09
0023e4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0023e6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023e8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023ea   ffe9
0023ec   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023ee   ffea
0023f0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0023f2   0e01     movlw	0x1                	MOVLW	0x01
0023f4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0023f6   d01e     bra	0x2434               	BRA	_00286_DS_
                                           _00266_DS_:
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings [timevalue][t]){
0023f8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023fa   ffe9
0023fc   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023fe   ffea
002400   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
002402   f006
002404   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002406   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002408   e115     bnz	0x2434               	BNZ	_00286_DS_
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t] |= servomasks[s];
00240a   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
00240c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00240e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002410   6a06     clrf	0x6, 0              	CLRF	r0x06
002412   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002414   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002416   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002418   ffe9
00241a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00241c   ffea
00241e   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002420   f007
002422   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002424   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002426   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002428   ffe9
00242a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00242c   ffea
00242e   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002430   ffef
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002432   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
                                           _00286_DS_:
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002434   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002436   d66e     bra	0x2114               	BRA	_00284_DS_
                                           _00287_DS_:
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_B] |= timings[MaskPort_B][t];
002438   0e00     movlw	0                  	MOVLW	LOW(_timings)
00243a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00243c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00243e   6a04     clrf	0x4, 0              	CLRF	r0x04
002440   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002442   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002444   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002446   ffe9
002448   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00244a   ffea
00244c   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
00244e   f003
002450   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
002452   5169     movf	0x69, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
002454   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002456   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002458   6f69     movwf	0x69, 0x1          	MOVWF	_SortServoTimings_mascaratotal_1_1, B
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
00245a   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
00245c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00245e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002460   6a04     clrf	0x4, 0              	CLRF	r0x04
002462   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002464   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002466   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002468   ffe9
00246a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00246c   ffea
00246e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002470   f003
                                           ; removed redundant BANKSEL
002472   516a     movf	0x6a, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002474   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002476   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002478   6f6a     movwf	0x6a, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
00247a   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00247c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00247e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002480   6a04     clrf	0x4, 0              	CLRF	r0x04
002482   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002484   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002486   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002488   ffe9
00248a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00248c   ffea
00248e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002490   f003
                                           ; removed redundant BANKSEL
002492   516b     movf	0x6b, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002494   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002496   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002498   6f6b     movwf	0x6b, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos += numservos;
00249a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00249c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	t++;
00249e   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0024a0   d632     bra	0x2106               	BRA	_00277_DS_
                                           _00279_DS_:
0024a2   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
0024a4   6b5c     clrf	0x5c, 0x1           	CLRF	_needreordering, B
0024a6   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0024a8   f009
0024aa   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0024ac   f008
0024ae   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0024b0   f007
0024b2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0024b4   f006
0024b6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0024b8   f005
0024ba   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0024bc   f004
0024be   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0024c0   f003
0024c2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0024c4   f002
0024c6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0024c8   f001
0024ca   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0024cc   f000
0024ce   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	118; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = activatedservos[MaskPort_B] & 0xFF;
0037fa   c25e     movff	0x25e, 0xf81       	MOVFF	_activatedservos, _PORTB
0037fc   ff81
                                           ;	.line	119; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
0037fe   c25f     movff	0x25f, 0xf82       	MOVFF	(_activatedservos + 1), _PORTC
003800   ff82
                                           ;	.line	120; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
003802   c260     movff	0x260, 0xf80       	MOVFF	(_activatedservos + 2), _PORTA
003804   ff80
003806   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void ServosPulseDown()
003288   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00328a   ffe5
00328c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00328e   ffd9
003290   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003292   ffe5
003294   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003296   ffe5
003298   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex = 0;
00329a   6b6d     clrf	0x6d, 0x1           	CLRF	_timingindex, B
00329c   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
00329e   6b5d     clrf	0x5d, 0x1           	CLRF	_timedivision, B
                                           _00226_DS_:
0032a0   0efb     movlw	0xfb               	MOVLW	0xfb
0032a2   0102     movlb	0x2                	BANKSEL	_timedivision
0032a4   5d5d     subwf	0x5d, 0, 0x1       	SUBWF	_timedivision, W, B
0032a6   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032a8   d048     bra	0x333a               	BRA	_00230_DS_
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (timings[timevalue][timingindex] == timedivision){
0032aa   c26d     movff	0x26d, 0           	MOVFF	_timingindex, r0x00
0032ac   f000
0032ae   6a01     clrf	0x1, 0              	CLRF	r0x01
0032b0   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0032b2   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0032b4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0032b6   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0032b8   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0032ba   ffe9
0032bc   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0032be   ffea
0032c0   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0032c2   f000
0032c4   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0032c6   195d     xorwf	0x5d, 0, 0x1       	XORWF	_timedivision, W, B
0032c8   e12f     bnz	0x3328               	BNZ	_00225_DS_
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = PORTB ^ timings[MaskPort_B][timingindex];
0032ca   c26d     movff	0x26d, 0           	MOVFF	_timingindex, r0x00
0032cc   f000
0032ce   6a01     clrf	0x1, 0              	CLRF	r0x01
0032d0   0e00     movlw	0                  	MOVLW	LOW(_timings)
0032d2   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0032d4   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0032d6   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0032d8   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0032da   ffe9
0032dc   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0032de   ffea
0032e0   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0032e2   f000
0032e4   5000     movf	0, 0, 0             	MOVF	r0x00, W
0032e6   1a81     xorwf	0x81, 0x1, 0       	XORWF	_PORTB, F
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
0032e8   c26d     movff	0x26d, 0           	MOVFF	_timingindex, r0x00
0032ea   f000
0032ec   6a01     clrf	0x1, 0              	CLRF	r0x01
0032ee   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0032f0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0032f2   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0032f4   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0032f6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0032f8   ffe9
0032fa   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0032fc   ffea
0032fe   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003300   f000
003302   5000     movf	0, 0, 0             	MOVF	r0x00, W
003304   1a82     xorwf	0x82, 0x1, 0       	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
003306   c26d     movff	0x26d, 0           	MOVFF	_timingindex, r0x00
003308   f000
00330a   6a01     clrf	0x1, 0              	CLRF	r0x01
00330c   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00330e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003310   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
003312   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003314   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003316   ffe9
003318   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
00331a   ffea
00331c   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
00331e   f000
003320   5000     movf	0, 0, 0             	MOVF	r0x00, W
003322   1a80     xorwf	0x80, 0x1, 0       	XORWF	_PORTA, F
003324   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex++;
003326   2b6d     incf	0x6d, 0x1, 0x1      	INCF	_timingindex, F, B
                                           _00225_DS_:
003328   0e06     movlw	0x6                	movlw 6
00332a   6f6c     movwf	0x6c, 0x1          	movwf _loopvar
                                           bucle:
00332c   0000     nop                      	NOP
00332e   2f6c     decfsz	0x6c, 0x1, 0x1    	decfsz _loopvar,1
003330   ef96     goto	0x332c              	goto bucle
003332   f019
                                           	
003334   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003336   2b5d     incf	0x5d, 0x1, 0x1      	INCF	_timedivision, F, B
003338   d7b3     bra	0x32a0               	BRA	_00226_DS_
                                           _00230_DS_:
00333a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00333c   f001
00333e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003340   f000
003342   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003344   ffd9
003346   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void servos_init()
0035be   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0035c0   ffe5
0035c2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0035c4   ffe5
0035c6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0035c8   ffe5
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
0035ca   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00210_DS_:
0035cc   0e12     movlw	0x12               	MOVLW	0x12
0035ce   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0035d0   e20d     bc	0x35ec                	BC	_00213_DS_
0035d2   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
0035d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0035d6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0035d8   6a02     clrf	0x2, 0              	CLRF	r0x02
0035da   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0035dc   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0035de   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0035e0   ffe9
0035e2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0035e4   ffea
0035e6   68ef     setf	0xef, 0             	SETF	INDF0
0035e8   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0035ea   d7f0     bra	0x35cc               	BRA	_00210_DS_
                                           _00213_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H=0xFF;
0035ec   68cf     setf	0xcf, 0             	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L=0x00;
0035ee   6ace     clrf	0xce, 0             	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x01;
0035f0   0e01     movlw	0x1                	MOVLW	0x01
0035f2   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIE1bits.TMR1IE=1;
0035f4   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.PEIE=1;
0035f6   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.GIE=1;
0035f8   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
0035fa   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0035fc   f002
0035fe   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003600   f001
003602   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003604   f000
003606   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void pinmode(int input, int state)
00283a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00283c   ffe5
00283e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002840   ffd9
002842   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002844   ffe5
002846   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002848   ffe5
00284a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00284c   ffe5
00284e   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002850   ffe5
002852   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002854   ffe5
002856   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002858   ffe5
00285a   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00285c   ffe5
00285e   0e02     movlw	0x2                	MOVLW	0x02
002860   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002862   f000
002864   0e03     movlw	0x3                	MOVLW	0x03
002866   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002868   f001
00286a   0e04     movlw	0x4                	MOVLW	0x04
00286c   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00286e   f002
002870   0e05     movlw	0x5                	MOVLW	0x05
002872   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002874   f003
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002876   0e0a     movlw	0xa                	MOVLW	LOW(_port)
002878   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00287a   6e04     movwf	0x4, 0             	MOVWF	r0x04
00287c   0e28     movlw	0x28               	MOVLW	HIGH(_port)
00287e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002880   6e05     movwf	0x5, 0             	MOVWF	r0x05
002882   6a06     clrf	0x6, 0              	CLRF	r0x06
002884   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002886   6806     setf	0x6, 0              	SETF	r0x06
002888   0e00     movlw	0                  	MOVLW	UPPER(_port)
00288a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00288c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00288e   fff6
002890   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002892   fff7
002894   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002896   fff8
002898   0009     tblrd	*+                 	TBLRD*+	
00289a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00289c   f004
00289e   0e05     movlw	0x5                	MOVLW	0x05
0028a0   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
0028a2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0028a4   d11c     bra	0x2ade               	BRA	_00196_DS_
0028a6   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
0028a8   ffe5
0028aa   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
0028ac   ffe5
0028ae   6a08     clrf	0x8, 0              	CLRF	r0x08
0028b0   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
0028b2   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
0028b4   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
0028b6   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
0028b8   0bfc     andlw	0xfc               	ANDLW	0xfc
0028ba   6e07     movwf	0x7, 0             	MOVWF	r0x07
0028bc   0e00     movlw	0                  	MOVLW	UPPER(_00205_DS_)
0028be   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
0028c0   0e28     movlw	0x28               	MOVLW	HIGH(_00205_DS_)
0028c2   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
0028c4   0edc     movlw	0xdc               	MOVLW	LOW(_00205_DS_)
0028c6   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
0028c8   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
0028ca   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
0028cc   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0028ce   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
0028d0   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0028d2   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0028d4   f008
0028d6   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0028d8   f007
0028da   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00205_DS_:
0028dc   ef78     goto	0x28f0              	GOTO	_00175_DS_
0028de   f014
0028e0   efaa     goto	0x2954              	GOTO	_00179_DS_
0028e2   f014
0028e4   efdc     goto	0x29b8              	GOTO	_00183_DS_
0028e6   f014
0028e8   ef0e     goto	0x2a1c              	GOTO	_00187_DS_
0028ea   f015
0028ec   ef40     goto	0x2a80              	GOTO	_00191_DS_
0028ee   f015
                                           _00175_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
0028f0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0028f2   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0028f4   e017     bz	0x2924                	BZ	_00177_DS_
0028f6   0eec     movlw	0xec               	MOVLW	LOW(_mask)
0028f8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0028fa   6e04     movwf	0x4, 0             	MOVWF	r0x04
0028fc   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0028fe   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002900   6e05     movwf	0x5, 0             	MOVWF	r0x05
002902   6a06     clrf	0x6, 0              	CLRF	r0x06
002904   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002906   6806     setf	0x6, 0              	SETF	r0x06
002908   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00290a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00290c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00290e   fff6
002910   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002912   fff7
002914   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002916   fff8
002918   0009     tblrd	*+                 	TBLRD*+	
00291a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00291c   f004
00291e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002920   1293     iorwf	0x93, 0x1, 0       	IORWF	_TRISB, F
002922   d0dd     bra	0x2ade               	BRA	_00196_DS_
                                           _00177_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISB=TRISB & (255-mask[input]);
002924   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002926   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002928   6e04     movwf	0x4, 0             	MOVWF	r0x04
00292a   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
00292c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00292e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002930   6a06     clrf	0x6, 0              	CLRF	r0x06
002932   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002934   6806     setf	0x6, 0              	SETF	r0x06
002936   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002938   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00293a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00293c   fff6
00293e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002940   fff7
002942   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002944   fff8
002946   0009     tblrd	*+                 	TBLRD*+	
002948   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00294a   f004
00294c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00294e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002950   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002952   d0c5     bra	0x2ade               	BRA	_00196_DS_
                                           _00179_DS_:
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
002954   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002956   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002958   e017     bz	0x2988                	BZ	_00181_DS_
00295a   0eec     movlw	0xec               	MOVLW	LOW(_mask)
00295c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00295e   6e04     movwf	0x4, 0             	MOVWF	r0x04
002960   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002962   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002964   6e05     movwf	0x5, 0             	MOVWF	r0x05
002966   6a06     clrf	0x6, 0              	CLRF	r0x06
002968   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00296a   6806     setf	0x6, 0              	SETF	r0x06
00296c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00296e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002970   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002972   fff6
002974   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002976   fff7
002978   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00297a   fff8
00297c   0009     tblrd	*+                 	TBLRD*+	
00297e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002980   f004
002982   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002984   1294     iorwf	0x94, 0x1, 0       	IORWF	_TRISC, F
002986   d0ab     bra	0x2ade               	BRA	_00196_DS_
                                           _00181_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISC=TRISC & (255-mask[input]);
002988   0eec     movlw	0xec               	MOVLW	LOW(_mask)
00298a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00298c   6e04     movwf	0x4, 0             	MOVWF	r0x04
00298e   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002990   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002992   6e05     movwf	0x5, 0             	MOVWF	r0x05
002994   6a06     clrf	0x6, 0              	CLRF	r0x06
002996   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002998   6806     setf	0x6, 0              	SETF	r0x06
00299a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00299c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00299e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0029a0   fff6
0029a2   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0029a4   fff7
0029a6   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0029a8   fff8
0029aa   0009     tblrd	*+                 	TBLRD*+	
0029ac   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0029ae   f004
0029b0   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029b2   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0029b4   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
0029b6   d093     bra	0x2ade               	BRA	_00196_DS_
                                           _00183_DS_:
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
0029b8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0029ba   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0029bc   e017     bz	0x29ec                	BZ	_00185_DS_
0029be   0eec     movlw	0xec               	MOVLW	LOW(_mask)
0029c0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029c2   6e04     movwf	0x4, 0             	MOVWF	r0x04
0029c4   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0029c6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029c8   6e05     movwf	0x5, 0             	MOVWF	r0x05
0029ca   6a06     clrf	0x6, 0              	CLRF	r0x06
0029cc   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029ce   6806     setf	0x6, 0              	SETF	r0x06
0029d0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0029d2   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0029d4   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0029d6   fff6
0029d8   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0029da   fff7
0029dc   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0029de   fff8
0029e0   0009     tblrd	*+                 	TBLRD*+	
0029e2   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0029e4   f004
0029e6   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029e8   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
0029ea   d079     bra	0x2ade               	BRA	_00196_DS_
                                           _00185_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISA=TRISA & (255-mask[input]);
0029ec   0eec     movlw	0xec               	MOVLW	LOW(_mask)
0029ee   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029f0   6e04     movwf	0x4, 0             	MOVWF	r0x04
0029f2   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0029f4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029f6   6e05     movwf	0x5, 0             	MOVWF	r0x05
0029f8   6a06     clrf	0x6, 0              	CLRF	r0x06
0029fa   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029fc   6806     setf	0x6, 0              	SETF	r0x06
0029fe   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a00   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a02   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a04   fff6
002a06   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a08   fff7
002a0a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a0c   fff8
002a0e   0009     tblrd	*+                 	TBLRD*+	
002a10   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a12   f004
002a14   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a16   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a18   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002a1a   d061     bra	0x2ade               	BRA	_00196_DS_
                                           _00187_DS_:
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002a1c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a1e   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002a20   e017     bz	0x2a50                	BZ	_00189_DS_
002a22   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002a24   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a26   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a28   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002a2a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a2c   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a2e   6a06     clrf	0x6, 0              	CLRF	r0x06
002a30   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a32   6806     setf	0x6, 0              	SETF	r0x06
002a34   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a36   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a38   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a3a   fff6
002a3c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a3e   fff7
002a40   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a42   fff8
002a44   0009     tblrd	*+                 	TBLRD*+	
002a46   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a48   f004
002a4a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a4c   1295     iorwf	0x95, 0x1, 0       	IORWF	_TRISD, F
002a4e   d047     bra	0x2ade               	BRA	_00196_DS_
                                           _00189_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISD=TRISD & (255-mask[input]);
002a50   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002a52   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a54   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a56   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002a58   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a5a   6e05     movwf	0x5, 0             	MOVWF	r0x05
002a5c   6a06     clrf	0x6, 0              	CLRF	r0x06
002a5e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a60   6806     setf	0x6, 0              	SETF	r0x06
002a62   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a64   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002a66   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002a68   fff6
002a6a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002a6c   fff7
002a6e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002a70   fff8
002a72   0009     tblrd	*+                 	TBLRD*+	
002a74   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002a76   f004
002a78   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a7a   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002a7c   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002a7e   d02f     bra	0x2ade               	BRA	_00196_DS_
                                           _00191_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
002a80   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a82   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002a84   e017     bz	0x2ab4                	BZ	_00193_DS_
002a86   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002a88   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a8a   6e02     movwf	0x2, 0             	MOVWF	r0x02
002a8c   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002a8e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002a90   6e03     movwf	0x3, 0             	MOVWF	r0x03
002a92   6a04     clrf	0x4, 0              	CLRF	r0x04
002a94   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a96   6804     setf	0x4, 0              	SETF	r0x04
002a98   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a9a   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002a9c   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002a9e   fff6
002aa0   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002aa2   fff7
002aa4   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002aa6   fff8
002aa8   0009     tblrd	*+                 	TBLRD*+	
002aaa   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002aac   f002
002aae   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ab0   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
002ab2   d015     bra	0x2ade               	BRA	_00196_DS_
                                           _00193_DS_:
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002ab4   6a02     clrf	0x2, 0              	CLRF	r0x02
002ab6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ab8   6802     setf	0x2, 0              	SETF	r0x02
002aba   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002abc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002abe   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002ac0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002ac2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ac4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002ac6   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002ac8   fff6
002aca   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002acc   fff7
002ace   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002ad0   fff8
002ad2   0009     tblrd	*+                 	TBLRD*+	
002ad4   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002ad6   f000
002ad8   5000     movf	0, 0, 0             	MOVF	r0x00, W
002ada   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002adc   1696     andwf	0x96, 0x1, 0       	ANDWF	_TRISE, F
                                           _00196_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002ade   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002ae0   f006
002ae2   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002ae4   f005
002ae6   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002ae8   f004
002aea   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002aec   f003
002aee   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002af0   f002
002af2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002af4   f001
002af6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002af8   f000
002afa   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002afc   ffd9
002afe   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	int digitalread(int input)
002dc6   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002dc8   ffe5
002dca   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002dcc   ffd9
002dce   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002dd0   ffe5
002dd2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002dd4   ffe5
002dd6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002dd8   ffe5
002dda   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002ddc   ffe5
002dde   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002de0   ffe5
002de2   0e02     movlw	0x2                	MOVLW	0x02
002de4   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002de6   f000
002de8   0e03     movlw	0x3                	MOVLW	0x03
002dea   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002dec   f001
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002dee   0e0a     movlw	0xa                	MOVLW	LOW(_port)
002df0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002df2   6e02     movwf	0x2, 0             	MOVWF	r0x02
002df4   0e28     movlw	0x28               	MOVLW	HIGH(_port)
002df6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002df8   6e03     movwf	0x3, 0             	MOVWF	r0x03
002dfa   6a04     clrf	0x4, 0              	CLRF	r0x04
002dfc   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002dfe   6804     setf	0x4, 0              	SETF	r0x04
002e00   0e00     movlw	0                  	MOVLW	UPPER(_port)
002e02   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e04   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e06   fff6
002e08   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e0a   fff7
002e0c   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e0e   fff8
002e10   0009     tblrd	*+                 	TBLRD*+	
002e12   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e14   f002
002e16   0e05     movlw	0x5                	MOVLW	0x05
002e18   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
002e1a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002e1c   d0b9     bra	0x2f90               	BRA	_00160_DS_
002e1e   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002e20   ffe5
002e22   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002e24   ffe5
002e26   6a06     clrf	0x6, 0              	CLRF	r0x06
002e28   3402     rlcf	0x2, 0, 0           	RLCF	r0x02, W
002e2a   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002e2c   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002e2e   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002e30   0bfc     andlw	0xfc               	ANDLW	0xfc
002e32   6e05     movwf	0x5, 0             	MOVWF	r0x05
002e34   0e00     movlw	0                  	MOVLW	UPPER(_00170_DS_)
002e36   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002e38   0e2e     movlw	0x2e               	MOVLW	HIGH(_00170_DS_)
002e3a   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002e3c   0e54     movlw	0x54               	MOVLW	LOW(_00170_DS_)
002e3e   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
002e40   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002e42   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002e44   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002e46   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002e48   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002e4a   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002e4c   f006
002e4e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002e50   f005
002e52   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00170_DS_:
002e54   ef34     goto	0x2e68              	GOTO	_00140_DS_
002e56   f017
002e58   ef52     goto	0x2ea4              	GOTO	_00144_DS_
002e5a   f017
002e5c   ef70     goto	0x2ee0              	GOTO	_00148_DS_
002e5e   f017
002e60   ef8e     goto	0x2f1c              	GOTO	_00152_DS_
002e62   f017
002e64   efac     goto	0x2f58              	GOTO	_00156_DS_
002e66   f017
                                           _00140_DS_:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002e68   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002e6a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e6c   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e6e   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002e70   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e72   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e74   6a04     clrf	0x4, 0              	CLRF	r0x04
002e76   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e78   6804     setf	0x4, 0              	SETF	r0x04
002e7a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e7c   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e7e   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e80   fff6
002e82   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e84   fff7
002e86   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e88   fff8
002e8a   0009     tblrd	*+                 	TBLRD*+	
002e8c   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e8e   f002
002e90   5081     movf	0x81, 0, 0          	MOVF	_PORTB, W
002e92   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002e94   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e96   e003     bz	0x2e9e                	BZ	_00142_DS_
002e98   6af3     clrf	0xf3, 0             	CLRF	PRODL
002e9a   0e01     movlw	0x1                	MOVLW	0x01
002e9c   d07b     bra	0x2f94               	BRA	_00161_DS_
                                           _00142_DS_:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002e9e   6af3     clrf	0xf3, 0             	CLRF	PRODL
002ea0   6ae8     clrf	0xe8, 0             	CLRF	WREG
002ea2   d078     bra	0x2f94               	BRA	_00161_DS_
                                           _00144_DS_:
                                           ;	.line	51; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002ea4   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002ea6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ea8   6e02     movwf	0x2, 0             	MOVWF	r0x02
002eaa   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002eac   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002eae   6e03     movwf	0x3, 0             	MOVWF	r0x03
002eb0   6a04     clrf	0x4, 0              	CLRF	r0x04
002eb2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002eb4   6804     setf	0x4, 0              	SETF	r0x04
002eb6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002eb8   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002eba   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002ebc   fff6
002ebe   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002ec0   fff7
002ec2   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002ec4   fff8
002ec6   0009     tblrd	*+                 	TBLRD*+	
002ec8   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002eca   f002
002ecc   5082     movf	0x82, 0, 0          	MOVF	_PORTC, W
002ece   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002ed0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ed2   e003     bz	0x2eda                	BZ	_00146_DS_
002ed4   6af3     clrf	0xf3, 0             	CLRF	PRODL
002ed6   0e01     movlw	0x1                	MOVLW	0x01
002ed8   d05d     bra	0x2f94               	BRA	_00161_DS_
                                           _00146_DS_:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002eda   6af3     clrf	0xf3, 0             	CLRF	PRODL
002edc   6ae8     clrf	0xe8, 0             	CLRF	WREG
002ede   d05a     bra	0x2f94               	BRA	_00161_DS_
                                           _00148_DS_:
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002ee0   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002ee2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002ee4   6e02     movwf	0x2, 0             	MOVWF	r0x02
002ee6   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002ee8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002eea   6e03     movwf	0x3, 0             	MOVWF	r0x03
002eec   6a04     clrf	0x4, 0              	CLRF	r0x04
002eee   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002ef0   6804     setf	0x4, 0              	SETF	r0x04
002ef2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ef4   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002ef6   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002ef8   fff6
002efa   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002efc   fff7
002efe   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002f00   fff8
002f02   0009     tblrd	*+                 	TBLRD*+	
002f04   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f06   f002
002f08   5080     movf	0x80, 0, 0          	MOVF	_PORTA, W
002f0a   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002f0c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002f0e   e003     bz	0x2f16                	BZ	_00150_DS_
002f10   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f12   0e01     movlw	0x1                	MOVLW	0x01
002f14   d03f     bra	0x2f94               	BRA	_00161_DS_
                                           _00150_DS_:
                                           ;	.line	55; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f16   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f18   6ae8     clrf	0xe8, 0             	CLRF	WREG
002f1a   d03c     bra	0x2f94               	BRA	_00161_DS_
                                           _00152_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
002f1c   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002f1e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f20   6e02     movwf	0x2, 0             	MOVWF	r0x02
002f22   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002f24   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f26   6e03     movwf	0x3, 0             	MOVWF	r0x03
002f28   6a04     clrf	0x4, 0              	CLRF	r0x04
002f2a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f2c   6804     setf	0x4, 0              	SETF	r0x04
002f2e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002f30   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002f32   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002f34   fff6
002f36   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002f38   fff7
002f3a   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002f3c   fff8
002f3e   0009     tblrd	*+                 	TBLRD*+	
002f40   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002f42   f002
002f44   5083     movf	0x83, 0, 0          	MOVF	_PORTD, W
002f46   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002f48   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002f4a   e003     bz	0x2f52                	BZ	_00154_DS_
002f4c   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f4e   0e01     movlw	0x1                	MOVLW	0x01
002f50   d021     bra	0x2f94               	BRA	_00161_DS_
                                           _00154_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f52   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f54   6ae8     clrf	0xe8, 0             	CLRF	WREG
002f56   d01e     bra	0x2f94               	BRA	_00161_DS_
                                           _00156_DS_:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
002f58   6a02     clrf	0x2, 0              	CLRF	r0x02
002f5a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f5c   6802     setf	0x2, 0              	SETF	r0x02
002f5e   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002f60   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002f62   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002f64   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002f66   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002f68   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002f6a   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002f6c   fff6
002f6e   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002f70   fff7
002f72   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002f74   fff8
002f76   0009     tblrd	*+                 	TBLRD*+	
002f78   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002f7a   f000
002f7c   5084     movf	0x84, 0, 0          	MOVF	_PORTE, W
002f7e   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002f80   5000     movf	0, 0, 0             	MOVF	r0x00, W
002f82   e003     bz	0x2f8a                	BZ	_00158_DS_
002f84   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f86   0e01     movlw	0x1                	MOVLW	0x01
002f88   d005     bra	0x2f94               	BRA	_00161_DS_
                                           _00158_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002f8a   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f8c   6ae8     clrf	0xe8, 0             	CLRF	WREG
002f8e   d002     bra	0x2f94               	BRA	_00161_DS_
                                           _00160_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	return (0);
002f90   6af3     clrf	0xf3, 0             	CLRF	PRODL
002f92   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00161_DS_:
002f94   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002f96   f004
002f98   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002f9a   f003
002f9c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002f9e   f002
002fa0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002fa2   f001
002fa4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002fa6   f000
002fa8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002faa   ffd9
002fac   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void digitalwrite(int output,int state)
002b00   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002b02   ffe5
002b04   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002b06   ffd9
002b08   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002b0a   ffe5
002b0c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002b0e   ffe5
002b10   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002b12   ffe5
002b14   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002b16   ffe5
002b18   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002b1a   ffe5
002b1c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002b1e   ffe5
002b20   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002b22   ffe5
002b24   0e02     movlw	0x2                	MOVLW	0x02
002b26   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002b28   f000
002b2a   0e03     movlw	0x3                	MOVLW	0x03
002b2c   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002b2e   f001
002b30   0e04     movlw	0x4                	MOVLW	0x04
002b32   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002b34   f002
002b36   0e05     movlw	0x5                	MOVLW	0x05
002b38   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002b3a   f003
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[output])
002b3c   0e0a     movlw	0xa                	MOVLW	LOW(_port)
002b3e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b40   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b42   0e28     movlw	0x28               	MOVLW	HIGH(_port)
002b44   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b46   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b48   6a06     clrf	0x6, 0              	CLRF	r0x06
002b4a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b4c   6806     setf	0x6, 0              	SETF	r0x06
002b4e   0e00     movlw	0                  	MOVLW	UPPER(_port)
002b50   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b52   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b54   fff6
002b56   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002b58   fff7
002b5a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002b5c   fff8
002b5e   0009     tblrd	*+                 	TBLRD*+	
002b60   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002b62   f004
002b64   0e05     movlw	0x5                	MOVLW	0x05
002b66   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002b68   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002b6a   d11c     bra	0x2da4               	BRA	_00126_DS_
002b6c   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002b6e   ffe5
002b70   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002b72   ffe5
002b74   6a08     clrf	0x8, 0              	CLRF	r0x08
002b76   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002b78   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002b7a   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002b7c   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002b7e   0bfc     andlw	0xfc               	ANDLW	0xfc
002b80   6e07     movwf	0x7, 0             	MOVWF	r0x07
002b82   0e00     movlw	0                  	MOVLW	UPPER(_00135_DS_)
002b84   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002b86   0e2b     movlw	0x2b               	MOVLW	HIGH(_00135_DS_)
002b88   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002b8a   0ea2     movlw	0xa2               	MOVLW	LOW(_00135_DS_)
002b8c   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002b8e   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002b90   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002b92   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002b94   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002b96   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002b98   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002b9a   f008
002b9c   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002b9e   f007
002ba0   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00135_DS_:
002ba2   efdb     goto	0x2bb6              	GOTO	_00105_DS_
002ba4   f015
002ba6   ef0d     goto	0x2c1a              	GOTO	_00109_DS_
002ba8   f016
002baa   ef3f     goto	0x2c7e              	GOTO	_00113_DS_
002bac   f016
002bae   ef71     goto	0x2ce2              	GOTO	_00117_DS_
002bb0   f016
002bb2   efa3     goto	0x2d46              	GOTO	_00121_DS_
002bb4   f016
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002bb6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002bb8   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002bba   e017     bz	0x2bea                	BZ	_00107_DS_
002bbc   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002bbe   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002bc0   6e04     movwf	0x4, 0             	MOVWF	r0x04
002bc2   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002bc4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002bc6   6e05     movwf	0x5, 0             	MOVWF	r0x05
002bc8   6a06     clrf	0x6, 0              	CLRF	r0x06
002bca   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002bcc   6806     setf	0x6, 0              	SETF	r0x06
002bce   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002bd0   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002bd2   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002bd4   fff6
002bd6   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002bd8   fff7
002bda   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002bdc   fff8
002bde   0009     tblrd	*+                 	TBLRD*+	
002be0   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002be2   f004
002be4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002be6   1281     iorwf	0x81, 0x1, 0       	IORWF	_PORTB, F
002be8   d0dd     bra	0x2da4               	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002bea   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002bec   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002bee   6e04     movwf	0x4, 0             	MOVWF	r0x04
002bf0   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002bf2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002bf4   6e05     movwf	0x5, 0             	MOVWF	r0x05
002bf6   6a06     clrf	0x6, 0              	CLRF	r0x06
002bf8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002bfa   6806     setf	0x6, 0              	SETF	r0x06
002bfc   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002bfe   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c00   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c02   fff6
002c04   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c06   fff7
002c08   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c0a   fff8
002c0c   0009     tblrd	*+                 	TBLRD*+	
002c0e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c10   f004
002c12   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c14   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c16   1681     andwf	0x81, 0x1, 0       	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002c18   d0c5     bra	0x2da4               	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002c1a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002c1c   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002c1e   e017     bz	0x2c4e                	BZ	_00111_DS_
002c20   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002c22   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c24   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c26   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002c28   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c2a   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c2c   6a06     clrf	0x6, 0              	CLRF	r0x06
002c2e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c30   6806     setf	0x6, 0              	SETF	r0x06
002c32   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c34   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c36   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c38   fff6
002c3a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c3c   fff7
002c3e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c40   fff8
002c42   0009     tblrd	*+                 	TBLRD*+	
002c44   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c46   f004
002c48   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c4a   1282     iorwf	0x82, 0x1, 0       	IORWF	_PORTC, F
002c4c   d0ab     bra	0x2da4               	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002c4e   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002c50   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c52   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c54   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002c56   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c58   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c5a   6a06     clrf	0x6, 0              	CLRF	r0x06
002c5c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c5e   6806     setf	0x6, 0              	SETF	r0x06
002c60   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c62   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c64   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c66   fff6
002c68   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c6a   fff7
002c6c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c6e   fff8
002c70   0009     tblrd	*+                 	TBLRD*+	
002c72   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c74   f004
002c76   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c78   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c7a   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002c7c   d093     bra	0x2da4               	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002c7e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002c80   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002c82   e017     bz	0x2cb2                	BZ	_00115_DS_
002c84   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002c86   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c88   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c8a   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002c8c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c8e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c90   6a06     clrf	0x6, 0              	CLRF	r0x06
002c92   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c94   6806     setf	0x6, 0              	SETF	r0x06
002c96   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c98   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c9a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c9c   fff6
002c9e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ca0   fff7
002ca2   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002ca4   fff8
002ca6   0009     tblrd	*+                 	TBLRD*+	
002ca8   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002caa   f004
002cac   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002cae   1280     iorwf	0x80, 0x1, 0       	IORWF	_PORTA, F
002cb0   d079     bra	0x2da4               	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002cb2   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002cb4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cb6   6e04     movwf	0x4, 0             	MOVWF	r0x04
002cb8   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002cba   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002cbc   6e05     movwf	0x5, 0             	MOVWF	r0x05
002cbe   6a06     clrf	0x6, 0              	CLRF	r0x06
002cc0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cc2   6806     setf	0x6, 0              	SETF	r0x06
002cc4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cc6   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002cc8   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002cca   fff6
002ccc   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002cce   fff7
002cd0   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002cd2   fff8
002cd4   0009     tblrd	*+                 	TBLRD*+	
002cd6   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002cd8   f004
002cda   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002cdc   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002cde   1680     andwf	0x80, 0x1, 0       	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002ce0   d061     bra	0x2da4               	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002ce2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ce4   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002ce6   e017     bz	0x2d16                	BZ	_00119_DS_
002ce8   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002cea   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cec   6e04     movwf	0x4, 0             	MOVWF	r0x04
002cee   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002cf0   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002cf2   6e05     movwf	0x5, 0             	MOVWF	r0x05
002cf4   6a06     clrf	0x6, 0              	CLRF	r0x06
002cf6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cf8   6806     setf	0x6, 0              	SETF	r0x06
002cfa   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cfc   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002cfe   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d00   fff6
002d02   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d04   fff7
002d06   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d08   fff8
002d0a   0009     tblrd	*+                 	TBLRD*+	
002d0c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d0e   f004
002d10   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d12   1283     iorwf	0x83, 0x1, 0       	IORWF	_PORTD, F
002d14   d047     bra	0x2da4               	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002d16   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002d18   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d1a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d1c   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002d1e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d20   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d22   6a06     clrf	0x6, 0              	CLRF	r0x06
002d24   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d26   6806     setf	0x6, 0              	SETF	r0x06
002d28   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d2a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d2c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d2e   fff6
002d30   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d32   fff7
002d34   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d36   fff8
002d38   0009     tblrd	*+                 	TBLRD*+	
002d3a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d3c   f004
002d3e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d40   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d42   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002d44   d02f     bra	0x2da4               	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002d46   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d48   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002d4a   e017     bz	0x2d7a                	BZ	_00123_DS_
002d4c   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002d4e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d50   6e02     movwf	0x2, 0             	MOVWF	r0x02
002d52   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002d54   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d56   6e03     movwf	0x3, 0             	MOVWF	r0x03
002d58   6a04     clrf	0x4, 0              	CLRF	r0x04
002d5a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d5c   6804     setf	0x4, 0              	SETF	r0x04
002d5e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d60   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002d62   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002d64   fff6
002d66   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002d68   fff7
002d6a   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002d6c   fff8
002d6e   0009     tblrd	*+                 	TBLRD*+	
002d70   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002d72   f002
002d74   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d76   1284     iorwf	0x84, 0x1, 0       	IORWF	_PORTE, F
002d78   d015     bra	0x2da4               	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002d7a   6a02     clrf	0x2, 0              	CLRF	r0x02
002d7c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d7e   6802     setf	0x2, 0              	SETF	r0x02
002d80   0eec     movlw	0xec               	MOVLW	LOW(_mask)
002d82   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002d84   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002d86   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002d88   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d8a   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002d8c   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002d8e   fff6
002d90   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002d92   fff7
002d94   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002d96   fff8
002d98   0009     tblrd	*+                 	TBLRD*+	
002d9a   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002d9c   f000
002d9e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002da0   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002da2   1684     andwf	0x84, 0x1, 0       	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002da4   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002da6   f006
002da8   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002daa   f005
002dac   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002dae   f004
002db0   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002db2   f003
002db4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002db6   f002
002db8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002dba   f001
002dbc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002dbe   f000
002dc0   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002dc2   ffd9
002dc4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
0027ec   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
0027ee   0804     sublw	0x4                
0027f0   2010     addwfc	0x10, 0, 0        
0027f2   8040     bsf	0x40, 0, 0           
0027f4   8040     bsf	0x40, 0, 0           
0027f6   0201     mulwf	0x1, 0             
0027f8   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
0027fa   0402     decf	0x2, 0, 0           
0027fc   2008     addwfc	0x8, 0, 0         
0027fe   0201     mulwf	0x1, 0             
002800   0104     movlb	0x4                
002802   0402     decf	0x2, 0, 0           
002804   1008     iorwf	0x8, 0, 0          	DB	0x08, 0x10, 0x20, 0x40, 0x80
002806   4020     rrncf	0x20, 0, 0         
002808   0080     dw	0x80  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _port:
00280a   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
00280c   0000     nop                      
00280e   0000     nop                      
002810   0000     nop                      
002812   0101     movlb	0x1                
002814   0101     movlb	0x1                
002816   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002818   0202     mulwf	0x2, 0             
00281a   0202     mulwf	0x2, 0             
00281c   0404     decf	0x4, 0, 0           
00281e   0304     mulwf	0x4, 0x1           
002820   0303     mulwf	0x3, 0x1           
002822   0303     mulwf	0x3, 0x1           	DB	0x03, 0x03, 0x03, 0x03, 0x03
002824   0303     mulwf	0x3, 0x1           
002826   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002828   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00282a   0804     sublw	0x4                
00282c   2010     addwfc	0x10, 0, 0        
00282e   8040     bsf	0x40, 0, 0           
002830   8040     bsf	0x40, 0, 0           
002832   0201     mulwf	0x1, 0             
002834   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002836   0402     decf	0x2, 0, 0           
002838   2008     addwfc	0x8, 0, 0         
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 5156 (0x1424) bytes ( 3.93%)
                                           ;           	 2578 (0x0a12) words
                                           ; udata size:	   96 (0x0060) bytes ( 5.36%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
