gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 5-19-2012  11:39:48
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Sat May 19 11:39:42 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _loopvar
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _tiempo
                                           	global _tiempo2
                                           	global _i
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _analog_init
                                           	global _analogread
                                           	global _Delayms
                                           	global _Delayus
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _setup
                                           	global _sensor
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _mask
                                           	global _port
                                           	global _servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           	extern ___fslt
                                           	extern ___fsadd
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _tiempo	db	0x00, 0x00, 0x00, 0x00
                                           _tiempo2	db	0x00, 0x00, 0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _servovalues	res	18
                                           
                                           udata_main_2	udata
                                           _timingindex	res	1
                                           
                                           udata_main_3	udata
                                           _timings	res	72
                                           
                                           udata_main_4	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           udata_main_5	udata
                                           _i	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/github/icaro-bloques/source/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	132; /home/valentin/github/icaro-bloques/source/main.c	servos_interrupt();
002044   ec96     call	0x3d2c, 0           	CALL	_servos_interrupt
002046   f01e
002048   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00204a   fffb
00204c   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00204e   fffa
002050   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002052   ffea
002054   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002056   ffe9
002058   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00205a   fff4
00205c   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00205e   fff3
002060   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002062   ffe0
002064   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002066   ffd8
002068   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00206a   ffe8
00206c   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/github/icaro-bloques/source/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/github/icaro-bloques/source/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/source/main.c	PIE1=0;
003e7e   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/github/icaro-bloques/source/main.c	PIE2=0;
003e80   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/github/icaro-bloques/source/main.c	ADCON1=0x0F;
003e82   0e0f     movlw	0xf                	MOVLW	0x0f
003e84   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/github/icaro-bloques/source/main.c	setup();
003e86   ecda     call	0x35b4, 0           	CALL	_setup
003e88   f01a
                                           ;	.line	61; /home/valentin/github/icaro-bloques/source/main.c	analog_init();
003e8a   ec63     call	0x3ec6, 0           	CALL	_analog_init
003e8c   f01f
                                           ;	.line	67; /home/valentin/github/icaro-bloques/source/main.c	servos_init();
003e8e   ec71     call	0x3ce2, 0           	CALL	_servos_init
003e90   f01e
                                           ;	.line	83; /home/valentin/github/icaro-bloques/source/main.c	INTCONbits.PEIE=1;
003e92   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/github/icaro-bloques/source/main.c	INTCONbits.GIE=1;
003e94   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _00557_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/source/main.c	loop();
003e96   ecdd     call	0x31ba, 0           	CALL	_loop
003e98   f018
003e9a   d7fd     bra	0x3e96               	BRA	_00557_DS_
003e9c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/source/user.c	void loop()
0031ba   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0031bc   ffe5
0031be   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0031c0   ffe5
                                           ;	.line	77; /home/valentin/github/icaro-bloques/source/user.c	if(digitalread(21) ==1 ){
0031c2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0031c4   0e15     movlw	0x15               	MOVLW	0x15
0031c6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0031c8   ece6     call	0x33cc, 0           	CALL	_digitalread
0031ca   f019
0031cc   6e00     movwf	0, 0               	MOVWF	r0x00
0031ce   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0031d0   f001
0031d2   0e02     movlw	0x2                	MOVLW	0x02
0031d4   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0031d6   5000     movf	0, 0, 0             	MOVF	r0x00, W
0031d8   0a01     xorlw	0x1                	XORLW	0x01
0031da   e102     bnz	0x31e0               	BNZ	_00550_DS_
0031dc   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0031de   e001     bz	0x31e2                	BZ	_00551_DS_
                                           _00550_DS_:
0031e0   d071     bra	0x32c4               	BRA	_00519_DS_
                                           _00551_DS_:
0031e2   0102     movlb	0x2                	BANKSEL	_tiempo
                                           ;	.line	78; /home/valentin/github/icaro-bloques/source/user.c	for(tiempo=0;tiempo<100;tiempo++){for(tiempo2=0;tiempo2<10;tiempo2++){PORTD=64;}}
0031e4   6b61     clrf	0x61, 0x1           	CLRF	_tiempo, B
                                           ; removed redundant BANKSEL
0031e6   6b62     clrf	0x62, 0x1           	CLRF	(_tiempo + 1), B
                                           ; removed redundant BANKSEL
0031e8   6b63     clrf	0x63, 0x1           	CLRF	(_tiempo + 2), B
                                           ; removed redundant BANKSEL
0031ea   6b64     clrf	0x64, 0x1           	CLRF	(_tiempo + 3), B
                                           _00526_DS_:
0031ec   0e42     movlw	0x42               	MOVLW	0x42
0031ee   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0031f0   0ec8     movlw	0xc8               	MOVLW	0xc8
0031f2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0031f4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0031f6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0031f8   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
0031fa   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
0031fc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0031fe   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
003200   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003202   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
003204   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003206   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
003208   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00320a   ec6d     call	0x36da, 0           	CALL	___fslt
00320c   f01b
00320e   6e00     movwf	0, 0               	MOVWF	r0x00
003210   0e08     movlw	0x8                	MOVLW	0x08
003212   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003214   5000     movf	0, 0, 0             	MOVF	r0x00, W
003216   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
003218   d055     bra	0x32c4               	BRA	_00519_DS_
00321a   0102     movlb	0x2                	BANKSEL	_tiempo2
00321c   6b65     clrf	0x65, 0x1           	CLRF	_tiempo2, B
                                           ; removed redundant BANKSEL
00321e   6b66     clrf	0x66, 0x1           	CLRF	(_tiempo2 + 1), B
                                           ; removed redundant BANKSEL
003220   6b67     clrf	0x67, 0x1           	CLRF	(_tiempo2 + 2), B
                                           ; removed redundant BANKSEL
003222   6b68     clrf	0x68, 0x1           	CLRF	(_tiempo2 + 3), B
                                           _00522_DS_:
003224   0e41     movlw	0x41               	MOVLW	0x41
003226   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003228   0e20     movlw	0x20               	MOVLW	0x20
00322a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00322c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00322e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003230   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
003232   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
003234   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003236   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
003238   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00323a   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
00323c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00323e   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
003240   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003242   ec6d     call	0x36da, 0           	CALL	___fslt
003244   f01b
003246   6e00     movwf	0, 0               	MOVWF	r0x00
003248   0e08     movlw	0x8                	MOVLW	0x08
00324a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
00324c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00324e   e01e     bz	0x328c                	BZ	_00528_DS_
003250   0e40     movlw	0x40               	MOVLW	0x40
003252   6e83     movwf	0x83, 0            	MOVWF	_PORTD
003254   0e3f     movlw	0x3f               	MOVLW	0x3f
003256   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003258   0e80     movlw	0x80               	MOVLW	0x80
00325a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00325c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00325e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003260   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
003262   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
003264   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003266   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
003268   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00326a   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
00326c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00326e   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
003270   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003272   ec68     call	0x24d0, 0           	CALL	___fsadd
003274   f012
003276   0102     movlb	0x2                	BANKSEL	_tiempo2
003278   6f65     movwf	0x65, 0x1          	MOVWF	_tiempo2, B
00327a   cff3     movff	0xff3, 0x266       	MOVFF	PRODL, (_tiempo2 + 1)
00327c   f266
00327e   cff4     movff	0xff4, 0x267       	MOVFF	PRODH, (_tiempo2 + 2)
003280   f267
003282   cfe9     movff	0xfe9, 0x268       	MOVFF	FSR0L, (_tiempo2 + 3)
003284   f268
003286   0e08     movlw	0x8                	MOVLW	0x08
003288   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
00328a   d7cc     bra	0x3224               	BRA	_00522_DS_
                                           _00528_DS_:
00328c   0e3f     movlw	0x3f               	MOVLW	0x3f
00328e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003290   0e80     movlw	0x80               	MOVLW	0x80
003292   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003294   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003296   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003298   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
00329a   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
00329c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00329e   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
0032a0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0032a2   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
0032a4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0032a6   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
0032a8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032aa   ec68     call	0x24d0, 0           	CALL	___fsadd
0032ac   f012
0032ae   0102     movlb	0x2                	BANKSEL	_tiempo
0032b0   6f61     movwf	0x61, 0x1          	MOVWF	_tiempo, B
0032b2   cff3     movff	0xff3, 0x262       	MOVFF	PRODL, (_tiempo + 1)
0032b4   f262
0032b6   cff4     movff	0xff4, 0x263       	MOVFF	PRODH, (_tiempo + 2)
0032b8   f263
0032ba   cfe9     movff	0xfe9, 0x264       	MOVFF	FSR0L, (_tiempo + 3)
0032bc   f264
0032be   0e08     movlw	0x8                	MOVLW	0x08
0032c0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0032c2   d794     bra	0x31ec               	BRA	_00526_DS_
                                           _00519_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/source/user.c	if(digitalread(21) ==0 ){
0032c4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0032c6   0e15     movlw	0x15               	MOVLW	0x15
0032c8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032ca   ece6     call	0x33cc, 0           	CALL	_digitalread
0032cc   f019
0032ce   6e00     movwf	0, 0               	MOVWF	r0x00
0032d0   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0032d2   f001
0032d4   0e02     movlw	0x2                	MOVLW	0x02
0032d6   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0032d8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0032da   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
0032dc   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
0032de   d071     bra	0x33c2               	BRA	_00538_DS_
0032e0   0102     movlb	0x2                	BANKSEL	_tiempo
                                           ;	.line	81; /home/valentin/github/icaro-bloques/source/user.c	for(tiempo=0;tiempo<100;tiempo++){for(tiempo2=0;tiempo2<10;tiempo2++){PORTD=32;}}
0032e2   6b61     clrf	0x61, 0x1           	CLRF	_tiempo, B
                                           ; removed redundant BANKSEL
0032e4   6b62     clrf	0x62, 0x1           	CLRF	(_tiempo + 1), B
                                           ; removed redundant BANKSEL
0032e6   6b63     clrf	0x63, 0x1           	CLRF	(_tiempo + 2), B
                                           ; removed redundant BANKSEL
0032e8   6b64     clrf	0x64, 0x1           	CLRF	(_tiempo + 3), B
                                           _00534_DS_:
0032ea   0e42     movlw	0x42               	MOVLW	0x42
0032ec   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032ee   0ec8     movlw	0xc8               	MOVLW	0xc8
0032f0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0032f2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0032f4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0032f6   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
0032f8   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
0032fa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0032fc   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
0032fe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003300   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
003302   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003304   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
003306   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003308   ec6d     call	0x36da, 0           	CALL	___fslt
00330a   f01b
00330c   6e00     movwf	0, 0               	MOVWF	r0x00
00330e   0e08     movlw	0x8                	MOVLW	0x08
003310   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003312   5000     movf	0, 0, 0             	MOVF	r0x00, W
003314   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
003316   d055     bra	0x33c2               	BRA	_00538_DS_
003318   0102     movlb	0x2                	BANKSEL	_tiempo2
00331a   6b65     clrf	0x65, 0x1           	CLRF	_tiempo2, B
                                           ; removed redundant BANKSEL
00331c   6b66     clrf	0x66, 0x1           	CLRF	(_tiempo2 + 1), B
                                           ; removed redundant BANKSEL
00331e   6b67     clrf	0x67, 0x1           	CLRF	(_tiempo2 + 2), B
                                           ; removed redundant BANKSEL
003320   6b68     clrf	0x68, 0x1           	CLRF	(_tiempo2 + 3), B
                                           _00530_DS_:
003322   0e41     movlw	0x41               	MOVLW	0x41
003324   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003326   0e20     movlw	0x20               	MOVLW	0x20
003328   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00332a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00332c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00332e   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
003330   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
003332   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003334   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
003336   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003338   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
00333a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00333c   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
00333e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003340   ec6d     call	0x36da, 0           	CALL	___fslt
003342   f01b
003344   6e00     movwf	0, 0               	MOVWF	r0x00
003346   0e08     movlw	0x8                	MOVLW	0x08
003348   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
00334a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00334c   e01e     bz	0x338a                	BZ	_00536_DS_
00334e   0e20     movlw	0x20               	MOVLW	0x20
003350   6e83     movwf	0x83, 0            	MOVWF	_PORTD
003352   0e3f     movlw	0x3f               	MOVLW	0x3f
003354   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003356   0e80     movlw	0x80               	MOVLW	0x80
003358   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00335a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00335c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00335e   0102     movlb	0x2                	BANKSEL	(_tiempo2 + 3)
003360   5168     movf	0x68, 0, 0x1        	MOVF	(_tiempo2 + 3), W, B
003362   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003364   5167     movf	0x67, 0, 0x1        	MOVF	(_tiempo2 + 2), W, B
003366   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
003368   5166     movf	0x66, 0, 0x1        	MOVF	(_tiempo2 + 1), W, B
00336a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00336c   5165     movf	0x65, 0, 0x1        	MOVF	_tiempo2, W, B
00336e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003370   ec68     call	0x24d0, 0           	CALL	___fsadd
003372   f012
003374   0102     movlb	0x2                	BANKSEL	_tiempo2
003376   6f65     movwf	0x65, 0x1          	MOVWF	_tiempo2, B
003378   cff3     movff	0xff3, 0x266       	MOVFF	PRODL, (_tiempo2 + 1)
00337a   f266
00337c   cff4     movff	0xff4, 0x267       	MOVFF	PRODH, (_tiempo2 + 2)
00337e   f267
003380   cfe9     movff	0xfe9, 0x268       	MOVFF	FSR0L, (_tiempo2 + 3)
003382   f268
003384   0e08     movlw	0x8                	MOVLW	0x08
003386   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
003388   d7cc     bra	0x3322               	BRA	_00530_DS_
                                           _00536_DS_:
00338a   0e3f     movlw	0x3f               	MOVLW	0x3f
00338c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00338e   0e80     movlw	0x80               	MOVLW	0x80
003390   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003392   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003394   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003396   0102     movlb	0x2                	BANKSEL	(_tiempo + 3)
003398   5164     movf	0x64, 0, 0x1        	MOVF	(_tiempo + 3), W, B
00339a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
00339c   5163     movf	0x63, 0, 0x1        	MOVF	(_tiempo + 2), W, B
00339e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0033a0   5162     movf	0x62, 0, 0x1        	MOVF	(_tiempo + 1), W, B
0033a2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
                                           ; removed redundant BANKSEL
0033a4   5161     movf	0x61, 0, 0x1        	MOVF	_tiempo, W, B
0033a6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0033a8   ec68     call	0x24d0, 0           	CALL	___fsadd
0033aa   f012
0033ac   0102     movlb	0x2                	BANKSEL	_tiempo
0033ae   6f61     movwf	0x61, 0x1          	MOVWF	_tiempo, B
0033b0   cff3     movff	0xff3, 0x262       	MOVFF	PRODL, (_tiempo + 1)
0033b2   f262
0033b4   cff4     movff	0xff4, 0x263       	MOVFF	PRODH, (_tiempo + 2)
0033b6   f263
0033b8   cfe9     movff	0xfe9, 0x264       	MOVFF	FSR0L, (_tiempo + 3)
0033ba   f264
0033bc   0e08     movlw	0x8                	MOVLW	0x08
0033be   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0033c0   d794     bra	0x32ea               	BRA	_00534_DS_
                                           _00538_DS_:
0033c2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0033c4   f001
0033c6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0033c8   f000
0033ca   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/source/user.c	unsigned int sensor(int valor)
003e42   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003e44   ffe5
003e46   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003e48   ffd9
003e4a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003e4c   ffe5
003e4e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003e50   ffe5
003e52   0e02     movlw	0x2                	MOVLW	0x02
003e54   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003e56   f000
003e58   0e03     movlw	0x3                	MOVLW	0x03
003e5a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003e5c   f001
                                           ;	.line	65; /home/valentin/github/icaro-bloques/source/user.c	an=analogread(valor);
003e5e   5000     movf	0, 0, 0             	MOVF	r0x00, W
003e60   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003e62   ecd0     call	0x3ba0, 0           	CALL	_analogread
003e64   f01d
003e66   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
003e68   f001
003e6a   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	67; /home/valentin/github/icaro-bloques/source/user.c	return an;
003e6c   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003e6e   fff3
003e70   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003e72   f001
003e74   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003e76   f000
003e78   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003e7a   ffd9
003e7c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	7; /home/valentin/github/icaro-bloques/source/user.c	void setup()
0035b4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0035b6   ffe5
0035b8   0102     movlb	0x2                	BANKSEL	_i
                                           ;	.line	11; /home/valentin/github/icaro-bloques/source/user.c	for(i=0;i<8;i++)
0035ba   6b8e     clrf	0x8e, 0x1           	CLRF	_i, B
                                           _00500_DS_:
0035bc   0e08     movlw	0x8                	MOVLW	0x08
0035be   0102     movlb	0x2                	BANKSEL	_i
0035c0   5d8e     subwf	0x8e, 0, 0x1       	SUBWF	_i, W, B
0035c2   e219     bc	0x35f6                	BC	_00503_DS_
                                           ;	.line	15; /home/valentin/github/icaro-bloques/source/user.c	pinmode(i,OUTPUT);
0035c4   c28e     movff	0x28e, 0           	MOVFF	_i, r0x00
0035c6   f000
0035c8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035ca   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035cc   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035ce   5000     movf	0, 0, 0             	MOVF	r0x00, W
0035d0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035d2   ec17     call	0x2c2e, 0           	CALL	_pinmode
0035d4   f016
0035d6   0e04     movlw	0x4                	MOVLW	0x04
0035d8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	17; /home/valentin/github/icaro-bloques/source/user.c	digitalwrite(i,LOW);
0035da   c28e     movff	0x28e, 0           	MOVFF	_i, r0x00
0035dc   f000
0035de   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035e0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035e2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035e4   5000     movf	0, 0, 0             	MOVF	r0x00, W
0035e6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035e8   ec7a     call	0x2ef4, 0           	CALL	_digitalwrite
0035ea   f017
0035ec   0e04     movlw	0x4                	MOVLW	0x04
0035ee   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0035f0   0102     movlb	0x2                	BANKSEL	_i
                                           ;	.line	11; /home/valentin/github/icaro-bloques/source/user.c	for(i=0;i<8;i++)
0035f2   2b8e     incf	0x8e, 0x1, 0x1      	INCF	_i, F, B
0035f4   d7e3     bra	0x35bc               	BRA	_00500_DS_
                                           _00503_DS_:
                                           ;	.line	21; /home/valentin/github/icaro-bloques/source/user.c	pinmode(15,INPUT);
0035f6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035f8   0e01     movlw	0x1                	MOVLW	0x01
0035fa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0035fc   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0035fe   0e0f     movlw	0xf                	MOVLW	0x0f
003600   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003602   ec17     call	0x2c2e, 0           	CALL	_pinmode
003604   f016
003606   0e04     movlw	0x4                	MOVLW	0x04
003608   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	25; /home/valentin/github/icaro-bloques/source/user.c	pinmode(21,INPUT);
00360a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00360c   0e01     movlw	0x1                	MOVLW	0x01
00360e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003610   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003612   0e15     movlw	0x15               	MOVLW	0x15
003614   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003616   ec17     call	0x2c2e, 0           	CALL	_pinmode
003618   f016
00361a   0e04     movlw	0x4                	MOVLW	0x04
00361c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	27; /home/valentin/github/icaro-bloques/source/user.c	pinmode(22,INPUT);
00361e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003620   0e01     movlw	0x1                	MOVLW	0x01
003622   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003624   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003626   0e16     movlw	0x16               	MOVLW	0x16
003628   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00362a   ec17     call	0x2c2e, 0           	CALL	_pinmode
00362c   f016
00362e   0e04     movlw	0x4                	MOVLW	0x04
003630   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/source/user.c	pinmode(23,INPUT);
003632   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003634   0e01     movlw	0x1                	MOVLW	0x01
003636   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003638   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00363a   0e17     movlw	0x17               	MOVLW	0x17
00363c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00363e   ec17     call	0x2c2e, 0           	CALL	_pinmode
003640   f016
003642   0e04     movlw	0x4                	MOVLW	0x04
003644   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	31; /home/valentin/github/icaro-bloques/source/user.c	pinmode(24,INPUT);
003646   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003648   0e01     movlw	0x1                	MOVLW	0x01
00364a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00364c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00364e   0e18     movlw	0x18               	MOVLW	0x18
003650   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003652   ec17     call	0x2c2e, 0           	CALL	_pinmode
003654   f016
003656   0e04     movlw	0x4                	MOVLW	0x04
003658   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	35; /home/valentin/github/icaro-bloques/source/user.c	pinmode(25,OUTPUT);
00365a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00365c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00365e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003660   0e19     movlw	0x19               	MOVLW	0x19
003662   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003664   ec17     call	0x2c2e, 0           	CALL	_pinmode
003666   f016
003668   0e04     movlw	0x4                	MOVLW	0x04
00366a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/source/user.c	pinmode(26,OUTPUT);
00366c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00366e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003670   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003672   0e1a     movlw	0x1a               	MOVLW	0x1a
003674   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003676   ec17     call	0x2c2e, 0           	CALL	_pinmode
003678   f016
00367a   0e04     movlw	0x4                	MOVLW	0x04
00367c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	39; /home/valentin/github/icaro-bloques/source/user.c	pinmode(27,OUTPUT);
00367e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003680   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003682   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003684   0e1b     movlw	0x1b               	MOVLW	0x1b
003686   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003688   ec17     call	0x2c2e, 0           	CALL	_pinmode
00368a   f016
00368c   0e04     movlw	0x4                	MOVLW	0x04
00368e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	41; /home/valentin/github/icaro-bloques/source/user.c	pinmode(28,OUTPUT);
003690   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003692   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003694   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003696   0e1c     movlw	0x1c               	MOVLW	0x1c
003698   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00369a   ec17     call	0x2c2e, 0           	CALL	_pinmode
00369c   f016
00369e   0e04     movlw	0x4                	MOVLW	0x04
0036a0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	45; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(10);
0036a2   0e0a     movlw	0xa                	MOVLW	0x0a
0036a4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036a6   ecfc     call	0x37f8, 0           	CALL	_ServoAttach
0036a8   f01b
0036aa   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	47; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(11);
0036ac   0e0b     movlw	0xb                	MOVLW	0x0b
0036ae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036b0   ecfc     call	0x37f8, 0           	CALL	_ServoAttach
0036b2   f01b
0036b4   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	49; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(12);
0036b6   0e0c     movlw	0xc                	MOVLW	0x0c
0036b8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036ba   ecfc     call	0x37f8, 0           	CALL	_ServoAttach
0036bc   f01b
0036be   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	51; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(8);
0036c0   0e08     movlw	0x8                	MOVLW	0x08
0036c2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036c4   ecfc     call	0x37f8, 0           	CALL	_ServoAttach
0036c6   f01b
0036c8   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	53; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(9);
0036ca   0e09     movlw	0x9                	MOVLW	0x09
0036cc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0036ce   ecfc     call	0x37f8, 0           	CALL	_ServoAttach
0036d0   f01b
0036d2   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
0036d4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0036d6   f000
0036d8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/github/icaro-bloques/source/main.c	void epapout_init() { return; }
003ef2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/github/icaro-bloques/source/main.c	void epapin_init() { return; }
003ef4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/source/main.c	void epap_out() { return; }
003ef6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/source/main.c	void epap_in() { return; }
003ef8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayus(int microsecondes)
003c90   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003c92   ffe5
003c94   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003c96   ffd9
003c98   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003c9a   ffe5
003c9c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003c9e   ffe5
003ca0   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003ca2   ffe5
003ca4   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003ca6   ffe5
003ca8   0e02     movlw	0x2                	MOVLW	0x02
003caa   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003cac   f000
003cae   0e03     movlw	0x3                	MOVLW	0x03
003cb0   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003cb2   f001
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<microsecondes;i++);
003cb4   6a02     clrf	0x2, 0              	CLRF	r0x02
003cb6   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00466_DS_:
003cb8   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003cba   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003cbc   e102     bnz	0x3cc2               	BNZ	_00475_DS_
003cbe   5000     movf	0, 0, 0             	MOVF	r0x00, W
003cc0   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00475_DS_:
003cc2   e204     bc	0x3ccc                	BC	_00470_DS_
003cc4   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
003cc6   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003cc8   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
003cca   d7f6     bra	0x3cb8               	BRA	_00466_DS_
                                           _00470_DS_:
003ccc   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003cce   f003
003cd0   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003cd2   f002
003cd4   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003cd6   f001
003cd8   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003cda   f000
003cdc   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003cde   ffd9
003ce0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayms(unsigned long milliseconde)
003a6c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003a6e   ffe5
003a70   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003a72   ffd9
003a74   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003a76   ffe5
003a78   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003a7a   ffe5
003a7c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003a7e   ffe5
003a80   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003a82   ffe5
003a84   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
003a86   ffe5
003a88   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003a8a   ffe5
003a8c   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003a8e   ffe5
003a90   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003a92   ffe5
003a94   0e02     movlw	0x2                	MOVLW	0x02
003a96   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003a98   f000
003a9a   0e03     movlw	0x3                	MOVLW	0x03
003a9c   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003a9e   f001
003aa0   0e04     movlw	0x4                	MOVLW	0x04
003aa2   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
003aa4   f002
003aa6   0e05     movlw	0x5                	MOVLW	0x05
003aa8   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003aaa   f003
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
003aac   6a04     clrf	0x4, 0              	CLRF	r0x04
003aae   6a05     clrf	0x5, 0              	CLRF	r0x05
003ab0   6a06     clrf	0x6, 0              	CLRF	r0x06
003ab2   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           _00452_DS_:
003ab4   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
003ab6   5c07     subwf	0x7, 0, 0          	SUBWF	r0x07, W
003ab8   e108     bnz	0x3aca               	BNZ	_00461_DS_
003aba   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003abc   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
003abe   e105     bnz	0x3aca               	BNZ	_00461_DS_
003ac0   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003ac2   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
003ac4   e102     bnz	0x3aca               	BNZ	_00461_DS_
003ac6   5000     movf	0, 0, 0             	MOVF	r0x00, W
003ac8   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _00461_DS_:
003aca   e20b     bc	0x3ae2                	BC	_00456_DS_
003acc   0e01     movlw	0x1                	MOVLW	0x01
003ace   ec37     call	0x6e, 0             	CALL	_delay10ktcy
003ad0   f000
003ad2   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
003ad4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003ad6   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
003ad8   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003ada   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
003adc   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003ade   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
003ae0   d7e9     bra	0x3ab4               	BRA	_00452_DS_
                                           _00456_DS_:
003ae2   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
003ae4   f007
003ae6   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003ae8   f006
003aea   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003aec   f005
003aee   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
003af0   f004
003af2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003af4   f003
003af6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003af8   f002
003afa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003afc   f001
003afe   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003b00   f000
003b02   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003b04   ffd9
003b06   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	unsigned int analogread(unsigned char channel)
003ba0   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003ba2   ffe5
003ba4   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003ba6   ffd9
003ba8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003baa   ffe5
003bac   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003bae   ffe5
003bb0   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003bb2   ffe5
003bb4   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003bb6   ffe5
003bb8   0e02     movlw	0x2                	MOVLW	0x02
003bba   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003bbc   f000
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x0A;
003bbe   0e0a     movlw	0xa                	MOVLW	0x0a
003bc0   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0=(channel-13)*4;
003bc2   0ef3     movlw	0xf3               	MOVLW	0xf3
003bc4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
003bc6   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bc8   0d04     mullw	0x4                	MULLW	0x04
003bca   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
003bcc   ffc2
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
003bce   0ebd     movlw	0xbd               	MOVLW	0xbd
003bd0   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=1;
003bd2   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
003bd4   0e09     movlw	0x9                	MOVLW	0x09
003bd6   6e00     movwf	0, 0               	MOVWF	r0x00
003bd8   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00446_DS_:
003bda   0000     nop                      	NOP 
003bdc   0eff     movlw	0xff               	MOVLW	0xff
003bde   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003be0   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
003be2   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
003be4   5000     movf	0, 0, 0             	MOVF	r0x00, W
003be6   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
003be8   e1f8     bnz	0x3bda               	BNZ	_00446_DS_
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.GO=1;
003bea   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00441_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	while (ADCON0bits.GO);
003bec   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
003bee   d7fe     bra	0x3bec               	BRA	_00441_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result=ADRESH<<8;
003bf0   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
003bf2   f000
003bf4   6a01     clrf	0x1, 0              	CLRF	r0x01
003bf6   5000     movf	0, 0, 0             	MOVF	r0x00, W
003bf8   6e03     movwf	0x3, 0             	MOVWF	r0x03
003bfa   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result+=ADRESL;
003bfc   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
003bfe   f000
003c00   6a01     clrf	0x1, 0              	CLRF	r0x01
003c02   5000     movf	0, 0, 0             	MOVF	r0x00, W
003c04   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
003c06   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003c08   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=0;
003c0a   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	return(result);
003c0c   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
003c0e   fff3
003c10   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003c12   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003c14   f003
003c16   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003c18   f002
003c1a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003c1c   f001
003c1e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003c20   f000
003c22   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003c24   ffd9
003c26   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISA=TRISA | 0x2F;
003ec6   0e2f     movlw	0x2f               	MOVLW	0x2f
003ec8   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISE=TRISE | 0x07;
003eca   0e07     movlw	0x7                	MOVLW	0x07
003ecc   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x07;
003ece   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
003ed0   0ebd     movlw	0xbd               	MOVLW	0xbd
003ed2   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
003ed4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (PIR1bits.TMR1IF) {
003d2c   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
003d2e   d020     bra	0x3d70               	BRA	_00431_DS_
                                           ;	.line	289; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIR1bits.TMR1IF=0;
003d30   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x00;
003d32   6acd     clrf	0xcd, 0             	CLRF	_T1CON
003d34   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	291; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (phase) {
003d36   515b     movf	0x5b, 0, 0x1        	MOVF	_phase, W, B
003d38   e00b     bz	0x3d50                	BZ	_00427_DS_
                                           ;	.line	293; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseUp();
003d3a   ec6b     call	0x3ed6, 0           	CALL	_ServosPulseUp
003d3c   f01f
                                           ;	.line	295; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0xd3;
003d3e   0ed3     movlw	0xd3               	MOVLW	0xd3
003d40   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	296; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x8f;
003d42   0e8f     movlw	0x8f               	MOVLW	0x8f
003d44   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ;	.line	298; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=1;
003d46   0e01     movlw	0x1                	MOVLW	0x01
003d48   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
003d4a   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	299; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 0;
003d4c   6b5b     clrf	0x5b, 0x1           	CLRF	_phase, B
003d4e   d010     bra	0x3d70               	BRA	_00431_DS_
                                           _00427_DS_:
                                           ;	.line	304; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseDown();
003d50   ecd6     call	0x39ac, 0           	CALL	_ServosPulseDown
003d52   f01c
                                           ;	.line	308; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0x2d;
003d54   0e2d     movlw	0x2d               	MOVLW	0x2d
003d56   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	309; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x0f;
003d58   0e0f     movlw	0xf                	MOVLW	0x0f
003d5a   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00425_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
003d5c   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	311; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (needreordering)	
003d5e   515c     movf	0x5c, 0, 0x1        	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
003d60   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
                                           ;	.line	313; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
003d62   ec37     call	0x206e, 0           	CALL	_SortServoTimings
003d64   f010
003d66   0e21     movlw	0x21               	MOVLW	0x21
003d68   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
003d6a   0e01     movlw	0x1                	MOVLW	0x01
003d6c   0102     movlb	0x2                	BANKSEL	_phase
003d6e   6f5b     movwf	0x5b, 0x1          	MOVWF	_phase, B
                                           _00431_DS_:
                                           ;	.line	317; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003d70   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMaximumPulse(uchar servo)
003d72   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003d74   ffe5
003d76   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003d78   ffd9
003d7a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003d7c   ffe5
003d7e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003d80   ffe5
003d82   0e02     movlw	0x2                	MOVLW	0x02
003d84   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003d86   f000
                                           ;	.line	275; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003d88   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00415_DS_
                                           ; #	GOTO	_00416_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003d8a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	278; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
003d8c   e20e     bc	0x3daa                	BC	_00416_DS_
003d8e   6a01     clrf	0x1, 0              	CLRF	r0x01
003d90   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003d92   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003d94   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003d96   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003d98   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003d9a   ffe9
003d9c   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003d9e   ffea
003da0   0efa     movlw	0xfa               	MOVLW	0xfa
003da2   6eef     movwf	0xef, 0            	MOVWF	INDF0
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003da4   0e01     movlw	0x1                	MOVLW	0x01
003da6   0102     movlb	0x2                	BANKSEL	_needreordering
003da8   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00416_DS_:
003daa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003dac   f001
003dae   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003db0   f000
003db2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003db4   ffd9
003db6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMinimumPulse(uchar servo)
003dfe   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003e00   ffe5
003e02   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003e04   ffd9
003e06   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003e08   ffe5
003e0a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003e0c   ffe5
003e0e   0e02     movlw	0x2                	MOVLW	0x02
003e10   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003e12   f000
                                           ;	.line	264; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003e14   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00405_DS_
                                           ; #	GOTO	_00406_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003e16   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	267; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
003e18   e20d     bc	0x3e34                	BC	_00406_DS_
003e1a   6a01     clrf	0x1, 0              	CLRF	r0x01
003e1c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003e1e   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003e20   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003e22   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003e24   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003e26   ffe9
003e28   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003e2a   ffea
003e2c   0e01     movlw	0x1                	MOVLW	0x01
003e2e   6eef     movwf	0xef, 0            	MOVWF	INDF0
003e30   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003e32   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00406_DS_:
003e34   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003e36   f001
003e38   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003e3a   f000
003e3c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003e3e   ffd9
003e40   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	unsigned char ServoRead(uchar servo)
003db8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003dba   ffe5
003dbc   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003dbe   ffd9
003dc0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003dc2   ffe5
003dc4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003dc6   ffe5
003dc8   0e02     movlw	0x2                	MOVLW	0x02
003dca   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003dcc   f000
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003dce   0e12     movlw	0x12               	MOVLW	0x12
003dd0   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003dd2   e302     bnc	0x3dd8               	BNC	_00395_DS_
                                           ;	.line	257; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return 0;
003dd4   6ae8     clrf	0xe8, 0             	CLRF	WREG
003dd6   d00c     bra	0x3df0               	BRA	_00396_DS_
                                           _00395_DS_:
                                           ;	.line	258; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return servovalues[servo];
003dd8   6a01     clrf	0x1, 0              	CLRF	r0x01
003dda   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003ddc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003dde   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003de0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003de2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003de4   ffe9
003de6   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003de8   ffea
003dea   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003dec   f000
003dee   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00396_DS_:
003df0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003df2   f001
003df4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003df6   f000
003df8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003dfa   ffd9
003dfc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoWrite(uchar servo, uchar value)
003c28   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003c2a   ffe5
003c2c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003c2e   ffd9
003c30   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003c32   ffe5
003c34   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003c36   ffe5
003c38   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003c3a   ffe5
003c3c   0e02     movlw	0x2                	MOVLW	0x02
003c3e   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003c40   f000
003c42   0e03     movlw	0x3                	MOVLW	0x03
003c44   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003c46   f001
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
003c48   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00377_DS_
                                           ; #	GOTO	_00382_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003c4a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
003c4c   e218     bc	0x3c7e                	BC	_00382_DS_
003c4e   0e01     movlw	0x1                	MOVLW	0x01
003c50   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003c52   e202     bc	0x3c58                	BC	_00379_DS_
                                           ;	.line	245; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMIN;
003c54   0e01     movlw	0x1                	MOVLW	0x01
003c56   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00379_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
003c58   0efb     movlw	0xfb               	MOVLW	0xfb
003c5a   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003c5c   e302     bnc	0x3c62               	BNC	_00381_DS_
                                           ;	.line	247; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMAX;
003c5e   0efa     movlw	0xfa               	MOVLW	0xfa
003c60   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00381_DS_:
                                           ;	.line	248; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=value;
003c62   6a02     clrf	0x2, 0              	CLRF	r0x02
003c64   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003c66   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003c68   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003c6a   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003c6c   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003c6e   ffe9
003c70   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003c72   ffea
003c74   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
003c76   ffef
                                           ;	.line	250; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003c78   0e01     movlw	0x1                	MOVLW	0x01
003c7a   0102     movlb	0x2                	BANKSEL	_needreordering
003c7c   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00382_DS_:
003c7e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003c80   f002
003c82   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003c84   f001
003c86   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003c88   f000
003c8a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003c8c   ffd9
003c8e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoDetach(uchar pin)
0038d8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0038da   ffe5
0038dc   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0038de   ffd9
0038e0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0038e2   ffe5
0038e4   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0038e6   ffe5
0038e8   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0038ea   ffe5
0038ec   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0038ee   ffe5
0038f0   0e02     movlw	0x2                	MOVLW	0x02
0038f2   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0038f4   f000
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0038f6   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00356_DS_
                                           ; #	GOTO	_00363_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0038f8   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0038fa   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0038fc   d04c     bra	0x3996               	BRA	_00363_DS_
0038fe   0e08     movlw	0x8                	MOVLW	0x08
003900   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003902   e218     bc	0x3934                	BC	_00361_DS_
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
003904   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003906   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003908   6e01     movwf	0x1, 0             	MOVWF	r0x01
00390a   6a02     clrf	0x2, 0              	CLRF	r0x02
00390c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00390e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003910   6a03     clrf	0x3, 0              	CLRF	r0x03
003912   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003914   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003916   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003918   fff6
00391a   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
00391c   fff7
00391e   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003920   fff8
003922   0009     tblrd	*+                 	TBLRD*+	
003924   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003926   f001
003928   0102     movlb	0x2                	BANKSEL	_activatedservos
00392a   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
00392c   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
00392e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003930   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
003932   d031     bra	0x3996               	BRA	_00363_DS_
                                           _00361_DS_:
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003934   0e0d     movlw	0xd                	MOVLW	0x0d
003936   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003938   e318     bnc	0x396a               	BNC	_00358_DS_
                                           ;	.line	232; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
00393a   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
00393c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00393e   6e01     movwf	0x1, 0             	MOVWF	r0x01
003940   6a02     clrf	0x2, 0              	CLRF	r0x02
003942   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
003944   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003946   6a03     clrf	0x3, 0              	CLRF	r0x03
003948   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00394a   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
00394c   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
00394e   fff6
003950   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003952   fff7
003954   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003956   fff8
003958   0009     tblrd	*+                 	TBLRD*+	
00395a   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
00395c   f001
00395e   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003960   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
003962   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003964   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003966   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
003968   d016     bra	0x3996               	BRA	_00363_DS_
                                           _00358_DS_:
                                           ;	.line	234; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
00396a   6a01     clrf	0x1, 0              	CLRF	r0x01
00396c   6a02     clrf	0x2, 0              	CLRF	r0x02
00396e   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003970   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003972   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
003974   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003976   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003978   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00397a   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
00397c   fff6
00397e   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003980   fff7
003982   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003984   fff8
003986   0009     tblrd	*+                 	TBLRD*+	
003988   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
00398a   f000
00398c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
00398e   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
003990   1a00     xorwf	0, 0x1, 0          	XORWF	r0x00, F
003992   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003994   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           _00363_DS_:
003996   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
003998   f003
00399a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00399c   f002
00399e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0039a0   f001
0039a2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0039a4   f000
0039a6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0039a8   ffd9
0039aa   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoAttach(uchar pin)
0037f8   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0037fa   ffe5
0037fc   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0037fe   ffd9
003800   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003802   ffe5
003804   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003806   ffe5
003808   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00380a   ffe5
00380c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00380e   ffe5
003810   0e02     movlw	0x2                	MOVLW	0x02
003812   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003814   f000
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
003816   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00334_DS_
                                           ; #	GOTO	_00341_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
003818   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00381a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00381c   d052     bra	0x38c2               	BRA	_00341_DS_
00381e   0e08     movlw	0x8                	MOVLW	0x08
003820   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003822   e21a     bc	0x3858                	BC	_00339_DS_
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003824   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003826   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003828   6e01     movwf	0x1, 0             	MOVWF	r0x01
00382a   6a02     clrf	0x2, 0              	CLRF	r0x02
00382c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00382e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003830   6a03     clrf	0x3, 0              	CLRF	r0x03
003832   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003834   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003836   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003838   fff6
00383a   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
00383c   fff7
00383e   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003840   fff8
003842   0009     tblrd	*+                 	TBLRD*+	
003844   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003846   f001
003848   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00384a   0102     movlb	0x2                	BANKSEL	_activatedservos
00384c   115e     iorwf	0x5e, 0, 0x1       	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00384e   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003850   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003852   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003854   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
003856   d035     bra	0x38c2               	BRA	_00341_DS_
                                           _00339_DS_:
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003858   0e0d     movlw	0xd                	MOVLW	0x0d
00385a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00385c   e31a     bnc	0x3892               	BNC	_00336_DS_
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
00385e   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003860   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003862   6e01     movwf	0x1, 0             	MOVWF	r0x01
003864   6a02     clrf	0x2, 0              	CLRF	r0x02
003866   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
003868   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00386a   6a03     clrf	0x3, 0              	CLRF	r0x03
00386c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00386e   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003870   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003872   fff6
003874   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003876   fff7
003878   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
00387a   fff8
00387c   0009     tblrd	*+                 	TBLRD*+	
00387e   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003880   f001
003882   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003884   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003886   1160     iorwf	0x60, 0, 0x1       	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003888   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
00388a   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00388c   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
00388e   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
003890   d018     bra	0x38c2               	BRA	_00341_DS_
                                           _00336_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003892   6a01     clrf	0x1, 0              	CLRF	r0x01
003894   6a02     clrf	0x2, 0              	CLRF	r0x02
003896   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
003898   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00389a   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00389c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00389e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
0038a0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0038a2   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
0038a4   fff6
0038a6   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
0038a8   fff7
0038aa   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
0038ac   fff8
0038ae   0009     tblrd	*+                 	TBLRD*+	
0038b0   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
0038b2   f000
0038b4   5000     movf	0, 0, 0             	MOVF	r0x00, W
0038b6   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
0038b8   115f     iorwf	0x5f, 0, 0x1       	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0038ba   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
0038bc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0038be   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0038c0   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           _00341_DS_:
0038c2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0038c4   f003
0038c6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0038c8   f002
0038ca   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0038cc   f001
0038ce   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0038d0   f000
0038d2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0038d4   ffd9
0038d6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void SortServoTimings()
00206e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002070   ffe5
002072   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002074   ffe5
002076   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002078   ffe5
00207a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00207c   ffe5
00207e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002080   ffe5
002082   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002084   ffe5
002086   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002088   ffe5
00208a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00208c   ffe5
00208e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002090   ffe5
002092   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
002094   ffe5
002096   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
002098   6b85     clrf	0x85, 0x1           	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
00209a   6b86     clrf	0x86, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
00209c   6b87     clrf	0x87, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
00209e   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00280_DS_:
0020a0   0e12     movlw	0x12               	MOVLW	0x12
0020a2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0020a4   e22e     bc	0x2102                	BC	_00283_DS_
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=255;
0020a6   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0020a8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020aa   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ac   6a02     clrf	0x2, 0              	CLRF	r0x02
0020ae   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0020b0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020b2   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020b4   ffe9
0020b6   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020b8   ffea
0020ba   68ef     setf	0xef, 0             	SETF	INDF0
                                           ;	.line	136; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0020bc   0e00     movlw	0                  	MOVLW	LOW(_timings)
0020be   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020c0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020c2   6a02     clrf	0x2, 0              	CLRF	r0x02
0020c4   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0020c6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020c8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020ca   ffe9
0020cc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020ce   ffea
0020d0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0020d2   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0020d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020d6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020d8   6a02     clrf	0x2, 0              	CLRF	r0x02
0020da   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0020dc   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020de   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020e0   ffe9
0020e2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020e4   ffea
0020e6   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0020e8   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0020ea   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020ec   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ee   6a02     clrf	0x2, 0              	CLRF	r0x02
0020f0   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0020f2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020f4   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020f6   ffe9
0020f8   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020fa   ffea
0020fc   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
0020fe   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002100   d7cf     bra	0x20a0               	BRA	_00280_DS_
                                           _00283_DS_:
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos=0;
002102   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	while(totalservos<18) {
002104   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00277_DS_:
002106   0e12     movlw	0x12               	MOVLW	0x12
002108   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00210a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00210c   d1ca     bra	0x24a2               	BRA	_00279_DS_
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
00210e   0e01     movlw	0x1                	MOVLW	0x01
002110   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002112   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00284_DS_:
002114   0e12     movlw	0x12               	MOVLW	0x12
002116   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002118   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00211a   d18e     bra	0x2438               	BRA	_00287_DS_
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (s<8){
00211c   0e08     movlw	0x8                	MOVLW	0x08
00211e   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002120   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002122   d082     bra	0x2228               	BRA	_00275_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
002124   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
002126   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002128   6e04     movwf	0x4, 0             	MOVWF	r0x04
00212a   6a05     clrf	0x5, 0              	CLRF	r0x05
00212c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00212e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002130   6a06     clrf	0x6, 0              	CLRF	r0x06
002132   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002134   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002136   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002138   fff6
00213a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00213c   fff7
00213e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002140   fff8
002142   0009     tblrd	*+                 	TBLRD*+	
002144   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002146   f004
002148   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
00214a   5185     movf	0x85, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
00214c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00214e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002150   0102     movlb	0x2                	BANKSEL	_activatedservos
002152   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
002154   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002156   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002158   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00215a   d16c     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00215c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00215e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002160   6e05     movwf	0x5, 0             	MOVWF	r0x05
002162   6a06     clrf	0x6, 0              	CLRF	r0x06
002164   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002166   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002168   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00216a   ffe9
00216c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00216e   ffea
002170   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002172   f005
002174   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002176   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002178   6e06     movwf	0x6, 0             	MOVWF	r0x06
00217a   6a07     clrf	0x7, 0              	CLRF	r0x07
00217c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00217e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002180   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002182   ffe9
002184   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002186   ffea
002188   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00218a   f008
00218c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00218e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
002190   e22b     bc	0x21e8                	BC	_00250_DS_
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
002192   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002194   ffe9
002196   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002198   ffea
00219a   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
00219c   ffef
                                           ;	.line	152; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=servomasks[s];
00219e   0e00     movlw	0                  	MOVLW	LOW(_timings)
0021a0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021a2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021a4   6a09     clrf	0x9, 0              	CLRF	r0x09
0021a6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0021a8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021aa   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021ac   ffe9
0021ae   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021b0   ffea
0021b2   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0021b4   ffef
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0021b6   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0021b8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021ba   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021bc   6a09     clrf	0x9, 0              	CLRF	r0x09
0021be   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0021c0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021c2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021c4   ffe9
0021c6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021c8   ffea
0021ca   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0021cc   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0021ce   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021d0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0021d2   6a09     clrf	0x9, 0              	CLRF	r0x09
0021d4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0021d6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0021d8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0021da   ffe9
0021dc   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0021de   ffea
0021e0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0021e2   0e01     movlw	0x1                	MOVLW	0x01
0021e4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0021e6   d126     bra	0x2434               	BRA	_00286_DS_
                                           _00250_DS_:
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0021e8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0021ea   ffe9
0021ec   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0021ee   ffea
0021f0   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0021f2   f006
0021f4   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0021f6   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
0021f8   e001     bz	0x21fc                	BZ	_00317_DS_
0021fa   d11c     bra	0x2434               	BRA	_00286_DS_
                                           _00317_DS_:
                                           ;	.line	158; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t] |= servomasks[s];
0021fc   0e00     movlw	0                  	MOVLW	LOW(_timings)
0021fe   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002200   6e05     movwf	0x5, 0             	MOVWF	r0x05
002202   6a06     clrf	0x6, 0              	CLRF	r0x06
002204   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002206   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002208   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00220a   ffe9
00220c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00220e   ffea
002210   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002212   f007
002214   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002216   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002218   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00221a   ffe9
00221c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00221e   ffea
002220   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002222   ffef
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002224   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002226   d106     bra	0x2434               	BRA	_00286_DS_
                                           _00275_DS_:
                                           ;	.line	163; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (s>12){
002228   0e0d     movlw	0xd                	MOVLW	0x0d
00222a   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00222c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00222e   d082     bra	0x2334               	BRA	_00272_DS_
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
002230   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
002232   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002234   6e04     movwf	0x4, 0             	MOVWF	r0x04
002236   6a05     clrf	0x5, 0              	CLRF	r0x05
002238   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00223a   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00223c   6a06     clrf	0x6, 0              	CLRF	r0x06
00223e   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002240   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002242   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002244   fff6
002246   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002248   fff7
00224a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00224c   fff8
00224e   0009     tblrd	*+                 	TBLRD*+	
002250   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002252   f004
002254   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
002256   5187     movf	0x87, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002258   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00225a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00225c   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00225e   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
002260   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002262   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002264   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002266   d0e6     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002268   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00226a   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
00226c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00226e   6a06     clrf	0x6, 0              	CLRF	r0x06
002270   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002272   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002274   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002276   ffe9
002278   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00227a   ffea
00227c   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
00227e   f005
002280   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002282   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002284   6e06     movwf	0x6, 0             	MOVWF	r0x06
002286   6a07     clrf	0x7, 0              	CLRF	r0x07
002288   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00228a   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
00228c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
00228e   ffe9
002290   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002292   ffea
002294   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
002296   f008
002298   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00229a   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00229c   e22b     bc	0x22f4                	BC	_00258_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
00229e   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022a0   ffe9
0022a2   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022a4   ffea
0022a6   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0022a8   ffef
                                           ;	.line	168; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0022aa   0e00     movlw	0                  	MOVLW	LOW(_timings)
0022ac   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022ae   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022b0   6a09     clrf	0x9, 0              	CLRF	r0x09
0022b2   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0022b4   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022b6   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022b8   ffe9
0022ba   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022bc   ffea
0022be   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0022c0   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0022c2   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022c4   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022c6   6a09     clrf	0x9, 0              	CLRF	r0x09
0022c8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0022ca   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022cc   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022ce   ffe9
0022d0   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022d2   ffea
0022d4   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=servomasks[s];
0022d6   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0022d8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0022da   6e08     movwf	0x8, 0             	MOVWF	r0x08
0022dc   6a09     clrf	0x9, 0              	CLRF	r0x09
0022de   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0022e0   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0022e2   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0022e4   ffe9
0022e6   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0022e8   ffea
0022ea   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0022ec   ffef
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0022ee   0e01     movlw	0x1                	MOVLW	0x01
0022f0   6e02     movwf	0x2, 0             	MOVWF	r0x02
0022f2   d0a0     bra	0x2434               	BRA	_00286_DS_
                                           _00258_DS_:
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0022f4   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0022f6   ffe9
0022f8   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0022fa   ffea
0022fc   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
0022fe   f006
002300   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002302   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002304   e001     bz	0x2308                	BZ	_00323_DS_
002306   d096     bra	0x2434               	BRA	_00286_DS_
                                           _00323_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t] |= servomasks[s];
002308   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00230a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00230c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00230e   6a06     clrf	0x6, 0              	CLRF	r0x06
002310   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002312   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002314   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002316   ffe9
002318   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00231a   ffea
00231c   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
00231e   f007
002320   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002322   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002324   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002326   ffe9
002328   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00232a   ffea
00232c   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
00232e   ffef
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002330   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
002332   d080     bra	0x2434               	BRA	_00286_DS_
                                           _00272_DS_:
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
002334   0e1c     movlw	0x1c               	MOVLW	LOW(_servomasks)
002336   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002338   6e04     movwf	0x4, 0             	MOVWF	r0x04
00233a   6a05     clrf	0x5, 0              	CLRF	r0x05
00233c   0e2c     movlw	0x2c               	MOVLW	HIGH(_servomasks)
00233e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002340   6a06     clrf	0x6, 0              	CLRF	r0x06
002342   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
002344   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002346   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002348   fff6
00234a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00234c   fff7
00234e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002350   fff8
002352   0009     tblrd	*+                 	TBLRD*+	
002354   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002356   f004
002358   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
00235a   5186     movf	0x86, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
00235c   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
00235e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002360   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
002362   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
002364   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
002366   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002368   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00236a   d064     bra	0x2434               	BRA	_00286_DS_
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
00236c   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00236e   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002370   6e05     movwf	0x5, 0             	MOVWF	r0x05
002372   6a06     clrf	0x6, 0              	CLRF	r0x06
002374   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002376   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002378   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00237a   ffe9
00237c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00237e   ffea
002380   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002382   f005
002384   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002386   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002388   6e06     movwf	0x6, 0             	MOVWF	r0x06
00238a   6a07     clrf	0x7, 0              	CLRF	r0x07
00238c   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
00238e   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002390   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002392   ffe9
002394   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002396   ffea
002398   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00239a   f008
00239c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
00239e   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
0023a0   e22b     bc	0x23f8                	BC	_00266_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
0023a2   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023a4   ffe9
0023a6   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023a8   ffea
0023aa   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
0023ac   ffef
                                           ;	.line	184; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_B][t]=0x00;
0023ae   0e00     movlw	0                  	MOVLW	LOW(_timings)
0023b0   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023b2   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023b4   6a09     clrf	0x9, 0              	CLRF	r0x09
0023b6   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0023b8   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023ba   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023bc   ffe9
0023be   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023c0   ffea
0023c2   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=servomasks[s];
0023c4   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0023c6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023c8   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023ca   6a09     clrf	0x9, 0              	CLRF	r0x09
0023cc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0023ce   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023d0   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023d2   ffe9
0023d4   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023d6   ffea
0023d8   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0023da   ffef
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0023dc   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0023de   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023e0   6e08     movwf	0x8, 0             	MOVWF	r0x08
0023e2   6a09     clrf	0x9, 0              	CLRF	r0x09
0023e4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0023e6   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
0023e8   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
0023ea   ffe9
0023ec   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
0023ee   ffea
0023f0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0023f2   0e01     movlw	0x1                	MOVLW	0x01
0023f4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0023f6   d01e     bra	0x2434               	BRA	_00286_DS_
                                           _00266_DS_:
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings [timevalue][t]){
0023f8   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
0023fa   ffe9
0023fc   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
0023fe   ffea
002400   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
002402   f006
002404   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002406   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002408   e115     bnz	0x2434               	BNZ	_00286_DS_
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t] |= servomasks[s];
00240a   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
00240c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00240e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002410   6a06     clrf	0x6, 0              	CLRF	r0x06
002412   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002414   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002416   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002418   ffe9
00241a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00241c   ffea
00241e   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002420   f007
002422   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002424   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
002426   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002428   ffe9
00242a   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00242c   ffea
00242e   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002430   ffef
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
002432   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
                                           _00286_DS_:
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
002434   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
002436   d66e     bra	0x2114               	BRA	_00284_DS_
                                           _00287_DS_:
                                           ;	.line	196; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_B] |= timings[MaskPort_B][t];
002438   0e00     movlw	0                  	MOVLW	LOW(_timings)
00243a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00243c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00243e   6a04     clrf	0x4, 0              	CLRF	r0x04
002440   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
002442   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002444   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002446   ffe9
002448   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00244a   ffea
00244c   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
00244e   f003
002450   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
002452   5185     movf	0x85, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
002454   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002456   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002458   6f85     movwf	0x85, 0x1          	MOVWF	_SortServoTimings_mascaratotal_1_1, B
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
00245a   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
00245c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00245e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002460   6a04     clrf	0x4, 0              	CLRF	r0x04
002462   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002464   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002466   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002468   ffe9
00246a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00246c   ffea
00246e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002470   f003
                                           ; removed redundant BANKSEL
002472   5186     movf	0x86, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
002474   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002476   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002478   6f86     movwf	0x86, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
00247a   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00247c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00247e   6e03     movwf	0x3, 0             	MOVWF	r0x03
002480   6a04     clrf	0x4, 0              	CLRF	r0x04
002482   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002484   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002486   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002488   ffe9
00248a   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
00248c   ffea
00248e   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
002490   f003
                                           ; removed redundant BANKSEL
002492   5187     movf	0x87, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002494   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
002496   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
002498   6f87     movwf	0x87, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos += numservos;
00249a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00249c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	t++;
00249e   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0024a0   d632     bra	0x2106               	BRA	_00277_DS_
                                           _00279_DS_:
0024a2   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
0024a4   6b5c     clrf	0x5c, 0x1           	CLRF	_needreordering, B
0024a6   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
0024a8   f009
0024aa   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
0024ac   f008
0024ae   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0024b0   f007
0024b2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0024b4   f006
0024b6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0024b8   f005
0024ba   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0024bc   f004
0024be   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0024c0   f003
0024c2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0024c4   f002
0024c6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0024c8   f001
0024ca   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0024cc   f000
0024ce   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	118; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = activatedservos[MaskPort_B] & 0xFF;
003ed6   c25e     movff	0x25e, 0xf81       	MOVFF	_activatedservos, _PORTB
003ed8   ff81
                                           ;	.line	119; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
003eda   c25f     movff	0x25f, 0xf82       	MOVFF	(_activatedservos + 1), _PORTC
003edc   ff82
                                           ;	.line	120; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
003ede   c260     movff	0x260, 0xf80       	MOVFF	(_activatedservos + 2), _PORTA
003ee0   ff80
003ee2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void ServosPulseDown()
0039ac   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0039ae   ffe5
0039b0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0039b2   ffd9
0039b4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0039b6   ffe5
0039b8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0039ba   ffe5
0039bc   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex = 0;
0039be   6b8d     clrf	0x8d, 0x1           	CLRF	_timingindex, B
0039c0   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
0039c2   6b5d     clrf	0x5d, 0x1           	CLRF	_timedivision, B
                                           _00226_DS_:
0039c4   0efb     movlw	0xfb               	MOVLW	0xfb
0039c6   0102     movlb	0x2                	BANKSEL	_timedivision
0039c8   5d5d     subwf	0x5d, 0, 0x1       	SUBWF	_timedivision, W, B
0039ca   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0039cc   d048     bra	0x3a5e               	BRA	_00230_DS_
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (timings[timevalue][timingindex] == timedivision){
0039ce   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
0039d0   f000
0039d2   6a01     clrf	0x1, 0              	CLRF	r0x01
0039d4   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0039d6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0039d8   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0039da   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0039dc   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0039de   ffe9
0039e0   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0039e2   ffea
0039e4   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0039e6   f000
0039e8   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0039ea   195d     xorwf	0x5d, 0, 0x1       	XORWF	_timedivision, W, B
0039ec   e12f     bnz	0x3a4c               	BNZ	_00225_DS_
                                           ;	.line	98; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTB = PORTB ^ timings[MaskPort_B][timingindex];
0039ee   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
0039f0   f000
0039f2   6a01     clrf	0x1, 0              	CLRF	r0x01
0039f4   0e00     movlw	0                  	MOVLW	LOW(_timings)
0039f6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0039f8   0e02     movlw	0x2                	MOVLW	HIGH(_timings)
0039fa   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0039fc   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0039fe   ffe9
003a00   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003a02   ffea
003a04   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003a06   f000
003a08   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a0a   1a81     xorwf	0x81, 0x1, 0       	XORWF	_PORTB, F
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
003a0c   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
003a0e   f000
003a10   6a01     clrf	0x1, 0              	CLRF	r0x01
003a12   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
003a14   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003a16   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
003a18   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003a1a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003a1c   ffe9
003a1e   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003a20   ffea
003a22   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003a24   f000
003a26   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a28   1a82     xorwf	0x82, 0x1, 0       	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
003a2a   c28d     movff	0x28d, 0           	MOVFF	_timingindex, r0x00
003a2c   f000
003a2e   6a01     clrf	0x1, 0              	CLRF	r0x01
003a30   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
003a32   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003a34   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
003a36   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003a38   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003a3a   ffe9
003a3c   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003a3e   ffea
003a40   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003a42   f000
003a44   5000     movf	0, 0, 0             	MOVF	r0x00, W
003a46   1a80     xorwf	0x80, 0x1, 0       	XORWF	_PORTA, F
003a48   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex++;
003a4a   2b8d     incf	0x8d, 0x1, 0x1      	INCF	_timingindex, F, B
                                           _00225_DS_:
003a4c   0e06     movlw	0x6                	movlw 6
003a4e   6f8c     movwf	0x8c, 0x1          	movwf _loopvar
                                           bucle:
003a50   0000     nop                      	NOP
003a52   2f8c     decfsz	0x8c, 0x1, 0x1    	decfsz _loopvar,1
003a54   ef28     goto	0x3a50              	goto bucle
003a56   f01d
                                           	
003a58   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003a5a   2b5d     incf	0x5d, 0x1, 0x1      	INCF	_timedivision, F, B
003a5c   d7b3     bra	0x39c4               	BRA	_00226_DS_
                                           _00230_DS_:
003a5e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003a60   f001
003a62   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003a64   f000
003a66   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003a68   ffd9
003a6a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void servos_init()
003ce2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003ce4   ffe5
003ce6   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003ce8   ffe5
003cea   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003cec   ffe5
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
003cee   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00210_DS_:
003cf0   0e12     movlw	0x12               	MOVLW	0x12
003cf2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003cf4   e20d     bc	0x3d10                	BC	_00213_DS_
003cf6   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003cf8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003cfa   6e01     movwf	0x1, 0             	MOVWF	r0x01
003cfc   6a02     clrf	0x2, 0              	CLRF	r0x02
003cfe   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003d00   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003d02   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
003d04   ffe9
003d06   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003d08   ffea
003d0a   68ef     setf	0xef, 0             	SETF	INDF0
003d0c   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
003d0e   d7f0     bra	0x3cf0               	BRA	_00210_DS_
                                           _00213_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H=0xFF;
003d10   68cf     setf	0xcf, 0             	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L=0x00;
003d12   6ace     clrf	0xce, 0             	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x01;
003d14   0e01     movlw	0x1                	MOVLW	0x01
003d16   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIE1bits.TMR1IE=1;
003d18   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.PEIE=1;
003d1a   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.GIE=1;
003d1c   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
003d1e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003d20   f002
003d22   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003d24   f001
003d26   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003d28   f000
003d2a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void pinmode(int input, int state)
002c2e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002c30   ffe5
002c32   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002c34   ffd9
002c36   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002c38   ffe5
002c3a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002c3c   ffe5
002c3e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002c40   ffe5
002c42   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002c44   ffe5
002c46   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002c48   ffe5
002c4a   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002c4c   ffe5
002c4e   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002c50   ffe5
002c52   0e02     movlw	0x2                	MOVLW	0x02
002c54   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002c56   f000
002c58   0e03     movlw	0x3                	MOVLW	0x03
002c5a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002c5c   f001
002c5e   0e04     movlw	0x4                	MOVLW	0x04
002c60   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002c62   f002
002c64   0e05     movlw	0x5                	MOVLW	0x05
002c66   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002c68   f003
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002c6a   0efe     movlw	0xfe               	MOVLW	LOW(_port)
002c6c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c6e   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c70   0e2b     movlw	0x2b               	MOVLW	HIGH(_port)
002c72   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c74   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c76   6a06     clrf	0x6, 0              	CLRF	r0x06
002c78   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c7a   6806     setf	0x6, 0              	SETF	r0x06
002c7c   0e00     movlw	0                  	MOVLW	UPPER(_port)
002c7e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c80   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c82   fff6
002c84   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c86   fff7
002c88   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c8a   fff8
002c8c   0009     tblrd	*+                 	TBLRD*+	
002c8e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c90   f004
002c92   0e05     movlw	0x5                	MOVLW	0x05
002c94   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002c96   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002c98   d11c     bra	0x2ed2               	BRA	_00196_DS_
002c9a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002c9c   ffe5
002c9e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002ca0   ffe5
002ca2   6a08     clrf	0x8, 0              	CLRF	r0x08
002ca4   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002ca6   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002ca8   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002caa   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002cac   0bfc     andlw	0xfc               	ANDLW	0xfc
002cae   6e07     movwf	0x7, 0             	MOVWF	r0x07
002cb0   0e00     movlw	0                  	MOVLW	UPPER(_00205_DS_)
002cb2   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002cb4   0e2c     movlw	0x2c               	MOVLW	HIGH(_00205_DS_)
002cb6   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002cb8   0ed0     movlw	0xd0               	MOVLW	LOW(_00205_DS_)
002cba   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002cbc   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002cbe   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002cc0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002cc2   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002cc4   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002cc6   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002cc8   f008
002cca   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002ccc   f007
002cce   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00205_DS_:
002cd0   ef72     goto	0x2ce4              	GOTO	_00175_DS_
002cd2   f016
002cd4   efa4     goto	0x2d48              	GOTO	_00179_DS_
002cd6   f016
002cd8   efd6     goto	0x2dac              	GOTO	_00183_DS_
002cda   f016
002cdc   ef08     goto	0x2e10              	GOTO	_00187_DS_
002cde   f017
002ce0   ef3a     goto	0x2e74              	GOTO	_00191_DS_
002ce2   f017
                                           _00175_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
002ce4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ce6   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002ce8   e017     bz	0x2d18                	BZ	_00177_DS_
002cea   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002cec   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cee   6e04     movwf	0x4, 0             	MOVWF	r0x04
002cf0   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002cf2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002cf4   6e05     movwf	0x5, 0             	MOVWF	r0x05
002cf6   6a06     clrf	0x6, 0              	CLRF	r0x06
002cf8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cfa   6806     setf	0x6, 0              	SETF	r0x06
002cfc   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cfe   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d00   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d02   fff6
002d04   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d06   fff7
002d08   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d0a   fff8
002d0c   0009     tblrd	*+                 	TBLRD*+	
002d0e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d10   f004
002d12   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d14   1293     iorwf	0x93, 0x1, 0       	IORWF	_TRISB, F
002d16   d0dd     bra	0x2ed2               	BRA	_00196_DS_
                                           _00177_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISB=TRISB & (255-mask[input]);
002d18   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002d1a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d1c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d1e   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002d20   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d22   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d24   6a06     clrf	0x6, 0              	CLRF	r0x06
002d26   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d28   6806     setf	0x6, 0              	SETF	r0x06
002d2a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d2c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d2e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d30   fff6
002d32   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d34   fff7
002d36   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d38   fff8
002d3a   0009     tblrd	*+                 	TBLRD*+	
002d3c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d3e   f004
002d40   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d42   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002d44   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002d46   d0c5     bra	0x2ed2               	BRA	_00196_DS_
                                           _00179_DS_:
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
002d48   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002d4a   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002d4c   e017     bz	0x2d7c                	BZ	_00181_DS_
002d4e   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002d50   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d52   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d54   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002d56   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d58   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d5a   6a06     clrf	0x6, 0              	CLRF	r0x06
002d5c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d5e   6806     setf	0x6, 0              	SETF	r0x06
002d60   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d62   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d64   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d66   fff6
002d68   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d6a   fff7
002d6c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d6e   fff8
002d70   0009     tblrd	*+                 	TBLRD*+	
002d72   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002d74   f004
002d76   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002d78   1294     iorwf	0x94, 0x1, 0       	IORWF	_TRISC, F
002d7a   d0ab     bra	0x2ed2               	BRA	_00196_DS_
                                           _00181_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISC=TRISC & (255-mask[input]);
002d7c   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002d7e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d80   6e04     movwf	0x4, 0             	MOVWF	r0x04
002d82   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002d84   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d86   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d88   6a06     clrf	0x6, 0              	CLRF	r0x06
002d8a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d8c   6806     setf	0x6, 0              	SETF	r0x06
002d8e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002d90   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002d92   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002d94   fff6
002d96   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002d98   fff7
002d9a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002d9c   fff8
002d9e   0009     tblrd	*+                 	TBLRD*+	
002da0   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002da2   f004
002da4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002da6   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002da8   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002daa   d093     bra	0x2ed2               	BRA	_00196_DS_
                                           _00183_DS_:
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002dac   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002dae   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002db0   e017     bz	0x2de0                	BZ	_00185_DS_
002db2   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002db4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002db6   6e04     movwf	0x4, 0             	MOVWF	r0x04
002db8   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002dba   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002dbc   6e05     movwf	0x5, 0             	MOVWF	r0x05
002dbe   6a06     clrf	0x6, 0              	CLRF	r0x06
002dc0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002dc2   6806     setf	0x6, 0              	SETF	r0x06
002dc4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002dc6   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002dc8   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002dca   fff6
002dcc   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002dce   fff7
002dd0   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002dd2   fff8
002dd4   0009     tblrd	*+                 	TBLRD*+	
002dd6   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002dd8   f004
002dda   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002ddc   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
002dde   d079     bra	0x2ed2               	BRA	_00196_DS_
                                           _00185_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002de0   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002de2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002de4   6e04     movwf	0x4, 0             	MOVWF	r0x04
002de6   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002de8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002dea   6e05     movwf	0x5, 0             	MOVWF	r0x05
002dec   6a06     clrf	0x6, 0              	CLRF	r0x06
002dee   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002df0   6806     setf	0x6, 0              	SETF	r0x06
002df2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002df4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002df6   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002df8   fff6
002dfa   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002dfc   fff7
002dfe   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002e00   fff8
002e02   0009     tblrd	*+                 	TBLRD*+	
002e04   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002e06   f004
002e08   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002e0a   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002e0c   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002e0e   d061     bra	0x2ed2               	BRA	_00196_DS_
                                           _00187_DS_:
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002e10   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e12   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002e14   e017     bz	0x2e44                	BZ	_00189_DS_
002e16   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002e18   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e1a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002e1c   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002e1e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e20   6e05     movwf	0x5, 0             	MOVWF	r0x05
002e22   6a06     clrf	0x6, 0              	CLRF	r0x06
002e24   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e26   6806     setf	0x6, 0              	SETF	r0x06
002e28   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e2a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002e2c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002e2e   fff6
002e30   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002e32   fff7
002e34   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002e36   fff8
002e38   0009     tblrd	*+                 	TBLRD*+	
002e3a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002e3c   f004
002e3e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002e40   1295     iorwf	0x95, 0x1, 0       	IORWF	_TRISD, F
002e42   d047     bra	0x2ed2               	BRA	_00196_DS_
                                           _00189_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISD=TRISD & (255-mask[input]);
002e44   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002e46   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e48   6e04     movwf	0x4, 0             	MOVWF	r0x04
002e4a   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002e4c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e4e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002e50   6a06     clrf	0x6, 0              	CLRF	r0x06
002e52   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e54   6806     setf	0x6, 0              	SETF	r0x06
002e56   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e58   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002e5a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002e5c   fff6
002e5e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002e60   fff7
002e62   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002e64   fff8
002e66   0009     tblrd	*+                 	TBLRD*+	
002e68   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002e6a   f004
002e6c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002e6e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002e70   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002e72   d02f     bra	0x2ed2               	BRA	_00196_DS_
                                           _00191_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
002e74   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e76   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002e78   e017     bz	0x2ea8                	BZ	_00193_DS_
002e7a   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002e7c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e7e   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e80   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002e82   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e84   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e86   6a04     clrf	0x4, 0              	CLRF	r0x04
002e88   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e8a   6804     setf	0x4, 0              	SETF	r0x04
002e8c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e8e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e90   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e92   fff6
002e94   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e96   fff7
002e98   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e9a   fff8
002e9c   0009     tblrd	*+                 	TBLRD*+	
002e9e   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002ea0   f002
002ea2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ea4   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
002ea6   d015     bra	0x2ed2               	BRA	_00196_DS_
                                           _00193_DS_:
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002ea8   6a02     clrf	0x2, 0              	CLRF	r0x02
002eaa   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002eac   6802     setf	0x2, 0              	SETF	r0x02
002eae   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002eb0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002eb2   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002eb4   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002eb6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002eb8   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002eba   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002ebc   fff6
002ebe   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002ec0   fff7
002ec2   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002ec4   fff8
002ec6   0009     tblrd	*+                 	TBLRD*+	
002ec8   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002eca   f000
002ecc   5000     movf	0, 0, 0             	MOVF	r0x00, W
002ece   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002ed0   1696     andwf	0x96, 0x1, 0       	ANDWF	_TRISE, F
                                           _00196_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002ed2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002ed4   f006
002ed6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002ed8   f005
002eda   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002edc   f004
002ede   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002ee0   f003
002ee2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002ee4   f002
002ee6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002ee8   f001
002eea   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002eec   f000
002eee   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002ef0   ffd9
002ef2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	int digitalread(int input)
0033cc   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0033ce   ffe5
0033d0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0033d2   ffd9
0033d4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0033d6   ffe5
0033d8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0033da   ffe5
0033dc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0033de   ffe5
0033e0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0033e2   ffe5
0033e4   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0033e6   ffe5
0033e8   0e02     movlw	0x2                	MOVLW	0x02
0033ea   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0033ec   f000
0033ee   0e03     movlw	0x3                	MOVLW	0x03
0033f0   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0033f2   f001
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
0033f4   0efe     movlw	0xfe               	MOVLW	LOW(_port)
0033f6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0033f8   6e02     movwf	0x2, 0             	MOVWF	r0x02
0033fa   0e2b     movlw	0x2b               	MOVLW	HIGH(_port)
0033fc   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0033fe   6e03     movwf	0x3, 0             	MOVWF	r0x03
003400   6a04     clrf	0x4, 0              	CLRF	r0x04
003402   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003404   6804     setf	0x4, 0              	SETF	r0x04
003406   0e00     movlw	0                  	MOVLW	UPPER(_port)
003408   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
00340a   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
00340c   fff6
00340e   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
003410   fff7
003412   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003414   fff8
003416   0009     tblrd	*+                 	TBLRD*+	
003418   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
00341a   f002
00341c   0e05     movlw	0x5                	MOVLW	0x05
00341e   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
003420   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003422   d0b9     bra	0x3596               	BRA	_00160_DS_
003424   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003426   ffe5
003428   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00342a   ffe5
00342c   6a06     clrf	0x6, 0              	CLRF	r0x06
00342e   3402     rlcf	0x2, 0, 0           	RLCF	r0x02, W
003430   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
003432   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
003434   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
003436   0bfc     andlw	0xfc               	ANDLW	0xfc
003438   6e05     movwf	0x5, 0             	MOVWF	r0x05
00343a   0e00     movlw	0                  	MOVLW	UPPER(_00170_DS_)
00343c   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
00343e   0e34     movlw	0x34               	MOVLW	HIGH(_00170_DS_)
003440   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
003442   0e5a     movlw	0x5a               	MOVLW	LOW(_00170_DS_)
003444   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
003446   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
003448   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
00344a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00344c   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
00344e   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
003450   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
003452   f006
003454   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
003456   f005
003458   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00170_DS_:
00345a   ef37     goto	0x346e              	GOTO	_00140_DS_
00345c   f01a
00345e   ef55     goto	0x34aa              	GOTO	_00144_DS_
003460   f01a
003462   ef73     goto	0x34e6              	GOTO	_00148_DS_
003464   f01a
003466   ef91     goto	0x3522              	GOTO	_00152_DS_
003468   f01a
00346a   efaf     goto	0x355e              	GOTO	_00156_DS_
00346c   f01a
                                           _00140_DS_:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
00346e   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003470   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003472   6e02     movwf	0x2, 0             	MOVWF	r0x02
003474   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003476   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003478   6e03     movwf	0x3, 0             	MOVWF	r0x03
00347a   6a04     clrf	0x4, 0              	CLRF	r0x04
00347c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00347e   6804     setf	0x4, 0              	SETF	r0x04
003480   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003482   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003484   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
003486   fff6
003488   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
00348a   fff7
00348c   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
00348e   fff8
003490   0009     tblrd	*+                 	TBLRD*+	
003492   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
003494   f002
003496   5081     movf	0x81, 0, 0          	MOVF	_PORTB, W
003498   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
00349a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00349c   e003     bz	0x34a4                	BZ	_00142_DS_
00349e   6af3     clrf	0xf3, 0             	CLRF	PRODL
0034a0   0e01     movlw	0x1                	MOVLW	0x01
0034a2   d07b     bra	0x359a               	BRA	_00161_DS_
                                           _00142_DS_:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
0034a4   6af3     clrf	0xf3, 0             	CLRF	PRODL
0034a6   6ae8     clrf	0xe8, 0             	CLRF	WREG
0034a8   d078     bra	0x359a               	BRA	_00161_DS_
                                           _00144_DS_:
                                           ;	.line	51; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
0034aa   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0034ac   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0034ae   6e02     movwf	0x2, 0             	MOVWF	r0x02
0034b0   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0034b2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0034b4   6e03     movwf	0x3, 0             	MOVWF	r0x03
0034b6   6a04     clrf	0x4, 0              	CLRF	r0x04
0034b8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0034ba   6804     setf	0x4, 0              	SETF	r0x04
0034bc   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0034be   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0034c0   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
0034c2   fff6
0034c4   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
0034c6   fff7
0034c8   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
0034ca   fff8
0034cc   0009     tblrd	*+                 	TBLRD*+	
0034ce   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
0034d0   f002
0034d2   5082     movf	0x82, 0, 0          	MOVF	_PORTC, W
0034d4   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
0034d6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0034d8   e003     bz	0x34e0                	BZ	_00146_DS_
0034da   6af3     clrf	0xf3, 0             	CLRF	PRODL
0034dc   0e01     movlw	0x1                	MOVLW	0x01
0034de   d05d     bra	0x359a               	BRA	_00161_DS_
                                           _00146_DS_:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
0034e0   6af3     clrf	0xf3, 0             	CLRF	PRODL
0034e2   6ae8     clrf	0xe8, 0             	CLRF	WREG
0034e4   d05a     bra	0x359a               	BRA	_00161_DS_
                                           _00148_DS_:
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
0034e6   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0034e8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0034ea   6e02     movwf	0x2, 0             	MOVWF	r0x02
0034ec   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0034ee   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0034f0   6e03     movwf	0x3, 0             	MOVWF	r0x03
0034f2   6a04     clrf	0x4, 0              	CLRF	r0x04
0034f4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0034f6   6804     setf	0x4, 0              	SETF	r0x04
0034f8   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0034fa   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0034fc   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
0034fe   fff6
003500   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
003502   fff7
003504   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003506   fff8
003508   0009     tblrd	*+                 	TBLRD*+	
00350a   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
00350c   f002
00350e   5080     movf	0x80, 0, 0          	MOVF	_PORTA, W
003510   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
003512   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003514   e003     bz	0x351c                	BZ	_00150_DS_
003516   6af3     clrf	0xf3, 0             	CLRF	PRODL
003518   0e01     movlw	0x1                	MOVLW	0x01
00351a   d03f     bra	0x359a               	BRA	_00161_DS_
                                           _00150_DS_:
                                           ;	.line	55; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
00351c   6af3     clrf	0xf3, 0             	CLRF	PRODL
00351e   6ae8     clrf	0xe8, 0             	CLRF	WREG
003520   d03c     bra	0x359a               	BRA	_00161_DS_
                                           _00152_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
003522   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003524   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003526   6e02     movwf	0x2, 0             	MOVWF	r0x02
003528   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00352a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00352c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00352e   6a04     clrf	0x4, 0              	CLRF	r0x04
003530   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003532   6804     setf	0x4, 0              	SETF	r0x04
003534   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003536   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003538   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
00353a   fff6
00353c   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
00353e   fff7
003540   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003542   fff8
003544   0009     tblrd	*+                 	TBLRD*+	
003546   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
003548   f002
00354a   5083     movf	0x83, 0, 0          	MOVF	_PORTD, W
00354c   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
00354e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003550   e003     bz	0x3558                	BZ	_00154_DS_
003552   6af3     clrf	0xf3, 0             	CLRF	PRODL
003554   0e01     movlw	0x1                	MOVLW	0x01
003556   d021     bra	0x359a               	BRA	_00161_DS_
                                           _00154_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003558   6af3     clrf	0xf3, 0             	CLRF	PRODL
00355a   6ae8     clrf	0xe8, 0             	CLRF	WREG
00355c   d01e     bra	0x359a               	BRA	_00161_DS_
                                           _00156_DS_:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
00355e   6a02     clrf	0x2, 0              	CLRF	r0x02
003560   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003562   6802     setf	0x2, 0              	SETF	r0x02
003564   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003566   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003568   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00356a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00356c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00356e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003570   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003572   fff6
003574   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003576   fff7
003578   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
00357a   fff8
00357c   0009     tblrd	*+                 	TBLRD*+	
00357e   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003580   f000
003582   5084     movf	0x84, 0, 0          	MOVF	_PORTE, W
003584   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
003586   5000     movf	0, 0, 0             	MOVF	r0x00, W
003588   e003     bz	0x3590                	BZ	_00158_DS_
00358a   6af3     clrf	0xf3, 0             	CLRF	PRODL
00358c   0e01     movlw	0x1                	MOVLW	0x01
00358e   d005     bra	0x359a               	BRA	_00161_DS_
                                           _00158_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
003590   6af3     clrf	0xf3, 0             	CLRF	PRODL
003592   6ae8     clrf	0xe8, 0             	CLRF	WREG
003594   d002     bra	0x359a               	BRA	_00161_DS_
                                           _00160_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	return (0);
003596   6af3     clrf	0xf3, 0             	CLRF	PRODL
003598   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00161_DS_:
00359a   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
00359c   f004
00359e   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0035a0   f003
0035a2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0035a4   f002
0035a6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0035a8   f001
0035aa   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0035ac   f000
0035ae   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0035b0   ffd9
0035b2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void digitalwrite(int output,int state)
002ef4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002ef6   ffe5
002ef8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002efa   ffd9
002efc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002efe   ffe5
002f00   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002f02   ffe5
002f04   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002f06   ffe5
002f08   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002f0a   ffe5
002f0c   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002f0e   ffe5
002f10   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002f12   ffe5
002f14   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002f16   ffe5
002f18   0e02     movlw	0x2                	MOVLW	0x02
002f1a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002f1c   f000
002f1e   0e03     movlw	0x3                	MOVLW	0x03
002f20   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002f22   f001
002f24   0e04     movlw	0x4                	MOVLW	0x04
002f26   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002f28   f002
002f2a   0e05     movlw	0x5                	MOVLW	0x05
002f2c   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002f2e   f003
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[output])
002f30   0efe     movlw	0xfe               	MOVLW	LOW(_port)
002f32   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002f34   6e04     movwf	0x4, 0             	MOVWF	r0x04
002f36   0e2b     movlw	0x2b               	MOVLW	HIGH(_port)
002f38   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002f3a   6e05     movwf	0x5, 0             	MOVWF	r0x05
002f3c   6a06     clrf	0x6, 0              	CLRF	r0x06
002f3e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002f40   6806     setf	0x6, 0              	SETF	r0x06
002f42   0e00     movlw	0                  	MOVLW	UPPER(_port)
002f44   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002f46   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002f48   fff6
002f4a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002f4c   fff7
002f4e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002f50   fff8
002f52   0009     tblrd	*+                 	TBLRD*+	
002f54   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002f56   f004
002f58   0e05     movlw	0x5                	MOVLW	0x05
002f5a   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002f5c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002f5e   d11c     bra	0x3198               	BRA	_00126_DS_
002f60   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002f62   ffe5
002f64   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002f66   ffe5
002f68   6a08     clrf	0x8, 0              	CLRF	r0x08
002f6a   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002f6c   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002f6e   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002f70   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002f72   0bfc     andlw	0xfc               	ANDLW	0xfc
002f74   6e07     movwf	0x7, 0             	MOVWF	r0x07
002f76   0e00     movlw	0                  	MOVLW	UPPER(_00135_DS_)
002f78   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002f7a   0e2f     movlw	0x2f               	MOVLW	HIGH(_00135_DS_)
002f7c   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002f7e   0e96     movlw	0x96               	MOVLW	LOW(_00135_DS_)
002f80   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002f82   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002f84   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002f86   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002f88   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002f8a   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002f8c   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002f8e   f008
002f90   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002f92   f007
002f94   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00135_DS_:
002f96   efd5     goto	0x2faa              	GOTO	_00105_DS_
002f98   f017
002f9a   ef07     goto	0x300e              	GOTO	_00109_DS_
002f9c   f018
002f9e   ef39     goto	0x3072              	GOTO	_00113_DS_
002fa0   f018
002fa2   ef6b     goto	0x30d6              	GOTO	_00117_DS_
002fa4   f018
002fa6   ef9d     goto	0x313a              	GOTO	_00121_DS_
002fa8   f018
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002faa   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002fac   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002fae   e017     bz	0x2fde                	BZ	_00107_DS_
002fb0   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002fb2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002fb4   6e04     movwf	0x4, 0             	MOVWF	r0x04
002fb6   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002fb8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002fba   6e05     movwf	0x5, 0             	MOVWF	r0x05
002fbc   6a06     clrf	0x6, 0              	CLRF	r0x06
002fbe   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002fc0   6806     setf	0x6, 0              	SETF	r0x06
002fc2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002fc4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002fc6   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002fc8   fff6
002fca   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002fcc   fff7
002fce   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002fd0   fff8
002fd2   0009     tblrd	*+                 	TBLRD*+	
002fd4   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002fd6   f004
002fd8   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002fda   1281     iorwf	0x81, 0x1, 0       	IORWF	_PORTB, F
002fdc   d0dd     bra	0x3198               	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002fde   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
002fe0   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002fe2   6e04     movwf	0x4, 0             	MOVWF	r0x04
002fe4   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
002fe6   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002fe8   6e05     movwf	0x5, 0             	MOVWF	r0x05
002fea   6a06     clrf	0x6, 0              	CLRF	r0x06
002fec   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002fee   6806     setf	0x6, 0              	SETF	r0x06
002ff0   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ff2   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002ff4   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002ff6   fff6
002ff8   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ffa   fff7
002ffc   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002ffe   fff8
003000   0009     tblrd	*+                 	TBLRD*+	
003002   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003004   f004
003006   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003008   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00300a   1681     andwf	0x81, 0x1, 0       	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
00300c   d0c5     bra	0x3198               	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
00300e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003010   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
003012   e017     bz	0x3042                	BZ	_00111_DS_
003014   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003016   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003018   6e04     movwf	0x4, 0             	MOVWF	r0x04
00301a   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00301c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00301e   6e05     movwf	0x5, 0             	MOVWF	r0x05
003020   6a06     clrf	0x6, 0              	CLRF	r0x06
003022   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003024   6806     setf	0x6, 0              	SETF	r0x06
003026   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003028   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00302a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00302c   fff6
00302e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003030   fff7
003032   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003034   fff8
003036   0009     tblrd	*+                 	TBLRD*+	
003038   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00303a   f004
00303c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00303e   1282     iorwf	0x82, 0x1, 0       	IORWF	_PORTC, F
003040   d0ab     bra	0x3198               	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTC=PORTC & (255-mask[output]);
003042   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003044   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003046   6e04     movwf	0x4, 0             	MOVWF	r0x04
003048   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00304a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00304c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00304e   6a06     clrf	0x6, 0              	CLRF	r0x06
003050   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003052   6806     setf	0x6, 0              	SETF	r0x06
003054   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003056   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003058   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00305a   fff6
00305c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00305e   fff7
003060   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003062   fff8
003064   0009     tblrd	*+                 	TBLRD*+	
003066   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003068   f004
00306a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00306c   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
00306e   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
003070   d093     bra	0x3198               	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
003072   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003074   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
003076   e017     bz	0x30a6                	BZ	_00115_DS_
003078   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00307a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00307c   6e04     movwf	0x4, 0             	MOVWF	r0x04
00307e   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003080   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003082   6e05     movwf	0x5, 0             	MOVWF	r0x05
003084   6a06     clrf	0x6, 0              	CLRF	r0x06
003086   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003088   6806     setf	0x6, 0              	SETF	r0x06
00308a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00308c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00308e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003090   fff6
003092   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003094   fff7
003096   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
003098   fff8
00309a   0009     tblrd	*+                 	TBLRD*+	
00309c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00309e   f004
0030a0   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0030a2   1280     iorwf	0x80, 0x1, 0       	IORWF	_PORTA, F
0030a4   d079     bra	0x3198               	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTA=PORTA & (255-mask[output]);
0030a6   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0030a8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030aa   6e04     movwf	0x4, 0             	MOVWF	r0x04
0030ac   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0030ae   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0030b0   6e05     movwf	0x5, 0             	MOVWF	r0x05
0030b2   6a06     clrf	0x6, 0              	CLRF	r0x06
0030b4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0030b6   6806     setf	0x6, 0              	SETF	r0x06
0030b8   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0030ba   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0030bc   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0030be   fff6
0030c0   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0030c2   fff7
0030c4   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0030c6   fff8
0030c8   0009     tblrd	*+                 	TBLRD*+	
0030ca   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0030cc   f004
0030ce   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0030d0   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0030d2   1680     andwf	0x80, 0x1, 0       	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
0030d4   d061     bra	0x3198               	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
0030d6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0030d8   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0030da   e017     bz	0x310a                	BZ	_00119_DS_
0030dc   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
0030de   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030e0   6e04     movwf	0x4, 0             	MOVWF	r0x04
0030e2   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
0030e4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0030e6   6e05     movwf	0x5, 0             	MOVWF	r0x05
0030e8   6a06     clrf	0x6, 0              	CLRF	r0x06
0030ea   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0030ec   6806     setf	0x6, 0              	SETF	r0x06
0030ee   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0030f0   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0030f2   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0030f4   fff6
0030f6   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0030f8   fff7
0030fa   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0030fc   fff8
0030fe   0009     tblrd	*+                 	TBLRD*+	
003100   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003102   f004
003104   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003106   1283     iorwf	0x83, 0x1, 0       	IORWF	_PORTD, F
003108   d047     bra	0x3198               	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTD=PORTD & (255-mask[output]);
00310a   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
00310c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00310e   6e04     movwf	0x4, 0             	MOVWF	r0x04
003110   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003112   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
003114   6e05     movwf	0x5, 0             	MOVWF	r0x05
003116   6a06     clrf	0x6, 0              	CLRF	r0x06
003118   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00311a   6806     setf	0x6, 0              	SETF	r0x06
00311c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00311e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
003120   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
003122   fff6
003124   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
003126   fff7
003128   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00312a   fff8
00312c   0009     tblrd	*+                 	TBLRD*+	
00312e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
003130   f004
003132   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
003134   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
003136   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
003138   d02f     bra	0x3198               	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
00313a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00313c   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
00313e   e017     bz	0x316e                	BZ	_00123_DS_
003140   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003142   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003144   6e02     movwf	0x2, 0             	MOVWF	r0x02
003146   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
003148   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00314a   6e03     movwf	0x3, 0             	MOVWF	r0x03
00314c   6a04     clrf	0x4, 0              	CLRF	r0x04
00314e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003150   6804     setf	0x4, 0              	SETF	r0x04
003152   0e00     movlw	0                  	MOVLW	UPPER(_mask)
003154   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
003156   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
003158   fff6
00315a   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
00315c   fff7
00315e   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
003160   fff8
003162   0009     tblrd	*+                 	TBLRD*+	
003164   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
003166   f002
003168   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00316a   1284     iorwf	0x84, 0x1, 0       	IORWF	_PORTE, F
00316c   d015     bra	0x3198               	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTE=PORTE & (255-mask[output]);
00316e   6a02     clrf	0x2, 0              	CLRF	r0x02
003170   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
003172   6802     setf	0x2, 0              	SETF	r0x02
003174   0ee0     movlw	0xe0               	MOVLW	LOW(_mask)
003176   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003178   0e2b     movlw	0x2b               	MOVLW	HIGH(_mask)
00317a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00317c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00317e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003180   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003182   fff6
003184   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003186   fff7
003188   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
00318a   fff8
00318c   0009     tblrd	*+                 	TBLRD*+	
00318e   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
003190   f000
003192   5000     movf	0, 0, 0             	MOVF	r0x00, W
003194   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
003196   1684     andwf	0x84, 0x1, 0       	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
003198   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
00319a   f006
00319c   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00319e   f005
0031a0   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0031a2   f004
0031a4   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0031a6   f003
0031a8   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0031aa   f002
0031ac   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0031ae   f001
0031b0   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0031b2   f000
0031b4   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0031b6   ffd9
0031b8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
002be0   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002be2   0804     sublw	0x4                
002be4   2010     addwfc	0x10, 0, 0        
002be6   8040     bsf	0x40, 0, 0           
002be8   8040     bsf	0x40, 0, 0           
002bea   0201     mulwf	0x1, 0             
002bec   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002bee   0402     decf	0x2, 0, 0           
002bf0   2008     addwfc	0x8, 0, 0         
002bf2   0201     mulwf	0x1, 0             
002bf4   0104     movlb	0x4                
002bf6   0402     decf	0x2, 0, 0           
002bf8   1008     iorwf	0x8, 0, 0          	DB	0x08, 0x10, 0x20, 0x40, 0x80
002bfa   4020     rrncf	0x20, 0, 0         
002bfc   0080     dw	0x80  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _port:
002bfe   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
002c00   0000     nop                      
002c02   0000     nop                      
002c04   0000     nop                      
002c06   0101     movlb	0x1                
002c08   0101     movlb	0x1                
002c0a   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002c0c   0202     mulwf	0x2, 0             
002c0e   0202     mulwf	0x2, 0             
002c10   0404     decf	0x4, 0, 0           
002c12   0304     mulwf	0x4, 0x1           
002c14   0303     mulwf	0x3, 0x1           
002c16   0303     mulwf	0x3, 0x1           	DB	0x03, 0x03, 0x03, 0x03, 0x03
002c18   0303     mulwf	0x3, 0x1           
002c1a   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002c1c   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002c1e   0804     sublw	0x4                
002c20   2010     addwfc	0x10, 0, 0        
002c22   8040     bsf	0x40, 0, 0           
002c24   8040     bsf	0x40, 0, 0           
002c26   0201     mulwf	0x1, 0             
002c28   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002c2a   0402     decf	0x2, 0, 0           
002c2c   2008     addwfc	0x8, 0, 0         
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 5614 (0x15ee) bytes ( 4.28%)
                                           ;           	 2807 (0x0af7) words
                                           ; udata size:	   96 (0x0060) bytes ( 5.36%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
