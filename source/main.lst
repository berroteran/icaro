gplink-0.13.7 beta
Copyright (c) 1998-2005 gputils project
Listing File Generated: 6-3-2012  23:14:11
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : free open source ANSI-C Compiler
                                           ; Version 2.9.0 #5416 (Aug  9 2009) (UNIX)
                                           ; This file was generated Sun Jun  3 23:14:07 2012
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _i
                                           	global _tiempo2
                                           	global _tiempo
                                           	global _loopvar
                                           	global _phase
                                           	global _needreordering
                                           	global _timingindex
                                           	global _timedivision
                                           	global _timings
                                           	global _activatedservos
                                           	global _servovalues
                                           	global _digitalwrite
                                           	global _digitalread
                                           	global _pinmode
                                           	global _servos_init
                                           	global _ServoAttach
                                           	global _ServoDetach
                                           	global _ServoWrite
                                           	global _ServoRead
                                           	global _ServoMinimumPulse
                                           	global _ServoMaximumPulse
                                           	global _servos_interrupt
                                           	global _analog_init
                                           	global _analogread
                                           	global _Delayms
                                           	global _Delayus
                                           	global _epap_in
                                           	global _epap_out
                                           	global _epapin_init
                                           	global _epapout_init
                                           	global _setup
                                           	global _sensor
                                           	global _loop
                                           	global _pinguino_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           	global _mask
                                           	global _port
                                           	global _servomasks
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _delay10ktcy
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _phase	db	0x00
                                           _needreordering	db	0x00
                                           _timedivision	db	0x00
                                           _activatedservos	db	0x00, 0x00, 0x00
                                           _tiempo	db	0x00, 0x00, 0x00, 0x00
                                           _tiempo2	db	0x00, 0x00, 0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           udata_main_0	udata
                                           _loopvar	res	1
                                           
                                           udata_main_1	udata
                                           _i	res	1
                                           
                                           udata_main_2	udata
                                           _servovalues	res	18
                                           
                                           udata_main_3	udata
                                           _timingindex	res	1
                                           
                                           udata_main_4	udata
                                           _timings	res	72
                                           
                                           udata_main_5	udata
                                           _SortServoTimings_mascaratotal_1_1	res	3
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	96; /home/valentin/github/icaro-bloques/source/main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	132; /home/valentin/github/icaro-bloques/source/main.c	servos_interrupt();
002044   ec81     call	0x3502, 0           	CALL	_servos_interrupt
002046   f01a
002048   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00204a   fffb
00204c   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00204e   fffa
002050   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
002052   ffea
002054   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002056   ffe9
002058   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
00205a   fff4
00205c   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00205e   fff3
002060   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
002062   ffe0
002064   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002066   ffd8
002068   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
00206a   ffe8
00206c   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	140; /home/valentin/github/icaro-bloques/source/main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	142; /home/valentin/github/icaro-bloques/source/main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__pinguino_main	code
                                           _pinguino_main:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/source/main.c	PIE1=0;
003654   6a9d     clrf	0x9d, 0             	CLRF	_PIE1
                                           ;	.line	53; /home/valentin/github/icaro-bloques/source/main.c	PIE2=0;
003656   6aa0     clrf	0xa0, 0             	CLRF	_PIE2
                                           ;	.line	54; /home/valentin/github/icaro-bloques/source/main.c	ADCON1=0x0F;
003658   0e0f     movlw	0xf                	MOVLW	0x0f
00365a   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	59; /home/valentin/github/icaro-bloques/source/main.c	setup();
00365c   ec85     call	0x2f0a, 0           	CALL	_setup
00365e   f017
                                           ;	.line	61; /home/valentin/github/icaro-bloques/source/main.c	analog_init();
003660   ec5a     call	0x36b4, 0           	CALL	_analog_init
003662   f01b
                                           ;	.line	67; /home/valentin/github/icaro-bloques/source/main.c	servos_init();
003664   ec5c     call	0x34b8, 0           	CALL	_servos_init
003666   f01a
                                           ;	.line	83; /home/valentin/github/icaro-bloques/source/main.c	INTCONbits.PEIE=1;
003668   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	84; /home/valentin/github/icaro-bloques/source/main.c	INTCONbits.GIE=1;
00366a   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _00515_DS_:
                                           ;	.line	89; /home/valentin/github/icaro-bloques/source/main.c	loop();
00366c   ec46     call	0x368c, 0           	CALL	_loop
00366e   f01b
003670   d7fd     bra	0x366c               	BRA	_00515_DS_
003672   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__loop	code
                                           _loop:
                                           ;	.line	85; /home/valentin/github/icaro-bloques/source/user.c	PORTD=96 ;
00368c   0e60     movlw	0x60               	MOVLW	0x60
00368e   6e83     movwf	0x83, 0            	MOVWF	_PORTD
                                           ;	.line	86; /home/valentin/github/icaro-bloques/source/user.c	Delayms(0  );
003690   0e00     movlw	0                  	MOVLW	0x00
003692   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003694   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003696   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
003698   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00369a   ec21     call	0x3242, 0           	CALL	_Delayms
00369c   f019
00369e   0e04     movlw	0x4                	MOVLW	0x04
0036a0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0036a2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__sensor	code
                                           _sensor:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/source/user.c	unsigned int sensor(int valor)
003618   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00361a   ffe5
00361c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00361e   ffd9
003620   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003622   ffe5
003624   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003626   ffe5
003628   0e02     movlw	0x2                	MOVLW	0x02
00362a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00362c   f000
00362e   0e03     movlw	0x3                	MOVLW	0x03
003630   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003632   f001
                                           ;	.line	67; /home/valentin/github/icaro-bloques/source/user.c	an=analogread(valor);
003634   5000     movf	0, 0, 0             	MOVF	r0x00, W
003636   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
003638   ecbb     call	0x3376, 0           	CALL	_analogread
00363a   f019
00363c   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
00363e   f001
003640   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	69; /home/valentin/github/icaro-bloques/source/user.c	return an;
003642   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
003644   fff3
003646   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003648   f001
00364a   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00364c   f000
00364e   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003650   ffd9
003652   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__setup	code
                                           _setup:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/source/user.c	TRISB=0;
002f0a   6a93     clrf	0x93, 0             	CLRF	_TRISB
                                           ;	.line	27; /home/valentin/github/icaro-bloques/source/user.c	pinmode(15,INPUT);
002f0c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f0e   0e01     movlw	0x1                	MOVLW	0x01
002f10   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f12   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f14   0e0f     movlw	0xf                	MOVLW	0x0f
002f16   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f18   eccb     call	0x2796, 0           	CALL	_pinmode
002f1a   f013
002f1c   0e04     movlw	0x4                	MOVLW	0x04
002f1e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/source/user.c	pinmode(21,INPUT);
002f20   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f22   0e01     movlw	0x1                	MOVLW	0x01
002f24   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f26   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f28   0e15     movlw	0x15               	MOVLW	0x15
002f2a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f2c   eccb     call	0x2796, 0           	CALL	_pinmode
002f2e   f013
002f30   0e04     movlw	0x4                	MOVLW	0x04
002f32   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	31; /home/valentin/github/icaro-bloques/source/user.c	pinmode(22,INPUT);
002f34   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f36   0e01     movlw	0x1                	MOVLW	0x01
002f38   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f3a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f3c   0e16     movlw	0x16               	MOVLW	0x16
002f3e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f40   eccb     call	0x2796, 0           	CALL	_pinmode
002f42   f013
002f44   0e04     movlw	0x4                	MOVLW	0x04
002f46   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	33; /home/valentin/github/icaro-bloques/source/user.c	pinmode(23,INPUT);
002f48   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f4a   0e01     movlw	0x1                	MOVLW	0x01
002f4c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f4e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f50   0e17     movlw	0x17               	MOVLW	0x17
002f52   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f54   eccb     call	0x2796, 0           	CALL	_pinmode
002f56   f013
002f58   0e04     movlw	0x4                	MOVLW	0x04
002f5a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	35; /home/valentin/github/icaro-bloques/source/user.c	pinmode(24,INPUT);
002f5c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f5e   0e01     movlw	0x1                	MOVLW	0x01
002f60   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f62   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f64   0e18     movlw	0x18               	MOVLW	0x18
002f66   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f68   eccb     call	0x2796, 0           	CALL	_pinmode
002f6a   f013
002f6c   0e04     movlw	0x4                	MOVLW	0x04
002f6e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/source/user.c	pinmode(25,OUTPUT);
002f70   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f72   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f74   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f76   0e19     movlw	0x19               	MOVLW	0x19
002f78   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f7a   eccb     call	0x2796, 0           	CALL	_pinmode
002f7c   f013
002f7e   0e04     movlw	0x4                	MOVLW	0x04
002f80   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	39; /home/valentin/github/icaro-bloques/source/user.c	pinmode(26,OUTPUT);
002f82   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f84   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f86   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f88   0e1a     movlw	0x1a               	MOVLW	0x1a
002f8a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f8c   eccb     call	0x2796, 0           	CALL	_pinmode
002f8e   f013
002f90   0e04     movlw	0x4                	MOVLW	0x04
002f92   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	41; /home/valentin/github/icaro-bloques/source/user.c	pinmode(27,OUTPUT);
002f94   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f96   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f98   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002f9a   0e1b     movlw	0x1b               	MOVLW	0x1b
002f9c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002f9e   eccb     call	0x2796, 0           	CALL	_pinmode
002fa0   f013
002fa2   0e04     movlw	0x4                	MOVLW	0x04
002fa4   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	43; /home/valentin/github/icaro-bloques/source/user.c	pinmode(28,OUTPUT);
002fa6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fa8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002faa   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002fac   0e1c     movlw	0x1c               	MOVLW	0x1c
002fae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fb0   eccb     call	0x2796, 0           	CALL	_pinmode
002fb2   f013
002fb4   0e04     movlw	0x4                	MOVLW	0x04
002fb6   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	45; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(10);
002fb8   0e0a     movlw	0xa                	MOVLW	0x0a
002fba   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fbc   ecf6     call	0x2fec, 0           	CALL	_ServoAttach
002fbe   f017
002fc0   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	47; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(11);
002fc2   0e0b     movlw	0xb                	MOVLW	0x0b
002fc4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fc6   ecf6     call	0x2fec, 0           	CALL	_ServoAttach
002fc8   f017
002fca   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	49; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(12);
002fcc   0e0c     movlw	0xc                	MOVLW	0x0c
002fce   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fd0   ecf6     call	0x2fec, 0           	CALL	_ServoAttach
002fd2   f017
002fd4   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	51; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(8);
002fd6   0e08     movlw	0x8                	MOVLW	0x08
002fd8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fda   ecf6     call	0x2fec, 0           	CALL	_ServoAttach
002fdc   f017
002fde   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
                                           ;	.line	53; /home/valentin/github/icaro-bloques/source/user.c	ServoAttach(9);
002fe0   0e09     movlw	0x9                	MOVLW	0x09
002fe2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002fe4   ecf6     call	0x2fec, 0           	CALL	_ServoAttach
002fe6   f017
002fe8   2ae1     incf	0xe1, 0x1, 0        	INCF	FSR1L, F
002fea   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapout_init	code
                                           _epapout_init:
                                           ;	.line	40; /home/valentin/github/icaro-bloques/source/main.c	void epapout_init() { return; }
0036dc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epapin_init	code
                                           _epapin_init:
                                           ;	.line	39; /home/valentin/github/icaro-bloques/source/main.c	void epapin_init() { return; }
0036de   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_out	code
                                           _epap_out:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/source/main.c	void epap_out() { return; }
0036e0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__epap_in	code
                                           _epap_in:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/source/main.c	void epap_in() { return; }
0036e2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayus	code
                                           _Delayus:
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayus(int microsecondes)
003466   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003468   ffe5
00346a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00346c   ffd9
00346e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003470   ffe5
003472   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003474   ffe5
003476   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003478   ffe5
00347a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00347c   ffe5
00347e   0e02     movlw	0x2                	MOVLW	0x02
003480   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003482   f000
003484   0e03     movlw	0x3                	MOVLW	0x03
003486   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003488   f001
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<microsecondes;i++);
00348a   6a02     clrf	0x2, 0              	CLRF	r0x02
00348c   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00465_DS_:
00348e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003490   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
003492   e102     bnz	0x3498               	BNZ	_00474_DS_
003494   5000     movf	0, 0, 0             	MOVF	r0x00, W
003496   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
                                           _00474_DS_:
003498   e204     bc	0x34a2                	BC	_00469_DS_
00349a   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
00349c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00349e   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0034a0   d7f6     bra	0x348e               	BRA	_00465_DS_
                                           _00469_DS_:
0034a2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0034a4   f003
0034a6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0034a8   f002
0034aa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0034ac   f001
0034ae   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0034b0   f000
0034b2   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0034b4   ffd9
0034b6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__Delayms	code
                                           _Delayms:
                                           ;	.line	9; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	void Delayms(unsigned long milliseconde)
003242   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003244   ffe5
003246   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003248   ffd9
00324a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00324c   ffe5
00324e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003250   ffe5
003252   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003254   ffe5
003256   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003258   ffe5
00325a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00325c   ffe5
00325e   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
003260   ffe5
003262   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
003264   ffe5
003266   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
003268   ffe5
00326a   0e02     movlw	0x2                	MOVLW	0x02
00326c   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00326e   f000
003270   0e03     movlw	0x3                	MOVLW	0x03
003272   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
003274   f001
003276   0e04     movlw	0x4                	MOVLW	0x04
003278   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
00327a   f002
00327c   0e05     movlw	0x5                	MOVLW	0x05
00327e   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
003280   f003
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/arduinodelay.c	for (i=0;i<milliseconde;i++) delay10ktcy(1);
003282   6a04     clrf	0x4, 0              	CLRF	r0x04
003284   6a05     clrf	0x5, 0              	CLRF	r0x05
003286   6a06     clrf	0x6, 0              	CLRF	r0x06
003288   6a07     clrf	0x7, 0              	CLRF	r0x07
                                           _00451_DS_:
00328a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00328c   5c07     subwf	0x7, 0, 0          	SUBWF	r0x07, W
00328e   e108     bnz	0x32a0               	BNZ	_00460_DS_
003290   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
003292   5c06     subwf	0x6, 0, 0          	SUBWF	r0x06, W
003294   e105     bnz	0x32a0               	BNZ	_00460_DS_
003296   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003298   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
00329a   e102     bnz	0x32a0               	BNZ	_00460_DS_
00329c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00329e   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
                                           _00460_DS_:
0032a0   e20b     bc	0x32b8                	BC	_00455_DS_
0032a2   0e01     movlw	0x1                	MOVLW	0x01
0032a4   ec37     call	0x6e, 0             	CALL	_delay10ktcy
0032a6   f000
0032a8   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
0032aa   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032ac   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
0032ae   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032b0   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
0032b2   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0032b4   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
0032b6   d7e9     bra	0x328a               	BRA	_00451_DS_
                                           _00455_DS_:
0032b8   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0032ba   f007
0032bc   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0032be   f006
0032c0   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0032c2   f005
0032c4   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0032c6   f004
0032c8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0032ca   f003
0032cc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0032ce   f002
0032d0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0032d2   f001
0032d4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0032d6   f000
0032d8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0032da   ffd9
0032dc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analogread	code
                                           _analogread:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	unsigned int analogread(unsigned char channel)
003376   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003378   ffe5
00337a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00337c   ffd9
00337e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003380   ffe5
003382   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003384   ffe5
003386   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003388   ffe5
00338a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00338c   ffe5
00338e   0e02     movlw	0x2                	MOVLW	0x02
003390   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003392   f000
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x0A;
003394   0e0a     movlw	0xa                	MOVLW	0x0a
003396   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0=(channel-13)*4;
003398   0ef3     movlw	0xf3               	MOVLW	0xf3
00339a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; ;multiply lit val:0x04 by variable r0x00 and store in _ADCON0
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
00339c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00339e   0d04     mullw	0x4                	MULLW	0x04
0033a0   cff3     movff	0xff3, 0xfc2       	MOVFF	PRODL, _ADCON0
0033a2   ffc2
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
0033a4   0ebd     movlw	0xbd               	MOVLW	0xbd
0033a6   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=1;
0033a8   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0bits, 0
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	for (result=1;result<10;result++) __asm NOP __endasm;
0033aa   0e09     movlw	0x9                	MOVLW	0x09
0033ac   6e00     movwf	0, 0               	MOVWF	r0x00
0033ae   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00445_DS_:
0033b0   0000     nop                      	NOP 
0033b2   0eff     movlw	0xff               	MOVLW	0xff
0033b4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0033b6   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0033b8   0601     decf	0x1, 0x1, 0         	DECF	r0x01, F
0033ba   5000     movf	0, 0, 0             	MOVF	r0x00, W
0033bc   1001     iorwf	0x1, 0, 0          	IORWF	r0x01, W
0033be   e1f8     bnz	0x33b0               	BNZ	_00445_DS_
                                           ;	.line	33; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.GO=1;
0033c0   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
                                           _00440_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	while (ADCON0bits.GO);
0033c2   b2c2     btfsc	0xc2, 0x1, 0       	BTFSC	_ADCON0bits, 1
0033c4   d7fe     bra	0x33c2               	BRA	_00440_DS_
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result=ADRESH<<8;
0033c6   cfc4     movff	0xfc4, 0           	MOVFF	_ADRESH, r0x00
0033c8   f000
0033ca   6a01     clrf	0x1, 0              	CLRF	r0x01
0033cc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0033ce   6e03     movwf	0x3, 0             	MOVWF	r0x03
0033d0   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	result+=ADRESL;
0033d2   cfc3     movff	0xfc3, 0           	MOVFF	_ADRESL, r0x00
0033d4   f000
0033d6   6a01     clrf	0x1, 0              	CLRF	r0x01
0033d8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0033da   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
0033dc   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0033de   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON0bits.ADON=0;
0033e0   90c2     bcf	0xc2, 0, 0           	BCF	_ADCON0bits, 0
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	return(result);
0033e2   c003     movff	0x3, 0xff3         	MOVFF	r0x03, PRODL
0033e4   fff3
0033e6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0033e8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0033ea   f003
0033ec   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0033ee   f002
0033f0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0033f2   f001
0033f4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0033f6   f000
0033f8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0033fa   ffd9
0033fc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__analog_init	code
                                           _analog_init:
                                           ;	.line	13; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISA=TRISA | 0x2F;
0036b4   0e2f     movlw	0x2f               	MOVLW	0x2f
0036b6   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	14; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	TRISE=TRISE | 0x07;
0036b8   0e07     movlw	0x7                	MOVLW	0x07
0036ba   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
                                           ;	.line	15; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON1=0x07;
0036bc   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	16; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/analog.c	ADCON2=0xBD;
0036be   0ebd     movlw	0xbd               	MOVLW	0xbd
0036c0   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
0036c2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_interrupt	code
                                           _servos_interrupt:
                                           ;	.line	288; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (PIR1bits.TMR1IF) {
003502   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
003504   d020     bra	0x3546               	BRA	_00430_DS_
                                           ;	.line	289; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIR1bits.TMR1IF=0;
003506   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           ;	.line	290; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x00;
003508   6acd     clrf	0xcd, 0             	CLRF	_T1CON
00350a   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	291; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (phase) {
00350c   515b     movf	0x5b, 0, 0x1        	MOVF	_phase, W, B
00350e   e00b     bz	0x3526                	BZ	_00426_DS_
                                           ;	.line	293; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseUp();
003510   ec69     call	0x36d2, 0           	CALL	_ServosPulseUp
003512   f01b
                                           ;	.line	295; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0xd3;
003514   0ed3     movlw	0xd3               	MOVLW	0xd3
003516   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	296; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x8f;
003518   0e8f     movlw	0x8f               	MOVLW	0x8f
00351a   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ;	.line	298; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=1;
00351c   0e01     movlw	0x1                	MOVLW	0x01
00351e   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
003520   0102     movlb	0x2                	BANKSEL	_phase
                                           ;	.line	299; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 0;
003522   6b5b     clrf	0x5b, 0x1           	CLRF	_phase, B
003524   d010     bra	0x3546               	BRA	_00430_DS_
                                           _00426_DS_:
                                           ;	.line	304; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	ServosPulseDown();
003526   ecd0     call	0x31a0, 0           	CALL	_ServosPulseDown
003528   f018
                                           ;	.line	308; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H= 0x2d;
00352a   0e2d     movlw	0x2d               	MOVLW	0x2d
00352c   6ecf     movwf	0xcf, 0            	MOVWF	_TMR1H
                                           ;	.line	309; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L= 0x0f;
00352e   0e0f     movlw	0xf                	MOVLW	0x0f
003530   6ece     movwf	0xce, 0            	MOVWF	_TMR1L
                                           ; #	MOVF	_needreordering, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00424_DS_
                                           ; #	CALL	_SortServoTimings
                                           ; #	MOVLW	0x21
003532   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	311; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (needreordering)	
003534   515c     movf	0x5c, 0, 0x1        	MOVF	_needreordering, W, B
                                           ;	.line	312; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	SortServoTimings();  // This takes more than 1 ms, but it's call only if needed.
003536   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
                                           ;	.line	313; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON= ( 1 | 2 << 4 ) ; // activate timer1 and prescaler = 1:4
003538   ec37     call	0x206e, 0           	CALL	_SortServoTimings
00353a   f010
00353c   0e21     movlw	0x21               	MOVLW	0x21
00353e   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	314; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	phase = 1;  //This indicates that after next interrupt it will start the servos cycle.
003540   0e01     movlw	0x1                	MOVLW	0x01
003542   0102     movlb	0x2                	BANKSEL	_phase
003544   6f5b     movwf	0x5b, 0x1          	MOVWF	_phase, B
                                           _00430_DS_:
                                           ;	.line	317; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003546   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMaximumPulse	code
                                           _ServoMaximumPulse:
                                           ;	.line	273; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMaximumPulse(uchar servo)
003548   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00354a   ffe5
00354c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00354e   ffd9
003550   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003552   ffe5
003554   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
003556   ffe5
003558   0e02     movlw	0x2                	MOVLW	0x02
00355a   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
00355c   f000
                                           ;	.line	275; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
00355e   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00414_DS_
                                           ; #	GOTO	_00415_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	276; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003560   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	278; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMAX;  //  250 = 2000 useg pulse
003562   e20e     bc	0x3580                	BC	_00415_DS_
003564   6a01     clrf	0x1, 0              	CLRF	r0x01
003566   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
003568   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00356a   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
00356c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00356e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003570   ffe9
003572   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003574   ffea
003576   0efa     movlw	0xfa               	MOVLW	0xfa
003578   6eef     movwf	0xef, 0            	MOVWF	INDF0
                                           ;	.line	280; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
00357a   0e01     movlw	0x1                	MOVLW	0x01
00357c   0102     movlb	0x2                	BANKSEL	_needreordering
00357e   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00415_DS_:
003580   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003582   f001
003584   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003586   f000
003588   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00358a   ffd9
00358c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoMinimumPulse	code
                                           _ServoMinimumPulse:
                                           ;	.line	262; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoMinimumPulse(uchar servo)
0035d4   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0035d6   ffe5
0035d8   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0035da   ffd9
0035dc   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0035de   ffe5
0035e0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0035e2   ffe5
0035e4   0e02     movlw	0x2                	MOVLW	0x02
0035e6   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0035e8   f000
                                           ;	.line	264; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
0035ea   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00404_DS_
                                           ; #	GOTO	_00405_DS_
                                           ; #	CLRF	r0x01
                                           ;	.line	265; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
0035ec   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	267; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=SERVOMIN;  //  1 = 1000 useg pulse
0035ee   e20d     bc	0x360a                	BC	_00405_DS_
0035f0   6a01     clrf	0x1, 0              	CLRF	r0x01
0035f2   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
0035f4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0035f6   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0035f8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0035fa   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0035fc   ffe9
0035fe   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003600   ffea
003602   0e01     movlw	0x1                	MOVLW	0x01
003604   6eef     movwf	0xef, 0            	MOVWF	INDF0
003606   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	269; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
003608   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00405_DS_:
00360a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00360c   f001
00360e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003610   f000
003612   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003614   ffd9
003616   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoRead	code
                                           _ServoRead:
                                           ;	.line	254; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	unsigned char ServoRead(uchar servo)
00358e   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003590   ffe5
003592   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003594   ffd9
003596   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003598   ffe5
00359a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00359c   ffe5
00359e   0e02     movlw	0x2                	MOVLW	0x02
0035a0   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0035a2   f000
                                           ;	.line	256; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
0035a4   0e12     movlw	0x12               	MOVLW	0x12
0035a6   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0035a8   e302     bnc	0x35ae               	BNC	_00394_DS_
                                           ;	.line	257; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return 0;
0035aa   6ae8     clrf	0xe8, 0             	CLRF	WREG
0035ac   d00c     bra	0x35c6               	BRA	_00395_DS_
                                           _00394_DS_:
                                           ;	.line	258; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return servovalues[servo];
0035ae   6a01     clrf	0x1, 0              	CLRF	r0x01
0035b0   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
0035b2   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0035b4   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0035b6   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0035b8   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0035ba   ffe9
0035bc   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0035be   ffea
0035c0   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0035c2   f000
0035c4   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00395_DS_:
0035c6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0035c8   f001
0035ca   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0035cc   f000
0035ce   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0035d0   ffd9
0035d2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoWrite	code
                                           _ServoWrite:
                                           ;	.line	239; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoWrite(uchar servo, uchar value)
0033fe   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
003400   ffe5
003402   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
003404   ffd9
003406   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
003408   ffe5
00340a   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00340c   ffe5
00340e   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
003410   ffe5
003412   0e02     movlw	0x2                	MOVLW	0x02
003414   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003416   f000
003418   0e03     movlw	0x3                	MOVLW	0x03
00341a   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
00341c   f001
                                           ;	.line	241; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(servo>=18)        // test if numservo is valid
00341e   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00376_DS_
                                           ; #	GOTO	_00381_DS_
                                           ; #	MOVLW	0x01
                                           ;	.line	242; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	return;
003420   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           ;	.line	244; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value<SERVOMIN)  //  1 = 1000 useg pulse
003422   e218     bc	0x3454                	BC	_00381_DS_
003424   0e01     movlw	0x1                	MOVLW	0x01
003426   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003428   e202     bc	0x342e                	BC	_00378_DS_
                                           ;	.line	245; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMIN;
00342a   0e01     movlw	0x1                	MOVLW	0x01
00342c   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00378_DS_:
                                           ;	.line	246; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(value>SERVOMAX) // 250 = 2000 useg pulse
00342e   0efb     movlw	0xfb               	MOVLW	0xfb
003430   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
003432   e302     bnc	0x3438               	BNC	_00380_DS_
                                           ;	.line	247; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	value=SERVOMAX;
003434   0efa     movlw	0xfa               	MOVLW	0xfa
003436   6e01     movwf	0x1, 0             	MOVWF	r0x01
                                           _00380_DS_:
                                           ;	.line	248; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	servovalues[servo]=value;
003438   6a02     clrf	0x2, 0              	CLRF	r0x02
00343a   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
00343c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00343e   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
003440   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003442   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003444   ffe9
003446   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
003448   ffea
00344a   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
00344c   ffef
                                           ;	.line	250; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=1;  // This indicates servo timings must be reordered.
00344e   0e01     movlw	0x1                	MOVLW	0x01
003450   0102     movlb	0x2                	BANKSEL	_needreordering
003452   6f5c     movwf	0x5c, 0x1          	MOVWF	_needreordering, B
                                           _00381_DS_:
003454   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003456   f002
003458   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00345a   f001
00345c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00345e   f000
003460   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
003462   ffd9
003464   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoDetach	code
                                           _ServoDetach:
                                           ;	.line	225; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoDetach(uchar pin)
0030cc   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0030ce   ffe5
0030d0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0030d2   ffd9
0030d4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0030d6   ffe5
0030d8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0030da   ffe5
0030dc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0030de   ffe5
0030e0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0030e2   ffe5
0030e4   0e02     movlw	0x2                	MOVLW	0x02
0030e6   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0030e8   f000
                                           ;	.line	227; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
0030ea   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00355_DS_
                                           ; #	GOTO	_00362_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	229; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
0030ec   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0030ee   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0030f0   d04c     bra	0x318a               	BRA	_00362_DS_
0030f2   0e08     movlw	0x8                	MOVLW	0x08
0030f4   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0030f6   e218     bc	0x3128                	BC	_00360_DS_
                                           ;	.line	230; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] ^ servomasks[pin];
0030f8   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
0030fa   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0030fc   6e01     movwf	0x1, 0             	MOVWF	r0x01
0030fe   6a02     clrf	0x2, 0              	CLRF	r0x02
003100   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
003102   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003104   6a03     clrf	0x3, 0              	CLRF	r0x03
003106   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003108   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
00310a   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
00310c   fff6
00310e   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003110   fff7
003112   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003114   fff8
003116   0009     tblrd	*+                 	TBLRD*+	
003118   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
00311a   f001
00311c   0102     movlb	0x2                	BANKSEL	_activatedservos
00311e   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
003120   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003122   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
003124   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
003126   d031     bra	0x318a               	BRA	_00362_DS_
                                           _00360_DS_:
                                           ;	.line	231; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
003128   0e0d     movlw	0xd                	MOVLW	0x0d
00312a   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00312c   e318     bnc	0x315e               	BNC	_00357_DS_
                                           ;	.line	232; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] ^ servomasks[pin];
00312e   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
003130   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003132   6e01     movwf	0x1, 0             	MOVWF	r0x01
003134   6a02     clrf	0x2, 0              	CLRF	r0x02
003136   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
003138   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00313a   6a03     clrf	0x3, 0              	CLRF	r0x03
00313c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00313e   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003140   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003142   fff6
003144   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003146   fff7
003148   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
00314a   fff8
00314c   0009     tblrd	*+                 	TBLRD*+	
00314e   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003150   f001
003152   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
003154   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
003156   1a01     xorwf	0x1, 0x1, 0        	XORWF	r0x01, F
003158   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00315a   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
00315c   d016     bra	0x318a               	BRA	_00362_DS_
                                           _00357_DS_:
                                           ;	.line	234; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] ^ servomasks[pin];
00315e   6a01     clrf	0x1, 0              	CLRF	r0x01
003160   6a02     clrf	0x2, 0              	CLRF	r0x02
003162   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
003164   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
003166   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
003168   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00316a   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00316c   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00316e   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003170   fff6
003172   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
003174   fff7
003176   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
003178   fff8
00317a   0009     tblrd	*+                 	TBLRD*+	
00317c   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
00317e   f000
003180   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
003182   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
003184   1a00     xorwf	0, 0x1, 0          	XORWF	r0x00, F
003186   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
003188   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           _00362_DS_:
00318a   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00318c   f003
00318e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
003190   f002
003192   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003194   f001
003196   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
003198   f000
00319a   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00319c   ffd9
00319e   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServoAttach	code
                                           _ServoAttach:
                                           ;	.line	208; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void ServoAttach(uchar pin)
002fec   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002fee   ffe5
002ff0   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002ff2   ffd9
002ff4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002ff6   ffe5
002ff8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002ffa   ffe5
002ffc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002ffe   ffe5
003000   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
003002   ffe5
003004   0e02     movlw	0x2                	MOVLW	0x02
003006   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
003008   f000
                                           ;	.line	210; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin>=18) return;
00300a   0e12     movlw	0x12               	MOVLW	0x12
                                           ; #	SUBWF	r0x00, W
                                           ; #	BTFSS	STATUS, 0
                                           ; #	GOTO	_00333_DS_
                                           ; #	GOTO	_00340_DS_
                                           ; #	MOVLW	0x08
                                           ;	.line	212; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if(pin<8){
00300c   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
00300e   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
003010   d052     bra	0x30b6               	BRA	_00340_DS_
003012   0e08     movlw	0x8                	MOVLW	0x08
003014   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003016   e21a     bc	0x304c                	BC	_00338_DS_
                                           ;	.line	213; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_B] = activatedservos[MaskPort_B] | servomasks[pin];  // list pin as servo driver.
003018   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
00301a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00301c   6e01     movwf	0x1, 0             	MOVWF	r0x01
00301e   6a02     clrf	0x2, 0              	CLRF	r0x02
003020   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
003022   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003024   6a03     clrf	0x3, 0              	CLRF	r0x03
003026   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003028   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
00302a   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
00302c   fff6
00302e   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
003030   fff7
003032   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
003034   fff8
003036   0009     tblrd	*+                 	TBLRD*+	
003038   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
00303a   f001
00303c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00303e   0102     movlb	0x2                	BANKSEL	_activatedservos
003040   115e     iorwf	0x5e, 0, 0x1       	IORWF	_activatedservos, W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
003042   6f5e     movwf	0x5e, 0x1          	MOVWF	_activatedservos, B
                                           ;	.line	214; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISB = TRISB & (255 - servomasks[pin]); // set as output pin
003044   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003046   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003048   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
00304a   d035     bra	0x30b6               	BRA	_00340_DS_
                                           _00338_DS_:
                                           ;	.line	215; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	} else if (pin>12) {
00304c   0e0d     movlw	0xd                	MOVLW	0x0d
00304e   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
003050   e31a     bnc	0x3086               	BNC	_00335_DS_
                                           ;	.line	216; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_A] = activatedservos[MaskPort_A] | servomasks[pin];  // list pin as servo driver.
003052   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
003054   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
003056   6e01     movwf	0x1, 0             	MOVWF	r0x01
003058   6a02     clrf	0x2, 0              	CLRF	r0x02
00305a   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
00305c   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
00305e   6a03     clrf	0x3, 0              	CLRF	r0x03
003060   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003062   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
003064   c001     movff	0x1, 0xff6         	MOVFF	r0x01, TBLPTRL
003066   fff6
003068   c002     movff	0x2, 0xff7         	MOVFF	r0x02, TBLPTRH
00306a   fff7
00306c   c003     movff	0x3, 0xff8         	MOVFF	r0x03, TBLPTRU
00306e   fff8
003070   0009     tblrd	*+                 	TBLRD*+	
003072   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
003074   f001
003076   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003078   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
00307a   1160     iorwf	0x60, 0, 0x1       	IORWF	(_activatedservos + 2), W, B
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
00307c   6f60     movwf	0x60, 0x1          	MOVWF	(_activatedservos + 2), B
                                           ;	.line	217; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISA = TRISA & (255 - servomasks[pin]); // set as output pin
00307e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
003080   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
003082   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
003084   d018     bra	0x30b6               	BRA	_00340_DS_
                                           _00335_DS_:
                                           ;	.line	219; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	activatedservos[MaskPort_C] = activatedservos[MaskPort_C] | servomasks[pin];  // list pin as servo driver.
003086   6a01     clrf	0x1, 0              	CLRF	r0x01
003088   6a02     clrf	0x2, 0              	CLRF	r0x02
00308a   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
00308c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00308e   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
003090   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
003092   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
003094   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
003096   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
003098   fff6
00309a   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
00309c   fff7
00309e   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
0030a0   fff8
0030a2   0009     tblrd	*+                 	TBLRD*+	
0030a4   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
0030a6   f000
0030a8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0030aa   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
0030ac   115f     iorwf	0x5f, 0, 0x1       	IORWF	(_activatedservos + 1), W, B
                                           ; #	MOVWF	r0x01
                                           ; #	MOVF	r0x01, W
0030ae   6f5f     movwf	0x5f, 0x1          	MOVWF	(_activatedservos + 1), B
                                           ;	.line	220; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TRISC = TRISC & (255 - servomasks[pin]); // set as output pin
0030b0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0030b2   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
0030b4   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           _00340_DS_:
0030b6   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0030b8   f003
0030ba   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0030bc   f002
0030be   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0030c0   f001
0030c2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0030c4   f000
0030c6   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0030c8   ffd9
0030ca   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__SortServoTimings	code
                                           _SortServoTimings:
                                           ;	.line	124; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void SortServoTimings()
00206e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002070   ffe5
002072   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002074   ffe5
002076   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002078   ffe5
00207a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00207c   ffe5
00207e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002080   ffe5
002082   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002084   ffe5
002086   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002088   ffe5
00208a   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
00208c   ffe5
00208e   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002090   ffe5
002092   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
002094   ffe5
002096   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
                                           ;	.line	131; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	uchar mascaratotal[3]={0x00,0x00,0x00};
002098   6b69     clrf	0x69, 0x1           	CLRF	_SortServoTimings_mascaratotal_1_1, B
                                           ; removed redundant BANKSEL
00209a   6b6a     clrf	0x6a, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ; removed redundant BANKSEL
00209c   6b6b     clrf	0x6b, 0x1           	CLRF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
00209e   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00280_DS_:
0020a0   0e12     movlw	0x12               	MOVLW	0x12
0020a2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0020a4   e223     bc	0x20ec                	BC	_00283_DS_
                                           ;	.line	135; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=255;
0020a6   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0020a8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020aa   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020ac   6a02     clrf	0x2, 0              	CLRF	r0x02
0020ae   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0020b0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020b2   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020b4   ffe9
0020b6   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020b8   ffea
0020ba   68ef     setf	0xef, 0             	SETF	INDF0
                                           ;	.line	137; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
0020bc   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0020be   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020c0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020c2   6a02     clrf	0x2, 0              	CLRF	r0x02
0020c4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0020c6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020c8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020ca   ffe9
0020cc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020ce   ffea
0020d0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	138; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
0020d2   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0020d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0020d6   6e01     movwf	0x1, 0             	MOVWF	r0x01
0020d8   6a02     clrf	0x2, 0              	CLRF	r0x02
0020da   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0020dc   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0020de   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0020e0   ffe9
0020e2   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0020e4   ffea
0020e6   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	134; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(t=0;t<18;t++){
0020e8   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0020ea   d7da     bra	0x20a0               	BRA	_00280_DS_
                                           _00283_DS_:
                                           ;	.line	141; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos=0;
0020ec   6a00     clrf	0, 0                	CLRF	r0x00
                                           ;	.line	143; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	while(totalservos<18) {
0020ee   6a01     clrf	0x1, 0              	CLRF	r0x01
                                           _00277_DS_:
0020f0   0e12     movlw	0x12               	MOVLW	0x12
0020f2   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0020f4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0020f6   d183     bra	0x23fe               	BRA	_00279_DS_
                                           ;	.line	144; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0020f8   0e01     movlw	0x1                	MOVLW	0x01
0020fa   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
0020fc   6a03     clrf	0x3, 0              	CLRF	r0x03
                                           _00284_DS_:
0020fe   0e12     movlw	0x12               	MOVLW	0x12
002100   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
002102   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002104   d157     bra	0x23b4               	BRA	_00287_DS_
                                           ;	.line	147; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (s<8){
002106   0e08     movlw	0x8                	MOVLW	0x08
002108   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
00210a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00210c   d061     bra	0x21d0               	BRA	_00275_DS_
                                           ;	.line	148; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_B] & activatedservos[MaskPort_B]){
00210e   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
002110   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002112   6e04     movwf	0x4, 0             	MOVWF	r0x04
002114   6a05     clrf	0x5, 0              	CLRF	r0x05
002116   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
002118   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
00211a   6a06     clrf	0x6, 0              	CLRF	r0x06
00211c   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
00211e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002120   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002122   fff6
002124   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002126   fff7
002128   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00212a   fff8
00212c   0009     tblrd	*+                 	TBLRD*+	
00212e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002130   f004
002132   0102     movlb	0x2                	BANKSEL	_SortServoTimings_mascaratotal_1_1
002134   5169     movf	0x69, 0, 0x1        	MOVF	_SortServoTimings_mascaratotal_1_1, W, B
002136   1604     andwf	0x4, 0x1, 0        	ANDWF	r0x04, F
002138   0102     movlb	0x2                	BANKSEL	_activatedservos
00213a   515e     movf	0x5e, 0, 0x1        	MOVF	_activatedservos, W, B
00213c   1604     andwf	0x4, 0x1, 0        	ANDWF	r0x04, F
00213e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002140   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002142   d136     bra	0x23b0               	BRA	_00286_DS_
                                           ;	.line	150; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002144   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
002146   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002148   6e04     movwf	0x4, 0             	MOVWF	r0x04
00214a   6a05     clrf	0x5, 0              	CLRF	r0x05
00214c   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
00214e   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
002150   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
002152   ffe9
002154   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
002156   ffea
002158   cfef     movff	0xfef, 0x4         	MOVFF	INDF0, r0x04
00215a   f004
00215c   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
00215e   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002160   6e05     movwf	0x5, 0             	MOVWF	r0x05
002162   6a06     clrf	0x6, 0              	CLRF	r0x06
002164   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
002166   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002168   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00216a   ffe9
00216c   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
00216e   ffea
002170   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
002172   f007
002174   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002176   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002178   e21f     bc	0x21b8                	BC	_00250_DS_
                                           ;	.line	151; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
00217a   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00217c   ffe9
00217e   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002180   ffea
002182   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002184   ffef
                                           ;	.line	153; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
002186   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
002188   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00218a   6e07     movwf	0x7, 0             	MOVWF	r0x07
00218c   6a08     clrf	0x8, 0              	CLRF	r0x08
00218e   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002190   2208     addwfc	0x8, 0x1, 0       	ADDWFC	r0x08, F
002192   c007     movff	0x7, 0xfe9         	MOVFF	r0x07, FSR0L
002194   ffe9
002196   c008     movff	0x8, 0xfea         	MOVFF	r0x08, FSR0H
002198   ffea
00219a   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	154; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
00219c   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00219e   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0021a0   6e07     movwf	0x7, 0             	MOVWF	r0x07
0021a2   6a08     clrf	0x8, 0              	CLRF	r0x08
0021a4   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0021a6   2208     addwfc	0x8, 0x1, 0       	ADDWFC	r0x08, F
0021a8   c007     movff	0x7, 0xfe9         	MOVFF	r0x07, FSR0L
0021aa   ffe9
0021ac   c008     movff	0x8, 0xfea         	MOVFF	r0x08, FSR0H
0021ae   ffea
0021b0   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	155; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
0021b2   0e01     movlw	0x1                	MOVLW	0x01
0021b4   6e02     movwf	0x2, 0             	MOVWF	r0x02
0021b6   d0fc     bra	0x23b0               	BRA	_00286_DS_
                                           _00250_DS_:
                                           ;	.line	157; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
0021b8   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0021ba   ffe9
0021bc   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0021be   ffea
0021c0   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
0021c2   f005
0021c4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0021c6   1805     xorwf	0x5, 0, 0          	XORWF	r0x05, W
0021c8   e001     bz	0x21cc                	BZ	_00317_DS_
0021ca   d0f2     bra	0x23b0               	BRA	_00286_DS_
                                           _00317_DS_:
                                           ;	.line	159; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
0021cc   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
0021ce   d0f0     bra	0x23b0               	BRA	_00286_DS_
                                           _00275_DS_:
                                           ;	.line	163; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (s>12){
0021d0   0e0d     movlw	0xd                	MOVLW	0x0d
0021d2   5c03     subwf	0x3, 0, 0          	SUBWF	r0x03, W
0021d4   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0021d6   d077     bra	0x22c6               	BRA	_00272_DS_
                                           ;	.line	164; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_A] & activatedservos[MaskPort_A]){
0021d8   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
0021da   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
0021dc   6e04     movwf	0x4, 0             	MOVWF	r0x04
0021de   6a05     clrf	0x5, 0              	CLRF	r0x05
0021e0   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
0021e2   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
0021e4   6a06     clrf	0x6, 0              	CLRF	r0x06
0021e6   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
0021e8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0021ea   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0021ec   fff6
0021ee   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0021f0   fff7
0021f2   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0021f4   fff8
0021f6   0009     tblrd	*+                 	TBLRD*+	
0021f8   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0021fa   f004
0021fc   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 2)
0021fe   516b     movf	0x6b, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
002200   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
002202   6e05     movwf	0x5, 0             	MOVWF	r0x05
002204   0102     movlb	0x2                	BANKSEL	(_activatedservos + 2)
002206   5160     movf	0x60, 0, 0x1        	MOVF	(_activatedservos + 2), W, B
002208   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
00220a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00220c   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
00220e   d0d0     bra	0x23b0               	BRA	_00286_DS_
                                           ;	.line	166; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
002210   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
002212   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002214   6e05     movwf	0x5, 0             	MOVWF	r0x05
002216   6a06     clrf	0x6, 0              	CLRF	r0x06
002218   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
00221a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00221c   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00221e   ffe9
002220   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002222   ffea
002224   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002226   f005
002228   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
00222a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00222c   6e06     movwf	0x6, 0             	MOVWF	r0x06
00222e   6a07     clrf	0x7, 0              	CLRF	r0x07
002230   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
002232   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002234   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002236   ffe9
002238   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00223a   ffea
00223c   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00223e   f008
002240   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002242   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
002244   e220     bc	0x2286                	BC	_00258_DS_
                                           ;	.line	167; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
002246   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002248   ffe9
00224a   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00224c   ffea
00224e   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
002250   ffef
                                           ;	.line	169; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=0x00;
002252   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
002254   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002256   6e08     movwf	0x8, 0             	MOVWF	r0x08
002258   6a09     clrf	0x9, 0              	CLRF	r0x09
00225a   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
00225c   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
00225e   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
002260   ffe9
002262   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
002264   ffea
002266   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	170; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=servomasks[s];
002268   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00226a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00226c   6e08     movwf	0x8, 0             	MOVWF	r0x08
00226e   6a09     clrf	0x9, 0              	CLRF	r0x09
002270   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002272   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
002274   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
002276   ffe9
002278   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
00227a   ffea
00227c   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
00227e   ffef
                                           ;	.line	171; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
002280   0e01     movlw	0x1                	MOVLW	0x01
002282   6e02     movwf	0x2, 0             	MOVWF	r0x02
002284   d095     bra	0x23b0               	BRA	_00286_DS_
                                           _00258_DS_:
                                           ;	.line	173; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings[timevalue][t]){
002286   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002288   ffe9
00228a   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00228c   ffea
00228e   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
002290   f006
002292   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002294   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002296   e001     bz	0x229a                	BZ	_00322_DS_
002298   d08b     bra	0x23b0               	BRA	_00286_DS_
                                           _00322_DS_:
                                           ;	.line	174; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t] |= servomasks[s];
00229a   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00229c   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00229e   6e05     movwf	0x5, 0             	MOVWF	r0x05
0022a0   6a06     clrf	0x6, 0              	CLRF	r0x06
0022a2   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0022a4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0022a6   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0022a8   ffe9
0022aa   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0022ac   ffea
0022ae   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
0022b0   f007
0022b2   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0022b4   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
0022b6   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0022b8   ffe9
0022ba   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0022bc   ffea
0022be   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0022c0   ffef
                                           ;	.line	175; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
0022c2   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
0022c4   d075     bra	0x23b0               	BRA	_00286_DS_
                                           _00272_DS_:
                                           ;	.line	180; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (servomasks[s] & mascaratotal[MaskPort_C] & activatedservos[MaskPort_C]){ 
0022c6   0e84     movlw	0x84               	MOVLW	LOW(_servomasks)
0022c8   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
0022ca   6e04     movwf	0x4, 0             	MOVWF	r0x04
0022cc   6a05     clrf	0x5, 0              	CLRF	r0x05
0022ce   0e27     movlw	0x27               	MOVLW	HIGH(_servomasks)
0022d0   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
0022d2   6a06     clrf	0x6, 0              	CLRF	r0x06
0022d4   0e00     movlw	0                  	MOVLW	UPPER(_servomasks)
0022d6   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0022d8   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0022da   fff6
0022dc   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0022de   fff7
0022e0   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0022e2   fff8
0022e4   0009     tblrd	*+                 	TBLRD*+	
0022e6   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0022e8   f004
0022ea   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
0022ec   516a     movf	0x6a, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
0022ee   1404     andwf	0x4, 0, 0          	ANDWF	r0x04, W
0022f0   6e05     movwf	0x5, 0             	MOVWF	r0x05
0022f2   0102     movlb	0x2                	BANKSEL	(_activatedservos + 1)
0022f4   515f     movf	0x5f, 0, 0x1        	MOVF	(_activatedservos + 1), W, B
0022f6   1605     andwf	0x5, 0x1, 0        	ANDWF	r0x05, F
0022f8   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0022fa   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
0022fc   d059     bra	0x23b0               	BRA	_00286_DS_
                                           ;	.line	182; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] < timings[timevalue][t]){
0022fe   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
002300   2403     addwf	0x3, 0, 0          	ADDWF	r0x03, W
002302   6e05     movwf	0x5, 0             	MOVWF	r0x05
002304   6a06     clrf	0x6, 0              	CLRF	r0x06
002306   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
002308   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00230a   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
00230c   ffe9
00230e   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002310   ffea
002312   cfef     movff	0xfef, 0x5         	MOVFF	INDF0, r0x05
002314   f005
002316   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
002318   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00231a   6e06     movwf	0x6, 0             	MOVWF	r0x06
00231c   6a07     clrf	0x7, 0              	CLRF	r0x07
00231e   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
002320   2207     addwfc	0x7, 0x1, 0       	ADDWFC	r0x07, F
002322   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002324   ffe9
002326   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
002328   ffea
00232a   cfef     movff	0xfef, 0x8         	MOVFF	INDF0, r0x08
00232c   f008
00232e   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002330   5c05     subwf	0x5, 0, 0          	SUBWF	r0x05, W
002332   e220     bc	0x2374                	BC	_00266_DS_
                                           ;	.line	183; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[timevalue][t]=servovalues[s];
002334   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002336   ffe9
002338   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00233a   ffea
00233c   c005     movff	0x5, 0xfef         	MOVFF	r0x05, INDF0
00233e   ffef
                                           ;	.line	185; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t]=servomasks[s];
002340   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
002342   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
002344   6e08     movwf	0x8, 0             	MOVWF	r0x08
002346   6a09     clrf	0x9, 0              	CLRF	r0x09
002348   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
00234a   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
00234c   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
00234e   ffe9
002350   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
002352   ffea
002354   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
002356   ffef
                                           ;	.line	186; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_A][t]=0x00;
002358   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
00235a   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00235c   6e08     movwf	0x8, 0             	MOVWF	r0x08
00235e   6a09     clrf	0x9, 0              	CLRF	r0x09
002360   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
002362   2209     addwfc	0x9, 0x1, 0       	ADDWFC	r0x09, F
002364   c008     movff	0x8, 0xfe9         	MOVFF	r0x08, FSR0L
002366   ffe9
002368   c009     movff	0x9, 0xfea         	MOVFF	r0x09, FSR0H
00236a   ffea
00236c   6aef     clrf	0xef, 0             	CLRF	INDF0
                                           ;	.line	187; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos=1;
00236e   0e01     movlw	0x1                	MOVLW	0x01
002370   6e02     movwf	0x2, 0             	MOVWF	r0x02
002372   d01e     bra	0x23b0               	BRA	_00286_DS_
                                           _00266_DS_:
                                           ;	.line	189; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	else if (servovalues[s] == timings [timevalue][t]){
002374   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
002376   ffe9
002378   c007     movff	0x7, 0xfea         	MOVFF	r0x07, FSR0H
00237a   ffea
00237c   cfef     movff	0xfef, 0x6         	MOVFF	INDF0, r0x06
00237e   f006
002380   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002382   1806     xorwf	0x6, 0, 0          	XORWF	r0x06, W
002384   e115     bnz	0x23b0               	BNZ	_00286_DS_
                                           ;	.line	190; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timings[MaskPort_C][t] |= servomasks[s];
002386   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
002388   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
00238a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00238c   6a06     clrf	0x6, 0              	CLRF	r0x06
00238e   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
002390   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002392   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
002394   ffe9
002396   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
002398   ffea
00239a   cfef     movff	0xfef, 0x7         	MOVFF	INDF0, r0x07
00239c   f007
00239e   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
0023a0   1204     iorwf	0x4, 0x1, 0        	IORWF	r0x04, F
0023a2   c005     movff	0x5, 0xfe9         	MOVFF	r0x05, FSR0L
0023a4   ffe9
0023a6   c006     movff	0x6, 0xfea         	MOVFF	r0x06, FSR0H
0023a8   ffea
0023aa   c004     movff	0x4, 0xfef         	MOVFF	r0x04, INDF0
0023ac   ffef
                                           ;	.line	191; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	numservos++;
0023ae   2a02     incf	0x2, 0x1, 0         	INCF	r0x02, F
                                           _00286_DS_:
                                           ;	.line	145; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(s=0;s<18;s++) { 
0023b0   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0023b2   d6a5     bra	0x20fe               	BRA	_00284_DS_
                                           _00287_DS_:
                                           ;	.line	197; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_C] |= timings[MaskPort_C][t];
0023b4   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0023b6   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023b8   6e03     movwf	0x3, 0             	MOVWF	r0x03
0023ba   6a04     clrf	0x4, 0              	CLRF	r0x04
0023bc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0023be   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0023c0   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0023c2   ffe9
0023c4   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
0023c6   ffea
0023c8   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
0023ca   f003
0023cc   0102     movlb	0x2                	BANKSEL	(_SortServoTimings_mascaratotal_1_1 + 1)
0023ce   516a     movf	0x6a, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 1), W, B
0023d0   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
0023d2   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0023d4   6f6a     movwf	0x6a, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 1), B
                                           ;	.line	198; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	mascaratotal[MaskPort_A] |= timings[MaskPort_A][t];
0023d6   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
0023d8   2401     addwf	0x1, 0, 0          	ADDWF	r0x01, W
0023da   6e03     movwf	0x3, 0             	MOVWF	r0x03
0023dc   6a04     clrf	0x4, 0              	CLRF	r0x04
0023de   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
0023e0   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0023e2   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0023e4   ffe9
0023e6   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
0023e8   ffea
0023ea   cfef     movff	0xfef, 0x3         	MOVFF	INDF0, r0x03
0023ec   f003
                                           ; removed redundant BANKSEL
0023ee   516b     movf	0x6b, 0, 0x1        	MOVF	(_SortServoTimings_mascaratotal_1_1 + 2), W, B
0023f0   1203     iorwf	0x3, 0x1, 0        	IORWF	r0x03, F
0023f2   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
0023f4   6f6b     movwf	0x6b, 0x1          	MOVWF	(_SortServoTimings_mascaratotal_1_1 + 2), B
                                           ;	.line	199; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	totalservos += numservos;
0023f6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0023f8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ;	.line	200; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	t++;
0023fa   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0023fc   d679     bra	0x20f0               	BRA	_00277_DS_
                                           _00279_DS_:
0023fe   0102     movlb	0x2                	BANKSEL	_needreordering
                                           ;	.line	203; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	needreordering=0;  // This indicates that servo timings is ordered.	
002400   6b5c     clrf	0x5c, 0x1           	CLRF	_needreordering, B
002402   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
002404   f009
002406   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002408   f008
00240a   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
00240c   f007
00240e   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002410   f006
002412   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002414   f005
002416   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002418   f004
00241a   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00241c   f003
00241e   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002420   f002
002422   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002424   f001
002426   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002428   f000
00242a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseUp	code
                                           _ServosPulseUp:
                                           ;	.line	119; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = activatedservos[MaskPort_C] & 0xFF;
0036d2   c25f     movff	0x25f, 0xf82       	MOVFF	(_activatedservos + 1), _PORTC
0036d4   ff82
                                           ;	.line	120; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = activatedservos[MaskPort_A] & 0xFF;	
0036d6   c260     movff	0x260, 0xf80       	MOVFF	(_activatedservos + 2), _PORTA
0036d8   ff80
0036da   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__ServosPulseDown	code
                                           _ServosPulseDown:
                                           ;	.line	92; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	static void ServosPulseDown()
0031a0   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
0031a2   ffe5
0031a4   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
0031a6   ffd9
0031a8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0031aa   ffe5
0031ac   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0031ae   ffe5
0031b0   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	94; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex = 0;
0031b2   6b6e     clrf	0x6e, 0x1           	CLRF	_timingindex, B
0031b4   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
0031b6   6b5d     clrf	0x5d, 0x1           	CLRF	_timedivision, B
                                           _00226_DS_:
0031b8   0efb     movlw	0xfb               	MOVLW	0xfb
0031ba   0102     movlb	0x2                	BANKSEL	_timedivision
0031bc   5d5d     subwf	0x5d, 0, 0x1       	SUBWF	_timedivision, W, B
0031be   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0031c0   d039     bra	0x3234               	BRA	_00230_DS_
                                           ;	.line	97; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	if (timings[timevalue][timingindex] == timedivision){
0031c2   c26e     movff	0x26e, 0           	MOVFF	_timingindex, r0x00
0031c4   f000
0031c6   6a01     clrf	0x1, 0              	CLRF	r0x01
0031c8   0e36     movlw	0x36               	MOVLW	LOW(_timings + 54)
0031ca   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0031cc   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 54)
0031ce   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0031d0   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0031d2   ffe9
0031d4   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0031d6   ffea
0031d8   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0031da   f000
0031dc   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0031de   195d     xorwf	0x5d, 0, 0x1       	XORWF	_timedivision, W, B
0031e0   e120     bnz	0x3222               	BNZ	_00225_DS_
                                           ;	.line	99; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTC = PORTC ^ timings[MaskPort_C][timingindex];
0031e2   c26e     movff	0x26e, 0           	MOVFF	_timingindex, r0x00
0031e4   f000
0031e6   6a01     clrf	0x1, 0              	CLRF	r0x01
0031e8   0e12     movlw	0x12               	MOVLW	LOW(_timings + 18)
0031ea   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0031ec   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 18)
0031ee   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0031f0   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0031f2   ffe9
0031f4   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
0031f6   ffea
0031f8   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0031fa   f000
0031fc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0031fe   1a82     xorwf	0x82, 0x1, 0       	XORWF	_PORTC, F
                                           ;	.line	100; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PORTA = PORTA ^ timings[MaskPort_A][timingindex];
003200   c26e     movff	0x26e, 0           	MOVFF	_timingindex, r0x00
003202   f000
003204   6a01     clrf	0x1, 0              	CLRF	r0x01
003206   0e24     movlw	0x24               	MOVLW	LOW(_timings + 36)
003208   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00320a   0e02     movlw	0x2                	MOVLW	HIGH(_timings + 36)
00320c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00320e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
003210   ffe9
003212   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
003214   ffea
003216   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
003218   f000
00321a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00321c   1a80     xorwf	0x80, 0x1, 0       	XORWF	_PORTA, F
00321e   0102     movlb	0x2                	BANKSEL	_timingindex
                                           ;	.line	101; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	timingindex++;
003220   2b6e     incf	0x6e, 0x1, 0x1      	INCF	_timingindex, F, B
                                           _00225_DS_:
003222   0e06     movlw	0x6                	movlw 6
003224   6f6c     movwf	0x6c, 0x1          	movwf _loopvar
                                           bucle:
003226   0000     nop                      	NOP
003228   2f6c     decfsz	0x6c, 0x1, 0x1    	decfsz _loopvar,1
00322a   ef13     goto	0x3226              	goto bucle
00322c   f019
                                           	
00322e   0102     movlb	0x2                	BANKSEL	_timedivision
                                           ;	.line	96; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(timedivision=0;timedivision < 251;timedivision++){
003230   2b5d     incf	0x5d, 0x1, 0x1      	INCF	_timedivision, F, B
003232   d7c2     bra	0x31b8               	BRA	_00226_DS_
                                           _00230_DS_:
003234   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
003236   f001
003238   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00323a   f000
00323c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00323e   ffd9
003240   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__servos_init	code
                                           _servos_init:
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	void servos_init()
0034b8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0034ba   ffe5
0034bc   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0034be   ffe5
0034c0   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0034c2   ffe5
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	for(a=0;a<18;a++) servovalues[a]=255;
0034c4   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00210_DS_:
0034c6   0e12     movlw	0x12               	MOVLW	0x12
0034c8   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0034ca   e20d     bc	0x34e6                	BC	_00213_DS_
0034cc   0e48     movlw	0x48               	MOVLW	LOW(_servovalues)
0034ce   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0034d0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0034d2   6a02     clrf	0x2, 0              	CLRF	r0x02
0034d4   0e02     movlw	0x2                	MOVLW	HIGH(_servovalues)
0034d6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0034d8   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
0034da   ffe9
0034dc   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
0034de   ffea
0034e0   68ef     setf	0xef, 0             	SETF	INDF0
0034e2   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0034e4   d7f0     bra	0x34c6               	BRA	_00210_DS_
                                           _00213_DS_:
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1H=0xFF;
0034e6   68cf     setf	0xcf, 0             	SETF	_TMR1H
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	TMR1L=0x00;
0034e8   6ace     clrf	0xce, 0             	CLRF	_TMR1L
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	T1CON=0x01;
0034ea   0e01     movlw	0x1                	MOVLW	0x01
0034ec   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	PIE1bits.TMR1IE=1;
0034ee   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.PEIE=1;
0034f0   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/servos.c	INTCONbits.GIE=1;
0034f2   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
0034f4   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0034f6   f002
0034f8   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0034fa   f001
0034fc   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0034fe   f000
003500   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__pinmode	code
                                           _pinmode:
                                           ;	.line	69; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void pinmode(int input, int state)
002796   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002798   ffe5
00279a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00279c   ffd9
00279e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0027a0   ffe5
0027a2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0027a4   ffe5
0027a6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0027a8   ffe5
0027aa   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0027ac   ffe5
0027ae   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0027b0   ffe5
0027b2   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0027b4   ffe5
0027b6   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
0027b8   ffe5
0027ba   0e02     movlw	0x2                	MOVLW	0x02
0027bc   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0027be   f000
0027c0   0e03     movlw	0x3                	MOVLW	0x03
0027c2   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0027c4   f001
0027c6   0e04     movlw	0x4                	MOVLW	0x04
0027c8   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
0027ca   f002
0027cc   0e05     movlw	0x5                	MOVLW	0x05
0027ce   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
0027d0   f003
                                           ;	.line	71; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
0027d2   0e66     movlw	0x66               	MOVLW	LOW(_port)
0027d4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0027d6   6e04     movwf	0x4, 0             	MOVWF	r0x04
0027d8   0e27     movlw	0x27               	MOVLW	HIGH(_port)
0027da   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0027dc   6e05     movwf	0x5, 0             	MOVWF	r0x05
0027de   6a06     clrf	0x6, 0              	CLRF	r0x06
0027e0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0027e2   6806     setf	0x6, 0              	SETF	r0x06
0027e4   0e00     movlw	0                  	MOVLW	UPPER(_port)
0027e6   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0027e8   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0027ea   fff6
0027ec   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0027ee   fff7
0027f0   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0027f2   fff8
0027f4   0009     tblrd	*+                 	TBLRD*+	
0027f6   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0027f8   f004
0027fa   0e05     movlw	0x5                	MOVLW	0x05
0027fc   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
0027fe   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002800   d11c     bra	0x2a3a               	BRA	_00196_DS_
002802   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002804   ffe5
002806   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002808   ffe5
00280a   6a08     clrf	0x8, 0              	CLRF	r0x08
00280c   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
00280e   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002810   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002812   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002814   0bfc     andlw	0xfc               	ANDLW	0xfc
002816   6e07     movwf	0x7, 0             	MOVWF	r0x07
002818   0e00     movlw	0                  	MOVLW	UPPER(_00205_DS_)
00281a   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
00281c   0e28     movlw	0x28               	MOVLW	HIGH(_00205_DS_)
00281e   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002820   0e38     movlw	0x38               	MOVLW	LOW(_00205_DS_)
002822   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002824   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002826   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002828   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00282a   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
00282c   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
00282e   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002830   f008
002832   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002834   f007
002836   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00205_DS_:
002838   ef26     goto	0x284c              	GOTO	_00175_DS_
00283a   f014
00283c   ef58     goto	0x28b0              	GOTO	_00179_DS_
00283e   f014
002840   ef8a     goto	0x2914              	GOTO	_00183_DS_
002842   f014
002844   efbc     goto	0x2978              	GOTO	_00187_DS_
002846   f014
002848   efee     goto	0x29dc              	GOTO	_00191_DS_
00284a   f014
                                           _00175_DS_:
                                           ;	.line	73; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) TRISB=TRISB | mask[input];
00284c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00284e   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002850   e017     bz	0x2880                	BZ	_00177_DS_
002852   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002854   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002856   6e04     movwf	0x4, 0             	MOVWF	r0x04
002858   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
00285a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00285c   6e05     movwf	0x5, 0             	MOVWF	r0x05
00285e   6a06     clrf	0x6, 0              	CLRF	r0x06
002860   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002862   6806     setf	0x6, 0              	SETF	r0x06
002864   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002866   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002868   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
00286a   fff6
00286c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00286e   fff7
002870   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002872   fff8
002874   0009     tblrd	*+                 	TBLRD*+	
002876   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002878   f004
00287a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00287c   1293     iorwf	0x93, 0x1, 0       	IORWF	_TRISB, F
00287e   d0dd     bra	0x2a3a               	BRA	_00196_DS_
                                           _00177_DS_:
                                           ;	.line	74; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISB=TRISB & (255-mask[input]);
002880   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002882   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002884   6e04     movwf	0x4, 0             	MOVWF	r0x04
002886   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002888   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
00288a   6e05     movwf	0x5, 0             	MOVWF	r0x05
00288c   6a06     clrf	0x6, 0              	CLRF	r0x06
00288e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002890   6806     setf	0x6, 0              	SETF	r0x06
002892   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002894   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002896   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002898   fff6
00289a   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00289c   fff7
00289e   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0028a0   fff8
0028a2   0009     tblrd	*+                 	TBLRD*+	
0028a4   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0028a6   f004
0028a8   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0028aa   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0028ac   1693     andwf	0x93, 0x1, 0       	ANDWF	_TRISB, F
                                           ;	.line	75; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
0028ae   d0c5     bra	0x2a3a               	BRA	_00196_DS_
                                           _00179_DS_:
                                           ;	.line	76; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) TRISC=TRISC | mask[input];
0028b0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0028b2   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0028b4   e017     bz	0x28e4                	BZ	_00181_DS_
0028b6   0e48     movlw	0x48               	MOVLW	LOW(_mask)
0028b8   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0028ba   6e04     movwf	0x4, 0             	MOVWF	r0x04
0028bc   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0028be   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0028c0   6e05     movwf	0x5, 0             	MOVWF	r0x05
0028c2   6a06     clrf	0x6, 0              	CLRF	r0x06
0028c4   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0028c6   6806     setf	0x6, 0              	SETF	r0x06
0028c8   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0028ca   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0028cc   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0028ce   fff6
0028d0   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0028d2   fff7
0028d4   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0028d6   fff8
0028d8   0009     tblrd	*+                 	TBLRD*+	
0028da   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0028dc   f004
0028de   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0028e0   1294     iorwf	0x94, 0x1, 0       	IORWF	_TRISC, F
0028e2   d0ab     bra	0x2a3a               	BRA	_00196_DS_
                                           _00181_DS_:
                                           ;	.line	77; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISC=TRISC & (255-mask[input]);
0028e4   0e48     movlw	0x48               	MOVLW	LOW(_mask)
0028e6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0028e8   6e04     movwf	0x4, 0             	MOVWF	r0x04
0028ea   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0028ec   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0028ee   6e05     movwf	0x5, 0             	MOVWF	r0x05
0028f0   6a06     clrf	0x6, 0              	CLRF	r0x06
0028f2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0028f4   6806     setf	0x6, 0              	SETF	r0x06
0028f6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0028f8   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0028fa   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0028fc   fff6
0028fe   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002900   fff7
002902   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002904   fff8
002906   0009     tblrd	*+                 	TBLRD*+	
002908   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00290a   f004
00290c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00290e   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002910   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	78; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002912   d093     bra	0x2a3a               	BRA	_00196_DS_
                                           _00183_DS_:
                                           ;	.line	79; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) TRISA=TRISA | mask[input];
002914   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002916   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002918   e017     bz	0x2948                	BZ	_00185_DS_
00291a   0e48     movlw	0x48               	MOVLW	LOW(_mask)
00291c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00291e   6e04     movwf	0x4, 0             	MOVWF	r0x04
002920   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002922   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002924   6e05     movwf	0x5, 0             	MOVWF	r0x05
002926   6a06     clrf	0x6, 0              	CLRF	r0x06
002928   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00292a   6806     setf	0x6, 0              	SETF	r0x06
00292c   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00292e   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002930   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002932   fff6
002934   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002936   fff7
002938   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00293a   fff8
00293c   0009     tblrd	*+                 	TBLRD*+	
00293e   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002940   f004
002942   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002944   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
002946   d079     bra	0x2a3a               	BRA	_00196_DS_
                                           _00185_DS_:
                                           ;	.line	80; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISA=TRISA & (255-mask[input]);
002948   0e48     movlw	0x48               	MOVLW	LOW(_mask)
00294a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
00294c   6e04     movwf	0x4, 0             	MOVWF	r0x04
00294e   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002950   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002952   6e05     movwf	0x5, 0             	MOVWF	r0x05
002954   6a06     clrf	0x6, 0              	CLRF	r0x06
002956   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002958   6806     setf	0x6, 0              	SETF	r0x06
00295a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
00295c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
00295e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002960   fff6
002962   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002964   fff7
002966   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002968   fff8
00296a   0009     tblrd	*+                 	TBLRD*+	
00296c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
00296e   f004
002970   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002972   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002974   1692     andwf	0x92, 0x1, 0       	ANDWF	_TRISA, F
                                           ;	.line	81; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002976   d061     bra	0x2a3a               	BRA	_00196_DS_
                                           _00187_DS_:
                                           ;	.line	83; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) TRISD=TRISD | mask[input];
002978   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00297a   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
00297c   e017     bz	0x29ac                	BZ	_00189_DS_
00297e   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002980   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002982   6e04     movwf	0x4, 0             	MOVWF	r0x04
002984   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002986   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002988   6e05     movwf	0x5, 0             	MOVWF	r0x05
00298a   6a06     clrf	0x6, 0              	CLRF	r0x06
00298c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
00298e   6806     setf	0x6, 0              	SETF	r0x06
002990   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002992   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002994   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002996   fff6
002998   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
00299a   fff7
00299c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
00299e   fff8
0029a0   0009     tblrd	*+                 	TBLRD*+	
0029a2   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0029a4   f004
0029a6   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029a8   1295     iorwf	0x95, 0x1, 0       	IORWF	_TRISD, F
0029aa   d047     bra	0x2a3a               	BRA	_00196_DS_
                                           _00189_DS_:
                                           ;	.line	84; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISD=TRISD & (255-mask[input]);
0029ac   0e48     movlw	0x48               	MOVLW	LOW(_mask)
0029ae   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029b0   6e04     movwf	0x4, 0             	MOVWF	r0x04
0029b2   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0029b4   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029b6   6e05     movwf	0x5, 0             	MOVWF	r0x05
0029b8   6a06     clrf	0x6, 0              	CLRF	r0x06
0029ba   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029bc   6806     setf	0x6, 0              	SETF	r0x06
0029be   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0029c0   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
0029c2   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
0029c4   fff6
0029c6   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
0029c8   fff7
0029ca   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
0029cc   fff8
0029ce   0009     tblrd	*+                 	TBLRD*+	
0029d0   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
0029d2   f004
0029d4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0029d6   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
0029d8   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	85; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
0029da   d02f     bra	0x2a3a               	BRA	_00196_DS_
                                           _00191_DS_:
                                           ;	.line	86; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) TRISE=TRISE | mask[input];
0029dc   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0029de   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
0029e0   e017     bz	0x2a10                	BZ	_00193_DS_
0029e2   0e48     movlw	0x48               	MOVLW	LOW(_mask)
0029e4   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
0029e6   6e02     movwf	0x2, 0             	MOVWF	r0x02
0029e8   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
0029ea   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
0029ec   6e03     movwf	0x3, 0             	MOVWF	r0x03
0029ee   6a04     clrf	0x4, 0              	CLRF	r0x04
0029f0   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
0029f2   6804     setf	0x4, 0              	SETF	r0x04
0029f4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
0029f6   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
0029f8   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
0029fa   fff6
0029fc   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
0029fe   fff7
002a00   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002a02   fff8
002a04   0009     tblrd	*+                 	TBLRD*+	
002a06   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002a08   f002
002a0a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a0c   1296     iorwf	0x96, 0x1, 0       	IORWF	_TRISE, F
002a0e   d015     bra	0x2a3a               	BRA	_00196_DS_
                                           _00193_DS_:
                                           ;	.line	87; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else TRISE=TRISE & (255-mask[input]);
002a10   6a02     clrf	0x2, 0              	CLRF	r0x02
002a12   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002a14   6802     setf	0x2, 0              	SETF	r0x02
002a16   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002a18   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002a1a   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002a1c   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002a1e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002a20   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002a22   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002a24   fff6
002a26   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002a28   fff7
002a2a   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002a2c   fff8
002a2e   0009     tblrd	*+                 	TBLRD*+	
002a30   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002a32   f000
002a34   5000     movf	0, 0, 0             	MOVF	r0x00, W
002a36   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002a38   1696     andwf	0x96, 0x1, 0       	ANDWF	_TRISE, F
                                           _00196_DS_:
                                           ;	.line	90; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002a3a   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002a3c   f006
002a3e   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002a40   f005
002a42   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002a44   f004
002a46   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002a48   f003
002a4a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002a4c   f002
002a4e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002a50   f001
002a52   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002a54   f000
002a56   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002a58   ffd9
002a5a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalread	code
                                           _digitalread:
                                           ;	.line	44; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	int digitalread(int input)
002d22   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002d24   ffe5
002d26   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002d28   ffd9
002d2a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002d2c   ffe5
002d2e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002d30   ffe5
002d32   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002d34   ffe5
002d36   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002d38   ffe5
002d3a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002d3c   ffe5
002d3e   0e02     movlw	0x2                	MOVLW	0x02
002d40   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002d42   f000
002d44   0e03     movlw	0x3                	MOVLW	0x03
002d46   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002d48   f001
                                           ;	.line	46; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[input])
002d4a   0e66     movlw	0x66               	MOVLW	LOW(_port)
002d4c   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002d4e   6e02     movwf	0x2, 0             	MOVWF	r0x02
002d50   0e27     movlw	0x27               	MOVLW	HIGH(_port)
002d52   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002d54   6e03     movwf	0x3, 0             	MOVWF	r0x03
002d56   6a04     clrf	0x4, 0              	CLRF	r0x04
002d58   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002d5a   6804     setf	0x4, 0              	SETF	r0x04
002d5c   0e00     movlw	0                  	MOVLW	UPPER(_port)
002d5e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002d60   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002d62   fff6
002d64   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002d66   fff7
002d68   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002d6a   fff8
002d6c   0009     tblrd	*+                 	TBLRD*+	
002d6e   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002d70   f002
002d72   0e05     movlw	0x5                	MOVLW	0x05
002d74   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
002d76   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002d78   d0b9     bra	0x2eec               	BRA	_00160_DS_
002d7a   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002d7c   ffe5
002d7e   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002d80   ffe5
002d82   6a06     clrf	0x6, 0              	CLRF	r0x06
002d84   3402     rlcf	0x2, 0, 0           	RLCF	r0x02, W
002d86   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002d88   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002d8a   3606     rlcf	0x6, 0x1, 0         	RLCF	r0x06, F
002d8c   0bfc     andlw	0xfc               	ANDLW	0xfc
002d8e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002d90   0e00     movlw	0                  	MOVLW	UPPER(_00170_DS_)
002d92   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002d94   0e2d     movlw	0x2d               	MOVLW	HIGH(_00170_DS_)
002d96   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002d98   0eb0     movlw	0xb0               	MOVLW	LOW(_00170_DS_)
002d9a   2605     addwf	0x5, 0x1, 0        	ADDWF	r0x05, F
002d9c   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
002d9e   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002da0   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002da2   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002da4   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002da6   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002da8   f006
002daa   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002dac   f005
002dae   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00170_DS_:
002db0   efe2     goto	0x2dc4              	GOTO	_00140_DS_
002db2   f016
002db4   ef00     goto	0x2e00              	GOTO	_00144_DS_
002db6   f017
002db8   ef1e     goto	0x2e3c              	GOTO	_00148_DS_
002dba   f017
002dbc   ef3c     goto	0x2e78              	GOTO	_00152_DS_
002dbe   f017
002dc0   ef5a     goto	0x2eb4              	GOTO	_00156_DS_
002dc2   f017
                                           _00140_DS_:
                                           ;	.line	48; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if ((PORTB & mask[input])!=0) return (1);
002dc4   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002dc6   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002dc8   6e02     movwf	0x2, 0             	MOVWF	r0x02
002dca   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002dcc   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002dce   6e03     movwf	0x3, 0             	MOVWF	r0x03
002dd0   6a04     clrf	0x4, 0              	CLRF	r0x04
002dd2   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002dd4   6804     setf	0x4, 0              	SETF	r0x04
002dd6   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002dd8   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002dda   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002ddc   fff6
002dde   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002de0   fff7
002de2   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002de4   fff8
002de6   0009     tblrd	*+                 	TBLRD*+	
002de8   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002dea   f002
002dec   5081     movf	0x81, 0, 0          	MOVF	_PORTB, W
002dee   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002df0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002df2   e003     bz	0x2dfa                	BZ	_00142_DS_
002df4   6af3     clrf	0xf3, 0             	CLRF	PRODL
002df6   0e01     movlw	0x1                	MOVLW	0x01
002df8   d07b     bra	0x2ef0               	BRA	_00161_DS_
                                           _00142_DS_:
                                           ;	.line	49; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002dfa   6af3     clrf	0xf3, 0             	CLRF	PRODL
002dfc   6ae8     clrf	0xe8, 0             	CLRF	WREG
002dfe   d078     bra	0x2ef0               	BRA	_00161_DS_
                                           _00144_DS_:
                                           ;	.line	51; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if ((PORTC & mask[input])!=0) return (1);
002e00   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002e02   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e04   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e06   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002e08   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e0a   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e0c   6a04     clrf	0x4, 0              	CLRF	r0x04
002e0e   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e10   6804     setf	0x4, 0              	SETF	r0x04
002e12   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e14   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e16   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e18   fff6
002e1a   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e1c   fff7
002e1e   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e20   fff8
002e22   0009     tblrd	*+                 	TBLRD*+	
002e24   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e26   f002
002e28   5082     movf	0x82, 0, 0          	MOVF	_PORTC, W
002e2a   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002e2c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e2e   e003     bz	0x2e36                	BZ	_00146_DS_
002e30   6af3     clrf	0xf3, 0             	CLRF	PRODL
002e32   0e01     movlw	0x1                	MOVLW	0x01
002e34   d05d     bra	0x2ef0               	BRA	_00161_DS_
                                           _00146_DS_:
                                           ;	.line	52; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002e36   6af3     clrf	0xf3, 0             	CLRF	PRODL
002e38   6ae8     clrf	0xe8, 0             	CLRF	WREG
002e3a   d05a     bra	0x2ef0               	BRA	_00161_DS_
                                           _00148_DS_:
                                           ;	.line	54; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if ((PORTA & mask[input])!=0) return (1);
002e3c   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002e3e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e40   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e42   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002e44   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e46   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e48   6a04     clrf	0x4, 0              	CLRF	r0x04
002e4a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e4c   6804     setf	0x4, 0              	SETF	r0x04
002e4e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e50   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e52   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e54   fff6
002e56   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e58   fff7
002e5a   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e5c   fff8
002e5e   0009     tblrd	*+                 	TBLRD*+	
002e60   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e62   f002
002e64   5080     movf	0x80, 0, 0          	MOVF	_PORTA, W
002e66   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002e68   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002e6a   e003     bz	0x2e72                	BZ	_00150_DS_
002e6c   6af3     clrf	0xf3, 0             	CLRF	PRODL
002e6e   0e01     movlw	0x1                	MOVLW	0x01
002e70   d03f     bra	0x2ef0               	BRA	_00161_DS_
                                           _00150_DS_:
                                           ;	.line	55; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002e72   6af3     clrf	0xf3, 0             	CLRF	PRODL
002e74   6ae8     clrf	0xe8, 0             	CLRF	WREG
002e76   d03c     bra	0x2ef0               	BRA	_00161_DS_
                                           _00152_DS_:
                                           ;	.line	58; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if ((PORTD & mask[input])!=0) return (1);
002e78   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002e7a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002e7c   6e02     movwf	0x2, 0             	MOVWF	r0x02
002e7e   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002e80   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002e82   6e03     movwf	0x3, 0             	MOVWF	r0x03
002e84   6a04     clrf	0x4, 0              	CLRF	r0x04
002e86   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002e88   6804     setf	0x4, 0              	SETF	r0x04
002e8a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002e8c   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002e8e   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002e90   fff6
002e92   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002e94   fff7
002e96   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002e98   fff8
002e9a   0009     tblrd	*+                 	TBLRD*+	
002e9c   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002e9e   f002
002ea0   5083     movf	0x83, 0, 0          	MOVF	_PORTD, W
002ea2   1602     andwf	0x2, 0x1, 0        	ANDWF	r0x02, F
002ea4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ea6   e003     bz	0x2eae                	BZ	_00154_DS_
002ea8   6af3     clrf	0xf3, 0             	CLRF	PRODL
002eaa   0e01     movlw	0x1                	MOVLW	0x01
002eac   d021     bra	0x2ef0               	BRA	_00161_DS_
                                           _00154_DS_:
                                           ;	.line	59; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002eae   6af3     clrf	0xf3, 0             	CLRF	PRODL
002eb0   6ae8     clrf	0xe8, 0             	CLRF	WREG
002eb2   d01e     bra	0x2ef0               	BRA	_00161_DS_
                                           _00156_DS_:
                                           ;	.line	61; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if ((PORTE & mask[input])!=0) return (1);
002eb4   6a02     clrf	0x2, 0              	CLRF	r0x02
002eb6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002eb8   6802     setf	0x2, 0              	SETF	r0x02
002eba   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002ebc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002ebe   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002ec0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002ec2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ec4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002ec6   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002ec8   fff6
002eca   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002ecc   fff7
002ece   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002ed0   fff8
002ed2   0009     tblrd	*+                 	TBLRD*+	
002ed4   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002ed6   f000
002ed8   5084     movf	0x84, 0, 0          	MOVF	_PORTE, W
002eda   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002edc   5000     movf	0, 0, 0             	MOVF	r0x00, W
002ede   e003     bz	0x2ee6                	BZ	_00158_DS_
002ee0   6af3     clrf	0xf3, 0             	CLRF	PRODL
002ee2   0e01     movlw	0x1                	MOVLW	0x01
002ee4   d005     bra	0x2ef0               	BRA	_00161_DS_
                                           _00158_DS_:
                                           ;	.line	62; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else return (0);
002ee6   6af3     clrf	0xf3, 0             	CLRF	PRODL
002ee8   6ae8     clrf	0xe8, 0             	CLRF	WREG
002eea   d002     bra	0x2ef0               	BRA	_00161_DS_
                                           _00160_DS_:
                                           ;	.line	66; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	return (0);
002eec   6af3     clrf	0xf3, 0             	CLRF	PRODL
002eee   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00161_DS_:
002ef0   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002ef2   f004
002ef4   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002ef6   f003
002ef8   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002efa   f002
002efc   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002efe   f001
002f00   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002f02   f000
002f04   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002f06   ffd9
002f08   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_main__digitalwrite	code
                                           _digitalwrite:
                                           ;	.line	20; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	void digitalwrite(int output,int state)
002a5c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002a5e   ffe5
002a60   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002a62   ffd9
002a64   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002a66   ffe5
002a68   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002a6a   ffe5
002a6c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002a6e   ffe5
002a70   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002a72   ffe5
002a74   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002a76   ffe5
002a78   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
002a7a   ffe5
002a7c   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
002a7e   ffe5
002a80   0e02     movlw	0x2                	MOVLW	0x02
002a82   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002a84   f000
002a86   0e03     movlw	0x3                	MOVLW	0x03
002a88   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002a8a   f001
002a8c   0e04     movlw	0x4                	MOVLW	0x04
002a8e   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
002a90   f002
002a92   0e05     movlw	0x5                	MOVLW	0x05
002a94   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
002a96   f003
                                           ;	.line	22; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	switch (port[output])
002a98   0e66     movlw	0x66               	MOVLW	LOW(_port)
002a9a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002a9c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a9e   0e27     movlw	0x27               	MOVLW	HIGH(_port)
002aa0   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002aa2   6e05     movwf	0x5, 0             	MOVWF	r0x05
002aa4   6a06     clrf	0x6, 0              	CLRF	r0x06
002aa6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002aa8   6806     setf	0x6, 0              	SETF	r0x06
002aaa   0e00     movlw	0                  	MOVLW	UPPER(_port)
002aac   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002aae   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002ab0   fff6
002ab2   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002ab4   fff7
002ab6   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002ab8   fff8
002aba   0009     tblrd	*+                 	TBLRD*+	
002abc   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002abe   f004
002ac0   0e05     movlw	0x5                	MOVLW	0x05
002ac2   5c04     subwf	0x4, 0, 0          	SUBWF	r0x04, W
002ac4   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002ac6   d11c     bra	0x2d00               	BRA	_00126_DS_
002ac8   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
002aca   ffe5
002acc   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
002ace   ffe5
002ad0   6a08     clrf	0x8, 0              	CLRF	r0x08
002ad2   3404     rlcf	0x4, 0, 0           	RLCF	r0x04, W
002ad4   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002ad6   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
002ad8   3608     rlcf	0x8, 0x1, 0         	RLCF	r0x08, F
002ada   0bfc     andlw	0xfc               	ANDLW	0xfc
002adc   6e07     movwf	0x7, 0             	MOVWF	r0x07
002ade   0e00     movlw	0                  	MOVLW	UPPER(_00135_DS_)
002ae0   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
002ae2   0e2a     movlw	0x2a               	MOVLW	HIGH(_00135_DS_)
002ae4   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
002ae6   0efe     movlw	0xfe               	MOVLW	LOW(_00135_DS_)
002ae8   2607     addwf	0x7, 0x1, 0        	ADDWF	r0x07, F
002aea   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
002aec   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
002aee   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002af0   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
002af2   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
002af4   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
002af6   f008
002af8   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
002afa   f007
002afc   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00135_DS_:
002afe   ef89     goto	0x2b12              	GOTO	_00105_DS_
002b00   f015
002b02   efbb     goto	0x2b76              	GOTO	_00109_DS_
002b04   f015
002b06   efed     goto	0x2bda              	GOTO	_00113_DS_
002b08   f015
002b0a   ef1f     goto	0x2c3e              	GOTO	_00117_DS_
002b0c   f016
002b0e   ef51     goto	0x2ca2              	GOTO	_00121_DS_
002b10   f016
                                           _00105_DS_:
                                           ;	.line	24; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 0: if (state) PORTB=PORTB | mask[output]; 
002b12   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002b14   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002b16   e017     bz	0x2b46                	BZ	_00107_DS_
002b18   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002b1a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b1c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b1e   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002b20   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b22   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b24   6a06     clrf	0x6, 0              	CLRF	r0x06
002b26   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b28   6806     setf	0x6, 0              	SETF	r0x06
002b2a   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b2c   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b2e   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b30   fff6
002b32   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002b34   fff7
002b36   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002b38   fff8
002b3a   0009     tblrd	*+                 	TBLRD*+	
002b3c   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002b3e   f004
002b40   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002b42   1281     iorwf	0x81, 0x1, 0       	IORWF	_PORTB, F
002b44   d0dd     bra	0x2d00               	BRA	_00126_DS_
                                           _00107_DS_:
                                           ;	.line	25; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTB=PORTB & (255-mask[output]);
002b46   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002b48   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b4a   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b4c   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002b4e   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b50   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b52   6a06     clrf	0x6, 0              	CLRF	r0x06
002b54   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b56   6806     setf	0x6, 0              	SETF	r0x06
002b58   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b5a   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b5c   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b5e   fff6
002b60   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002b62   fff7
002b64   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002b66   fff8
002b68   0009     tblrd	*+                 	TBLRD*+	
002b6a   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002b6c   f004
002b6e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002b70   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002b72   1681     andwf	0x81, 0x1, 0       	ANDWF	_PORTB, F
                                           ;	.line	26; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002b74   d0c5     bra	0x2d00               	BRA	_00126_DS_
                                           _00109_DS_:
                                           ;	.line	27; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 1: if (state) PORTC=PORTC | mask[output];
002b76   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002b78   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002b7a   e017     bz	0x2baa                	BZ	_00111_DS_
002b7c   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002b7e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002b80   6e04     movwf	0x4, 0             	MOVWF	r0x04
002b82   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002b84   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002b86   6e05     movwf	0x5, 0             	MOVWF	r0x05
002b88   6a06     clrf	0x6, 0              	CLRF	r0x06
002b8a   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b8c   6806     setf	0x6, 0              	SETF	r0x06
002b8e   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002b90   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002b92   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002b94   fff6
002b96   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002b98   fff7
002b9a   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002b9c   fff8
002b9e   0009     tblrd	*+                 	TBLRD*+	
002ba0   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002ba2   f004
002ba4   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002ba6   1282     iorwf	0x82, 0x1, 0       	IORWF	_PORTC, F
002ba8   d0ab     bra	0x2d00               	BRA	_00126_DS_
                                           _00111_DS_:
                                           ;	.line	28; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTC=PORTC & (255-mask[output]);
002baa   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002bac   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002bae   6e04     movwf	0x4, 0             	MOVWF	r0x04
002bb0   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002bb2   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002bb4   6e05     movwf	0x5, 0             	MOVWF	r0x05
002bb6   6a06     clrf	0x6, 0              	CLRF	r0x06
002bb8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002bba   6806     setf	0x6, 0              	SETF	r0x06
002bbc   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002bbe   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002bc0   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002bc2   fff6
002bc4   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002bc6   fff7
002bc8   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002bca   fff8
002bcc   0009     tblrd	*+                 	TBLRD*+	
002bce   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002bd0   f004
002bd2   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002bd4   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002bd6   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
                                           ;	.line	29; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002bd8   d093     bra	0x2d00               	BRA	_00126_DS_
                                           _00113_DS_:
                                           ;	.line	30; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 2: if (state) PORTA=PORTA | mask[output];
002bda   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002bdc   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002bde   e017     bz	0x2c0e                	BZ	_00115_DS_
002be0   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002be2   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002be4   6e04     movwf	0x4, 0             	MOVWF	r0x04
002be6   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002be8   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002bea   6e05     movwf	0x5, 0             	MOVWF	r0x05
002bec   6a06     clrf	0x6, 0              	CLRF	r0x06
002bee   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002bf0   6806     setf	0x6, 0              	SETF	r0x06
002bf2   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002bf4   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002bf6   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002bf8   fff6
002bfa   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002bfc   fff7
002bfe   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c00   fff8
002c02   0009     tblrd	*+                 	TBLRD*+	
002c04   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c06   f004
002c08   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c0a   1280     iorwf	0x80, 0x1, 0       	IORWF	_PORTA, F
002c0c   d079     bra	0x2d00               	BRA	_00126_DS_
                                           _00115_DS_:
                                           ;	.line	31; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTA=PORTA & (255-mask[output]);
002c0e   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002c10   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c12   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c14   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002c16   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c18   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c1a   6a06     clrf	0x6, 0              	CLRF	r0x06
002c1c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c1e   6806     setf	0x6, 0              	SETF	r0x06
002c20   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c22   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c24   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c26   fff6
002c28   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c2a   fff7
002c2c   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c2e   fff8
002c30   0009     tblrd	*+                 	TBLRD*+	
002c32   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c34   f004
002c36   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c38   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c3a   1680     andwf	0x80, 0x1, 0       	ANDWF	_PORTA, F
                                           ;	.line	32; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002c3c   d061     bra	0x2d00               	BRA	_00126_DS_
                                           _00117_DS_:
                                           ;	.line	34; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 3: if (state) PORTD=PORTD | mask[output]; 
002c3e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002c40   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002c42   e017     bz	0x2c72                	BZ	_00119_DS_
002c44   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002c46   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c48   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c4a   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002c4c   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c4e   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c50   6a06     clrf	0x6, 0              	CLRF	r0x06
002c52   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c54   6806     setf	0x6, 0              	SETF	r0x06
002c56   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c58   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c5a   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c5c   fff6
002c5e   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c60   fff7
002c62   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c64   fff8
002c66   0009     tblrd	*+                 	TBLRD*+	
002c68   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c6a   f004
002c6c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c6e   1283     iorwf	0x83, 0x1, 0       	IORWF	_PORTD, F
002c70   d047     bra	0x2d00               	BRA	_00126_DS_
                                           _00119_DS_:
                                           ;	.line	35; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTD=PORTD & (255-mask[output]);
002c72   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002c74   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002c76   6e04     movwf	0x4, 0             	MOVWF	r0x04
002c78   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002c7a   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002c7c   6e05     movwf	0x5, 0             	MOVWF	r0x05
002c7e   6a06     clrf	0x6, 0              	CLRF	r0x06
002c80   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002c82   6806     setf	0x6, 0              	SETF	r0x06
002c84   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002c86   2206     addwfc	0x6, 0x1, 0       	ADDWFC	r0x06, F
002c88   c004     movff	0x4, 0xff6         	MOVFF	r0x04, TBLPTRL
002c8a   fff6
002c8c   c005     movff	0x5, 0xff7         	MOVFF	r0x05, TBLPTRH
002c8e   fff7
002c90   c006     movff	0x6, 0xff8         	MOVFF	r0x06, TBLPTRU
002c92   fff8
002c94   0009     tblrd	*+                 	TBLRD*+	
002c96   cff5     movff	0xff5, 0x4         	MOVFF	TABLAT, r0x04
002c98   f004
002c9a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002c9c   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x04
                                           ; #	MOVF	r0x04, W
002c9e   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	36; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	break;
002ca0   d02f     bra	0x2d00               	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	37; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	case 4: if (state) PORTE=PORTE | mask[output]; 
002ca2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002ca4   1003     iorwf	0x3, 0, 0          	IORWF	r0x03, W
002ca6   e017     bz	0x2cd6                	BZ	_00123_DS_
002ca8   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002caa   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
002cac   6e02     movwf	0x2, 0             	MOVWF	r0x02
002cae   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002cb0   2001     addwfc	0x1, 0, 0         	ADDWFC	r0x01, W
002cb2   6e03     movwf	0x3, 0             	MOVWF	r0x03
002cb4   6a04     clrf	0x4, 0              	CLRF	r0x04
002cb6   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cb8   6804     setf	0x4, 0              	SETF	r0x04
002cba   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002cbc   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
002cbe   c002     movff	0x2, 0xff6         	MOVFF	r0x02, TBLPTRL
002cc0   fff6
002cc2   c003     movff	0x3, 0xff7         	MOVFF	r0x03, TBLPTRH
002cc4   fff7
002cc6   c004     movff	0x4, 0xff8         	MOVFF	r0x04, TBLPTRU
002cc8   fff8
002cca   0009     tblrd	*+                 	TBLRD*+	
002ccc   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
002cce   f002
002cd0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002cd2   1284     iorwf	0x84, 0x1, 0       	IORWF	_PORTE, F
002cd4   d015     bra	0x2d00               	BRA	_00126_DS_
                                           _00123_DS_:
                                           ;	.line	38; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	else PORTE=PORTE & (255-mask[output]);
002cd6   6a02     clrf	0x2, 0              	CLRF	r0x02
002cd8   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002cda   6802     setf	0x2, 0              	SETF	r0x02
002cdc   0e48     movlw	0x48               	MOVLW	LOW(_mask)
002cde   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002ce0   0e27     movlw	0x27               	MOVLW	HIGH(_mask)
002ce2   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002ce4   0e00     movlw	0                  	MOVLW	UPPER(_mask)
002ce6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002ce8   c000     movff	0, 0xff6           	MOVFF	r0x00, TBLPTRL
002cea   fff6
002cec   c001     movff	0x1, 0xff7         	MOVFF	r0x01, TBLPTRH
002cee   fff7
002cf0   c002     movff	0x2, 0xff8         	MOVFF	r0x02, TBLPTRU
002cf2   fff8
002cf4   0009     tblrd	*+                 	TBLRD*+	
002cf6   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
002cf8   f000
002cfa   5000     movf	0, 0, 0             	MOVF	r0x00, W
002cfc   08ff     sublw	0xff               	SUBLW	0xff
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
002cfe   1684     andwf	0x84, 0x1, 0       	ANDWF	_PORTE, F
                                           _00126_DS_:
                                           ;	.line	41; /home/valentin/github/icaro-bloques/tools/bin/../share/sdcc/include/pic16/digitalw.c	}
002d00   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
002d02   f006
002d04   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
002d06   f005
002d08   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002d0a   f004
002d0c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002d0e   f003
002d10   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002d12   f002
002d14   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002d16   f001
002d18   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002d1a   f000
002d1c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002d1e   ffd9
002d20   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _mask:
002748   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
00274a   0804     sublw	0x4                
00274c   2010     addwfc	0x10, 0, 0        
00274e   8040     bsf	0x40, 0, 0           
002750   8040     bsf	0x40, 0, 0           
002752   0201     mulwf	0x1, 0             
002754   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20, 0x01, 0x02, 0x04, 0x01, 0x02, 0x04
002756   0402     decf	0x2, 0, 0           
002758   2008     addwfc	0x8, 0, 0         
00275a   0201     mulwf	0x1, 0             
00275c   0104     movlb	0x4                
00275e   0402     decf	0x2, 0, 0           
002760   1008     iorwf	0x8, 0, 0          	DB	0x08, 0x10, 0x20, 0x40, 0x80
002762   4020     rrncf	0x20, 0, 0         
002764   0080     dw	0x80  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _port:
002766   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01
002768   0000     nop                      
00276a   0000     nop                      
00276c   0000     nop                      
00276e   0101     movlb	0x1                
002770   0101     movlb	0x1                
002772   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x02, 0x02, 0x02, 0x02, 0x04, 0x04, 0x04, 0x03, 0x03, 0x03
002774   0202     mulwf	0x2, 0             
002776   0202     mulwf	0x2, 0             
002778   0404     decf	0x4, 0, 0           
00277a   0304     mulwf	0x4, 0x1           
00277c   0303     mulwf	0x3, 0x1           
00277e   0303     mulwf	0x3, 0x1           	DB	0x03, 0x03, 0x03, 0x03, 0x03
002780   0303     mulwf	0x3, 0x1           
002782   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _servomasks:
002784   0201     mulwf	0x1, 0             	DB	0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x40, 0x80, 0x01, 0x02
002786   0804     sublw	0x4                
002788   2010     addwfc	0x10, 0, 0        
00278a   8040     bsf	0x40, 0, 0           
00278c   8040     bsf	0x40, 0, 0           
00278e   0201     mulwf	0x1, 0             
002790   0104     movlb	0x4                	DB	0x04, 0x01, 0x02, 0x04, 0x08, 0x20
002792   0402     decf	0x2, 0, 0           
002794   2008     addwfc	0x8, 0, 0         
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 4842 (0x12ea) bytes ( 3.69%)
                                           ;           	 2421 (0x0975) words
                                           ; udata size:	   96 (0x0060) bytes ( 5.36%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
